

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun May 21 12:16:46 2017

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F23K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    22  0000                     _ANSELA	set	3896
    23  0000                     _ANSELB	set	3897
    24  0000                     _ANSELC	set	3898
    25  0000                     _BAUD1CON	set	4024
    26  0000                     _EEADR	set	4009
    27  0000                     _EECON1bits	set	4006
    28  0000                     _EECON2	set	4007
    29  0000                     _EEDATA	set	4008
    30  0000                     _INTCON2bits	set	4081
    31  0000                     _INTCONbits	set	4082
    32  0000                     _LATA	set	3977
    33  0000                     _LATB	set	3978
    34  0000                     _LATC	set	3979
    35  0000                     _OSCCON	set	4051
    36  0000                     _OSCCON2	set	4050
    37  0000                     _OSCTUNE	set	3995
    38  0000                     _PIR1bits	set	3998
    39  0000                     _RC1STA	set	4011
    40  0000                     _RC1STAbits	set	4011
    41  0000                     _RCREG1	set	4014
    42  0000                     _RCSTA1bits	set	4011
    43  0000                     _SPBRG1	set	4015
    44  0000                     _SPBRGH1	set	4016
    45  0000                     _TABLAT	set	4085
    46  0000                     _TBLPTRH	set	4087
    47  0000                     _TBLPTRL	set	4086
    48  0000                     _TBLPTRU	set	4088
    49  0000                     _TRISA	set	3986
    50  0000                     _TRISB	set	3987
    51  0000                     _TRISC	set	3988
    52  0000                     _TX1STA	set	4012
    53  0000                     _TXREG1	set	4013
    54  0000                     _TXSTA1bits	set	4012
    55  0000                     _WPUB	set	3937
    56  0000                     _LATB0	set	31824
    57  0000                     _LATB1	set	31825
    58  0000                     _LATB2	set	31826
    59  0000                     _LATB3	set	31827
    60  0000                     _LATC0	set	31832
    61  0000                     _LATC1	set	31833
    62  0000                     _LATC2	set	31834
    63  0000                     _LATC3	set	31835
    64                           
    65                           ; #config settings
    66  0000                     
    67                           	psect	cinit
    68  001A30                     __pcinit:
    69                           	opt stack 0
    70  001A30                     start_initialization:
    71                           	opt stack 0
    72  001A30                     __initialization:
    73                           	opt stack 0
    74                           
    75                           ; Clear objects allocated to COMRAM (39 bytes)
    76  001A30  EE00  F001         	lfsr	0,__pbssCOMRAM
    77  001A34  0E27               	movlw	39
    78  001A36                     clear_0:
    79  001A36  6AEE               	clrf	postinc0,c
    80  001A38  06E8               	decf	wreg,f,c
    81  001A3A  E1FD               	bnz	clear_0
    82  001A3C                     end_of_initialization:
    83                           	opt stack 0
    84  001A3C                     __end_of__initialization:
    85                           	opt stack 0
    86  001A3C  0E00               	movlw	low (__Lmediumconst shr (0+16))
    87  001A3E  6EF8               	movwf	tblptru,c
    88  001A40  0100               	movlb	0
    89  001A42  EF4F  F00E         	goto	_main	;jump to C main() function
    90                           tblptru	equ	0xFF8
    91                           postinc0	equ	0xFEE
    92                           wreg	equ	0xFE8
    93                           
    94                           	psect	bssCOMRAM
    95  000001                     __pbssCOMRAM:
    96                           	opt stack 0
    97  000001                     _quality:
    98                           	opt stack 0
    99  000001                     	ds	9
   100  00000A                     _qualityindex:
   101                           	opt stack 0
   102  00000A                     	ds	9
   103  000013                     _rssi:
   104                           	opt stack 0
   105  000013                     	ds	9
   106  00001C                     _rssiindex:
   107                           	opt stack 0
   108  00001C                     	ds	9
   109  000025                     _index:
   110                           	opt stack 0
   111  000025                     	ds	1
   112  000026                     _qualitymax:
   113                           	opt stack 0
   114  000026                     	ds	1
   115  000027                     _rssimax:
   116                           	opt stack 0
   117  000027                     	ds	1
   118                           tblptru	equ	0xFF8
   119                           postinc0	equ	0xFEE
   120                           wreg	equ	0xFE8
   121                           
   122                           	psect	cstackCOMRAM
   123  000028                     __pcstackCOMRAM:
   124                           	opt stack 0
   125  000028                     ??_getvalues:
   126  000028                     EUSART1_Write@txData:
   127                           	opt stack 0
   128  000028                     DATAEE_WriteByte@bData:
   129                           	opt stack 0
   130  000028                     DATAEE_ReadByte@bAdd:
   131                           	opt stack 0
   132  000028                     switchstate@a:
   133                           	opt stack 0
   134                           
   135                           ; 1 bytes @ 0x0
   136  000028                     	ds	1
   137  000029                     DATAEE_WriteByte@bAdd:
   138                           	opt stack 0
   139  000029                     getvalues@b:
   140                           	opt stack 0
   141  000029                     normaloperation@c:
   142                           	opt stack 0
   143                           
   144                           ; 1 bytes @ 0x1
   145  000029                     	ds	1
   146  00002A                     DATAEE_WriteByte@GIEBitValue:
   147                           	opt stack 0
   148                           
   149                           ; 1 bytes @ 0x2
   150  00002A                     	ds	1
   151  00002B                     ??_main:
   152                           
   153                           ; 0 bytes @ 0x3
   154  00002B                     	ds	2
   155  00002D                     main@i:
   156                           	opt stack 0
   157                           
   158                           ; 1 bytes @ 0x5
   159  00002D                     	ds	1
   160  00002E                     main@j:
   161                           	opt stack 0
   162                           
   163                           ; 1 bytes @ 0x6
   164  00002E                     	ds	1
   165  00002F                     main@i_572:
   166                           	opt stack 0
   167                           
   168                           ; 1 bytes @ 0x7
   169  00002F                     	ds	1
   170  000030                     main@i_570:
   171                           	opt stack 0
   172                           
   173                           ; 1 bytes @ 0x8
   174  000030                     	ds	1
   175  000031                     main@i_571:
   176                           	opt stack 0
   177                           
   178                           ; 1 bytes @ 0x9
   179  000031                     	ds	1
   180                           tblptru	equ	0xFF8
   181                           postinc0	equ	0xFEE
   182                           wreg	equ	0xFE8
   183                           
   184 ;;
   185 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   186 ;;
   187 ;; *************** function _main *****************
   188 ;; Defined at:
   189 ;;		line 215 in file "main.c"
   190 ;; Parameters:    Size  Location     Type
   191 ;;		None
   192 ;; Auto vars:     Size  Location     Type
   193 ;;  j               1    6[COMRAM] unsigned char 
   194 ;;  i               1    7[COMRAM] unsigned char 
   195 ;;  i               1    9[COMRAM] unsigned char 
   196 ;;  i               1    8[COMRAM] unsigned char 
   197 ;;  i               1    5[COMRAM] unsigned char 
   198 ;; Return value:  Size  Location     Type
   199 ;;		None               void
   200 ;; Registers used:
   201 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   202 ;; Tracked objects:
   203 ;;		On entry : 0/0
   204 ;;		On exit  : 0/0
   205 ;;		Unchanged: 0/0
   206 ;; Data sizes:     COMRAM   BANK0   BANK1
   207 ;;      Params:         0       0       0
   208 ;;      Locals:         5       0       0
   209 ;;      Temps:          2       0       0
   210 ;;      Totals:         7       0       0
   211 ;;Total ram usage:        7 bytes
   212 ;; Hardware stack levels required when called:    2
   213 ;; This function calls:
   214 ;;		_DATAEE_ReadByte
   215 ;;		_DATAEE_WriteByte
   216 ;;		_EUSART1_Read
   217 ;;		_EUSART1_Write
   218 ;;		_SYSTEM_Initialize
   219 ;;		_getvalues
   220 ;;		_normaloperation
   221 ;;		_switchstate
   222 ;; This function is called by:
   223 ;;		Startup code after reset
   224 ;; This function uses a non-reentrant model
   225 ;;
   226                           
   227                           	psect	text0
   228  001C9E                     __ptext0:
   229                           	opt stack 0
   230  001C9E                     _main:
   231                           	opt stack 29
   232                           
   233                           ;main.c: 217: SYSTEM_Initialize();
   234                           
   235                           ;incstack = 0
   236  001C9E  ECF3  F00C         	call	_SYSTEM_Initialize	;wreg free
   237                           
   238                           ;main.c: 226: if ((DATAEE_ReadByte(0x00) != 0xFF) || (DATAEE_ReadByte(0x00) != 0x00)) {
   239  001CA2  0E00               	movlw	0
   240  001CA4  EC03  F00D         	call	_DATAEE_ReadByte
   241  001CA8  0AFF               	xorlw	255
   242  001CAA  A4D8               	btfss	status,2,c
   243  001CAC  D006               	goto	l1469
   244  001CAE  0E00               	movlw	0
   245  001CB0  EC03  F00D         	call	_DATAEE_ReadByte
   246  001CB4  0900               	iorlw	0
   247  001CB6  B4D8               	btfsc	status,2,c
   248  001CB8  D006               	goto	l1471
   249  001CBA                     l1469:
   250                           
   251                           ;main.c: 227: switchstate(DATAEE_ReadByte(0x00));
   252  001CBA  0E00               	movlw	0
   253  001CBC  EC03  F00D         	call	_DATAEE_ReadByte
   254  001CC0  ECC2  F00D         	call	_switchstate
   255                           
   256                           ;main.c: 228: } else {
   257  001CC4  D003               	goto	l1473
   258  001CC6                     l1471:
   259                           
   260                           ;main.c: 229: switchstate(5);
   261  001CC6  0E05               	movlw	5
   262  001CC8  ECC2  F00D         	call	_switchstate
   263  001CCC                     l1473:
   264                           
   265                           ;main.c: 230: }
   266                           ;main.c: 263: _delay((unsigned long)((10)*(64000000/4000.0)));
   267  001CCC  0ED0               	movlw	208
   268  001CCE  6E2B               	movwf	??_main& (0+255),c
   269  001CD0  0ECA               	movlw	202
   270  001CD2                     u847:
   271  001CD2  2EE8               	decfsz	wreg,f,c
   272  001CD4  D7FE               	goto	u847
   273  001CD6  2E2B               	decfsz	??_main& (0+255),f,c
   274  001CD8  D7FC               	goto	u847
   275  001CDA                     l1475:
   276  001CDA  ECFA  F00C         	call	_EUSART1_Read	;wreg free
   277  001CDE  0AFF               	xorlw	255
   278  001CE0  A4D8               	btfss	status,2,c
   279  001CE2  D7FB               	goto	l1475
   280                           
   281                           ;main.c: 274: }
   282                           ;main.c: 277: _delay((unsigned long)((10)*(64000000/4000.0)));
   283  001CE4  0ED0               	movlw	208
   284  001CE6  6E2B               	movwf	??_main& (0+255),c
   285  001CE8  0ECA               	movlw	202
   286  001CEA                     u857:
   287  001CEA  2EE8               	decfsz	wreg,f,c
   288  001CEC  D7FE               	goto	u857
   289  001CEE  2E2B               	decfsz	??_main& (0+255),f,c
   290  001CF0  D7FC               	goto	u857
   291                           
   292                           ;main.c: 278: index = EUSART1_Read();
   293  001CF2  ECFA  F00C         	call	_EUSART1_Read	;wreg free
   294  001CF6  6E25               	movwf	_index,c
   295                           
   296                           ;main.c: 279: _delay((unsigned long)((10)*(64000000/4000.0)));
   297  001CF8  0ED0               	movlw	208
   298  001CFA  6E2B               	movwf	??_main& (0+255),c
   299  001CFC  0ECA               	movlw	202
   300  001CFE                     u867:
   301  001CFE  2EE8               	decfsz	wreg,f,c
   302  001D00  D7FE               	goto	u867
   303  001D02  2E2B               	decfsz	??_main& (0+255),f,c
   304  001D04  D7FC               	goto	u867
   305                           
   306                           ;main.c: 280: while (!((index == 0x4E) || (index == 0x73))) {
   307  001D06  D00A               	goto	l1487
   308  001D08                     l1483:
   309                           
   310                           ;main.c: 281: index = EUSART1_Read();
   311  001D08  ECFA  F00C         	call	_EUSART1_Read	;wreg free
   312  001D0C  6E25               	movwf	_index,c
   313                           
   314                           ;main.c: 282: _delay((unsigned long)((10)*(64000000/4000.0)));
   315  001D0E  0ED0               	movlw	208
   316  001D10  6E2B               	movwf	??_main& (0+255),c
   317  001D12  0ECA               	movlw	202
   318  001D14                     u877:
   319  001D14  2EE8               	decfsz	wreg,f,c
   320  001D16  D7FE               	goto	u877
   321  001D18  2E2B               	decfsz	??_main& (0+255),f,c
   322  001D1A  D7FC               	goto	u877
   323  001D1C                     l1487:
   324  001D1C  0E4E               	movlw	78
   325  001D1E  1825               	xorwf	_index,w,c
   326  001D20  B4D8               	btfsc	status,2,c
   327  001D22  D004               	goto	l1491
   328  001D24  0E73               	movlw	115
   329  001D26  1825               	xorwf	_index,w,c
   330  001D28  A4D8               	btfss	status,2,c
   331  001D2A  D7EE               	goto	l1483
   332  001D2C                     l1491:
   333                           
   334                           ;main.c: 283: }
   335                           ;main.c: 285: if (index == 0x4E) {
   336  001D2C  0E4E               	movlw	78
   337  001D2E  1825               	xorwf	_index,w,c
   338  001D30  A4D8               	btfss	status,2,c
   339  001D32  D11A               	goto	l1623
   340                           
   341                           ;main.c: 298: for (uint8_t i = 0; i < 6; i++) {
   342  001D34  0E00               	movlw	0
   343  001D36  6E2D               	movwf	main@i,c
   344  001D38                     l1495:
   345  001D38  0E05               	movlw	5
   346  001D3A  642D               	cpfsgt	main@i,c
   347  001D3C  D001               	goto	l1499
   348  001D3E  D00F               	goto	l393
   349  001D40                     l1499:
   350                           
   351                           ;main.c: 299: normaloperation(i);
   352  001D40  502D               	movf	main@i,w,c
   353  001D42  EC56  F00D         	call	_normaloperation
   354                           
   355                           ;main.c: 300: _delay((unsigned long)((10)*(64000000/4000.0)));
   356  001D46  0ED0               	movlw	208
   357  001D48  6E2B               	movwf	??_main& (0+255),c
   358  001D4A  0ECA               	movlw	202
   359  001D4C                     u887:
   360  001D4C  2EE8               	decfsz	wreg,f,c
   361  001D4E  D7FE               	goto	u887
   362  001D50  2E2B               	decfsz	??_main& (0+255),f,c
   363  001D52  D7FC               	goto	u887
   364                           
   365                           ;main.c: 301: getvalues(i);
   366  001D54  502D               	movf	main@i,w,c
   367  001D56  EC84  F00D         	call	_getvalues
   368  001D5A  2A2D               	incf	main@i,f,c
   369  001D5C  D7ED               	goto	l1495
   370  001D5E                     l393:
   371                           
   372                           ;main.c: 302: }
   373                           ;main.c: 304: rssimax = rssi[0];
   374  001D5E  C013  F027         	movff	_rssi,_rssimax
   375                           
   376                           ;main.c: 305: index = 0;
   377  001D62  0E00               	movlw	0
   378  001D64  6E25               	movwf	_index,c
   379                           
   380                           ;main.c: 306: for (uint8_t i = 0; i < 6; i++) {
   381  001D66  0E00               	movlw	0
   382  001D68  6E30               	movwf	main@i_570,c
   383  001D6A                     l1511:
   384  001D6A  0E05               	movlw	5
   385  001D6C  6430               	cpfsgt	main@i_570,c
   386  001D6E  D001               	goto	l1515
   387  001D70  D03C               	goto	l395
   388  001D72                     l1515:
   389                           
   390                           ;main.c: 307: if (rssi[i] < rssimax) {
   391  001D72  5030               	movf	main@i_570,w,c
   392  001D74  0D01               	mullw	1
   393  001D76  0E13               	movlw	low _rssi
   394  001D78  24F3               	addwf	prodl,w,c
   395  001D7A  6ED9               	movwf	fsr2l,c
   396  001D7C  0E00               	movlw	high _rssi
   397  001D7E  20F4               	addwfc	prodh,w,c
   398  001D80  6EDA               	movwf	fsr2h,c
   399  001D82  5027               	movf	_rssimax,w,c
   400  001D84  5CDE               	subwf	postinc2,w,c
   401  001D86  B0D8               	btfsc	status,0,c
   402  001D88  D017               	goto	l1531
   403                           
   404                           ;main.c: 308: rssiindex[0] = i + 1;
   405  001D8A  2830               	incf	main@i_570,w,c
   406  001D8C  6E1C               	movwf	_rssiindex,c
   407                           
   408                           ;main.c: 309: rssiindex[1] = 0;
   409  001D8E  0E00               	movlw	0
   410  001D90  6E1D               	movwf	_rssiindex+1,c
   411                           
   412                           ;main.c: 310: rssiindex[2] = 0;
   413  001D92  0E00               	movlw	0
   414  001D94  6E1E               	movwf	_rssiindex+2,c
   415                           
   416                           ;main.c: 311: rssiindex[3] = 0;
   417  001D96  0E00               	movlw	0
   418  001D98  6E1F               	movwf	_rssiindex+3,c
   419                           
   420                           ;main.c: 312: rssiindex[4] = 0;
   421  001D9A  0E00               	movlw	0
   422  001D9C  6E20               	movwf	_rssiindex+4,c
   423                           
   424                           ;main.c: 313: rssiindex[5] = 0;
   425  001D9E  0E00               	movlw	0
   426  001DA0  6E21               	movwf	_rssiindex+5,c
   427                           
   428                           ;main.c: 317: rssimax = rssi[i];
   429  001DA2  5030               	movf	main@i_570,w,c
   430  001DA4  0D01               	mullw	1
   431  001DA6  0E13               	movlw	low _rssi
   432  001DA8  24F3               	addwf	prodl,w,c
   433  001DAA  6ED9               	movwf	fsr2l,c
   434  001DAC  0E00               	movlw	high _rssi
   435  001DAE  20F4               	addwfc	prodh,w,c
   436  001DB0  6EDA               	movwf	fsr2h,c
   437  001DB2  50DF               	movf	indf2,w,c
   438  001DB4  6E27               	movwf	_rssimax,c
   439                           
   440                           ;main.c: 318: } else if (rssi[i] == rssimax) {
   441  001DB6  D017               	goto	l1537
   442  001DB8                     l1531:
   443  001DB8  5030               	movf	main@i_570,w,c
   444  001DBA  0D01               	mullw	1
   445  001DBC  0E13               	movlw	low _rssi
   446  001DBE  24F3               	addwf	prodl,w,c
   447  001DC0  6ED9               	movwf	fsr2l,c
   448  001DC2  0E00               	movlw	high _rssi
   449  001DC4  20F4               	addwfc	prodh,w,c
   450  001DC6  6EDA               	movwf	fsr2h,c
   451  001DC8  5027               	movf	_rssimax,w,c
   452  001DCA  18DE               	xorwf	postinc2,w,c
   453  001DCC  A4D8               	btfss	status,2,c
   454  001DCE  D00B               	goto	l1537
   455                           
   456                           ;main.c: 319: rssiindex[index] = i + 1;
   457  001DD0  5025               	movf	_index,w,c
   458  001DD2  0D01               	mullw	1
   459  001DD4  0E1C               	movlw	low _rssiindex
   460  001DD6  24F3               	addwf	prodl,w,c
   461  001DD8  6ED9               	movwf	fsr2l,c
   462  001DDA  0E00               	movlw	high _rssiindex
   463  001DDC  20F4               	addwfc	prodh,w,c
   464  001DDE  6EDA               	movwf	fsr2h,c
   465  001DE0  2830               	incf	main@i_570,w,c
   466  001DE2  6EDF               	movwf	indf2,c
   467                           
   468                           ;main.c: 320: index++;
   469  001DE4  2A25               	incf	_index,f,c
   470  001DE6                     l1537:
   471  001DE6  2A30               	incf	main@i_570,f,c
   472  001DE8  D7C0               	goto	l1511
   473  001DEA                     l395:
   474                           
   475                           ;main.c: 321: }
   476                           ;main.c: 322: }
   477                           ;main.c: 324: qualitymax = quality[0];
   478  001DEA  C001  F026         	movff	_quality,_qualitymax
   479                           
   480                           ;main.c: 325: index = 0;
   481  001DEE  0E00               	movlw	0
   482  001DF0  6E25               	movwf	_index,c
   483                           
   484                           ;main.c: 326: for (uint8_t i = 0; i < 6; i++) {
   485  001DF2  0E00               	movlw	0
   486  001DF4  6E31               	movwf	main@i_571,c
   487  001DF6                     l1543:
   488  001DF6  0E05               	movlw	5
   489  001DF8  6431               	cpfsgt	main@i_571,c
   490  001DFA  D001               	goto	l1547
   491  001DFC  D03C               	goto	l1573
   492  001DFE                     l1547:
   493                           
   494                           ;main.c: 327: if (quality[i] > qualitymax) {
   495  001DFE  5031               	movf	main@i_571,w,c
   496  001E00  0D01               	mullw	1
   497  001E02  0E01               	movlw	low _quality
   498  001E04  24F3               	addwf	prodl,w,c
   499  001E06  6ED9               	movwf	fsr2l,c
   500  001E08  0E00               	movlw	high _quality
   501  001E0A  20F4               	addwfc	prodh,w,c
   502  001E0C  6EDA               	movwf	fsr2h,c
   503  001E0E  50DE               	movf	postinc2,w,c
   504  001E10  5C26               	subwf	_qualitymax,w,c
   505  001E12  B0D8               	btfsc	status,0,c
   506  001E14  D017               	goto	l1563
   507                           
   508                           ;main.c: 328: qualityindex[0] = i + 1;
   509  001E16  2831               	incf	main@i_571,w,c
   510  001E18  6E0A               	movwf	_qualityindex,c
   511                           
   512                           ;main.c: 329: qualityindex[1] = 0;
   513  001E1A  0E00               	movlw	0
   514  001E1C  6E0B               	movwf	_qualityindex+1,c
   515                           
   516                           ;main.c: 330: qualityindex[2] = 0;
   517  001E1E  0E00               	movlw	0
   518  001E20  6E0C               	movwf	_qualityindex+2,c
   519                           
   520                           ;main.c: 331: qualityindex[3] = 0;
   521  001E22  0E00               	movlw	0
   522  001E24  6E0D               	movwf	_qualityindex+3,c
   523                           
   524                           ;main.c: 332: qualityindex[4] = 0;
   525  001E26  0E00               	movlw	0
   526  001E28  6E0E               	movwf	_qualityindex+4,c
   527                           
   528                           ;main.c: 333: qualityindex[5] = 0;
   529  001E2A  0E00               	movlw	0
   530  001E2C  6E0F               	movwf	_qualityindex+5,c
   531                           
   532                           ;main.c: 337: qualitymax = quality[i];
   533  001E2E  5031               	movf	main@i_571,w,c
   534  001E30  0D01               	mullw	1
   535  001E32  0E01               	movlw	low _quality
   536  001E34  24F3               	addwf	prodl,w,c
   537  001E36  6ED9               	movwf	fsr2l,c
   538  001E38  0E00               	movlw	high _quality
   539  001E3A  20F4               	addwfc	prodh,w,c
   540  001E3C  6EDA               	movwf	fsr2h,c
   541  001E3E  50DF               	movf	indf2,w,c
   542  001E40  6E26               	movwf	_qualitymax,c
   543                           
   544                           ;main.c: 338: } else if (quality[i] == qualitymax) {
   545  001E42  D017               	goto	l1569
   546  001E44                     l1563:
   547  001E44  5031               	movf	main@i_571,w,c
   548  001E46  0D01               	mullw	1
   549  001E48  0E01               	movlw	low _quality
   550  001E4A  24F3               	addwf	prodl,w,c
   551  001E4C  6ED9               	movwf	fsr2l,c
   552  001E4E  0E00               	movlw	high _quality
   553  001E50  20F4               	addwfc	prodh,w,c
   554  001E52  6EDA               	movwf	fsr2h,c
   555  001E54  5026               	movf	_qualitymax,w,c
   556  001E56  18DE               	xorwf	postinc2,w,c
   557  001E58  A4D8               	btfss	status,2,c
   558  001E5A  D00B               	goto	l1569
   559                           
   560                           ;main.c: 339: qualityindex[index] = i + 1;
   561  001E5C  5025               	movf	_index,w,c
   562  001E5E  0D01               	mullw	1
   563  001E60  0E0A               	movlw	low _qualityindex
   564  001E62  24F3               	addwf	prodl,w,c
   565  001E64  6ED9               	movwf	fsr2l,c
   566  001E66  0E00               	movlw	high _qualityindex
   567  001E68  20F4               	addwfc	prodh,w,c
   568  001E6A  6EDA               	movwf	fsr2h,c
   569  001E6C  2831               	incf	main@i_571,w,c
   570  001E6E  6EDF               	movwf	indf2,c
   571                           
   572                           ;main.c: 340: index++;
   573  001E70  2A25               	incf	_index,f,c
   574  001E72                     l1569:
   575  001E72  2A31               	incf	main@i_571,f,c
   576  001E74  D7C0               	goto	l1543
   577  001E76                     l1573:
   578                           
   579                           ;main.c: 341: }
   580                           ;main.c: 342: }
   581                           ;main.c: 344: for (uint8_t i = 0; i < 6; i++) {
   582  001E76  0E00               	movlw	0
   583  001E78  6E2F               	movwf	main@i_572,c
   584  001E7A                     l1575:
   585  001E7A  0E05               	movlw	5
   586  001E7C  642F               	cpfsgt	main@i_572,c
   587  001E7E  D001               	goto	l1579
   588  001E80  D056               	goto	l1609
   589  001E82                     l1579:
   590                           
   591                           ;main.c: 345: for (uint8_t j = 0; j < 6; j++) {
   592  001E82  0E00               	movlw	0
   593  001E84  6E2E               	movwf	main@j,c
   594  001E86                     l1581:
   595  001E86  0E05               	movlw	5
   596  001E88  642E               	cpfsgt	main@j,c
   597  001E8A  D001               	goto	l1585
   598  001E8C  D04E               	goto	l1605
   599  001E8E                     l1585:
   600                           
   601                           ;main.c: 346: if ((rssiindex[i] == qualityindex[j]) && (rssiindex[i] != 0) && (qualityin
      +                          dex[j] != 0)) {
   602  001E8E  502E               	movf	main@j,w,c
   603  001E90  0D01               	mullw	1
   604  001E92  0E0A               	movlw	low _qualityindex
   605  001E94  24F3               	addwf	prodl,w,c
   606  001E96  6ED9               	movwf	fsr2l,c
   607  001E98  0E00               	movlw	high _qualityindex
   608  001E9A  20F4               	addwfc	prodh,w,c
   609  001E9C  6EDA               	movwf	fsr2h,c
   610  001E9E  502F               	movf	main@i_572,w,c
   611  001EA0  0D01               	mullw	1
   612  001EA2  0E1C               	movlw	low _rssiindex
   613  001EA4  24F3               	addwf	prodl,w,c
   614  001EA6  6EE1               	movwf	fsr1l,c
   615  001EA8  0E00               	movlw	high _rssiindex
   616  001EAA  20F4               	addwfc	prodh,w,c
   617  001EAC  6EE2               	movwf	fsr1h,c
   618  001EAE  50DE               	movf	postinc2,w,c
   619  001EB0  18E6               	xorwf	postinc1,w,c
   620  001EB2  A4D8               	btfss	status,2,c
   621  001EB4  D038               	goto	l1601
   622  001EB6  502F               	movf	main@i_572,w,c
   623  001EB8  0D01               	mullw	1
   624  001EBA  0E1C               	movlw	low _rssiindex
   625  001EBC  24F3               	addwf	prodl,w,c
   626  001EBE  6ED9               	movwf	fsr2l,c
   627  001EC0  0E00               	movlw	high _rssiindex
   628  001EC2  20F4               	addwfc	prodh,w,c
   629  001EC4  6EDA               	movwf	fsr2h,c
   630  001EC6  50DF               	movf	indf2,w,c
   631  001EC8  B4D8               	btfsc	status,2,c
   632  001ECA  D02D               	goto	l1601
   633  001ECC  502E               	movf	main@j,w,c
   634  001ECE  0D01               	mullw	1
   635  001ED0  0E0A               	movlw	low _qualityindex
   636  001ED2  24F3               	addwf	prodl,w,c
   637  001ED4  6ED9               	movwf	fsr2l,c
   638  001ED6  0E00               	movlw	high _qualityindex
   639  001ED8  20F4               	addwfc	prodh,w,c
   640  001EDA  6EDA               	movwf	fsr2h,c
   641  001EDC  50DF               	movf	indf2,w,c
   642  001EDE  B4D8               	btfsc	status,2,c
   643  001EE0  D022               	goto	l1601
   644                           
   645                           ;main.c: 347: normaloperation((rssiindex[i] - 1));
   646  001EE2  502F               	movf	main@i_572,w,c
   647  001EE4  0D01               	mullw	1
   648  001EE6  0E1C               	movlw	low _rssiindex
   649  001EE8  24F3               	addwf	prodl,w,c
   650  001EEA  6ED9               	movwf	fsr2l,c
   651  001EEC  0E00               	movlw	high _rssiindex
   652  001EEE  20F4               	addwfc	prodh,w,c
   653  001EF0  6EDA               	movwf	fsr2h,c
   654  001EF2  50DF               	movf	indf2,w,c
   655  001EF4  6E2B               	movwf	??_main& (0+255),c
   656  001EF6  042B               	decf	??_main,w,c
   657  001EF8  EC56  F00D         	call	_normaloperation
   658                           
   659                           ;main.c: 348: EUSART1_Write(0x53);
   660  001EFC  0E53               	movlw	83
   661  001EFE  ECE6  F00C         	call	_EUSART1_Write
   662                           
   663                           ;main.c: 349: _delay((unsigned long)((10)*(64000000/4000.0)));
   664  001F02  0ED0               	movlw	208
   665  001F04  6E2B               	movwf	??_main& (0+255),c
   666  001F06  0ECA               	movlw	202
   667  001F08                     u897:
   668  001F08  2EE8               	decfsz	wreg,f,c
   669  001F0A  D7FE               	goto	u897
   670  001F0C  2E2B               	decfsz	??_main& (0+255),f,c
   671  001F0E  D7FC               	goto	u897
   672                           
   673                           ;main.c: 350: EUSART1_Write(index);
   674  001F10  5025               	movf	_index,w,c
   675  001F12  ECE6  F00C         	call	_EUSART1_Write
   676                           
   677                           ;main.c: 351: _delay((unsigned long)((10)*(64000000/4000.0)));
   678  001F16  0ED0               	movlw	208
   679  001F18  6E2B               	movwf	??_main& (0+255),c
   680  001F1A  0ECA               	movlw	202
   681  001F1C                     u907:
   682  001F1C  2EE8               	decfsz	wreg,f,c
   683  001F1E  D7FE               	goto	u907
   684  001F20  2E2B               	decfsz	??_main& (0+255),f,c
   685  001F22  D7FC               	goto	u907
   686                           
   687                           ;main.c: 352: goto flash;
   688  001F24  D01B               	goto	l1619
   689  001F26                     l1601:
   690  001F26  2A2E               	incf	main@j,f,c
   691  001F28  D7AE               	goto	l1581
   692  001F2A                     l1605:
   693  001F2A  2A2F               	incf	main@i_572,f,c
   694  001F2C  D7A6               	goto	l1575
   695  001F2E                     l1609:
   696                           
   697                           ;main.c: 353: }
   698                           ;main.c: 354: }
   699                           ;main.c: 355: }
   700                           ;main.c: 357: normaloperation((rssiindex[0] - 1));
   701  001F2E  041C               	decf	_rssiindex,w,c
   702  001F30  EC56  F00D         	call	_normaloperation
   703                           
   704                           ;main.c: 358: EUSART1_Write(0x53);
   705  001F34  0E53               	movlw	83
   706  001F36  ECE6  F00C         	call	_EUSART1_Write
   707                           
   708                           ;main.c: 359: _delay((unsigned long)((10)*(64000000/4000.0)));
   709  001F3A  0ED0               	movlw	208
   710  001F3C  6E2B               	movwf	??_main& (0+255),c
   711  001F3E  0ECA               	movlw	202
   712  001F40                     u917:
   713  001F40  2EE8               	decfsz	wreg,f,c
   714  001F42  D7FE               	goto	u917
   715  001F44  2E2B               	decfsz	??_main& (0+255),f,c
   716  001F46  D7FC               	goto	u917
   717                           
   718                           ;main.c: 360: EUSART1_Write(index);
   719  001F48  5025               	movf	_index,w,c
   720  001F4A  ECE6  F00C         	call	_EUSART1_Write
   721                           
   722                           ;main.c: 361: _delay((unsigned long)((10)*(64000000/4000.0)));
   723  001F4E  0ED0               	movlw	208
   724  001F50  6E2B               	movwf	??_main& (0+255),c
   725  001F52  0ECA               	movlw	202
   726  001F54                     u927:
   727  001F54  2EE8               	decfsz	wreg,f,c
   728  001F56  D7FE               	goto	u927
   729  001F58  2E2B               	decfsz	??_main& (0+255),f,c
   730  001F5A  D7FC               	goto	u927
   731  001F5C                     l1619:
   732                           
   733                           ;main.c: 364: DATAEE_WriteByte(0x00, index);
   734  001F5C  C025  F028         	movff	_index,DATAEE_WriteByte@bData
   735  001F60  0E00               	movlw	0
   736  001F62  EC3B  F00D         	call	_DATAEE_WriteByte
   737                           
   738                           ;main.c: 366: } else if (index == 0x73) {
   739                           
   740                           ;main.c: 365: goto start;
   741  001F66  D6B9               	goto	l1475
   742  001F68                     l1623:
   743  001F68  0E73               	movlw	115
   744  001F6A  1825               	xorwf	_index,w,c
   745  001F6C  A4D8               	btfss	status,2,c
   746  001F6E  D6B5               	goto	l1475
   747                           
   748                           ;main.c: 370: index = EUSART1_Read();
   749  001F70  ECFA  F00C         	call	_EUSART1_Read	;wreg free
   750  001F74  6E25               	movwf	_index,c
   751                           
   752                           ;main.c: 371: _delay((unsigned long)((10)*(64000000/4000.0)));
   753  001F76  0ED0               	movlw	208
   754  001F78  6E2B               	movwf	??_main& (0+255),c
   755  001F7A  0ECA               	movlw	202
   756  001F7C                     u937:
   757  001F7C  2EE8               	decfsz	wreg,f,c
   758  001F7E  D7FE               	goto	u937
   759  001F80  2E2B               	decfsz	??_main& (0+255),f,c
   760  001F82  D7FC               	goto	u937
   761                           
   762                           ;main.c: 372: while (!((index == 0x01) || (index == 0x02) || (index == 0x03) || (index =
      +                          = 0x04) || (index == 0x05) || (index == 0x06) || (index == 0x07) || (index == 0x08) || (
      +                          index == 0x09))) {
   763  001F84  D00A               	goto	l1633
   764  001F86                     l1629:
   765                           
   766                           ;main.c: 373: index = EUSART1_Read();
   767  001F86  ECFA  F00C         	call	_EUSART1_Read	;wreg free
   768  001F8A  6E25               	movwf	_index,c
   769                           
   770                           ;main.c: 374: _delay((unsigned long)((10)*(64000000/4000.0)));
   771  001F8C  0ED0               	movlw	208
   772  001F8E  6E2B               	movwf	??_main& (0+255),c
   773  001F90  0ECA               	movlw	202
   774  001F92                     u947:
   775  001F92  2EE8               	decfsz	wreg,f,c
   776  001F94  D7FE               	goto	u947
   777  001F96  2E2B               	decfsz	??_main& (0+255),f,c
   778  001F98  D7FC               	goto	u947
   779  001F9A                     l1633:
   780  001F9A  0425               	decf	_index,w,c
   781  001F9C  B4D8               	btfsc	status,2,c
   782  001F9E  D020               	goto	l1651
   783  001FA0  0E02               	movlw	2
   784  001FA2  1825               	xorwf	_index,w,c
   785  001FA4  B4D8               	btfsc	status,2,c
   786  001FA6  D01C               	goto	l1651
   787  001FA8  0E03               	movlw	3
   788  001FAA  1825               	xorwf	_index,w,c
   789  001FAC  B4D8               	btfsc	status,2,c
   790  001FAE  D018               	goto	l1651
   791  001FB0  0E04               	movlw	4
   792  001FB2  1825               	xorwf	_index,w,c
   793  001FB4  B4D8               	btfsc	status,2,c
   794  001FB6  D014               	goto	l1651
   795  001FB8  0E05               	movlw	5
   796  001FBA  1825               	xorwf	_index,w,c
   797  001FBC  B4D8               	btfsc	status,2,c
   798  001FBE  D010               	goto	l1651
   799  001FC0  0E06               	movlw	6
   800  001FC2  1825               	xorwf	_index,w,c
   801  001FC4  B4D8               	btfsc	status,2,c
   802  001FC6  D00C               	goto	l1651
   803  001FC8  0E07               	movlw	7
   804  001FCA  1825               	xorwf	_index,w,c
   805  001FCC  B4D8               	btfsc	status,2,c
   806  001FCE  D008               	goto	l1651
   807  001FD0  0E08               	movlw	8
   808  001FD2  1825               	xorwf	_index,w,c
   809  001FD4  B4D8               	btfsc	status,2,c
   810  001FD6  D004               	goto	l1651
   811  001FD8  0E09               	movlw	9
   812  001FDA  1825               	xorwf	_index,w,c
   813  001FDC  A4D8               	btfss	status,2,c
   814  001FDE  D7D3               	goto	l1629
   815  001FE0                     l1651:
   816                           
   817                           ;main.c: 375: }
   818                           ;main.c: 376: switchstate(index);
   819  001FE0  5025               	movf	_index,w,c
   820  001FE2  ECC2  F00D         	call	_switchstate
   821                           
   822                           ;main.c: 377: DATAEE_WriteByte(0x00, index);
   823  001FE6  C025  F028         	movff	_index,DATAEE_WriteByte@bData
   824  001FEA  0E00               	movlw	0
   825  001FEC  EC3B  F00D         	call	_DATAEE_WriteByte
   826                           
   827                           ;main.c: 378: _delay((unsigned long)((10)*(64000000/4000.0)));
   828  001FF0  0ED0               	movlw	208
   829  001FF2  6E2B               	movwf	??_main& (0+255),c
   830  001FF4  0ECA               	movlw	202
   831  001FF6                     u957:
   832  001FF6  2EE8               	decfsz	wreg,f,c
   833  001FF8  D7FE               	goto	u957
   834  001FFA  2E2B               	decfsz	??_main& (0+255),f,c
   835  001FFC  D7FC               	goto	u957
   836                           
   837                           ;main.c: 381: goto start;
   838  001FFE  D66D               	goto	l1475
   839  002000                     __end_of_main:
   840                           	opt stack 0
   841                           tblptru	equ	0xFF8
   842                           prodh	equ	0xFF4
   843                           prodl	equ	0xFF3
   844                           postinc0	equ	0xFEE
   845                           wreg	equ	0xFE8
   846                           postinc1	equ	0xFE6
   847                           fsr1h	equ	0xFE2
   848                           fsr1l	equ	0xFE1
   849                           indf2	equ	0xFDF
   850                           postinc2	equ	0xFDE
   851                           fsr2h	equ	0xFDA
   852                           fsr2l	equ	0xFD9
   853                           status	equ	0xFD8
   854                           
   855 ;; *************** function _normaloperation *****************
   856 ;; Defined at:
   857 ;;		line 189 in file "main.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;  c               1    wreg     unsigned char 
   860 ;; Auto vars:     Size  Location     Type
   861 ;;  c               1    1[COMRAM] unsigned char 
   862 ;; Return value:  Size  Location     Type
   863 ;;		None               void
   864 ;; Registers used:
   865 ;;		wreg, status,2, status,0, cstack
   866 ;; Tracked objects:
   867 ;;		On entry : 0/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMRAM   BANK0   BANK1
   871 ;;      Params:         0       0       0
   872 ;;      Locals:         1       0       0
   873 ;;      Temps:          0       0       0
   874 ;;      Totals:         1       0       0
   875 ;;Total ram usage:        1 bytes
   876 ;; Hardware stack levels used:    1
   877 ;; Hardware stack levels required when called:    1
   878 ;; This function calls:
   879 ;;		_switchstate
   880 ;; This function is called by:
   881 ;;		_main
   882 ;; This function uses a non-reentrant model
   883 ;;
   884                           
   885                           	psect	text1
   886  001AAC                     __ptext1:
   887                           	opt stack 0
   888  001AAC                     _normaloperation:
   889                           	opt stack 29
   890                           
   891                           ;incstack = 0
   892                           ;normaloperation@c stored from wreg
   893  001AAC  6E29               	movwf	normaloperation@c,c
   894                           
   895                           ;main.c: 190: switch (c) {
   896  001AAE  D018               	goto	l1161
   897  001AB0                     l1147:
   898                           
   899                           ;main.c: 192: switchstate(5);
   900  001AB0  0E05               	movlw	5
   901  001AB2  ECC2  F00D         	call	_switchstate
   902                           
   903                           ;main.c: 193: break;
   904  001AB6  0012               	return	
   905  001AB8                     l1149:
   906                           
   907                           ;main.c: 195: switchstate(4);
   908  001AB8  0E04               	movlw	4
   909  001ABA  ECC2  F00D         	call	_switchstate
   910                           
   911                           ;main.c: 196: break;
   912  001ABE  0012               	return	
   913  001AC0                     l1151:
   914                           
   915                           ;main.c: 198: switchstate(6);
   916  001AC0  0E06               	movlw	6
   917  001AC2  ECC2  F00D         	call	_switchstate
   918                           
   919                           ;main.c: 199: break;
   920  001AC6  0012               	return	
   921  001AC8                     l1153:
   922                           
   923                           ;main.c: 201: switchstate(2);
   924  001AC8  0E02               	movlw	2
   925  001ACA  ECC2  F00D         	call	_switchstate
   926                           
   927                           ;main.c: 202: break;
   928  001ACE  0012               	return	
   929  001AD0                     l1155:
   930                           
   931                           ;main.c: 204: switchstate(8);
   932  001AD0  0E08               	movlw	8
   933  001AD2  ECC2  F00D         	call	_switchstate
   934                           
   935                           ;main.c: 205: break;
   936  001AD6  0012               	return	
   937  001AD8                     l1157:
   938                           
   939                           ;main.c: 207: switchstate(3);
   940  001AD8  0E03               	movlw	3
   941  001ADA  ECC2  F00D         	call	_switchstate
   942                           
   943                           ;main.c: 211: }
   944                           
   945                           ;main.c: 210: break;
   946                           
   947                           ;main.c: 209: default:
   948                           
   949                           ;main.c: 208: break;
   950  001ADE  0012               	return	
   951  001AE0                     l1161:
   952  001AE0  5029               	movf	normaloperation@c,w,c
   953                           
   954                           ; Switch size 1, requested type "space"
   955                           ; Number of cases is 6, Range of values is 0 to 5
   956                           ; switch strategies available:
   957                           ; Name         Instructions Cycles
   958                           ; simple_byte           19    10 (average)
   959                           ;	Chosen strategy is simple_byte
   960  001AE2  0A00               	xorlw	0	; case 0
   961  001AE4  B4D8               	btfsc	status,2,c
   962  001AE6  D7E4               	goto	l1147
   963  001AE8  0A01               	xorlw	1	; case 1
   964  001AEA  B4D8               	btfsc	status,2,c
   965  001AEC  D7E5               	goto	l1149
   966  001AEE  0A03               	xorlw	3	; case 2
   967  001AF0  B4D8               	btfsc	status,2,c
   968  001AF2  D7E6               	goto	l1151
   969  001AF4  0A01               	xorlw	1	; case 3
   970  001AF6  B4D8               	btfsc	status,2,c
   971  001AF8  D7E7               	goto	l1153
   972  001AFA  0A07               	xorlw	7	; case 4
   973  001AFC  B4D8               	btfsc	status,2,c
   974  001AFE  D7E8               	goto	l1155
   975  001B00  0A01               	xorlw	1	; case 5
   976  001B02  A4D8               	btfss	status,2,c
   977  001B04  0012               	return	
   978  001B06  D7E8               	goto	l1157
   979  001B08                     __end_of_normaloperation:
   980                           	opt stack 0
   981                           tblptru	equ	0xFF8
   982                           prodh	equ	0xFF4
   983                           prodl	equ	0xFF3
   984                           postinc0	equ	0xFEE
   985                           wreg	equ	0xFE8
   986                           postinc1	equ	0xFE6
   987                           fsr1h	equ	0xFE2
   988                           fsr1l	equ	0xFE1
   989                           indf2	equ	0xFDF
   990                           postinc2	equ	0xFDE
   991                           fsr2h	equ	0xFDA
   992                           fsr2l	equ	0xFD9
   993                           status	equ	0xFD8
   994                           
   995 ;; *************** function _switchstate *****************
   996 ;; Defined at:
   997 ;;		line 51 in file "main.c"
   998 ;; Parameters:    Size  Location     Type
   999 ;;  a               1    wreg     unsigned char 
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;  a               1    0[COMRAM] unsigned char 
  1002 ;; Return value:  Size  Location     Type
  1003 ;;		None               void
  1004 ;; Registers used:
  1005 ;;		wreg, status,2, status,0
  1006 ;; Tracked objects:
  1007 ;;		On entry : 0/0
  1008 ;;		On exit  : 0/0
  1009 ;;		Unchanged: 0/0
  1010 ;; Data sizes:     COMRAM   BANK0   BANK1
  1011 ;;      Params:         0       0       0
  1012 ;;      Locals:         1       0       0
  1013 ;;      Temps:          0       0       0
  1014 ;;      Totals:         1       0       0
  1015 ;;Total ram usage:        1 bytes
  1016 ;; Hardware stack levels used:    1
  1017 ;; This function calls:
  1018 ;;		Nothing
  1019 ;; This function is called by:
  1020 ;;		_normaloperation
  1021 ;;		_main
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           	psect	text2
  1026  001B84                     __ptext2:
  1027                           	opt stack 0
  1028  001B84                     _switchstate:
  1029                           	opt stack 30
  1030                           
  1031                           ;incstack = 0
  1032                           ;switchstate@a stored from wreg
  1033  001B84  6E28               	movwf	switchstate@a,c
  1034                           
  1035                           ;main.c: 52: switch (a) {
  1036  001B86  D06E               	goto	l1075
  1037  001B88                     l183:
  1038  001B88  968A               	bcf	3978,3,c	;volatile
  1039                           
  1040                           ;main.c: 55: do { LATB0 = 1; } while(0);
  1041  001B8A  808A               	bsf	3978,0,c	;volatile
  1042                           
  1043                           ;main.c: 56: do { LATB2 = 0; } while(0);
  1044  001B8C  948A               	bcf	3978,2,c	;volatile
  1045                           
  1046                           ;main.c: 57: do { LATB1 = 0; } while(0);
  1047  001B8E  928A               	bcf	3978,1,c	;volatile
  1048                           
  1049                           ;main.c: 58: do { LATC3 = 0; } while(0);
  1050  001B90  968B               	bcf	3979,3,c	;volatile
  1051                           
  1052                           ;main.c: 59: do { LATC0 = 1; } while(0);
  1053  001B92  808B               	bsf	3979,0,c	;volatile
  1054                           
  1055                           ;main.c: 60: do { LATC2 = 0; } while(0);
  1056  001B94  948B               	bcf	3979,2,c	;volatile
  1057                           
  1058                           ;main.c: 61: do { LATC1 = 0; } while(0);
  1059  001B96  928B               	bcf	3979,1,c	;volatile
  1060                           
  1061                           ;main.c: 62: index = 1;
  1062  001B98  0E01               	movlw	1
  1063  001B9A  6E25               	movwf	_index,c
  1064                           
  1065                           ;main.c: 63: break;
  1066  001B9C  0012               	return	
  1067  001B9E                     l201:
  1068  001B9E  968A               	bcf	3978,3,c	;volatile
  1069                           
  1070                           ;main.c: 66: do { LATB0 = 1; } while(0);
  1071  001BA0  808A               	bsf	3978,0,c	;volatile
  1072                           
  1073                           ;main.c: 67: do { LATB2 = 0; } while(0);
  1074  001BA2  948A               	bcf	3978,2,c	;volatile
  1075                           
  1076                           ;main.c: 68: do { LATB1 = 0; } while(0);
  1077  001BA4  928A               	bcf	3978,1,c	;volatile
  1078                           
  1079                           ;main.c: 69: do { LATC3 = 1; } while(0);
  1080  001BA6  868B               	bsf	3979,3,c	;volatile
  1081                           
  1082                           ;main.c: 70: do { LATC0 = 0; } while(0);
  1083  001BA8  908B               	bcf	3979,0,c	;volatile
  1084                           
  1085                           ;main.c: 71: do { LATC2 = 1; } while(0);
  1086  001BAA  848B               	bsf	3979,2,c	;volatile
  1087                           
  1088                           ;main.c: 72: do { LATC1 = 1; } while(0);
  1089  001BAC  828B               	bsf	3979,1,c	;volatile
  1090                           
  1091                           ;main.c: 73: index = 2;
  1092  001BAE  0E02               	movlw	2
  1093  001BB0  6E25               	movwf	_index,c
  1094                           
  1095                           ;main.c: 74: break;
  1096  001BB2  0012               	return	
  1097  001BB4                     l218:
  1098  001BB4  968A               	bcf	3978,3,c	;volatile
  1099                           
  1100                           ;main.c: 77: do { LATB0 = 1; } while(0);
  1101  001BB6  808A               	bsf	3978,0,c	;volatile
  1102                           
  1103                           ;main.c: 78: do { LATB2 = 0; } while(0);
  1104  001BB8  948A               	bcf	3978,2,c	;volatile
  1105                           
  1106                           ;main.c: 79: do { LATB1 = 0; } while(0);
  1107  001BBA  928A               	bcf	3978,1,c	;volatile
  1108                           
  1109                           ;main.c: 80: do { LATC3 = 0; } while(0);
  1110  001BBC  968B               	bcf	3979,3,c	;volatile
  1111                           
  1112                           ;main.c: 81: do { LATC0 = 1; } while(0);
  1113  001BBE  808B               	bsf	3979,0,c	;volatile
  1114                           
  1115                           ;main.c: 82: do { LATC2 = 1; } while(0);
  1116  001BC0  848B               	bsf	3979,2,c	;volatile
  1117                           
  1118                           ;main.c: 83: do { LATC1 = 0; } while(0);
  1119  001BC2  928B               	bcf	3979,1,c	;volatile
  1120                           
  1121                           ;main.c: 84: index = 3;
  1122  001BC4  0E03               	movlw	3
  1123  001BC6  6E25               	movwf	_index,c
  1124                           
  1125                           ;main.c: 85: break;
  1126  001BC8  0012               	return	
  1127  001BCA                     l235:
  1128  001BCA  868A               	bsf	3978,3,c	;volatile
  1129                           
  1130                           ;main.c: 88: do { LATB0 = 0; } while(0);
  1131  001BCC  908A               	bcf	3978,0,c	;volatile
  1132                           
  1133                           ;main.c: 89: do { LATB2 = 0; } while(0);
  1134  001BCE  948A               	bcf	3978,2,c	;volatile
  1135                           
  1136                           ;main.c: 90: do { LATB1 = 1; } while(0);
  1137  001BD0  828A               	bsf	3978,1,c	;volatile
  1138                           
  1139                           ;main.c: 91: do { LATC3 = 0; } while(0);
  1140  001BD2  968B               	bcf	3979,3,c	;volatile
  1141                           
  1142                           ;main.c: 92: do { LATC0 = 1; } while(0);
  1143  001BD4  808B               	bsf	3979,0,c	;volatile
  1144                           
  1145                           ;main.c: 93: do { LATC2 = 0; } while(0);
  1146  001BD6  948B               	bcf	3979,2,c	;volatile
  1147                           
  1148                           ;main.c: 94: do { LATC1 = 0; } while(0);
  1149  001BD8  928B               	bcf	3979,1,c	;volatile
  1150                           
  1151                           ;main.c: 95: index = 4;
  1152  001BDA  0E04               	movlw	4
  1153  001BDC  6E25               	movwf	_index,c
  1154                           
  1155                           ;main.c: 96: break;
  1156  001BDE  0012               	return	
  1157  001BE0                     l252:
  1158  001BE0  868A               	bsf	3978,3,c	;volatile
  1159                           
  1160                           ;main.c: 99: do { LATB0 = 0; } while(0);
  1161  001BE2  908A               	bcf	3978,0,c	;volatile
  1162                           
  1163                           ;main.c: 100: do { LATB2 = 0; } while(0);
  1164  001BE4  948A               	bcf	3978,2,c	;volatile
  1165                           
  1166                           ;main.c: 101: do { LATB1 = 1; } while(0);
  1167  001BE6  828A               	bsf	3978,1,c	;volatile
  1168                           
  1169                           ;main.c: 102: do { LATC3 = 1; } while(0);
  1170  001BE8  868B               	bsf	3979,3,c	;volatile
  1171                           
  1172                           ;main.c: 103: do { LATC0 = 0; } while(0);
  1173  001BEA  908B               	bcf	3979,0,c	;volatile
  1174                           
  1175                           ;main.c: 104: do { LATC2 = 1; } while(0);
  1176  001BEC  848B               	bsf	3979,2,c	;volatile
  1177                           
  1178                           ;main.c: 105: do { LATC1 = 1; } while(0);
  1179  001BEE  828B               	bsf	3979,1,c	;volatile
  1180                           
  1181                           ;main.c: 106: index = 5;
  1182  001BF0  0E05               	movlw	5
  1183  001BF2  6E25               	movwf	_index,c
  1184                           
  1185                           ;main.c: 107: break;
  1186  001BF4  0012               	return	
  1187  001BF6                     l269:
  1188  001BF6  868A               	bsf	3978,3,c	;volatile
  1189                           
  1190                           ;main.c: 110: do { LATB0 = 0; } while(0);
  1191  001BF8  908A               	bcf	3978,0,c	;volatile
  1192                           
  1193                           ;main.c: 111: do { LATB2 = 0; } while(0);
  1194  001BFA  948A               	bcf	3978,2,c	;volatile
  1195                           
  1196                           ;main.c: 112: do { LATB1 = 1; } while(0);
  1197  001BFC  828A               	bsf	3978,1,c	;volatile
  1198                           
  1199                           ;main.c: 113: do { LATC3 = 0; } while(0);
  1200  001BFE  968B               	bcf	3979,3,c	;volatile
  1201                           
  1202                           ;main.c: 114: do { LATC0 = 1; } while(0);
  1203  001C00  808B               	bsf	3979,0,c	;volatile
  1204                           
  1205                           ;main.c: 115: do { LATC2 = 1; } while(0);
  1206  001C02  848B               	bsf	3979,2,c	;volatile
  1207                           
  1208                           ;main.c: 116: do { LATC1 = 0; } while(0);
  1209  001C04  928B               	bcf	3979,1,c	;volatile
  1210                           
  1211                           ;main.c: 117: index = 6;
  1212  001C06  0E06               	movlw	6
  1213  001C08  6E25               	movwf	_index,c
  1214                           
  1215                           ;main.c: 118: break;
  1216  001C0A  0012               	return	
  1217  001C0C                     l286:
  1218  001C0C  968A               	bcf	3978,3,c	;volatile
  1219                           
  1220                           ;main.c: 121: do { LATB0 = 1; } while(0);
  1221  001C0E  808A               	bsf	3978,0,c	;volatile
  1222                           
  1223                           ;main.c: 122: do { LATB2 = 1; } while(0);
  1224  001C10  848A               	bsf	3978,2,c	;volatile
  1225                           
  1226                           ;main.c: 123: do { LATB1 = 0; } while(0);
  1227  001C12  928A               	bcf	3978,1,c	;volatile
  1228                           
  1229                           ;main.c: 124: do { LATC3 = 0; } while(0);
  1230  001C14  968B               	bcf	3979,3,c	;volatile
  1231                           
  1232                           ;main.c: 125: do { LATC0 = 1; } while(0);
  1233  001C16  808B               	bsf	3979,0,c	;volatile
  1234                           
  1235                           ;main.c: 126: do { LATC2 = 0; } while(0);
  1236  001C18  948B               	bcf	3979,2,c	;volatile
  1237                           
  1238                           ;main.c: 127: do { LATC1 = 0; } while(0);
  1239  001C1A  928B               	bcf	3979,1,c	;volatile
  1240                           
  1241                           ;main.c: 128: index = 7;
  1242  001C1C  0E07               	movlw	7
  1243  001C1E  6E25               	movwf	_index,c
  1244                           
  1245                           ;main.c: 129: break;
  1246  001C20  0012               	return	
  1247  001C22                     l303:
  1248  001C22  968A               	bcf	3978,3,c	;volatile
  1249                           
  1250                           ;main.c: 132: do { LATB0 = 1; } while(0);
  1251  001C24  808A               	bsf	3978,0,c	;volatile
  1252                           
  1253                           ;main.c: 133: do { LATB2 = 1; } while(0);
  1254  001C26  848A               	bsf	3978,2,c	;volatile
  1255                           
  1256                           ;main.c: 134: do { LATB1 = 0; } while(0);
  1257  001C28  928A               	bcf	3978,1,c	;volatile
  1258                           
  1259                           ;main.c: 135: do { LATC3 = 1; } while(0);
  1260  001C2A  868B               	bsf	3979,3,c	;volatile
  1261                           
  1262                           ;main.c: 136: do { LATC0 = 0; } while(0);
  1263  001C2C  908B               	bcf	3979,0,c	;volatile
  1264                           
  1265                           ;main.c: 137: do { LATC2 = 1; } while(0);
  1266  001C2E  848B               	bsf	3979,2,c	;volatile
  1267                           
  1268                           ;main.c: 138: do { LATC1 = 1; } while(0);
  1269  001C30  828B               	bsf	3979,1,c	;volatile
  1270                           
  1271                           ;main.c: 139: index = 8;
  1272  001C32  0E08               	movlw	8
  1273  001C34  6E25               	movwf	_index,c
  1274                           
  1275                           ;main.c: 140: break;
  1276  001C36  0012               	return	
  1277  001C38                     l320:
  1278  001C38  968A               	bcf	3978,3,c	;volatile
  1279                           
  1280                           ;main.c: 143: do { LATB0 = 1; } while(0);
  1281  001C3A  808A               	bsf	3978,0,c	;volatile
  1282                           
  1283                           ;main.c: 144: do { LATB2 = 1; } while(0);
  1284  001C3C  848A               	bsf	3978,2,c	;volatile
  1285                           
  1286                           ;main.c: 145: do { LATB1 = 0; } while(0);
  1287  001C3E  928A               	bcf	3978,1,c	;volatile
  1288                           
  1289                           ;main.c: 146: do { LATC3 = 0; } while(0);
  1290  001C40  968B               	bcf	3979,3,c	;volatile
  1291                           
  1292                           ;main.c: 147: do { LATC0 = 1; } while(0);
  1293  001C42  808B               	bsf	3979,0,c	;volatile
  1294                           
  1295                           ;main.c: 148: do { LATC2 = 1; } while(0);
  1296  001C44  848B               	bsf	3979,2,c	;volatile
  1297                           
  1298                           ;main.c: 149: do { LATC1 = 0; } while(0);
  1299  001C46  928B               	bcf	3979,1,c	;volatile
  1300                           
  1301                           ;main.c: 150: index = 9;
  1302  001C48  0E09               	movlw	9
  1303  001C4A  6E25               	movwf	_index,c
  1304                           
  1305                           ;main.c: 151: break;
  1306  001C4C  0012               	return	
  1307  001C4E                     l337:
  1308  001C4E  868A               	bsf	3978,3,c	;volatile
  1309                           
  1310                           ;main.c: 154: do { LATB0 = 0; } while(0);
  1311  001C50  908A               	bcf	3978,0,c	;volatile
  1312                           
  1313                           ;main.c: 155: do { LATB2 = 0; } while(0);
  1314  001C52  948A               	bcf	3978,2,c	;volatile
  1315                           
  1316                           ;main.c: 156: do { LATB1 = 1; } while(0);
  1317  001C54  828A               	bsf	3978,1,c	;volatile
  1318                           
  1319                           ;main.c: 157: do { LATC3 = 1; } while(0);
  1320  001C56  868B               	bsf	3979,3,c	;volatile
  1321                           
  1322                           ;main.c: 158: do { LATC0 = 0; } while(0);
  1323  001C58  908B               	bcf	3979,0,c	;volatile
  1324                           
  1325                           ;main.c: 159: do { LATC2 = 1; } while(0);
  1326  001C5A  848B               	bsf	3979,2,c	;volatile
  1327                           
  1328                           ;main.c: 160: do { LATC1 = 1; } while(0);
  1329  001C5C  828B               	bsf	3979,1,c	;volatile
  1330                           
  1331                           ;main.c: 161: index = 5;
  1332  001C5E  0E05               	movlw	5
  1333  001C60  6E25               	movwf	_index,c
  1334                           
  1335                           ;main.c: 163: }
  1336                           
  1337                           ;main.c: 162: break;
  1338  001C62  0012               	return	
  1339  001C64                     l1075:
  1340  001C64  5028               	movf	switchstate@a,w,c
  1341                           
  1342                           ; Switch size 1, requested type "space"
  1343                           ; Number of cases is 9, Range of values is 1 to 9
  1344                           ; switch strategies available:
  1345                           ; Name         Instructions Cycles
  1346                           ; simple_byte           28    15 (average)
  1347                           ;	Chosen strategy is simple_byte
  1348  001C66  0A01               	xorlw	1	; case 1
  1349  001C68  B4D8               	btfsc	status,2,c
  1350  001C6A  D78E               	goto	l183
  1351  001C6C  0A03               	xorlw	3	; case 2
  1352  001C6E  B4D8               	btfsc	status,2,c
  1353  001C70  D796               	goto	l201
  1354  001C72  0A01               	xorlw	1	; case 3
  1355  001C74  B4D8               	btfsc	status,2,c
  1356  001C76  D79E               	goto	l218
  1357  001C78  0A07               	xorlw	7	; case 4
  1358  001C7A  B4D8               	btfsc	status,2,c
  1359  001C7C  D7A6               	goto	l235
  1360  001C7E  0A01               	xorlw	1	; case 5
  1361  001C80  B4D8               	btfsc	status,2,c
  1362  001C82  D7AE               	goto	l252
  1363  001C84  0A03               	xorlw	3	; case 6
  1364  001C86  B4D8               	btfsc	status,2,c
  1365  001C88  D7B6               	goto	l269
  1366  001C8A  0A01               	xorlw	1	; case 7
  1367  001C8C  B4D8               	btfsc	status,2,c
  1368  001C8E  D7BE               	goto	l286
  1369  001C90  0A0F               	xorlw	15	; case 8
  1370  001C92  B4D8               	btfsc	status,2,c
  1371  001C94  D7C6               	goto	l303
  1372  001C96  0A01               	xorlw	1	; case 9
  1373  001C98  B4D8               	btfsc	status,2,c
  1374  001C9A  D7CE               	goto	l320
  1375  001C9C  D7D8               	goto	l337
  1376  001C9E                     __end_of_switchstate:
  1377                           	opt stack 0
  1378                           tblptru	equ	0xFF8
  1379                           prodh	equ	0xFF4
  1380                           prodl	equ	0xFF3
  1381                           postinc0	equ	0xFEE
  1382                           wreg	equ	0xFE8
  1383                           postinc1	equ	0xFE6
  1384                           fsr1h	equ	0xFE2
  1385                           fsr1l	equ	0xFE1
  1386                           indf2	equ	0xFDF
  1387                           postinc2	equ	0xFDE
  1388                           fsr2h	equ	0xFDA
  1389                           fsr2l	equ	0xFD9
  1390                           status	equ	0xFD8
  1391                           
  1392 ;; *************** function _getvalues *****************
  1393 ;; Defined at:
  1394 ;;		line 167 in file "main.c"
  1395 ;; Parameters:    Size  Location     Type
  1396 ;;  b               1    wreg     unsigned char 
  1397 ;; Auto vars:     Size  Location     Type
  1398 ;;  b               1    1[COMRAM] unsigned char 
  1399 ;; Return value:  Size  Location     Type
  1400 ;;		None               void
  1401 ;; Registers used:
  1402 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1403 ;; Tracked objects:
  1404 ;;		On entry : 0/0
  1405 ;;		On exit  : 0/0
  1406 ;;		Unchanged: 0/0
  1407 ;; Data sizes:     COMRAM   BANK0   BANK1
  1408 ;;      Params:         0       0       0
  1409 ;;      Locals:         1       0       0
  1410 ;;      Temps:          1       0       0
  1411 ;;      Totals:         2       0       0
  1412 ;;Total ram usage:        2 bytes
  1413 ;; Hardware stack levels used:    1
  1414 ;; Hardware stack levels required when called:    1
  1415 ;; This function calls:
  1416 ;;		_EUSART1_Read
  1417 ;; This function is called by:
  1418 ;;		_main
  1419 ;; This function uses a non-reentrant model
  1420 ;;
  1421                           
  1422                           	psect	text3
  1423  001B08                     __ptext3:
  1424                           	opt stack 0
  1425  001B08                     _getvalues:
  1426                           	opt stack 29
  1427                           
  1428                           ;incstack = 0
  1429                           ;getvalues@b stored from wreg
  1430  001B08  6E29               	movwf	getvalues@b,c
  1431  001B0A                     l1127:
  1432  001B0A  ECFA  F00C         	call	_EUSART1_Read	;wreg free
  1433  001B0E  0A52               	xorlw	82
  1434  001B10  A4D8               	btfss	status,2,c
  1435  001B12  D7FB               	goto	l1127
  1436                           
  1437                           ;main.c: 170: }
  1438                           ;main.c: 172: _delay((unsigned long)((10)*(64000000/4000.0)));
  1439  001B14  0ED0               	movlw	208
  1440  001B16  6E28               	movwf	??_getvalues& (0+255),c
  1441  001B18  0ECA               	movlw	202
  1442  001B1A                     u967:
  1443  001B1A  2EE8               	decfsz	wreg,f,c
  1444  001B1C  D7FE               	goto	u967
  1445  001B1E  2E28               	decfsz	??_getvalues& (0+255),f,c
  1446  001B20  D7FC               	goto	u967
  1447                           
  1448                           ;main.c: 173: rssi[b] = EUSART1_Read();
  1449  001B22  5029               	movf	getvalues@b,w,c
  1450  001B24  0D01               	mullw	1
  1451  001B26  0E13               	movlw	low _rssi
  1452  001B28  24F3               	addwf	prodl,w,c
  1453  001B2A  6ED9               	movwf	fsr2l,c
  1454  001B2C  0E00               	movlw	high _rssi
  1455  001B2E  20F4               	addwfc	prodh,w,c
  1456  001B30  6EDA               	movwf	fsr2h,c
  1457  001B32  ECFA  F00C         	call	_EUSART1_Read	;wreg free
  1458  001B36  6EDF               	movwf	indf2,c
  1459                           
  1460                           ;main.c: 174: _delay((unsigned long)((10)*(64000000/4000.0)));
  1461  001B38  0ED0               	movlw	208
  1462  001B3A  6E28               	movwf	??_getvalues& (0+255),c
  1463  001B3C  0ECA               	movlw	202
  1464  001B3E                     u977:
  1465  001B3E  2EE8               	decfsz	wreg,f,c
  1466  001B40  D7FE               	goto	u977
  1467  001B42  2E28               	decfsz	??_getvalues& (0+255),f,c
  1468  001B44  D7FC               	goto	u977
  1469  001B46                     l1135:
  1470  001B46  ECFA  F00C         	call	_EUSART1_Read	;wreg free
  1471  001B4A  0A4C               	xorlw	76
  1472  001B4C  A4D8               	btfss	status,2,c
  1473  001B4E  D7FB               	goto	l1135
  1474                           
  1475                           ;main.c: 179: }
  1476                           ;main.c: 181: _delay((unsigned long)((10)*(64000000/4000.0)));
  1477  001B50  0ED0               	movlw	208
  1478  001B52  6E28               	movwf	??_getvalues& (0+255),c
  1479  001B54  0ECA               	movlw	202
  1480  001B56                     u987:
  1481  001B56  2EE8               	decfsz	wreg,f,c
  1482  001B58  D7FE               	goto	u987
  1483  001B5A  2E28               	decfsz	??_getvalues& (0+255),f,c
  1484  001B5C  D7FC               	goto	u987
  1485                           
  1486                           ;main.c: 182: quality[b] = EUSART1_Read();
  1487  001B5E  5029               	movf	getvalues@b,w,c
  1488  001B60  0D01               	mullw	1
  1489  001B62  0E01               	movlw	low _quality
  1490  001B64  24F3               	addwf	prodl,w,c
  1491  001B66  6ED9               	movwf	fsr2l,c
  1492  001B68  0E00               	movlw	high _quality
  1493  001B6A  20F4               	addwfc	prodh,w,c
  1494  001B6C  6EDA               	movwf	fsr2h,c
  1495  001B6E  ECFA  F00C         	call	_EUSART1_Read	;wreg free
  1496  001B72  6EDF               	movwf	indf2,c
  1497                           
  1498                           ;main.c: 183: _delay((unsigned long)((10)*(64000000/4000.0)));
  1499  001B74  0ED0               	movlw	208
  1500  001B76  6E28               	movwf	??_getvalues& (0+255),c
  1501  001B78  0ECA               	movlw	202
  1502  001B7A                     u997:
  1503  001B7A  2EE8               	decfsz	wreg,f,c
  1504  001B7C  D7FE               	goto	u997
  1505  001B7E  2E28               	decfsz	??_getvalues& (0+255),f,c
  1506  001B80  D7FC               	goto	u997
  1507  001B82  0012               	return	
  1508  001B84                     __end_of_getvalues:
  1509                           	opt stack 0
  1510                           tblptru	equ	0xFF8
  1511                           prodh	equ	0xFF4
  1512                           prodl	equ	0xFF3
  1513                           postinc0	equ	0xFEE
  1514                           wreg	equ	0xFE8
  1515                           postinc1	equ	0xFE6
  1516                           fsr1h	equ	0xFE2
  1517                           fsr1l	equ	0xFE1
  1518                           indf2	equ	0xFDF
  1519                           postinc2	equ	0xFDE
  1520                           fsr2h	equ	0xFDA
  1521                           fsr2l	equ	0xFD9
  1522                           status	equ	0xFD8
  1523                           
  1524 ;; *************** function _EUSART1_Read *****************
  1525 ;; Defined at:
  1526 ;;		line 76 in file "mcc_generated_files/eusart1.c"
  1527 ;; Parameters:    Size  Location     Type
  1528 ;;		None
  1529 ;; Auto vars:     Size  Location     Type
  1530 ;;		None
  1531 ;; Return value:  Size  Location     Type
  1532 ;;                  1    wreg      unsigned char 
  1533 ;; Registers used:
  1534 ;;		wreg, status,2
  1535 ;; Tracked objects:
  1536 ;;		On entry : 0/0
  1537 ;;		On exit  : 0/0
  1538 ;;		Unchanged: 0/0
  1539 ;; Data sizes:     COMRAM   BANK0   BANK1
  1540 ;;      Params:         0       0       0
  1541 ;;      Locals:         0       0       0
  1542 ;;      Temps:          0       0       0
  1543 ;;      Totals:         0       0       0
  1544 ;;Total ram usage:        0 bytes
  1545 ;; Hardware stack levels used:    1
  1546 ;; This function calls:
  1547 ;;		Nothing
  1548 ;; This function is called by:
  1549 ;;		_getvalues
  1550 ;;		_main
  1551 ;; This function uses a non-reentrant model
  1552 ;;
  1553                           
  1554                           	psect	text4
  1555  0019F4                     __ptext4:
  1556                           	opt stack 0
  1557  0019F4                     _EUSART1_Read:
  1558                           	opt stack 29
  1559  0019F4                     l71:
  1560  0019F4  AA9E               	btfss	3998,5,c	;volatile
  1561  0019F6  D7FE               	goto	l71
  1562                           
  1563                           ;eusart1.c: 79: }
  1564                           ;eusart1.c: 81: if (RC1STAbits.OERR == 1) {
  1565  0019F8  A2AB               	btfss	4011,1,c	;volatile
  1566  0019FA  D003               	goto	l1047
  1567                           
  1568                           ;eusart1.c: 83: RCSTA1bits.OERR = 0;
  1569  0019FC  92AB               	bcf	4011,1,c	;volatile
  1570                           
  1571                           ;eusart1.c: 84: RCSTA1bits.CREN = 0;
  1572  0019FE  98AB               	bcf	4011,4,c	;volatile
  1573                           
  1574                           ;eusart1.c: 85: RCSTA1bits.CREN = 1;
  1575  001A00  88AB               	bsf	4011,4,c	;volatile
  1576  001A02                     l1047:
  1577                           
  1578                           ;eusart1.c: 86: }
  1579                           ;eusart1.c: 88: return RCREG1;
  1580  001A02  50AE               	movf	4014,w,c	;volatile
  1581  001A04  0012               	return	
  1582  001A06                     __end_of_EUSART1_Read:
  1583                           	opt stack 0
  1584                           tblptru	equ	0xFF8
  1585                           prodh	equ	0xFF4
  1586                           prodl	equ	0xFF3
  1587                           postinc0	equ	0xFEE
  1588                           wreg	equ	0xFE8
  1589                           postinc1	equ	0xFE6
  1590                           fsr1h	equ	0xFE2
  1591                           fsr1l	equ	0xFE1
  1592                           indf2	equ	0xFDF
  1593                           postinc2	equ	0xFDE
  1594                           fsr2h	equ	0xFDA
  1595                           fsr2l	equ	0xFD9
  1596                           status	equ	0xFD8
  1597                           
  1598 ;; *************** function _SYSTEM_Initialize *****************
  1599 ;; Defined at:
  1600 ;;		line 106 in file "mcc_generated_files/mcc.c"
  1601 ;; Parameters:    Size  Location     Type
  1602 ;;		None
  1603 ;; Auto vars:     Size  Location     Type
  1604 ;;		None
  1605 ;; Return value:  Size  Location     Type
  1606 ;;		None               void
  1607 ;; Registers used:
  1608 ;;		wreg, status,2, cstack
  1609 ;; Tracked objects:
  1610 ;;		On entry : 0/0
  1611 ;;		On exit  : 0/0
  1612 ;;		Unchanged: 0/0
  1613 ;; Data sizes:     COMRAM   BANK0   BANK1
  1614 ;;      Params:         0       0       0
  1615 ;;      Locals:         0       0       0
  1616 ;;      Temps:          0       0       0
  1617 ;;      Totals:         0       0       0
  1618 ;;Total ram usage:        0 bytes
  1619 ;; Hardware stack levels used:    1
  1620 ;; Hardware stack levels required when called:    1
  1621 ;; This function calls:
  1622 ;;		_EUSART1_Initialize
  1623 ;;		_OSCILLATOR_Initialize
  1624 ;;		_PIN_MANAGER_Initialize
  1625 ;; This function is called by:
  1626 ;;		_main
  1627 ;; This function uses a non-reentrant model
  1628 ;;
  1629                           
  1630                           	psect	text5
  1631  0019E6                     __ptext5:
  1632                           	opt stack 0
  1633  0019E6                     _SYSTEM_Initialize:
  1634                           	opt stack 29
  1635                           
  1636                           ;mcc.c: 107: OSCILLATOR_Initialize();
  1637                           
  1638                           ;incstack = 0
  1639  0019E6  ECEC  F00C         	call	_OSCILLATOR_Initialize	;wreg free
  1640                           
  1641                           ;mcc.c: 108: PIN_MANAGER_Initialize();
  1642  0019EA  EC23  F00D         	call	_PIN_MANAGER_Initialize	;wreg free
  1643                           
  1644                           ;mcc.c: 109: EUSART1_Initialize();
  1645  0019EE  EC0D  F00D         	call	_EUSART1_Initialize	;wreg free
  1646  0019F2  0012               	return		;funcret
  1647  0019F4                     __end_of_SYSTEM_Initialize:
  1648                           	opt stack 0
  1649                           tblptru	equ	0xFF8
  1650                           prodh	equ	0xFF4
  1651                           prodl	equ	0xFF3
  1652                           postinc0	equ	0xFEE
  1653                           wreg	equ	0xFE8
  1654                           postinc1	equ	0xFE6
  1655                           fsr1h	equ	0xFE2
  1656                           fsr1l	equ	0xFE1
  1657                           indf2	equ	0xFDF
  1658                           postinc2	equ	0xFDE
  1659                           fsr2h	equ	0xFDA
  1660                           fsr2l	equ	0xFD9
  1661                           status	equ	0xFD8
  1662                           
  1663 ;; *************** function _PIN_MANAGER_Initialize *****************
  1664 ;; Defined at:
  1665 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;		None
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;		None
  1670 ;; Return value:  Size  Location     Type
  1671 ;;		None               void
  1672 ;; Registers used:
  1673 ;;		wreg, status,2
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMRAM   BANK0   BANK1
  1679 ;;      Params:         0       0       0
  1680 ;;      Locals:         0       0       0
  1681 ;;      Temps:          0       0       0
  1682 ;;      Totals:         0       0       0
  1683 ;;Total ram usage:        0 bytes
  1684 ;; Hardware stack levels used:    1
  1685 ;; This function calls:
  1686 ;;		Nothing
  1687 ;; This function is called by:
  1688 ;;		_SYSTEM_Initialize
  1689 ;; This function uses a non-reentrant model
  1690 ;;
  1691                           
  1692                           	psect	text6
  1693  001A46                     __ptext6:
  1694                           	opt stack 0
  1695  001A46                     _PIN_MANAGER_Initialize:
  1696                           	opt stack 29
  1697                           
  1698                           ;pin_manager.c: 51: LATA = 0x00;
  1699                           
  1700                           ;incstack = 0
  1701  001A46  0E00               	movlw	0
  1702  001A48  6E89               	movwf	3977,c	;volatile
  1703                           
  1704                           ;pin_manager.c: 52: TRISA = 0xFF;
  1705  001A4A  6892               	setf	3986,c	;volatile
  1706                           
  1707                           ;pin_manager.c: 53: ANSELA = 0x2F;
  1708  001A4C  0E2F               	movlw	47
  1709  001A4E  010F               	movlb	15	; () banked
  1710  001A50  6F38               	movwf	56,b	;volatile
  1711                           
  1712                           ;pin_manager.c: 55: LATB = 0x00;
  1713  001A52  0E00               	movlw	0
  1714  001A54  6E8A               	movwf	3978,c	;volatile
  1715                           
  1716                           ;pin_manager.c: 56: TRISB = 0xF0;
  1717  001A56  0EF0               	movlw	240
  1718  001A58  6E93               	movwf	3987,c	;volatile
  1719                           
  1720                           ;pin_manager.c: 57: ANSELB = 0x30;
  1721  001A5A  0E30               	movlw	48
  1722  001A5C  010F               	movlb	15	; () banked
  1723  001A5E  6F39               	movwf	57,b	;volatile
  1724                           
  1725                           ;pin_manager.c: 58: WPUB = 0x00;
  1726  001A60  0E00               	movlw	0
  1727  001A62  6E61               	movwf	3937,c	;volatile
  1728                           
  1729                           ;pin_manager.c: 60: LATC = 0x00;
  1730  001A64  0E00               	movlw	0
  1731  001A66  6E8B               	movwf	3979,c	;volatile
  1732                           
  1733                           ;pin_manager.c: 62: TRISC = 0xB0;
  1734  001A68  0EB0               	movlw	176
  1735  001A6A  6E94               	movwf	3988,c	;volatile
  1736                           
  1737                           ;pin_manager.c: 64: ANSELC = 0x00;
  1738  001A6C  0E00               	movlw	0
  1739  001A6E  010F               	movlb	15	; () banked
  1740  001A70  6F3A               	movwf	58,b	;volatile
  1741                           
  1742                           ; BSR set to: 15
  1743                           ;pin_manager.c: 66: INTCON2bits.nRBPU = 0x01;
  1744  001A72  8EF1               	bsf	intcon2,7,c	;volatile
  1745                           
  1746                           ; BSR set to: 15
  1747  001A74  0012               	return		;funcret
  1748  001A76                     __end_of_PIN_MANAGER_Initialize:
  1749                           	opt stack 0
  1750                           tblptru	equ	0xFF8
  1751                           prodh	equ	0xFF4
  1752                           prodl	equ	0xFF3
  1753                           intcon2	equ	0xFF1
  1754                           postinc0	equ	0xFEE
  1755                           wreg	equ	0xFE8
  1756                           postinc1	equ	0xFE6
  1757                           fsr1h	equ	0xFE2
  1758                           fsr1l	equ	0xFE1
  1759                           indf2	equ	0xFDF
  1760                           postinc2	equ	0xFDE
  1761                           fsr2h	equ	0xFDA
  1762                           fsr2l	equ	0xFD9
  1763                           status	equ	0xFD8
  1764                           
  1765 ;; *************** function _OSCILLATOR_Initialize *****************
  1766 ;; Defined at:
  1767 ;;		line 112 in file "mcc_generated_files/mcc.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;		None
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;		None
  1772 ;; Return value:  Size  Location     Type
  1773 ;;		None               void
  1774 ;; Registers used:
  1775 ;;		wreg, status,2
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMRAM   BANK0   BANK1
  1781 ;;      Params:         0       0       0
  1782 ;;      Locals:         0       0       0
  1783 ;;      Temps:          0       0       0
  1784 ;;      Totals:         0       0       0
  1785 ;;Total ram usage:        0 bytes
  1786 ;; Hardware stack levels used:    1
  1787 ;; This function calls:
  1788 ;;		Nothing
  1789 ;; This function is called by:
  1790 ;;		_SYSTEM_Initialize
  1791 ;; This function uses a non-reentrant model
  1792 ;;
  1793                           
  1794                           	psect	text7
  1795  0019D8                     __ptext7:
  1796                           	opt stack 0
  1797  0019D8                     _OSCILLATOR_Initialize:
  1798                           	opt stack 29
  1799                           
  1800                           ;mcc.c: 114: OSCCON = 0x70;
  1801                           
  1802                           ; BSR set to: 15
  1803                           ;incstack = 0
  1804  0019D8  0E70               	movlw	112
  1805  0019DA  6ED3               	movwf	4051,c	;volatile
  1806                           
  1807                           ;mcc.c: 116: OSCCON2 = 0x04;
  1808  0019DC  0E04               	movlw	4
  1809  0019DE  6ED2               	movwf	4050,c	;volatile
  1810                           
  1811                           ;mcc.c: 118: OSCTUNE = 0x40;
  1812  0019E0  0E40               	movlw	64
  1813  0019E2  6E9B               	movwf	3995,c	;volatile
  1814  0019E4  0012               	return		;funcret
  1815  0019E6                     __end_of_OSCILLATOR_Initialize:
  1816                           	opt stack 0
  1817                           tblptru	equ	0xFF8
  1818                           prodh	equ	0xFF4
  1819                           prodl	equ	0xFF3
  1820                           intcon2	equ	0xFF1
  1821                           postinc0	equ	0xFEE
  1822                           wreg	equ	0xFE8
  1823                           postinc1	equ	0xFE6
  1824                           fsr1h	equ	0xFE2
  1825                           fsr1l	equ	0xFE1
  1826                           indf2	equ	0xFDF
  1827                           postinc2	equ	0xFDE
  1828                           fsr2h	equ	0xFDA
  1829                           fsr2l	equ	0xFD9
  1830                           status	equ	0xFD8
  1831                           
  1832 ;; *************** function _EUSART1_Initialize *****************
  1833 ;; Defined at:
  1834 ;;		line 56 in file "mcc_generated_files/eusart1.c"
  1835 ;; Parameters:    Size  Location     Type
  1836 ;;		None
  1837 ;; Auto vars:     Size  Location     Type
  1838 ;;		None
  1839 ;; Return value:  Size  Location     Type
  1840 ;;		None               void
  1841 ;; Registers used:
  1842 ;;		wreg, status,2
  1843 ;; Tracked objects:
  1844 ;;		On entry : 0/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMRAM   BANK0   BANK1
  1848 ;;      Params:         0       0       0
  1849 ;;      Locals:         0       0       0
  1850 ;;      Temps:          0       0       0
  1851 ;;      Totals:         0       0       0
  1852 ;;Total ram usage:        0 bytes
  1853 ;; Hardware stack levels used:    1
  1854 ;; This function calls:
  1855 ;;		Nothing
  1856 ;; This function is called by:
  1857 ;;		_SYSTEM_Initialize
  1858 ;; This function uses a non-reentrant model
  1859 ;;
  1860                           
  1861                           	psect	text8
  1862  001A1A                     __ptext8:
  1863                           	opt stack 0
  1864  001A1A                     _EUSART1_Initialize:
  1865                           	opt stack 29
  1866                           
  1867                           ;eusart1.c: 60: BAUD1CON = 0x48;
  1868                           
  1869                           ;incstack = 0
  1870  001A1A  0E48               	movlw	72
  1871  001A1C  6EB8               	movwf	4024,c	;volatile
  1872                           
  1873                           ;eusart1.c: 63: RC1STA = 0x90;
  1874  001A1E  0E90               	movlw	144
  1875  001A20  6EAB               	movwf	4011,c	;volatile
  1876                           
  1877                           ;eusart1.c: 66: TX1STA = 0x26;
  1878  001A22  0E26               	movlw	38
  1879  001A24  6EAC               	movwf	4012,c	;volatile
  1880                           
  1881                           ;eusart1.c: 69: SPBRG1 = 0x82;
  1882  001A26  0E82               	movlw	130
  1883  001A28  6EAF               	movwf	4015,c	;volatile
  1884                           
  1885                           ;eusart1.c: 72: SPBRGH1 = 0x06;
  1886  001A2A  0E06               	movlw	6
  1887  001A2C  6EB0               	movwf	4016,c	;volatile
  1888  001A2E  0012               	return		;funcret
  1889  001A30                     __end_of_EUSART1_Initialize:
  1890                           	opt stack 0
  1891                           tblptru	equ	0xFF8
  1892                           prodh	equ	0xFF4
  1893                           prodl	equ	0xFF3
  1894                           intcon2	equ	0xFF1
  1895                           postinc0	equ	0xFEE
  1896                           wreg	equ	0xFE8
  1897                           postinc1	equ	0xFE6
  1898                           fsr1h	equ	0xFE2
  1899                           fsr1l	equ	0xFE1
  1900                           indf2	equ	0xFDF
  1901                           postinc2	equ	0xFDE
  1902                           fsr2h	equ	0xFDA
  1903                           fsr2l	equ	0xFD9
  1904                           status	equ	0xFD8
  1905                           
  1906 ;; *************** function _EUSART1_Write *****************
  1907 ;; Defined at:
  1908 ;;		line 91 in file "mcc_generated_files/eusart1.c"
  1909 ;; Parameters:    Size  Location     Type
  1910 ;;  txData          1    wreg     unsigned char 
  1911 ;; Auto vars:     Size  Location     Type
  1912 ;;  txData          1    0[COMRAM] unsigned char 
  1913 ;; Return value:  Size  Location     Type
  1914 ;;		None               void
  1915 ;; Registers used:
  1916 ;;		wreg
  1917 ;; Tracked objects:
  1918 ;;		On entry : 0/0
  1919 ;;		On exit  : 0/0
  1920 ;;		Unchanged: 0/0
  1921 ;; Data sizes:     COMRAM   BANK0   BANK1
  1922 ;;      Params:         0       0       0
  1923 ;;      Locals:         1       0       0
  1924 ;;      Temps:          0       0       0
  1925 ;;      Totals:         1       0       0
  1926 ;;Total ram usage:        1 bytes
  1927 ;; Hardware stack levels used:    1
  1928 ;; This function calls:
  1929 ;;		Nothing
  1930 ;; This function is called by:
  1931 ;;		_main
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           	psect	text9
  1936  0019CC                     __ptext9:
  1937                           	opt stack 0
  1938  0019CC                     _EUSART1_Write:
  1939                           	opt stack 30
  1940                           
  1941                           ;incstack = 0
  1942                           ;EUSART1_Write@txData stored from wreg
  1943  0019CC  6E28               	movwf	EUSART1_Write@txData,c
  1944  0019CE                     l78:
  1945  0019CE  A2AC               	btfss	4012,1,c	;volatile
  1946  0019D0  D7FE               	goto	l78
  1947                           
  1948                           ;eusart1.c: 95: }
  1949                           ;eusart1.c: 97: TXREG1 = txData;
  1950  0019D2  C028  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  1951  0019D6  0012               	return		;funcret
  1952  0019D8                     __end_of_EUSART1_Write:
  1953                           	opt stack 0
  1954                           tblptru	equ	0xFF8
  1955                           prodh	equ	0xFF4
  1956                           prodl	equ	0xFF3
  1957                           intcon2	equ	0xFF1
  1958                           postinc0	equ	0xFEE
  1959                           wreg	equ	0xFE8
  1960                           postinc1	equ	0xFE6
  1961                           fsr1h	equ	0xFE2
  1962                           fsr1l	equ	0xFE1
  1963                           indf2	equ	0xFDF
  1964                           postinc2	equ	0xFDE
  1965                           fsr2h	equ	0xFDA
  1966                           fsr2l	equ	0xFD9
  1967                           status	equ	0xFD8
  1968                           
  1969 ;; *************** function _DATAEE_WriteByte *****************
  1970 ;; Defined at:
  1971 ;;		line 154 in file "mcc_generated_files/memory.c"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;  bAdd            1    wreg     unsigned char 
  1974 ;;  bData           1    0[COMRAM] unsigned char 
  1975 ;; Auto vars:     Size  Location     Type
  1976 ;;  bAdd            1    1[COMRAM] unsigned char 
  1977 ;;  GIEBitValue     1    2[COMRAM] unsigned char 
  1978 ;; Return value:  Size  Location     Type
  1979 ;;		None               void
  1980 ;; Registers used:
  1981 ;;		wreg, status,2
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMRAM   BANK0   BANK1
  1987 ;;      Params:         1       0       0
  1988 ;;      Locals:         2       0       0
  1989 ;;      Temps:          0       0       0
  1990 ;;      Totals:         3       0       0
  1991 ;;Total ram usage:        3 bytes
  1992 ;; Hardware stack levels used:    1
  1993 ;; This function calls:
  1994 ;;		Nothing
  1995 ;; This function is called by:
  1996 ;;		_main
  1997 ;; This function uses a non-reentrant model
  1998 ;;
  1999                           
  2000                           	psect	text10
  2001  001A76                     __ptext10:
  2002                           	opt stack 0
  2003  001A76                     _DATAEE_WriteByte:
  2004                           	opt stack 30
  2005                           
  2006                           ;incstack = 0
  2007                           ;DATAEE_WriteByte@bAdd stored from wreg
  2008  001A76  6E29               	movwf	DATAEE_WriteByte@bAdd,c
  2009                           
  2010                           ;memory.c: 155: uint8_t GIEBitValue = INTCONbits.GIE;
  2011  001A78  0E00               	movlw	0
  2012  001A7A  BEF2               	btfsc	intcon,7,c	;volatile
  2013  001A7C  0E01               	movlw	1
  2014  001A7E  6E2A               	movwf	DATAEE_WriteByte@GIEBitValue,c
  2015                           
  2016                           ;memory.c: 157: EEADR = (bAdd & 0xFF);
  2017  001A80  C029  FFA9         	movff	DATAEE_WriteByte@bAdd,4009	;volatile
  2018                           
  2019                           ;memory.c: 158: EEDATA = bData;
  2020  001A84  C028  FFA8         	movff	DATAEE_WriteByte@bData,4008	;volatile
  2021                           
  2022                           ;memory.c: 159: EECON1bits.EEPGD = 0;
  2023  001A88  9EA6               	bcf	4006,7,c	;volatile
  2024                           
  2025                           ;memory.c: 160: EECON1bits.CFGS = 0;
  2026  001A8A  9CA6               	bcf	4006,6,c	;volatile
  2027                           
  2028                           ;memory.c: 161: EECON1bits.WREN = 1;
  2029  001A8C  84A6               	bsf	4006,2,c	;volatile
  2030                           
  2031                           ;memory.c: 162: INTCONbits.GIE = 0;
  2032  001A8E  9EF2               	bcf	intcon,7,c	;volatile
  2033                           
  2034                           ;memory.c: 163: EECON2 = 0x55;
  2035  001A90  0E55               	movlw	85
  2036  001A92  6EA7               	movwf	4007,c	;volatile
  2037                           
  2038                           ;memory.c: 164: EECON2 = 0xAA;
  2039  001A94  0EAA               	movlw	170
  2040  001A96  6EA7               	movwf	4007,c	;volatile
  2041                           
  2042                           ;memory.c: 165: EECON1bits.WR = 1;
  2043  001A98  82A6               	bsf	4006,1,c	;volatile
  2044  001A9A                     l130:
  2045  001A9A  B2A6               	btfsc	4006,1,c	;volatile
  2046  001A9C  D7FE               	goto	l130
  2047                           
  2048                           ;memory.c: 168: }
  2049                           ;memory.c: 170: EECON1bits.WREN = 0;
  2050  001A9E  94A6               	bcf	4006,2,c	;volatile
  2051                           
  2052                           ;memory.c: 171: INTCONbits.GIE = GIEBitValue;
  2053  001AA0  B02A               	btfsc	DATAEE_WriteByte@GIEBitValue,0,c
  2054  001AA2  D002               	bra	u505
  2055  001AA4  9EF2               	bcf	intcon,7,c	;volatile
  2056  001AA6  D001               	bra	u506
  2057  001AA8                     u505:
  2058  001AA8  8EF2               	bsf	intcon,7,c	;volatile
  2059  001AAA                     u506:
  2060  001AAA  0012               	return		;funcret
  2061  001AAC                     __end_of_DATAEE_WriteByte:
  2062                           	opt stack 0
  2063                           tblptru	equ	0xFF8
  2064                           prodh	equ	0xFF4
  2065                           prodl	equ	0xFF3
  2066                           intcon	equ	0xFF2
  2067                           intcon2	equ	0xFF1
  2068                           postinc0	equ	0xFEE
  2069                           wreg	equ	0xFE8
  2070                           postinc1	equ	0xFE6
  2071                           fsr1h	equ	0xFE2
  2072                           fsr1l	equ	0xFE1
  2073                           indf2	equ	0xFDF
  2074                           postinc2	equ	0xFDE
  2075                           fsr2h	equ	0xFDA
  2076                           fsr2l	equ	0xFD9
  2077                           status	equ	0xFD8
  2078                           
  2079 ;; *************** function _DATAEE_ReadByte *****************
  2080 ;; Defined at:
  2081 ;;		line 174 in file "mcc_generated_files/memory.c"
  2082 ;; Parameters:    Size  Location     Type
  2083 ;;  bAdd            1    wreg     unsigned char 
  2084 ;; Auto vars:     Size  Location     Type
  2085 ;;  bAdd            1    0[COMRAM] unsigned char 
  2086 ;; Return value:  Size  Location     Type
  2087 ;;                  1    wreg      unsigned char 
  2088 ;; Registers used:
  2089 ;;		wreg, status,2
  2090 ;; Tracked objects:
  2091 ;;		On entry : 0/0
  2092 ;;		On exit  : 0/0
  2093 ;;		Unchanged: 0/0
  2094 ;; Data sizes:     COMRAM   BANK0   BANK1
  2095 ;;      Params:         0       0       0
  2096 ;;      Locals:         1       0       0
  2097 ;;      Temps:          0       0       0
  2098 ;;      Totals:         1       0       0
  2099 ;;Total ram usage:        1 bytes
  2100 ;; Hardware stack levels used:    1
  2101 ;; This function calls:
  2102 ;;		Nothing
  2103 ;; This function is called by:
  2104 ;;		_main
  2105 ;; This function uses a non-reentrant model
  2106 ;;
  2107                           
  2108                           	psect	text11
  2109  001A06                     __ptext11:
  2110                           	opt stack 0
  2111  001A06                     _DATAEE_ReadByte:
  2112                           	opt stack 30
  2113                           
  2114                           ;incstack = 0
  2115                           ;DATAEE_ReadByte@bAdd stored from wreg
  2116  001A06  6E28               	movwf	DATAEE_ReadByte@bAdd,c
  2117                           
  2118                           ;memory.c: 175: EEADR = (bAdd & 0xFF);
  2119  001A08  C028  FFA9         	movff	DATAEE_ReadByte@bAdd,4009	;volatile
  2120                           
  2121                           ;memory.c: 176: EECON1bits.CFGS = 0;
  2122  001A0C  9CA6               	bcf	4006,6,c	;volatile
  2123                           
  2124                           ;memory.c: 177: EECON1bits.EEPGD = 0;
  2125  001A0E  9EA6               	bcf	4006,7,c	;volatile
  2126                           
  2127                           ;memory.c: 178: EECON1bits.RD = 1;
  2128  001A10  80A6               	bsf	4006,0,c	;volatile
  2129                           
  2130                           ;memory.c: 179: __nop();
  2131  001A12  F000               	nop	
  2132                           
  2133                           ;memory.c: 180: __nop();
  2134  001A14  F000               	nop	
  2135                           
  2136                           ;memory.c: 182: return (EEDATA);
  2137  001A16  50A8               	movf	4008,w,c	;volatile
  2138  001A18  0012               	return	
  2139  001A1A                     __end_of_DATAEE_ReadByte:
  2140                           	opt stack 0
  2141  0000                     tblptru	equ	0xFF8
  2142                           prodh	equ	0xFF4
  2143                           prodl	equ	0xFF3
  2144                           intcon	equ	0xFF2
  2145                           intcon2	equ	0xFF1
  2146                           postinc0	equ	0xFEE
  2147                           wreg	equ	0xFE8
  2148                           postinc1	equ	0xFE6
  2149                           fsr1h	equ	0xFE2
  2150                           fsr1l	equ	0xFE1
  2151                           indf2	equ	0xFDF
  2152                           postinc2	equ	0xFDE
  2153                           fsr2h	equ	0xFDA
  2154                           fsr2l	equ	0xFD9
  2155                           status	equ	0xFD8
  2156                           tblptru	equ	0xFF8
  2157                           prodh	equ	0xFF4
  2158                           prodl	equ	0xFF3
  2159                           intcon	equ	0xFF2
  2160                           intcon2	equ	0xFF1
  2161                           postinc0	equ	0xFEE
  2162                           wreg	equ	0xFE8
  2163                           postinc1	equ	0xFE6
  2164                           fsr1h	equ	0xFE2
  2165                           fsr1l	equ	0xFE1
  2166                           indf2	equ	0xFDF
  2167                           postinc2	equ	0xFDE
  2168                           fsr2h	equ	0xFDA
  2169                           fsr2l	equ	0xFD9
  2170                           status	equ	0xFD8
  2171                           
  2172                           	psect	rparam
  2173  0000                     tblptru	equ	0xFF8
  2174                           prodh	equ	0xFF4
  2175                           prodl	equ	0xFF3
  2176                           intcon	equ	0xFF2
  2177                           intcon2	equ	0xFF1
  2178                           postinc0	equ	0xFEE
  2179                           wreg	equ	0xFE8
  2180                           postinc1	equ	0xFE6
  2181                           fsr1h	equ	0xFE2
  2182                           fsr1l	equ	0xFE1
  2183                           indf2	equ	0xFDF
  2184                           postinc2	equ	0xFDE
  2185                           fsr2h	equ	0xFDA
  2186                           fsr2l	equ	0xFD9
  2187                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         39
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      49
    BANK0           160      0       0
    BANK1           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_DATAEE_WriteByte
    _normaloperation->_switchstate

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0     904
                                              3 COMRAM     7     7      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                       _EUSART1_Read
                      _EUSART1_Write
                  _SYSTEM_Initialize
                          _getvalues
                    _normaloperation
                        _switchstate
 ---------------------------------------------------------------------------------
 (1) _normaloperation                                      1     1      0      30
                                              1 COMRAM     1     1      0
                        _switchstate
 ---------------------------------------------------------------------------------
 (1) _switchstate                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _getvalues                                            2     2      0      30
                                              0 COMRAM     2     2      0
                       _EUSART1_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Write                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_WriteByte                                     3     2      1     195
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _DATAEE_WriteByte
   _EUSART1_Read
   _EUSART1_Write
   _SYSTEM_Initialize
     _EUSART1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _getvalues
     _EUSART1_Read
   _normaloperation
     _switchstate
   _switchstate

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      A      31       1       51.6%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      31       6        0.0%
DATA                 0      0      31       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun May 21 12:16:46 2017

                    __CFG_CP0$ON 000000                      __CFG_CP1$ON 000000  
                             l71 19F4                               l78 19CE  
                    __CFG_CPB$ON 000000                      __CFG_CPD$ON 000000  
                    __CFG_LVP$ON 000000                              l201 1B9E  
                            l130 1A9A                              l303 1C22  
                            l320 1C38                              l218 1BB4  
                            l235 1BCA                              l252 1BE0  
                            l183 1B88                              l337 1C4E  
                            l269 1BF6                              l286 1C0C  
                            l393 1D5E                              l395 1DEA  
                            u505 1AA8                              u506 1AAA  
                            u907 1F1C                              u917 1F40  
                            u927 1F54                              u847 1CD2  
                            u937 1F7C                              u857 1CEA  
                            u947 1F92                              u867 1CFE  
                            u957 1FF6                              u877 1D14  
                            u967 1B1A                              u887 1D4C  
                            u977 1B3E                              u897 1F08  
                            u987 1B56                              u997 1B7A  
                            prod 000FF3                              wreg 000FE8  
                     _TXSTA1bits 000FAC                             l1047 1A02  
                           l1135 1B46                             l1127 1B0A  
                           l1151 1AC0                             l1153 1AC8  
                           l1161 1AE0                             l1075 1C64  
                           l1155 1AD0                             l1147 1AB0  
                           l1157 1AD8                             l1149 1AB8  
                           l1511 1D6A                             l1601 1F26  
                           l1531 1DB8                             l1515 1D72  
                           l1605 1F2A                             l1543 1DF6  
                           l1623 1F68                             l1471 1CC6  
                           l1633 1F9A                             l1609 1F2E  
                           l1537 1DE6                             l1473 1CCC  
                           l1651 1FE0                             l1619 1F5C  
                           l1563 1E44                             l1547 1DFE  
                           l1491 1D2C                             l1483 1D08  
                           l1475 1CDA                             l1629 1F86  
                           l1581 1E86                             l1573 1E76  
                           l1469 1CBA                             l1575 1E7A  
                           l1495 1D38                             l1487 1D1C  
                           l1585 1E8E                             l1569 1E72  
                           l1579 1E82                             l1499 1D40  
                           _LATA 000F89                             _LATB 000F8A  
                           _LATC 000F8B                             _WPUB 000F61  
                  _EUSART1_Write 19CC                             _main 1C9E  
                  ?_EUSART1_Read 0028                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
                           _rssi 0013                    __CFG_BORV$190 000000  
                           prodl 000FF3                             start 0000  
                  __CFG_IESO$OFF 000000                     ___param_bank 000010  
      __size_of_DATAEE_WriteByte 0036                      _switchstate 1B84  
 __size_of_OSCILLATOR_Initialize 000E    __end_of_OSCILLATOR_Initialize 19E6  
                          ?_main 0028                            _EEADR 000FA9  
                          _LATB0 007C50                            _LATB1 007C51  
                          _LATC0 007C58                            _LATB2 007C52  
                          _LATC1 007C59                            _LATB3 007C53  
                          _LATC2 007C5A                            _LATC3 007C5B  
                 __CFG_DEBUG$OFF 000000                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                  __CFG_WRT0$OFF 000000                    __CFG_WRT1$OFF 000000  
                 __CFG_EBTR0$OFF 000000                   __CFG_FCMEN$OFF 000000  
                 __CFG_EBTR1$OFF 000000                    __CFG_WRTB$OFF 000000  
                  __CFG_WRTC$OFF 000000                    __CFG_WRTD$OFF 000000  
                _DATAEE_ReadByte 1A06                   __CFG_EBTRB$OFF 000000  
                          _index 0025               __CFG_MCLRE$EXTMCLR 000000  
                          main@i 002D                            main@j 002E  
                 ?_EUSART1_Write 0028                   ??_EUSART1_Read 0028  
                          status 000FD8                   __CFG_HFOFST$ON 000000  
                __initialization 1A30       __end_of_EUSART1_Initialize 1A30  
                   __end_of_main 2000                           ??_main 002B  
                  __activetblptr 000002                   __CFG_PLLCFG$ON 000000  
                         _EEDATA 000FA8                           _EECON2 000FA7  
                         _ANSELA 000F38                           _ANSELB 000F39  
                         _ANSELC 000F3A                  _normaloperation 1AAC  
                         _RC1STA 000FAB                   __CFG_WDTEN$OFF 000000  
                         _TABLAT 000FF5                           _RCREG1 000FAE  
                         _OSCCON 000FD3                           _SPBRG1 000FAF  
                         _TX1STA 000FAC                           _TXREG1 000FAD  
                 __CFG_XINST$OFF 000000                           clear_0 1A36  
        __end_of_DATAEE_ReadByte 1A1A                           tblptru 000FF8  
                ??_EUSART1_Write 0028                _SYSTEM_Initialize 19E6  
                     __accesstop 0060          __end_of__initialization 1A3C  
                __CFG_PBADEN$OFF 000000               ?_SYSTEM_Initialize 0028  
                  ___rparam_used 000001                   __pcstackCOMRAM 0028  
            ??_SYSTEM_Initialize 0028                 _DATAEE_WriteByte 1A76  
           __end_of_EUSART1_Read 1A06          __end_of_normaloperation 1B08  
      __end_of_SYSTEM_Initialize 19F4               __size_of_getvalues 007C  
             __CFG_CCP2MX$PORTC1 000000               __CFG_CCP3MX$PORTB5 000000  
                   ?_switchstate 0028                 ?_DATAEE_ReadByte 0028  
                        _OSCCON2 000FD2                          _TBLPTRH 000FF7  
                        _TBLPTRL 000FF6                          _TBLPTRU 000FF8  
                        _OSCTUNE 000F9B                          _SPBRGH1 000FB0  
           DATAEE_WriteByte@bAdd 0029                  __CFG_PWRTEN$OFF 000000  
                        __Hparam 0000                          __Lparam 0000  
                __CFG_STVREN$OFF 000000                __end_of_getvalues 1B84  
                        __pcinit 1A30                          __ramtop 0200  
                        __ptext0 1C9E                          __ptext1 1AAC  
                        __ptext2 1B84                          __ptext3 1B08  
                        __ptext4 19F4                          __ptext5 19E6  
                        __ptext6 1A46                          __ptext7 19D8  
                        __ptext8 1A1A                          __ptext9 19CC  
          _OSCILLATOR_Initialize 19D8                 ?_normaloperation 0028  
             _EUSART1_Initialize 1A1A         ??_PIN_MANAGER_Initialize 0028  
                        _quality 0001       __size_of_SYSTEM_Initialize 000E  
                        _rssimax 0027             end_of_initialization 1A3C  
            ?_EUSART1_Initialize 0028                     switchstate@a 0028  
                  __Lmediumconst 0000                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
          __size_of_EUSART1_Read 0012             ??_EUSART1_Initialize 0028  
                     _qualitymax 0026              EUSART1_Write@txData 0028  
       __end_of_DATAEE_WriteByte 1AAC                     _EUSART1_Read 19F4  
         ?_OSCILLATOR_Initialize 0028             __size_of_switchstate 011A  
                     getvalues@b 0029              start_initialization 1A30  
__size_of_PIN_MANAGER_Initialize 0030            __end_of_EUSART1_Write 19D8  
            DATAEE_ReadByte@bAdd 0028                      __pbssCOMRAM 0001  
         _PIN_MANAGER_Initialize 1A46                 __CFG_PRICLKEN$ON 000000  
                       _BAUD1CON 000FB8                        _getvalues 1B08  
       __size_of_DATAEE_ReadByte 0014                         _PIR1bits 000F9E  
               __CFG_WDTPS$32768 000000                        main@i_570 0030  
                      main@i_571 0031                        main@i_572 002F  
                     ?_getvalues 0028                        _rssiindex 001C  
          DATAEE_WriteByte@bData 0028                      _INTCON2bits 000FF1  
              ?_DATAEE_WriteByte 0028         __size_of_normaloperation 005C  
             ??_DATAEE_WriteByte 0029                       _EECON1bits 000FA6  
                       __Hrparam 0000                         __Lrparam 0000  
             __CFG_BOREN$SBORDIS 000000                __CFG_P2BMX$PORTB5 000000  
        ??_OSCILLATOR_Initialize 0028      __size_of_EUSART1_Initialize 0016  
                       __ptext10 1A76                         __ptext11 1A06  
    DATAEE_WriteByte@GIEBitValue 002A                    __size_of_main 0362  
              ??_DATAEE_ReadByte 0028                       _RC1STAbits 000FAB  
               normaloperation@c 0029                    ??_switchstate 0028  
                    ??_getvalues 0028                       _INTCONbits 000FF2  
        ?_PIN_MANAGER_Initialize 0028                       _RCSTA1bits 000FAB  
              ??_normaloperation 0029           __size_of_EUSART1_Write 000C  
            __end_of_switchstate 1C9E                __CFG_T3CMX$PORTC0 000000  
 __end_of_PIN_MANAGER_Initialize 1A76                     _qualityindex 000A  
              __CFG_FOSC$INTIO67 000000  
