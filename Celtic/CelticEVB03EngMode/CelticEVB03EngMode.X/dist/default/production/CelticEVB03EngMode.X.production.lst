

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Wed Apr 13 17:51:56 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18LF23K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    20  0000                     
    21                           	psect	smallconst
    22  000200                     __psmallconst:
    23                           	opt stack 0
    24  000200  00                 	db	0
    25  000201                     _DATA:
    26                           	opt stack 0
    27  000201  00                 	db	0
    28  000202  80                 	db	128
    29  000203  40                 	db	64
    30  000204  C0                 	db	192
    31  000205  20                 	db	32
    32  000206  A0                 	db	160
    33  000207  60                 	db	96
    34  000208  E0                 	db	224
    35  000209  10                 	db	16
    36  00020A  90                 	db	144
    37  00020B  50                 	db	80
    38  00020C  D0                 	db	208
    39  00020D  30                 	db	48
    40  00020E  B0                 	db	176
    41  00020F  70                 	db	112
    42  000210  F0                 	db	240
    43  000211  08                 	db	8
    44  000212  88                 	db	136
    45  000213  48                 	db	72
    46  000214  C8                 	db	200
    47  000215  28                 	db	40
    48  000216  A8                 	db	168
    49  000217  68                 	db	104
    50  000218  E8                 	db	232
    51  000219  18                 	db	24
    52  00021A  98                 	db	152
    53  00021B  58                 	db	88
    54  00021C  D8                 	db	216
    55  00021D  38                 	db	56
    56  00021E  B8                 	db	184
    57  00021F  78                 	db	120
    58  000220  F8                 	db	248
    59  000221  04                 	db	4
    60  000222  84                 	db	132
    61  000223  44                 	db	68
    62  000224  C4                 	db	196
    63  000225  24                 	db	36
    64  000226  A4                 	db	164
    65  000227  64                 	db	100
    66  000228  E4                 	db	228
    67  000229  14                 	db	20
    68  00022A  94                 	db	148
    69  00022B  54                 	db	84
    70  00022C  D4                 	db	212
    71  00022D  34                 	db	52
    72  00022E  B4                 	db	180
    73  00022F  74                 	db	116
    74  000230  F4                 	db	244
    75  000231  0C                 	db	12
    76  000232  8C                 	db	140
    77  000233  4C                 	db	76
    78  000234  CC                 	db	204
    79  000235  2C                 	db	44
    80  000236  AC                 	db	172
    81  000237  6C                 	db	108
    82  000238  EC                 	db	236
    83  000239  1C                 	db	28
    84  00023A  9C                 	db	156
    85  00023B  5C                 	db	92
    86  00023C  DC                 	db	220
    87  00023D  3C                 	db	60
    88  00023E  BC                 	db	188
    89  00023F  7C                 	db	124
    90  000240  FC                 	db	252
    91  000241  06                 	db	6
    92  000242                     __end_of_DATA:
    93                           	opt stack 0
    94  000242                     _PARITY:
    95                           	opt stack 0
    96  000242  01                 	db	1
    97  000243  00                 	db	0
    98  000244  00                 	db	0
    99  000245  01                 	db	1
   100  000246  00                 	db	0
   101  000247  01                 	db	1
   102  000248  01                 	db	1
   103  000249  00                 	db	0
   104  00024A  00                 	db	0
   105  00024B  01                 	db	1
   106  00024C  01                 	db	1
   107  00024D  00                 	db	0
   108  00024E  01                 	db	1
   109  00024F  00                 	db	0
   110  000250  00                 	db	0
   111  000251  01                 	db	1
   112  000252  00                 	db	0
   113  000253  01                 	db	1
   114  000254  01                 	db	1
   115  000255  00                 	db	0
   116  000256  01                 	db	1
   117  000257  00                 	db	0
   118  000258  00                 	db	0
   119  000259  01                 	db	1
   120  00025A  01                 	db	1
   121  00025B  00                 	db	0
   122  00025C  00                 	db	0
   123  00025D  01                 	db	1
   124  00025E  00                 	db	0
   125  00025F  01                 	db	1
   126  000260  01                 	db	1
   127  000261  00                 	db	0
   128  000262  00                 	db	0
   129  000263  01                 	db	1
   130  000264  01                 	db	1
   131  000265  00                 	db	0
   132  000266  01                 	db	1
   133  000267  00                 	db	0
   134  000268  00                 	db	0
   135  000269  01                 	db	1
   136  00026A  01                 	db	1
   137  00026B  00                 	db	0
   138  00026C  00                 	db	0
   139  00026D  01                 	db	1
   140  00026E  00                 	db	0
   141  00026F  01                 	db	1
   142  000270  01                 	db	1
   143  000271  00                 	db	0
   144  000272  01                 	db	1
   145  000273  00                 	db	0
   146  000274  00                 	db	0
   147  000275  01                 	db	1
   148  000276  00                 	db	0
   149  000277  01                 	db	1
   150  000278  01                 	db	1
   151  000279  00                 	db	0
   152  00027A  00                 	db	0
   153  00027B  01                 	db	1
   154  00027C  01                 	db	1
   155  00027D  00                 	db	0
   156  00027E  01                 	db	1
   157  00027F  00                 	db	0
   158  000280  00                 	db	0
   159  000281  01                 	db	1
   160  000282  01                 	db	1
   161  000283                     __end_of_PARITY:
   162                           	opt stack 0
   163  000283                     _ACTIVEBAND:
   164                           	opt stack 0
   165  000283  00                 	db	0
   166  000284  00                 	db	0
   167  000285  00                 	db	0
   168  000286  00                 	db	0
   169  000287  00                 	db	0
   170  000288  01                 	db	1
   171  000289  00                 	db	0
   172  00028A  00                 	db	0
   173  00028B  01                 	db	1
   174  00028C  00                 	db	0
   175  00028D  00                 	db	0
   176  00028E  00                 	db	0
   177  00028F  01                 	db	1
   178  000290  01                 	db	1
   179  000291  00                 	db	0
   180  000292  00                 	db	0
   181  000293  00                 	db	0
   182  000294  00                 	db	0
   183  000295  00                 	db	0
   184  000296  00                 	db	0
   185  000297  01                 	db	1
   186  000298  00                 	db	0
   187  000299  00                 	db	0
   188  00029A  00                 	db	0
   189  00029B  00                 	db	0
   190  00029C  00                 	db	0
   191  00029D  01                 	db	1
   192  00029E  00                 	db	0
   193  00029F  00                 	db	0
   194  0002A0  01                 	db	1
   195  0002A1  00                 	db	0
   196  0002A2  00                 	db	0
   197  0002A3  00                 	db	0
   198  0002A4  00                 	db	0
   199  0002A5  00                 	db	0
   200  0002A6  00                 	db	0
   201  0002A7  00                 	db	0
   202  0002A8  00                 	db	0
   203  0002A9  00                 	db	0
   204  0002AA  00                 	db	0
   205  0002AB  00                 	db	0
   206  0002AC  00                 	db	0
   207  0002AD  00                 	db	0
   208  0002AE  00                 	db	0
   209  0002AF  00                 	db	0
   210  0002B0  00                 	db	0
   211  0002B1  00                 	db	0
   212  0002B2  00                 	db	0
   213  0002B3  00                 	db	0
   214  0002B4  00                 	db	0
   215  0002B5  00                 	db	0
   216  0002B6  00                 	db	0
   217  0002B7  00                 	db	0
   218  0002B8  00                 	db	0
   219  0002B9  00                 	db	0
   220  0002BA  00                 	db	0
   221  0002BB  00                 	db	0
   222  0002BC  00                 	db	0
   223  0002BD  00                 	db	0
   224  0002BE  00                 	db	0
   225  0002BF  00                 	db	0
   226  0002C0  00                 	db	0
   227  0002C1  00                 	db	0
   228  0002C2  00                 	db	0
   229  0002C3                     __end_of_ACTIVEBAND:
   230                           	opt stack 0
   231  0002C3                     _DacOutput:
   232                           	opt stack 0
   233  0002C3  2B                 	db	43
   234  0002C4  48                 	db	72
   235  0002C5  56                 	db	86
   236  0002C6  64                 	db	100
   237  0002C7                     __end_of_DacOutput:
   238                           	opt stack 0
   239  0002C7                     _REGADD:
   240                           	opt stack 0
   241  0002C7  07                 	db	7
   242  0002C8  10                 	db	16
   243  0002C9                     __end_of_REGADD:
   244                           	opt stack 0
   245  0002C9                     _SLAVEADD:
   246                           	opt stack 0
   247  0002C9  06                 	db	6
   248  0002CA  0E                 	db	14
   249  0002CB                     __end_of_SLAVEADD:
   250                           	opt stack 0
   251  0000                     _ANSELA	set	3896
   252  0000                     _ANSELB	set	3897
   253  0000                     _ANSELC	set	3898
   254  0000                     _DACCON1	set	3904
   255  0000                     _VREFCON1	set	3905
   256  0000                     _INTCON2bits	set	4081
   257  0000                     _INTCONbits	set	4082
   258  0000                     _IOCBbits	set	3938
   259  0000                     _LATA	set	3977
   260  0000                     _LATB	set	3978
   261  0000                     _LATC	set	3979
   262  0000                     _OSCCON	set	4051
   263  0000                     _OSCCON2	set	4050
   264  0000                     _OSCTUNE	set	3995
   265  0000                     _PORTC	set	3970
   266  0000                     _TRISA	set	3986
   267  0000                     _TRISB	set	3987
   268  0000                     _TRISC	set	3988
   269  0000                     _WPUB	set	3937
   270  0000                     _LATA0	set	31816
   271  0000                     _LATA1	set	31817
   272  0000                     _LATA3	set	31819
   273  0000                     _LATA4	set	31820
   274  0000                     _LATA5	set	31821
   275  0000                     _LATA6	set	31822
   276  0000                     _LATA7	set	31823
   277  0000                     _LATC0	set	31832
   278  0000                     _LATC1	set	31833
   279                           
   280                           ; #config settings
   281  0002CB  00                 	db	0	; dummy byte at the end
   282  0000                     
   283                           	psect	cinit
   284  000520                     __pcinit:
   285                           	opt stack 0
   286  000520                     start_initialization:
   287                           	opt stack 0
   288  000520                     __initialization:
   289                           	opt stack 0
   290                           
   291                           ; Clear objects allocated to COMRAM (8 bytes)
   292  000520  EE00  F001         	lfsr	0,__pbssCOMRAM
   293  000524  0E08               	movlw	8
   294  000526                     clear_0:
   295  000526  6AEE               	clrf	postinc0,c
   296  000528  06E8               	decf	wreg,f,c
   297  00052A  E1FD               	bnz	clear_0
   298  00052C                     end_of_initialization:
   299                           	opt stack 0
   300  00052C                     __end_of__initialization:
   301                           	opt stack 0
   302  00052C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   303  00052E  6EF8               	movwf	tblptru,c
   304  000530  0E02               	movlw	high __Lsmallconst
   305  000532  6EF7               	movwf	tblptrh,c
   306  000534  0100               	movlb	0
   307  000536  EF66  F001         	goto	_main	;jump to C main() function
   308                           tblptru	equ	0xFF8
   309                           tblptrh	equ	0xFF7
   310                           postinc0	equ	0xFEE
   311                           wreg	equ	0xFE8
   312                           
   313                           	psect	bssCOMRAM
   314  000001                     __pbssCOMRAM:
   315                           	opt stack 0
   316  000001                     _Byte1:
   317                           	opt stack 0
   318  000001                     	ds	1
   319  000002                     _Byte2:
   320                           	opt stack 0
   321  000002                     	ds	1
   322  000003                     _Byte3:
   323                           	opt stack 0
   324  000003                     	ds	1
   325  000004                     _Byte4:
   326                           	opt stack 0
   327  000004                     	ds	1
   328  000005                     _Byte5:
   329                           	opt stack 0
   330  000005                     	ds	1
   331  000006                     _Byte6:
   332                           	opt stack 0
   333  000006                     	ds	1
   334  000007                     _DAC_Step:
   335                           	opt stack 0
   336  000007                     	ds	1
   337  000008                     _Dummy:
   338                           	opt stack 0
   339  000008                     	ds	1
   340                           tblptru	equ	0xFF8
   341                           tblptrh	equ	0xFF7
   342                           postinc0	equ	0xFEE
   343                           wreg	equ	0xFE8
   344                           
   345                           	psect	cstackCOMRAM
   346  000009                     __pcstackCOMRAM:
   347                           	opt stack 0
   348  000009                     DAC_SetOutput@inputData:
   349                           	opt stack 0
   350  000009                     shiftRegister@Dummy2:
   351                           	opt stack 0
   352                           
   353                           ; 1 bytes @ 0x0
   354  000009                     	ds	1
   355  00000A                     shiftRegister@y:
   356                           	opt stack 0
   357                           
   358                           ; 1 bytes @ 0x1
   359  00000A                     	ds	1
   360  00000B                     shiftRegister@m:
   361                           	opt stack 0
   362                           
   363                           ; 1 bytes @ 0x2
   364  00000B                     	ds	1
   365  00000C                     shiftRegister@Dummy1:
   366                           	opt stack 0
   367                           
   368                           ; 1 bytes @ 0x3
   369  00000C                     	ds	1
   370  00000D                     MIPI@b:
   371                           	opt stack 0
   372                           
   373                           ; 1 bytes @ 0x4
   374  00000D                     	ds	1
   375  00000E                     MIPI@a:
   376                           	opt stack 0
   377                           
   378                           ; 1 bytes @ 0x5
   379  00000E                     	ds	1
   380  00000F                     tblptru	equ	0xFF8
   381                           tblptrh	equ	0xFF7
   382                           postinc0	equ	0xFEE
   383                           wreg	equ	0xFE8
   384                           
   385                           ; 0 bytes @ 0x6
   386 ;;
   387 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   388 ;;
   389 ;; *************** function _main *****************
   390 ;; Defined at:
   391 ;;		line 114 in file "main.c"
   392 ;; Parameters:    Size  Location     Type
   393 ;;		None
   394 ;; Auto vars:     Size  Location     Type
   395 ;;		None
   396 ;; Return value:  Size  Location     Type
   397 ;;		None               void
   398 ;; Registers used:
   399 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   400 ;; Tracked objects:
   401 ;;		On entry : 0/0
   402 ;;		On exit  : 0/0
   403 ;;		Unchanged: 0/0
   404 ;; Data sizes:     COMRAM   BANK0   BANK1
   405 ;;      Params:         0       0       0
   406 ;;      Locals:         0       0       0
   407 ;;      Temps:          0       0       0
   408 ;;      Totals:         0       0       0
   409 ;;Total ram usage:        0 bytes
   410 ;; Hardware stack levels required when called:    2
   411 ;; This function calls:
   412 ;;		_DAC_SetOutput
   413 ;;		_MIPI
   414 ;;		_SYSTEM_Initialize
   415 ;; This function is called by:
   416 ;;		Startup code after reset
   417 ;; This function uses a non-reentrant model
   418 ;;
   419                           
   420                           	psect	text0
   421  0002CC                     __ptext0:
   422                           	opt stack 0
   423  0002CC                     _main:
   424                           	opt stack 29
   425                           
   426                           ;main.c: 115: INTCONbits.RBIF = 0;
   427                           
   428                           ;incstack = 0
   429  0002CC  90F2               	bcf	intcon,0,c	;volatile
   430                           
   431                           ;main.c: 119: SYSTEM_Initialize();
   432  0002CE  EC9D  F002         	call	_SYSTEM_Initialize	;wreg free
   433                           
   434                           ;main.c: 148: DAC_SetOutput(0);
   435  0002D2  0E00               	movlw	0
   436  0002D4  ECBB  F002         	call	_DAC_SetOutput
   437  0002D8  D000               	goto	l939
   438  0002DA                     l939:
   439  0002DA  9089               	bcf	3977,0,c	;volatile
   440  0002DC  D000               	goto	l941
   441  0002DE                     l941:
   442  0002DE  9289               	bcf	3977,1,c	;volatile
   443  0002E0  D000               	goto	l943
   444  0002E2                     l943:
   445  0002E2  9C89               	bcf	3977,6,c	;volatile
   446  0002E4  D000               	goto	l945
   447  0002E6                     l945:
   448  0002E6  9E89               	bcf	3977,7,c	;volatile
   449  0002E8  D000               	goto	l947
   450  0002EA                     l947:
   451  0002EA  908B               	bcf	3979,0,c	;volatile
   452  0002EC  D000               	goto	l949
   453  0002EE                     l949:
   454  0002EE  928B               	bcf	3979,1,c	;volatile
   455                           
   456                           ;main.c: 158: while ((PORTC & 0xC0) != 0xC0) {
   457                           
   458                           ;main.c: 156: while (1) {
   459                           
   460                           ;main.c: 155: reset:
   461  0002F0  D000               	goto	l951
   462  0002F2                     l951:
   463  0002F2  5082               	movf	3970,w,c	;volatile
   464  0002F4  0BC0               	andlw	192
   465  0002F6  0AC0               	xorlw	192
   466  0002F8  A4D8               	btfss	status,2,c
   467  0002FA  D7FB               	goto	l951
   468                           
   469                           ;main.c: 159: }
   470                           ;main.c: 160: Byte1 = PORTC;
   471  0002FC  CF82 F001          	movff	3970,_Byte1	;volatile
   472                           
   473                           ;main.c: 162: while ((PORTC & 0xC0) != 0x80) {
   474  000300  D000               	goto	l953
   475  000302                     l953:
   476  000302  5082               	movf	3970,w,c	;volatile
   477  000304  0BC0               	andlw	192
   478  000306  0A80               	xorlw	128
   479  000308  A4D8               	btfss	status,2,c
   480  00030A  D7FB               	goto	l953
   481                           
   482                           ;main.c: 163: }
   483                           ;main.c: 164: Byte3 = PORTC & 0x3F;
   484  00030C  5082               	movf	3970,w,c	;volatile
   485  00030E  0B3F               	andlw	63
   486  000310  6E03               	movwf	_Byte3,c
   487                           
   488                           ;main.c: 166: while ((PORTC & 0xC0) != 0x40) {
   489  000312  D000               	goto	l957
   490  000314                     l957:
   491  000314  5082               	movf	3970,w,c	;volatile
   492  000316  0BC0               	andlw	192
   493  000318  0A40               	xorlw	64
   494  00031A  A4D8               	btfss	status,2,c
   495  00031C  D7FB               	goto	l957
   496                           
   497                           ;main.c: 167: }
   498                           ;main.c: 168: Byte4 = PORTC & 0x3F;
   499  00031E  5082               	movf	3970,w,c	;volatile
   500  000320  0B3F               	andlw	63
   501  000322  6E04               	movwf	_Byte4,c
   502                           
   503                           ;main.c: 170: while ((PORTC & 0x80) != 0x80) {
   504  000324  D000               	goto	l165
   505  000326                     l165:
   506  000326  AE82               	btfss	3970,7,c	;volatile
   507  000328  D7FE               	goto	l165
   508                           
   509                           ;main.c: 171: }
   510                           ;main.c: 172: Byte5 = PORTC & 0x7F;
   511  00032A  5082               	movf	3970,w,c	;volatile
   512  00032C  0B7F               	andlw	127
   513  00032E  6E05               	movwf	_Byte5,c
   514                           
   515                           ;main.c: 174: while ((PORTC & 0x80) != 0x00) {
   516  000330  D000               	goto	l168
   517  000332                     l168:
   518  000332  BE82               	btfsc	3970,7,c	;volatile
   519  000334  D7FE               	goto	l168
   520                           
   521                           ;main.c: 175: }
   522                           ;main.c: 176: Byte6 = PORTC & 0x7F;
   523  000336  5082               	movf	3970,w,c	;volatile
   524  000338  0B7F               	andlw	127
   525  00033A  6E06               	movwf	_Byte6,c
   526                           
   527                           ;main.c: 179: DAC_Step = ((Byte4 << 4) & 0xC0);
   528  00033C  3804               	swapf	_Byte4,w,c
   529  00033E  0BF0               	andlw	240
   530  000340  0BC0               	andlw	192
   531  000342  6E07               	movwf	_DAC_Step,c
   532                           
   533                           ;main.c: 180: DAC_Step = (DAC_Step | Byte3);
   534  000344  5007               	movf	_DAC_Step,w,c
   535  000346  1003               	iorwf	_Byte3,w,c
   536  000348  6E07               	movwf	_DAC_Step,c
   537                           
   538                           ;main.c: 181: DAC_SetOutput(DAC_Step);
   539  00034A  5007               	movf	_DAC_Step,w,c
   540  00034C  ECBB  F002         	call	_DAC_SetOutput
   541                           
   542                           ;main.c: 184: if ((Byte4 & 0x02) == 0x02)
   543  000350  A204               	btfss	_Byte4,1,c
   544  000352  D002               	goto	l175
   545                           
   546                           ;main.c: 185: do { LATA0 = 1; } while(0);
   547  000354  8089               	bsf	3977,0,c	;volatile
   548  000356  D002               	goto	l174
   549  000358                     l175:
   550  000358  9089               	bcf	3977,0,c	;volatile
   551  00035A  D000               	goto	l174
   552  00035C                     l174:
   553                           
   554                           ;main.c: 188: if ((Byte4 & 0x01) == 0x01)
   555  00035C  A004               	btfss	_Byte4,0,c
   556  00035E  D002               	goto	l181
   557                           
   558                           ;main.c: 189: do { LATA1 = 1; } while(0);
   559  000360  8289               	bsf	3977,1,c	;volatile
   560  000362  D002               	goto	l969
   561  000364                     l181:
   562  000364  9289               	bcf	3977,1,c	;volatile
   563  000366  D000               	goto	l969
   564  000368                     l969:
   565                           
   566                           ;main.c: 194: MIPI(Byte5, Byte6);
   567  000368  C006  F00D         	movff	_Byte6,MIPI@b
   568  00036C  5005               	movf	_Byte5,w,c
   569  00036E  EC01  F002         	call	_MIPI
   570                           
   571                           ;main.c: 198: Dummy = Byte1 & 0x38;
   572  000372  5001               	movf	_Byte1,w,c
   573  000374  0B38               	andlw	56
   574  000376  6E08               	movwf	_Dummy,c
   575                           
   576                           ;main.c: 199: if (Dummy == 0x00) {
   577  000378  5008               	movf	_Dummy,w,c
   578  00037A  A4D8               	btfss	status,2,c
   579  00037C  D004               	goto	l975
   580                           
   581                           ;main.c: 200: do { LATA6 = 0; } while(0);
   582  00037E  9C89               	bcf	3977,6,c	;volatile
   583  000380  D008               	goto	l192
   584                           
   585                           ;main.c: 201: do { LATA7 = 0; } while(0);
   586  000382  D007               	goto	l192
   587                           
   588                           ;main.c: 202: } else if (Dummy == 0x20) {
   589  000384  D018               	goto	l981
   590  000386                     l975:
   591  000386  0E20               	movlw	32
   592  000388  1808               	xorwf	_Dummy,w,c
   593  00038A  A4D8               	btfss	status,2,c
   594  00038C  D004               	goto	l977
   595                           
   596                           ;main.c: 203: do { LATA6 = 1; } while(0);
   597  00038E  8C89               	bsf	3977,6,c	;volatile
   598  000390  D000               	goto	l192
   599  000392                     l192:
   600  000392  9E89               	bcf	3977,7,c	;volatile
   601                           
   602                           ;main.c: 205: } else if (Dummy == 0x10) {
   603  000394  D010               	goto	l981
   604  000396                     l977:
   605  000396  0E10               	movlw	16
   606  000398  1808               	xorwf	_Dummy,w,c
   607  00039A  A4D8               	btfss	status,2,c
   608  00039C  D004               	goto	l979
   609                           
   610                           ;main.c: 206: do { LATA6 = 0; } while(0);
   611  00039E  9C89               	bcf	3977,6,c	;volatile
   612  0003A0  D008               	goto	l204
   613                           
   614                           ;main.c: 207: do { LATA7 = 1; } while(0);
   615  0003A2  D007               	goto	l204
   616                           
   617                           ;main.c: 208: } else if (Dummy == 0x30) {
   618  0003A4  D008               	goto	l981
   619  0003A6                     l979:
   620  0003A6  0E30               	movlw	48
   621  0003A8  1808               	xorwf	_Dummy,w,c
   622  0003AA  A4D8               	btfss	status,2,c
   623  0003AC  D004               	goto	l981
   624                           
   625                           ;main.c: 209: do { LATA6 = 1; } while(0);
   626  0003AE  8C89               	bsf	3977,6,c	;volatile
   627  0003B0  D000               	goto	l204
   628  0003B2                     l204:
   629  0003B2  8E89               	bsf	3977,7,c	;volatile
   630  0003B4  D000               	goto	l981
   631  0003B6                     l981:
   632                           
   633                           ;main.c: 211: }
   634                           ;main.c: 213: Dummy = Byte1 & 0x07;
   635  0003B6  5001               	movf	_Byte1,w,c
   636  0003B8  0B07               	andlw	7
   637  0003BA  6E08               	movwf	_Dummy,c
   638                           
   639                           ;main.c: 214: if (Dummy == 0x00) {
   640  0003BC  5008               	movf	_Dummy,w,c
   641  0003BE  A4D8               	btfss	status,2,c
   642  0003C0  D004               	goto	l985
   643                           
   644                           ;main.c: 215: do { LATC0 = 0; } while(0);
   645  0003C2  908B               	bcf	3979,0,c	;volatile
   646  0003C4  D008               	goto	l215
   647                           
   648                           ;main.c: 216: do { LATC1 = 0; } while(0);
   649  0003C6  D007               	goto	l215
   650                           
   651                           ;main.c: 217: } else if (Dummy == 0x04) {
   652  0003C8  D018               	goto	l211
   653  0003CA                     l985:
   654  0003CA  0E04               	movlw	4
   655  0003CC  1808               	xorwf	_Dummy,w,c
   656  0003CE  A4D8               	btfss	status,2,c
   657  0003D0  D004               	goto	l987
   658                           
   659                           ;main.c: 218: do { LATC0 = 1; } while(0);
   660  0003D2  808B               	bsf	3979,0,c	;volatile
   661  0003D4  D000               	goto	l215
   662  0003D6                     l215:
   663  0003D6  928B               	bcf	3979,1,c	;volatile
   664                           
   665                           ;main.c: 220: } else if (Dummy == 0x02) {
   666  0003D8  D010               	goto	l211
   667  0003DA                     l987:
   668  0003DA  0E02               	movlw	2
   669  0003DC  1808               	xorwf	_Dummy,w,c
   670  0003DE  A4D8               	btfss	status,2,c
   671  0003E0  D004               	goto	l989
   672                           
   673                           ;main.c: 221: do { LATC0 = 0; } while(0);
   674  0003E2  908B               	bcf	3979,0,c	;volatile
   675  0003E4  D008               	goto	l227
   676                           
   677                           ;main.c: 222: do { LATC1 = 1; } while(0);
   678  0003E6  D007               	goto	l227
   679                           
   680                           ;main.c: 223: } else if (Dummy == 0x06) {
   681  0003E8  D008               	goto	l211
   682  0003EA                     l989:
   683  0003EA  0E06               	movlw	6
   684  0003EC  1808               	xorwf	_Dummy,w,c
   685  0003EE  A4D8               	btfss	status,2,c
   686  0003F0  D004               	goto	l211
   687                           
   688                           ;main.c: 224: do { LATC0 = 1; } while(0);
   689  0003F2  808B               	bsf	3979,0,c	;volatile
   690  0003F4  D000               	goto	l227
   691  0003F6                     l227:
   692  0003F6  828B               	bsf	3979,1,c	;volatile
   693  0003F8  D000               	goto	l211
   694  0003FA                     l211:
   695  0003FA  0003               	sleep		;# 
   696  0003FC  D77A               	goto	l951
   697  0003FE  EF00  F000         	goto	start
   698  000402                     __end_of_main:
   699                           	opt stack 0
   700                           tblptru	equ	0xFF8
   701                           tblptrh	equ	0xFF7
   702                           intcon	equ	0xFF2
   703                           postinc0	equ	0xFEE
   704                           wreg	equ	0xFE8
   705                           status	equ	0xFD8
   706                           
   707 ;; *************** function _SYSTEM_Initialize *****************
   708 ;; Defined at:
   709 ;;		line 106 in file "mcc_generated_files/mcc.c"
   710 ;; Parameters:    Size  Location     Type
   711 ;;		None
   712 ;; Auto vars:     Size  Location     Type
   713 ;;		None
   714 ;; Return value:  Size  Location     Type
   715 ;;		None               void
   716 ;; Registers used:
   717 ;;		wreg, status,2, cstack
   718 ;; Tracked objects:
   719 ;;		On entry : 0/0
   720 ;;		On exit  : 0/0
   721 ;;		Unchanged: 0/0
   722 ;; Data sizes:     COMRAM   BANK0   BANK1
   723 ;;      Params:         0       0       0
   724 ;;      Locals:         0       0       0
   725 ;;      Temps:          0       0       0
   726 ;;      Totals:         0       0       0
   727 ;;Total ram usage:        0 bytes
   728 ;; Hardware stack levels used:    1
   729 ;; Hardware stack levels required when called:    1
   730 ;; This function calls:
   731 ;;		_DAC_Initialize
   732 ;;		_INTERRUPT_ON_CHANGE_Initialize
   733 ;;		_OSCILLATOR_Initialize
   734 ;;		_PIN_MANAGER_Initialize
   735 ;; This function is called by:
   736 ;;		_main
   737 ;; This function uses a non-reentrant model
   738 ;;
   739                           
   740                           	psect	text1
   741  00053A                     __ptext1:
   742                           	opt stack 0
   743  00053A                     _SYSTEM_Initialize:
   744                           	opt stack 29
   745                           
   746                           ;mcc.c: 107: OSCILLATOR_Initialize();
   747                           
   748                           ;incstack = 0
   749  00053A  ECA6  F002         	call	_OSCILLATOR_Initialize	;wreg free
   750                           
   751                           ;mcc.c: 108: PIN_MANAGER_Initialize();
   752  00053E  EC78  F002         	call	_PIN_MANAGER_Initialize	;wreg free
   753                           
   754                           ;mcc.c: 109: DAC_Initialize();
   755  000542  ECB4  F002         	call	_DAC_Initialize	;wreg free
   756                           
   757                           ;mcc.c: 110: INTERRUPT_ON_CHANGE_Initialize();
   758  000546  ECAD  F002         	call	_INTERRUPT_ON_CHANGE_Initialize	;wreg free
   759  00054A  0012               	return		;funcret
   760  00054C                     __end_of_SYSTEM_Initialize:
   761                           	opt stack 0
   762                           tblptru	equ	0xFF8
   763                           tblptrh	equ	0xFF7
   764                           intcon	equ	0xFF2
   765                           postinc0	equ	0xFEE
   766                           wreg	equ	0xFE8
   767                           status	equ	0xFD8
   768                           
   769 ;; *************** function _PIN_MANAGER_Initialize *****************
   770 ;; Defined at:
   771 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;		None
   774 ;; Auto vars:     Size  Location     Type
   775 ;;		None
   776 ;; Return value:  Size  Location     Type
   777 ;;		None               void
   778 ;; Registers used:
   779 ;;		wreg, status,2
   780 ;; Tracked objects:
   781 ;;		On entry : 0/0
   782 ;;		On exit  : 0/0
   783 ;;		Unchanged: 0/0
   784 ;; Data sizes:     COMRAM   BANK0   BANK1
   785 ;;      Params:         0       0       0
   786 ;;      Locals:         0       0       0
   787 ;;      Temps:          0       0       0
   788 ;;      Totals:         0       0       0
   789 ;;Total ram usage:        0 bytes
   790 ;; Hardware stack levels used:    1
   791 ;; This function calls:
   792 ;;		Nothing
   793 ;; This function is called by:
   794 ;;		_SYSTEM_Initialize
   795 ;; This function uses a non-reentrant model
   796 ;;
   797                           
   798                           	psect	text2
   799  0004F0                     __ptext2:
   800                           	opt stack 0
   801  0004F0                     _PIN_MANAGER_Initialize:
   802                           	opt stack 29
   803                           
   804                           ;pin_manager.c: 51: LATA = 0x00;
   805                           
   806                           ;incstack = 0
   807  0004F0  0E00               	movlw	0
   808  0004F2  6E89               	movwf	3977,c	;volatile
   809                           
   810                           ;pin_manager.c: 52: TRISA = 0x00;
   811  0004F4  0E00               	movlw	0
   812  0004F6  6E92               	movwf	3986,c	;volatile
   813                           
   814                           ;pin_manager.c: 53: ANSELA = 0x04;
   815  0004F8  0E04               	movlw	4
   816  0004FA  010F               	movlb	15	; () banked
   817  0004FC  6F38               	movwf	56,b	;volatile
   818                           
   819                           ;pin_manager.c: 55: LATB = 0x00;
   820  0004FE  0E00               	movlw	0
   821  000500  6E8A               	movwf	3978,c	;volatile
   822                           
   823                           ; BSR set to: 15
   824                           ;pin_manager.c: 56: TRISB = 0xFF;
   825  000502  6893               	setf	3987,c	;volatile
   826                           
   827                           ;pin_manager.c: 57: ANSELB = 0x00;
   828  000504  0E00               	movlw	0
   829  000506  010F               	movlb	15	; () banked
   830  000508  6F39               	movwf	57,b	;volatile
   831                           
   832                           ;pin_manager.c: 58: WPUB = 0x00;
   833  00050A  0E00               	movlw	0
   834  00050C  6E61               	movwf	3937,c	;volatile
   835                           
   836                           ;pin_manager.c: 60: LATC = 0x00;
   837  00050E  0E00               	movlw	0
   838  000510  6E8B               	movwf	3979,c	;volatile
   839                           
   840                           ;pin_manager.c: 61: TRISC = 0xFC;
   841  000512  0EFC               	movlw	252
   842  000514  6E94               	movwf	3988,c	;volatile
   843                           
   844                           ;pin_manager.c: 62: ANSELC = 0xFC;
   845  000516  0EFC               	movlw	252
   846  000518  010F               	movlb	15	; () banked
   847  00051A  6F3A               	movwf	58,b	;volatile
   848                           
   849                           ; BSR set to: 15
   850                           ;pin_manager.c: 64: INTCON2bits.nRBPU = 0x01;
   851  00051C  8EF1               	bsf	intcon2,7,c	;volatile
   852                           
   853                           ; BSR set to: 15
   854  00051E  0012               	return		;funcret
   855  000520                     __end_of_PIN_MANAGER_Initialize:
   856                           	opt stack 0
   857                           tblptru	equ	0xFF8
   858                           tblptrh	equ	0xFF7
   859                           intcon	equ	0xFF2
   860                           intcon2	equ	0xFF1
   861                           postinc0	equ	0xFEE
   862                           wreg	equ	0xFE8
   863                           status	equ	0xFD8
   864                           
   865 ;; *************** function _OSCILLATOR_Initialize *****************
   866 ;; Defined at:
   867 ;;		line 113 in file "mcc_generated_files/mcc.c"
   868 ;; Parameters:    Size  Location     Type
   869 ;;		None
   870 ;; Auto vars:     Size  Location     Type
   871 ;;		None
   872 ;; Return value:  Size  Location     Type
   873 ;;		None               void
   874 ;; Registers used:
   875 ;;		wreg, status,2
   876 ;; Tracked objects:
   877 ;;		On entry : 0/0
   878 ;;		On exit  : 0/0
   879 ;;		Unchanged: 0/0
   880 ;; Data sizes:     COMRAM   BANK0   BANK1
   881 ;;      Params:         0       0       0
   882 ;;      Locals:         0       0       0
   883 ;;      Temps:          0       0       0
   884 ;;      Totals:         0       0       0
   885 ;;Total ram usage:        0 bytes
   886 ;; Hardware stack levels used:    1
   887 ;; This function calls:
   888 ;;		Nothing
   889 ;; This function is called by:
   890 ;;		_SYSTEM_Initialize
   891 ;; This function uses a non-reentrant model
   892 ;;
   893                           
   894                           	psect	text3
   895  00054C                     __ptext3:
   896                           	opt stack 0
   897  00054C                     _OSCILLATOR_Initialize:
   898                           	opt stack 29
   899                           
   900                           ;mcc.c: 115: OSCCON = 0x70;
   901                           
   902                           ; BSR set to: 15
   903                           ;incstack = 0
   904  00054C  0E70               	movlw	112
   905  00054E  6ED3               	movwf	4051,c	;volatile
   906                           
   907                           ;mcc.c: 117: OSCCON2 = 0x04;
   908  000550  0E04               	movlw	4
   909  000552  6ED2               	movwf	4050,c	;volatile
   910                           
   911                           ;mcc.c: 119: OSCTUNE = 0x40;
   912  000554  0E40               	movlw	64
   913  000556  6E9B               	movwf	3995,c	;volatile
   914  000558  0012               	return		;funcret
   915  00055A                     __end_of_OSCILLATOR_Initialize:
   916                           	opt stack 0
   917                           tblptru	equ	0xFF8
   918                           tblptrh	equ	0xFF7
   919                           intcon	equ	0xFF2
   920                           intcon2	equ	0xFF1
   921                           postinc0	equ	0xFEE
   922                           wreg	equ	0xFE8
   923                           status	equ	0xFD8
   924                           
   925 ;; *************** function _INTERRUPT_ON_CHANGE_Initialize *****************
   926 ;; Defined at:
   927 ;;		line 124 in file "mcc_generated_files/mcc.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;		None
   930 ;; Auto vars:     Size  Location     Type
   931 ;;		None
   932 ;; Return value:  Size  Location     Type
   933 ;;		None               void
   934 ;; Registers used:
   935 ;;		None
   936 ;; Tracked objects:
   937 ;;		On entry : 0/0
   938 ;;		On exit  : 0/0
   939 ;;		Unchanged: 0/0
   940 ;; Data sizes:     COMRAM   BANK0   BANK1
   941 ;;      Params:         0       0       0
   942 ;;      Locals:         0       0       0
   943 ;;      Temps:          0       0       0
   944 ;;      Totals:         0       0       0
   945 ;;Total ram usage:        0 bytes
   946 ;; Hardware stack levels used:    1
   947 ;; This function calls:
   948 ;;		Nothing
   949 ;; This function is called by:
   950 ;;		_SYSTEM_Initialize
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954                           	psect	text4
   955  00055A                     __ptext4:
   956                           	opt stack 0
   957  00055A                     _INTERRUPT_ON_CHANGE_Initialize:
   958                           	opt stack 29
   959                           
   960                           ;mcc.c: 126: INTCONbits.GIE = 1;
   961                           
   962                           ;incstack = 0
   963  00055A  8EF2               	bsf	intcon,7,c	;volatile
   964                           
   965                           ;mcc.c: 127: INTCONbits.PEIE = 1;
   966  00055C  8CF2               	bsf	intcon,6,c	;volatile
   967                           
   968                           ;mcc.c: 128: INTCONbits.RBIE = 1;
   969  00055E  86F2               	bsf	intcon,3,c	;volatile
   970                           
   971                           ;mcc.c: 129: INTCONbits.RBIF = 0;
   972  000560  90F2               	bcf	intcon,0,c	;volatile
   973                           
   974                           ;mcc.c: 130: INTCON2bits.RBIP = 1;
   975  000562  80F1               	bsf	intcon2,0,c	;volatile
   976                           
   977                           ;mcc.c: 131: IOCBbits.IOCB7 = 1;
   978  000564  8E62               	bsf	3938,7,c	;volatile
   979  000566  0012               	return		;funcret
   980  000568                     __end_of_INTERRUPT_ON_CHANGE_Initialize:
   981                           	opt stack 0
   982                           tblptru	equ	0xFF8
   983                           tblptrh	equ	0xFF7
   984                           intcon	equ	0xFF2
   985                           intcon2	equ	0xFF1
   986                           postinc0	equ	0xFEE
   987                           wreg	equ	0xFE8
   988                           status	equ	0xFD8
   989                           
   990 ;; *************** function _DAC_Initialize *****************
   991 ;; Defined at:
   992 ;;		line 57 in file "mcc_generated_files/dac.c"
   993 ;; Parameters:    Size  Location     Type
   994 ;;		None
   995 ;; Auto vars:     Size  Location     Type
   996 ;;		None
   997 ;; Return value:  Size  Location     Type
   998 ;;		None               void
   999 ;; Registers used:
  1000 ;;		wreg, status,2
  1001 ;; Tracked objects:
  1002 ;;		On entry : 0/0
  1003 ;;		On exit  : 0/0
  1004 ;;		Unchanged: 0/0
  1005 ;; Data sizes:     COMRAM   BANK0   BANK1
  1006 ;;      Params:         0       0       0
  1007 ;;      Locals:         0       0       0
  1008 ;;      Temps:          0       0       0
  1009 ;;      Totals:         0       0       0
  1010 ;;Total ram usage:        0 bytes
  1011 ;; Hardware stack levels used:    1
  1012 ;; This function calls:
  1013 ;;		Nothing
  1014 ;; This function is called by:
  1015 ;;		_SYSTEM_Initialize
  1016 ;; This function uses a non-reentrant model
  1017 ;;
  1018                           
  1019                           	psect	text5
  1020  000568                     __ptext5:
  1021                           	opt stack 0
  1022  000568                     _DAC_Initialize:
  1023                           	opt stack 29
  1024                           
  1025                           ;dac.c: 59: VREFCON1 = 0xA0;
  1026                           
  1027                           ;incstack = 0
  1028  000568  0EA0               	movlw	160
  1029  00056A  010F               	movlb	15	; () banked
  1030  00056C  6F41               	movwf	65,b	;volatile
  1031                           
  1032                           ;dac.c: 61: DACCON1 = 0x00;
  1033  00056E  0E00               	movlw	0
  1034  000570  010F               	movlb	15	; () banked
  1035  000572  6F40               	movwf	64,b	;volatile
  1036                           
  1037                           ; BSR set to: 15
  1038  000574  0012               	return		;funcret
  1039  000576                     __end_of_DAC_Initialize:
  1040                           	opt stack 0
  1041                           tblptru	equ	0xFF8
  1042                           tblptrh	equ	0xFF7
  1043                           intcon	equ	0xFF2
  1044                           intcon2	equ	0xFF1
  1045                           postinc0	equ	0xFEE
  1046                           wreg	equ	0xFE8
  1047                           status	equ	0xFD8
  1048                           
  1049 ;; *************** function _MIPI *****************
  1050 ;; Defined at:
  1051 ;;		line 95 in file "main.c"
  1052 ;; Parameters:    Size  Location     Type
  1053 ;;  a               1    wreg     unsigned char 
  1054 ;;  b               1    4[COMRAM] unsigned char 
  1055 ;; Auto vars:     Size  Location     Type
  1056 ;;  a               1    5[COMRAM] unsigned char 
  1057 ;; Return value:  Size  Location     Type
  1058 ;;		None               void
  1059 ;; Registers used:
  1060 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1061 ;; Tracked objects:
  1062 ;;		On entry : 0/0
  1063 ;;		On exit  : 0/0
  1064 ;;		Unchanged: 0/0
  1065 ;; Data sizes:     COMRAM   BANK0   BANK1
  1066 ;;      Params:         1       0       0
  1067 ;;      Locals:         1       0       0
  1068 ;;      Temps:          0       0       0
  1069 ;;      Totals:         2       0       0
  1070 ;;Total ram usage:        2 bytes
  1071 ;; Hardware stack levels used:    1
  1072 ;; Hardware stack levels required when called:    1
  1073 ;; This function calls:
  1074 ;;		_shiftRegister
  1075 ;; This function is called by:
  1076 ;;		_main
  1077 ;; This function uses a non-reentrant model
  1078 ;;
  1079                           
  1080                           	psect	text6
  1081  000402                     __ptext6:
  1082                           	opt stack 0
  1083  000402                     _MIPI:
  1084                           	opt stack 29
  1085                           
  1086                           ; BSR set to: 15
  1087                           ;incstack = 0
  1088                           ;MIPI@a stored from wreg
  1089  000402  6E0E               	movwf	MIPI@a,c
  1090                           
  1091                           ;main.c: 96: do { LATA3 = 1; } while(0);
  1092  000404  8689               	bsf	3977,3,c	;volatile
  1093  000406  D000               	goto	l133
  1094  000408                     l133:
  1095  000408  8889               	bsf	3977,4,c	;volatile
  1096  00040A  D000               	goto	l135
  1097  00040C                     l135:
  1098  00040C  9689               	bcf	3977,3,c	;volatile
  1099  00040E  D000               	goto	l137
  1100  000410                     l137:
  1101  000410  9889               	bcf	3977,4,c	;volatile
  1102  000412  D000               	goto	l923
  1103  000414                     l923:
  1104                           
  1105                           ;main.c: 104: shiftRegister (SLAVEADD[0],SLAVEADD[0],4);
  1106  000414  0EC9               	movlw	low _SLAVEADD
  1107  000416  6EF6               	movwf	tblptrl,c
  1108  000418                     	if	0	;There is only one active tblptr byte
  1109  000418                     	endif
  1110  000418                     	if	0	;There are less than 3 active tblptr bytes
  1111  000418                     	endif
  1112  000418  0008               	tblrd		*
  1113  00041A  CFF5 F009          	movff	tablat,shiftRegister@Dummy2
  1114  00041E  0E04               	movlw	4
  1115  000420  6E0A               	movwf	shiftRegister@y,c
  1116  000422  0EC9               	movlw	low _SLAVEADD
  1117  000424  6EF6               	movwf	tblptrl,c
  1118  000426                     	if	0	;There is only one active tblptr byte
  1119  000426                     	endif
  1120  000426                     	if	0	;There are less than 3 active tblptr bytes
  1121  000426                     	endif
  1122  000426  0008               	tblrd		*
  1123  000428  50F5               	movf	tablat,w,c
  1124  00042A  EC58  F002         	call	_shiftRegister
  1125                           
  1126                           ;main.c: 105: shiftRegister (0x82,0x82,8);
  1127  00042E  0E82               	movlw	130
  1128  000430  6E09               	movwf	shiftRegister@Dummy2,c
  1129  000432  0E08               	movlw	8
  1130  000434  6E0A               	movwf	shiftRegister@y,c
  1131  000436  0E82               	movlw	130
  1132  000438  EC58  F002         	call	_shiftRegister
  1133                           
  1134                           ;main.c: 106: shiftRegister (0x01,0x01,1);
  1135  00043C  0E01               	movlw	1
  1136  00043E  6E09               	movwf	shiftRegister@Dummy2,c
  1137  000440  0E01               	movlw	1
  1138  000442  6E0A               	movwf	shiftRegister@y,c
  1139  000444  0E01               	movlw	1
  1140  000446  EC58  F002         	call	_shiftRegister
  1141                           
  1142                           ;main.c: 107: shiftRegister (DATA[a],DATA[b],8);
  1143  00044A  500D               	movf	MIPI@b,w,c
  1144  00044C  0D01               	mullw	1
  1145  00044E  0E01               	movlw	low _DATA
  1146  000450  24F3               	addwf	prodl,w,c
  1147  000452  6EF6               	movwf	tblptrl,c
  1148  000454  0E02               	movlw	high _DATA
  1149  000456  20F4               	addwfc	prodh,w,c
  1150  000458  6EF7               	movwf	tblptrh,c
  1151  00045A                     	if	0	;There are less than 3 active tblptr bytes
  1152  00045A                     	endif
  1153  00045A  0008               	tblrd		*
  1154  00045C  CFF5 F009          	movff	tablat,shiftRegister@Dummy2
  1155  000460  0E08               	movlw	8
  1156  000462  6E0A               	movwf	shiftRegister@y,c
  1157  000464  500E               	movf	MIPI@a,w,c
  1158  000466  0D01               	mullw	1
  1159  000468  0E01               	movlw	low _DATA
  1160  00046A  24F3               	addwf	prodl,w,c
  1161  00046C  6EF6               	movwf	tblptrl,c
  1162  00046E  0E02               	movlw	high _DATA
  1163  000470  20F4               	addwfc	prodh,w,c
  1164  000472  6EF7               	movwf	tblptrh,c
  1165  000474                     	if	0	;There are less than 3 active tblptr bytes
  1166  000474                     	endif
  1167  000474  0008               	tblrd		*
  1168  000476  50F5               	movf	tablat,w,c
  1169  000478  EC58  F002         	call	_shiftRegister
  1170                           
  1171                           ;main.c: 108: shiftRegister (PARITY[a],PARITY[b],2);
  1172  00047C  500D               	movf	MIPI@b,w,c
  1173  00047E  0D01               	mullw	1
  1174  000480  0E42               	movlw	low _PARITY
  1175  000482  24F3               	addwf	prodl,w,c
  1176  000484  6EF6               	movwf	tblptrl,c
  1177  000486  0E02               	movlw	high _PARITY
  1178  000488  20F4               	addwfc	prodh,w,c
  1179  00048A  6EF7               	movwf	tblptrh,c
  1180  00048C                     	if	0	;There are less than 3 active tblptr bytes
  1181  00048C                     	endif
  1182  00048C  0008               	tblrd		*
  1183  00048E  CFF5 F009          	movff	tablat,shiftRegister@Dummy2
  1184  000492  0E02               	movlw	2
  1185  000494  6E0A               	movwf	shiftRegister@y,c
  1186  000496  500E               	movf	MIPI@a,w,c
  1187  000498  0D01               	mullw	1
  1188  00049A  0E42               	movlw	low _PARITY
  1189  00049C  24F3               	addwf	prodl,w,c
  1190  00049E  6EF6               	movwf	tblptrl,c
  1191  0004A0  0E02               	movlw	high _PARITY
  1192  0004A2  20F4               	addwfc	prodh,w,c
  1193  0004A4  6EF7               	movwf	tblptrh,c
  1194  0004A6                     	if	0	;There are less than 3 active tblptr bytes
  1195  0004A6                     	endif
  1196  0004A6  0008               	tblrd		*
  1197  0004A8  50F5               	movf	tablat,w,c
  1198  0004AA  EC58  F002         	call	_shiftRegister
  1199  0004AE  0012               	return		;funcret
  1200  0004B0                     __end_of_MIPI:
  1201                           	opt stack 0
  1202                           tblptru	equ	0xFF8
  1203                           tblptrh	equ	0xFF7
  1204                           tblptrl	equ	0xFF6
  1205                           tablat	equ	0xFF5
  1206                           prodh	equ	0xFF4
  1207                           prodl	equ	0xFF3
  1208                           intcon	equ	0xFF2
  1209                           intcon2	equ	0xFF1
  1210                           postinc0	equ	0xFEE
  1211                           wreg	equ	0xFE8
  1212                           status	equ	0xFD8
  1213                           
  1214 ;; *************** function _shiftRegister *****************
  1215 ;; Defined at:
  1216 ;;		line 80 in file "main.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;  Dummy1          1    wreg     unsigned char 
  1219 ;;  Dummy2          1    0[COMRAM] unsigned char 
  1220 ;;  y               1    1[COMRAM] unsigned char 
  1221 ;; Auto vars:     Size  Location     Type
  1222 ;;  Dummy1          1    3[COMRAM] unsigned char 
  1223 ;;  m               1    2[COMRAM] unsigned char 
  1224 ;; Return value:  Size  Location     Type
  1225 ;;		None               void
  1226 ;; Registers used:
  1227 ;;		wreg, status,2, status,0
  1228 ;; Tracked objects:
  1229 ;;		On entry : 0/0
  1230 ;;		On exit  : 0/0
  1231 ;;		Unchanged: 0/0
  1232 ;; Data sizes:     COMRAM   BANK0   BANK1
  1233 ;;      Params:         2       0       0
  1234 ;;      Locals:         2       0       0
  1235 ;;      Temps:          0       0       0
  1236 ;;      Totals:         4       0       0
  1237 ;;Total ram usage:        4 bytes
  1238 ;; Hardware stack levels used:    1
  1239 ;; This function calls:
  1240 ;;		Nothing
  1241 ;; This function is called by:
  1242 ;;		_MIPI
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246                           	psect	text7
  1247  0004B0                     __ptext7:
  1248                           	opt stack 0
  1249  0004B0                     _shiftRegister:
  1250                           	opt stack 29
  1251                           
  1252                           ;incstack = 0
  1253                           ;shiftRegister@Dummy1 stored from wreg
  1254  0004B0  6E0C               	movwf	shiftRegister@Dummy1,c
  1255                           
  1256                           ;main.c: 81: for (uint8_t m=0; m<y; m++){
  1257  0004B2  0E00               	movlw	0
  1258  0004B4  6E0B               	movwf	shiftRegister@m,c
  1259  0004B6  D017               	goto	l921
  1260  0004B8                     l123:
  1261  0004B8  8A89               	bsf	3977,5,c	;volatile
  1262  0004BA  D000               	goto	l913
  1263  0004BC                     l913:
  1264                           
  1265                           ;main.c: 83: LATA3 = Dummy1 & 0x01;
  1266  0004BC  B00C               	btfsc	shiftRegister@Dummy1,0,c
  1267  0004BE  D002               	bra	u195
  1268  0004C0  9689               	bcf	3977,3,c	;volatile
  1269  0004C2  D001               	bra	u196
  1270  0004C4                     u195:
  1271  0004C4  8689               	bsf	3977,3,c	;volatile
  1272  0004C6                     u196:
  1273                           
  1274                           ;main.c: 84: LATA4 = Dummy2 & 0x01;
  1275  0004C6  B009               	btfsc	shiftRegister@Dummy2,0,c
  1276  0004C8  D002               	bra	u205
  1277  0004CA  9889               	bcf	3977,4,c	;volatile
  1278  0004CC  D001               	bra	u206
  1279  0004CE                     u205:
  1280  0004CE  8889               	bsf	3977,4,c	;volatile
  1281  0004D0                     u206:
  1282  0004D0  D000               	goto	l917
  1283  0004D2                     l917:
  1284  0004D2  9A89               	bcf	3977,5,c	;volatile
  1285  0004D4  D000               	goto	l919
  1286  0004D6                     l919:
  1287                           
  1288                           ;main.c: 88: Dummy1 = Dummy1 >> 1;
  1289  0004D6  90D8               	bcf	status,0,c
  1290  0004D8  300C               	rrcf	shiftRegister@Dummy1,w,c
  1291  0004DA  6E0C               	movwf	shiftRegister@Dummy1,c
  1292                           
  1293                           ;main.c: 89: Dummy2 = Dummy2 >> 1;
  1294  0004DC  90D8               	bcf	status,0,c
  1295  0004DE  3009               	rrcf	shiftRegister@Dummy2,w,c
  1296  0004E0  6E09               	movwf	shiftRegister@Dummy2,c
  1297  0004E2  2A0B               	incf	shiftRegister@m,f,c
  1298  0004E4  D000               	goto	l921
  1299  0004E6                     l921:
  1300  0004E6  500A               	movf	shiftRegister@y,w,c
  1301  0004E8  5C0B               	subwf	shiftRegister@m,w,c
  1302  0004EA  A0D8               	btfss	status,0,c
  1303  0004EC  D7E5               	goto	l123
  1304  0004EE  0012               	return		;funcret
  1305  0004F0                     __end_of_shiftRegister:
  1306                           	opt stack 0
  1307                           tblptru	equ	0xFF8
  1308                           tblptrh	equ	0xFF7
  1309                           tblptrl	equ	0xFF6
  1310                           tablat	equ	0xFF5
  1311                           prodh	equ	0xFF4
  1312                           prodl	equ	0xFF3
  1313                           intcon	equ	0xFF2
  1314                           intcon2	equ	0xFF1
  1315                           postinc0	equ	0xFEE
  1316                           wreg	equ	0xFE8
  1317                           status	equ	0xFD8
  1318                           
  1319 ;; *************** function _DAC_SetOutput *****************
  1320 ;; Defined at:
  1321 ;;		line 64 in file "mcc_generated_files/dac.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;  inputData       1    wreg     unsigned char 
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;  inputData       1    0[COMRAM] unsigned char 
  1326 ;; Return value:  Size  Location     Type
  1327 ;;		None               void
  1328 ;; Registers used:
  1329 ;;		wreg
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMRAM   BANK0   BANK1
  1335 ;;      Params:         0       0       0
  1336 ;;      Locals:         1       0       0
  1337 ;;      Temps:          0       0       0
  1338 ;;      Totals:         1       0       0
  1339 ;;Total ram usage:        1 bytes
  1340 ;; Hardware stack levels used:    1
  1341 ;; This function calls:
  1342 ;;		Nothing
  1343 ;; This function is called by:
  1344 ;;		_main
  1345 ;; This function uses a non-reentrant model
  1346 ;;
  1347                           
  1348                           	psect	text8
  1349  000576                     __ptext8:
  1350                           	opt stack 0
  1351  000576                     _DAC_SetOutput:
  1352                           	opt stack 30
  1353                           
  1354                           ;incstack = 0
  1355                           ;DAC_SetOutput@inputData stored from wreg
  1356  000576  6E09               	movwf	DAC_SetOutput@inputData,c
  1357                           
  1358                           ;dac.c: 65: DACCON1 = inputData;
  1359  000578  C009  FF40         	movff	DAC_SetOutput@inputData,3904	;volatile
  1360  00057C  0012               	return		;funcret
  1361  00057E                     __end_of_DAC_SetOutput:
  1362                           	opt stack 0
  1363                           tblptru	equ	0xFF8
  1364                           tblptrh	equ	0xFF7
  1365                           tblptrl	equ	0xFF6
  1366                           tablat	equ	0xFF5
  1367                           prodh	equ	0xFF4
  1368                           prodl	equ	0xFF3
  1369                           intcon	equ	0xFF2
  1370                           intcon2	equ	0xFF1
  1371                           postinc0	equ	0xFEE
  1372                           wreg	equ	0xFE8
  1373                           status	equ	0xFD8
  1374                           tblptru	equ	0xFF8
  1375                           tblptrh	equ	0xFF7
  1376                           tblptrl	equ	0xFF6
  1377                           tablat	equ	0xFF5
  1378                           prodh	equ	0xFF4
  1379                           prodl	equ	0xFF3
  1380                           intcon	equ	0xFF2
  1381                           intcon2	equ	0xFF1
  1382                           postinc0	equ	0xFEE
  1383                           wreg	equ	0xFE8
  1384                           status	equ	0xFD8
  1385                           
  1386                           	psect	rparam
  1387  0000                     tblptru	equ	0xFF8
  1388                           tblptrh	equ	0xFF7
  1389                           tblptrl	equ	0xFF6
  1390                           tablat	equ	0xFF5
  1391                           prodh	equ	0xFF4
  1392                           prodl	equ	0xFF3
  1393                           intcon	equ	0xFF2
  1394                           intcon2	equ	0xFF1
  1395                           postinc0	equ	0xFEE
  1396                           wreg	equ	0xFE8
  1397                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    202
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      6      14
    BANK0           160      0       0
    BANK1           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_MIPI
    _MIPI->_shiftRegister

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     712
                      _DAC_SetOutput
                               _MIPI
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _DAC_Initialize
     _INTERRUPT_ON_CHANGE_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_ON_CHANGE_Initialize                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DAC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MIPI                                                 2     1      1     697
                                              4 COMRAM     2     1      1
                      _shiftRegister
 ---------------------------------------------------------------------------------
 (2) _shiftRegister                                        4     2      2     566
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _DAC_SetOutput                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DAC_SetOutput
   _MIPI
     _shiftRegister
   _SYSTEM_Initialize
     _DAC_Initialize
     _INTERRUPT_ON_CHANGE_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      6       E       1       14.7%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       E       6        0.0%
DATA                 0      0       E       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed Apr 13 17:51:56 2016

                            __CFG_CP0$ON 000000                              __CFG_CP1$ON 000000  
                            __CFG_CPB$ON 000000                              __CFG_CPD$ON 000000  
                            __CFG_LVP$ON 000000                                      l123 04B8  
                                    l211 03FA                                      l204 03B2  
                                    l133 0408                                      l135 040C  
                                    l215 03D6                                      l137 0410  
                                    l227 03F6                                      l181 0364  
                                    l165 0326                                      l174 035C  
                                    l175 0358                                      l192 0392  
                                    l168 0332                                      l913 04BC  
                                    l921 04E6                                      l923 0414  
                                    l917 04D2                                      l941 02DE  
                                    l919 04D6                                      l951 02F2  
                                    l943 02E2                                      l953 0302  
                                    l945 02E6                                      l947 02EA  
                                    l939 02DA                                      l981 03B6  
                                    l957 0314                                      l949 02EE  
                                    l975 0386                                      l985 03CA  
                                    l977 0396                                      l969 0368  
                                    l987 03DA                                      l979 03A6  
                                    l989 03EA                                      u205 04CE  
                                    u206 04D0                                      u195 04C4  
                                    u196 04C6                                      wreg 000FE8  
                                   _DATA 0201                                     _LATA 000F89  
                                   _LATB 000F8A                                     _LATC 000F8B  
                                   _MIPI 0402                                     _WPUB 000F61  
                                   _main 02CC                            __CFG_BORV$190 000000  
                                   prodh 000FF4                                     prodl 000FF3  
                                   start 0000                            __CFG_IESO$OFF 000000  
                           ___param_bank 000010                                    ?_MIPI 000D  
                                  MIPI@a 000E                                    MIPI@b 000D  
         __size_of_OSCILLATOR_Initialize 000E            __end_of_OSCILLATOR_Initialize 055A  
                                  ?_main 0009                                    _LATA0 007C48  
                                  _LATA1 007C49                                    _LATA3 007C4B  
                                  _LATC0 007C58                                    _LATA4 007C4C  
                                  _LATC1 007C59                                    _LATA5 007C4D  
                                  _LATA6 007C4E                                    _LATA7 007C4F  
                         __CFG_DEBUG$OFF 000000                                    _PORTC 000F82  
                                  _TRISA 000F92                                    _TRISB 000F93  
                                  _TRISC 000F94                         __end_of_SLAVEADD 02CB  
                          __CFG_WRT0$OFF 000000                            __CFG_WRT1$OFF 000000  
                                  _Byte1 0001                                    _Byte2 0002  
                                  _Byte3 0003                                    _Byte4 0004  
                                  _Byte5 0005                                    _Byte6 0006  
                                  _Dummy 0008                           __CFG_EBTR0$OFF 000000  
                         __CFG_FCMEN$OFF 000000                           __CFG_EBTR1$OFF 000000  
                          __CFG_WRTB$OFF 000000                            __CFG_WRTC$OFF 000000  
                          __CFG_WRTD$OFF 000000                           __CFG_EBTRB$OFF 000000  
                     __CFG_MCLRE$EXTMCLR 000000                           __CFG_BOREN$OFF 000000  
                                  tablat 000FF5                                    status 000FD8  
                         __CFG_HFOFST$ON 000000                             __end_of_DATA 0242  
                           __end_of_MIPI 04B0                         ??_DAC_Initialize 0009  
                        __initialization 0520                             __end_of_main 0402  
                                 ??_MIPI 000E                                   ??_main 000F  
                          __activetblptr 000001                           __CFG_PLLCFG$ON 000000  
                                 _ANSELA 000F38                                   _ANSELB 000F39  
                                 _ANSELC 000F3A                           __CFG_WDTEN$OFF 000000  
                                 _REGADD 02C7                                   _PARITY 0242  
                                 _OSCCON 000FD3                           __CFG_XINST$OFF 000000  
                                 clear_0 0526                       __end_of_ACTIVEBAND 02C3  
                      __end_of_DacOutput 02C7                    __end_of_shiftRegister 04F0  
                           __mediumconst 0000                                   tblptrh 000FF7  
                                 tblptrl 000FF6                                   tblptru 000FF8  
                      _SYSTEM_Initialize 053A                               __accesstop 0060  
                __end_of__initialization 052C                          __CFG_PBADEN$OFF 000000  
                     ?_SYSTEM_Initialize 0009                            ___rparam_used 000001  
                 DAC_SetOutput@inputData 0009                           __pcstackCOMRAM 0009  
                    ??_SYSTEM_Initialize 0009                   __size_of_DAC_SetOutput 0008  
              __end_of_SYSTEM_Initialize 054C                           shiftRegister@m 000B  
                         shiftRegister@y 000A                       __CFG_CCP2MX$PORTC1 000000  
                     __CFG_CCP3MX$PORTB5 000000                                  _DACCON1 000F40  
                                _OSCCON2 000FD2                                  _OSCTUNE 000F9B  
                        __CFG_PWRTEN$OFF 000000                      shiftRegister@Dummy1 000C  
                    shiftRegister@Dummy2 0009                                  __Hparam 0000  
                                __Lparam 0000                            _DAC_SetOutput 0576  
                           __psmallconst 0200   __end_of_INTERRUPT_ON_CHANGE_Initialize 0568  
__size_of_INTERRUPT_ON_CHANGE_Initialize 000E           _INTERRUPT_ON_CHANGE_Initialize 055A  
                        __CFG_STVREN$OFF 000000                                  __pcinit 0520  
                                __ramtop 0200                                  __ptext0 02CC  
                                __ptext1 053A                                  __ptext2 04F0  
                                __ptext3 054C                                  __ptext4 055A  
                                __ptext5 0568                                  __ptext6 0402  
                                __ptext7 04B0                                  __ptext8 0576  
                  _OSCILLATOR_Initialize 054C                 ??_PIN_MANAGER_Initialize 0009  
             __size_of_SYSTEM_Initialize 0012                     end_of_initialization 052C  
                         ?_DAC_SetOutput 0009                                  postinc0 000FEE  
                              _DacOutput 02C3                           __end_of_REGADD 02C9  
                         __end_of_PARITY 0283                   ?_OSCILLATOR_Initialize 0009  
                __size_of_DAC_Initialize 000E                      start_initialization 0520  
        __size_of_PIN_MANAGER_Initialize 0030                          ??_DAC_SetOutput 0009  
                 __size_of_shiftRegister 0040                              __pbssCOMRAM 0001  
                 _PIN_MANAGER_Initialize 04F0                         __CFG_PRICLKEN$ON 000000  
                            __smallconst 0200                            _shiftRegister 04B0  
                               _DAC_Step 0007         ??_INTERRUPT_ON_CHANGE_Initialize 0009  
        ?_INTERRUPT_ON_CHANGE_Initialize 0009                                 _IOCBbits 000F62  
                               _SLAVEADD 02C9                         __CFG_WDTPS$32768 000000  
                               _VREFCON1 000F41                           _DAC_Initialize 0568  
                         ?_shiftRegister 0009                              _INTCON2bits 000FF1  
                             _ACTIVEBAND 0283                                 __Hrparam 0000  
                               __Lrparam 0000                             __Lsmallconst 0200  
                      __CFG_P2BMX$PORTB5 000000                  ??_OSCILLATOR_Initialize 0009  
                 __end_of_DAC_Initialize 0576                            __size_of_MIPI 00AE  
                          __size_of_main 0136                          ?_DAC_Initialize 0009  
                        ??_shiftRegister 000B                               _INTCONbits 000FF2  
                ?_PIN_MANAGER_Initialize 0009                    __end_of_DAC_SetOutput 057E  
                      __CFG_T3CMX$PORTC0 000000           __end_of_PIN_MANAGER_Initialize 0520  
                      __CFG_FOSC$INTIO67 000000  
