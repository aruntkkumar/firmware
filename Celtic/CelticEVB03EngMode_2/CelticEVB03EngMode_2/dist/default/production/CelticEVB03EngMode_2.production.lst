

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri May 06 15:56:51 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18LF23K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    22  0000                     
    23                           	psect	mediumconst
    24  001EB0                     __pmediumconst:
    25                           	opt stack 0
    26  001EB0  00                 	db	0
    27  001EB1                     _ADDRESSDATA:
    28                           	opt stack 0
    29  001EB1  18                 	db	24
    30  001EB2  18                 	db	24
    31  001EB3  18                 	db	24
    32  001EB4  18                 	db	24
    33  001EB5  18                 	db	24
    34  001EB6  18                 	db	24
    35  001EB7  18                 	db	24
    36  001EB8  18                 	db	24
    37  001EB9  18                 	db	24
    38  001EBA  18                 	db	24
    39  001EBB  18                 	db	24
    40  001EBC  18                 	db	24
    41  001EBD  18                 	db	24
    42  001EBE  18                 	db	24
    43  001EBF  18                 	db	24
    44  001EC0  18                 	db	24
    45  001EC1  18                 	db	24
    46  001EC2  18                 	db	24
    47  001EC3  18                 	db	24
    48  001EC4  18                 	db	24
    49  001EC5  18                 	db	24
    50  001EC6  18                 	db	24
    51  001EC7  18                 	db	24
    52  001EC8  18                 	db	24
    53  001EC9  18                 	db	24
    54  001ECA  18                 	db	24
    55  001ECB  18                 	db	24
    56  001ECC  18                 	db	24
    57  001ECD  18                 	db	24
    58  001ECE  18                 	db	24
    59  001ECF  18                 	db	24
    60  001ED0  18                 	db	24
    61  001ED1  19                 	db	25
    62  001ED2  19                 	db	25
    63  001ED3  19                 	db	25
    64  001ED4  19                 	db	25
    65  001ED5  19                 	db	25
    66  001ED6  19                 	db	25
    67  001ED7  19                 	db	25
    68  001ED8  19                 	db	25
    69  001ED9  19                 	db	25
    70  001EDA  19                 	db	25
    71  001EDB  19                 	db	25
    72  001EDC  19                 	db	25
    73  001EDD  19                 	db	25
    74  001EDE  19                 	db	25
    75  001EDF  19                 	db	25
    76  001EE0  19                 	db	25
    77  001EE1  19                 	db	25
    78  001EE2  19                 	db	25
    79  001EE3  19                 	db	25
    80  001EE4  19                 	db	25
    81  001EE5  19                 	db	25
    82  001EE6  19                 	db	25
    83  001EE7  19                 	db	25
    84  001EE8  19                 	db	25
    85  001EE9  19                 	db	25
    86  001EEA  19                 	db	25
    87  001EEB  19                 	db	25
    88  001EEC  19                 	db	25
    89  001EED  19                 	db	25
    90  001EEE  19                 	db	25
    91  001EEF  19                 	db	25
    92  001EF0  19                 	db	25
    93  001EF1  1A                 	db	26
    94  001EF2                     __end_of_ADDRESSDATA:
    95                           	opt stack 0
    96  001EF2                     _DATA:
    97                           	opt stack 0
    98  001EF2  00                 	db	0
    99  001EF3  80                 	db	128
   100  001EF4  40                 	db	64
   101  001EF5  C0                 	db	192
   102  001EF6  20                 	db	32
   103  001EF7  A0                 	db	160
   104  001EF8  60                 	db	96
   105  001EF9  E0                 	db	224
   106  001EFA  10                 	db	16
   107  001EFB  90                 	db	144
   108  001EFC  50                 	db	80
   109  001EFD  D0                 	db	208
   110  001EFE  30                 	db	48
   111  001EFF  B0                 	db	176
   112  001F00  70                 	db	112
   113  001F01  F0                 	db	240
   114  001F02  08                 	db	8
   115  001F03  88                 	db	136
   116  001F04  48                 	db	72
   117  001F05  C8                 	db	200
   118  001F06  28                 	db	40
   119  001F07  A8                 	db	168
   120  001F08  68                 	db	104
   121  001F09  E8                 	db	232
   122  001F0A  18                 	db	24
   123  001F0B  98                 	db	152
   124  001F0C  58                 	db	88
   125  001F0D  D8                 	db	216
   126  001F0E  38                 	db	56
   127  001F0F  B8                 	db	184
   128  001F10  78                 	db	120
   129  001F11  F8                 	db	248
   130  001F12  04                 	db	4
   131  001F13  84                 	db	132
   132  001F14  44                 	db	68
   133  001F15  C4                 	db	196
   134  001F16  24                 	db	36
   135  001F17  A4                 	db	164
   136  001F18  64                 	db	100
   137  001F19  E4                 	db	228
   138  001F1A  14                 	db	20
   139  001F1B  94                 	db	148
   140  001F1C  54                 	db	84
   141  001F1D  D4                 	db	212
   142  001F1E  34                 	db	52
   143  001F1F  B4                 	db	180
   144  001F20  74                 	db	116
   145  001F21  F4                 	db	244
   146  001F22  0C                 	db	12
   147  001F23  8C                 	db	140
   148  001F24  4C                 	db	76
   149  001F25  CC                 	db	204
   150  001F26  2C                 	db	44
   151  001F27  AC                 	db	172
   152  001F28  6C                 	db	108
   153  001F29  EC                 	db	236
   154  001F2A  1C                 	db	28
   155  001F2B  9C                 	db	156
   156  001F2C  5C                 	db	92
   157  001F2D  DC                 	db	220
   158  001F2E  3C                 	db	60
   159  001F2F  BC                 	db	188
   160  001F30  7C                 	db	124
   161  001F31  FC                 	db	252
   162  001F32  06                 	db	6
   163  001F33                     __end_of_DATA:
   164                           	opt stack 0
   165  001F33                     _DATABUSPARK:
   166                           	opt stack 0
   167  001F33  04                 	db	4
   168  001F34  08                 	db	8
   169  001F35  10                 	db	16
   170  001F36  1C                 	db	28
   171  001F37  20                 	db	32
   172  001F38  2C                 	db	44
   173  001F39  34                 	db	52
   174  001F3A  38                 	db	56
   175  001F3B  40                 	db	64
   176  001F3C  4C                 	db	76
   177  001F3D  54                 	db	84
   178  001F3E  58                 	db	88
   179  001F3F  64                 	db	100
   180  001F40  68                 	db	104
   181  001F41  70                 	db	112
   182  001F42  7C                 	db	124
   183  001F43  80                 	db	128
   184  001F44  8C                 	db	140
   185  001F45  94                 	db	148
   186  001F46  98                 	db	152
   187  001F47  A4                 	db	164
   188  001F48  A8                 	db	168
   189  001F49  B0                 	db	176
   190  001F4A  BC                 	db	188
   191  001F4B  C4                 	db	196
   192  001F4C  C8                 	db	200
   193  001F4D  D0                 	db	208
   194  001F4E  DC                 	db	220
   195  001F4F  E0                 	db	224
   196  001F50  EC                 	db	236
   197  001F51  F4                 	db	244
   198  001F52  F8                 	db	248
   199  001F53  00                 	db	0
   200  001F54  0C                 	db	12
   201  001F55  14                 	db	20
   202  001F56  18                 	db	24
   203  001F57  24                 	db	36
   204  001F58  28                 	db	40
   205  001F59  30                 	db	48
   206  001F5A  3C                 	db	60
   207  001F5B  44                 	db	68
   208  001F5C  48                 	db	72
   209  001F5D  50                 	db	80
   210  001F5E  5C                 	db	92
   211  001F5F  60                 	db	96
   212  001F60  6C                 	db	108
   213  001F61  74                 	db	116
   214  001F62  78                 	db	120
   215  001F63  84                 	db	132
   216  001F64  88                 	db	136
   217  001F65  90                 	db	144
   218  001F66  9C                 	db	156
   219  001F67  A0                 	db	160
   220  001F68  AC                 	db	172
   221  001F69  B4                 	db	180
   222  001F6A  B8                 	db	184
   223  001F6B  C0                 	db	192
   224  001F6C  CC                 	db	204
   225  001F6D  D4                 	db	212
   226  001F6E  D8                 	db	216
   227  001F6F  E4                 	db	228
   228  001F70  E8                 	db	232
   229  001F71  F0                 	db	240
   230  001F72  FC                 	db	252
   231  001F73  04                 	db	4
   232  001F74                     __end_of_DATABUSPARK:
   233                           	opt stack 0
   234  001F74                     _PARITY:
   235                           	opt stack 0
   236  001F74  01                 	db	1
   237  001F75  00                 	db	0
   238  001F76  00                 	db	0
   239  001F77  01                 	db	1
   240  001F78  00                 	db	0
   241  001F79  01                 	db	1
   242  001F7A  01                 	db	1
   243  001F7B  00                 	db	0
   244  001F7C  00                 	db	0
   245  001F7D  01                 	db	1
   246  001F7E  01                 	db	1
   247  001F7F  00                 	db	0
   248  001F80  01                 	db	1
   249  001F81  00                 	db	0
   250  001F82  00                 	db	0
   251  001F83  01                 	db	1
   252  001F84  00                 	db	0
   253  001F85  01                 	db	1
   254  001F86  01                 	db	1
   255  001F87  00                 	db	0
   256  001F88  01                 	db	1
   257  001F89  00                 	db	0
   258  001F8A  00                 	db	0
   259  001F8B  01                 	db	1
   260  001F8C  01                 	db	1
   261  001F8D  00                 	db	0
   262  001F8E  00                 	db	0
   263  001F8F  01                 	db	1
   264  001F90  00                 	db	0
   265  001F91  01                 	db	1
   266  001F92  01                 	db	1
   267  001F93  00                 	db	0
   268  001F94  00                 	db	0
   269  001F95  01                 	db	1
   270  001F96  01                 	db	1
   271  001F97  00                 	db	0
   272  001F98  01                 	db	1
   273  001F99  00                 	db	0
   274  001F9A  00                 	db	0
   275  001F9B  01                 	db	1
   276  001F9C  01                 	db	1
   277  001F9D  00                 	db	0
   278  001F9E  00                 	db	0
   279  001F9F  01                 	db	1
   280  001FA0  00                 	db	0
   281  001FA1  01                 	db	1
   282  001FA2  01                 	db	1
   283  001FA3  00                 	db	0
   284  001FA4  01                 	db	1
   285  001FA5  00                 	db	0
   286  001FA6  00                 	db	0
   287  001FA7  01                 	db	1
   288  001FA8  00                 	db	0
   289  001FA9  01                 	db	1
   290  001FAA  01                 	db	1
   291  001FAB  00                 	db	0
   292  001FAC  00                 	db	0
   293  001FAD  01                 	db	1
   294  001FAE  01                 	db	1
   295  001FAF  00                 	db	0
   296  001FB0  01                 	db	1
   297  001FB1  00                 	db	0
   298  001FB2  00                 	db	0
   299  001FB3  01                 	db	1
   300  001FB4  01                 	db	1
   301  001FB5                     __end_of_PARITY:
   302                           	opt stack 0
   303  001FB5                     _ACTIVEBAND:
   304                           	opt stack 0
   305  001FB5  00                 	db	0
   306  001FB6  00                 	db	0
   307  001FB7  00                 	db	0
   308  001FB8  00                 	db	0
   309  001FB9  00                 	db	0
   310  001FBA  01                 	db	1
   311  001FBB  00                 	db	0
   312  001FBC  00                 	db	0
   313  001FBD  01                 	db	1
   314  001FBE  00                 	db	0
   315  001FBF  00                 	db	0
   316  001FC0  00                 	db	0
   317  001FC1  01                 	db	1
   318  001FC2  01                 	db	1
   319  001FC3  00                 	db	0
   320  001FC4  00                 	db	0
   321  001FC5  00                 	db	0
   322  001FC6  00                 	db	0
   323  001FC7  00                 	db	0
   324  001FC8  00                 	db	0
   325  001FC9  01                 	db	1
   326  001FCA  00                 	db	0
   327  001FCB  00                 	db	0
   328  001FCC  00                 	db	0
   329  001FCD  00                 	db	0
   330  001FCE  00                 	db	0
   331  001FCF  01                 	db	1
   332  001FD0  00                 	db	0
   333  001FD1  00                 	db	0
   334  001FD2  01                 	db	1
   335  001FD3  00                 	db	0
   336  001FD4  00                 	db	0
   337  001FD5  00                 	db	0
   338  001FD6  00                 	db	0
   339  001FD7  00                 	db	0
   340  001FD8  00                 	db	0
   341  001FD9  00                 	db	0
   342  001FDA  00                 	db	0
   343  001FDB  00                 	db	0
   344  001FDC  00                 	db	0
   345  001FDD  00                 	db	0
   346  001FDE  00                 	db	0
   347  001FDF  00                 	db	0
   348  001FE0  00                 	db	0
   349  001FE1  00                 	db	0
   350  001FE2  00                 	db	0
   351  001FE3  00                 	db	0
   352  001FE4  00                 	db	0
   353  001FE5  00                 	db	0
   354  001FE6  00                 	db	0
   355  001FE7  00                 	db	0
   356  001FE8  00                 	db	0
   357  001FE9  00                 	db	0
   358  001FEA  00                 	db	0
   359  001FEB  00                 	db	0
   360  001FEC  00                 	db	0
   361  001FED  00                 	db	0
   362  001FEE  00                 	db	0
   363  001FEF  00                 	db	0
   364  001FF0  00                 	db	0
   365  001FF1  00                 	db	0
   366  001FF2  00                 	db	0
   367  001FF3  00                 	db	0
   368  001FF4  00                 	db	0
   369  001FF5                     __end_of_ACTIVEBAND:
   370                           	opt stack 0
   371  001FF5                     _DacOutput:
   372                           	opt stack 0
   373  001FF5  2B                 	db	43
   374  001FF6  48                 	db	72
   375  001FF7  56                 	db	86
   376  001FF8  64                 	db	100
   377  001FF9                     __end_of_DacOutput:
   378                           	opt stack 0
   379  001FF9                     _REGADD:
   380                           	opt stack 0
   381  001FF9  07                 	db	7
   382  001FFA  10                 	db	16
   383  001FFB                     __end_of_REGADD:
   384                           	opt stack 0
   385  001FFB                     _SLAVEADD:
   386                           	opt stack 0
   387  001FFB  06                 	db	6
   388  001FFC  0E                 	db	14
   389  001FFD                     __end_of_SLAVEADD:
   390                           	opt stack 0
   391  001FFD                     _SLAVEWRITEADD:
   392                           	opt stack 0
   393  001FFD  64                 	db	100
   394  001FFE  74                 	db	116
   395  001FFF                     __end_of_SLAVEWRITEADD:
   396                           	opt stack 0
   397  0000                     _ANSELA	set	3896
   398  0000                     _ANSELB	set	3897
   399  0000                     _ANSELC	set	3898
   400  0000                     _DACCON1	set	3904
   401  0000                     _VREFCON1	set	3905
   402  0000                     _INTCON2bits	set	4081
   403  0000                     _INTCONbits	set	4082
   404  0000                     _IOCB	set	3938
   405  0000                     _LATA	set	3977
   406  0000                     _LATB	set	3978
   407  0000                     _LATC	set	3979
   408  0000                     _OSCCON	set	4051
   409  0000                     _OSCCON2	set	4050
   410  0000                     _OSCTUNE	set	3995
   411  0000                     _PORTB	set	3969
   412  0000                     _SSP1ADD	set	4040
   413  0000                     _SSP1BUF	set	4041
   414  0000                     _SSP1CON1	set	4038
   415  0000                     _SSP1CON1bits	set	4038
   416  0000                     _SSP1STAT	set	4039
   417  0000                     _SSP1STATbits	set	4039
   418  0000                     _TRISA	set	3986
   419  0000                     _TRISB	set	3987
   420  0000                     _TRISC	set	3988
   421  0000                     _WPUB	set	3937
   422  0000                     _LATA0	set	31816
   423  0000                     _LATA1	set	31817
   424  0000                     _LATA6	set	31822
   425  0000                     _LATA7	set	31823
   426  0000                     _LATC0	set	31832
   427  0000                     _LATC1	set	31833
   428  0000                     _LATC2	set	31834
   429  0000                     _LATC4	set	31836
   430  0000                     _LATC5	set	31837
   431                           
   432                           ; #config settings
   433  001FFF  00                 	db	0	; dummy byte at the end
   434  0000                     
   435                           	psect	cinit
   436  001B32                     __pcinit:
   437                           	opt stack 0
   438  001B32                     start_initialization:
   439                           	opt stack 0
   440  001B32                     __initialization:
   441                           	opt stack 0
   442                           
   443                           ; Clear objects allocated to COMRAM (9 bytes)
   444  001B32  EE00  F00B         	lfsr	0,__pbssCOMRAM
   445  001B36  0E09               	movlw	9
   446  001B38                     clear_0:
   447  001B38  6AEE               	clrf	postinc0,c
   448  001B3A  06E8               	decf	wreg,f,c
   449  001B3C  E1FD               	bnz	clear_0
   450  001B3E                     end_of_initialization:
   451                           	opt stack 0
   452  001B3E                     __end_of__initialization:
   453                           	opt stack 0
   454  001B3E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   455  001B40  6EF8               	movwf	tblptru,c
   456  001B42  0100               	movlb	0
   457  001B44  EF55  F00E         	goto	_main	;jump to C main() function
   458                           tblptru	equ	0xFF8
   459                           postinc0	equ	0xFEE
   460                           wreg	equ	0xFE8
   461                           
   462                           	psect	bssCOMRAM
   463  00000B                     __pbssCOMRAM:
   464                           	opt stack 0
   465  00000B                     _Byte1:
   466                           	opt stack 0
   467  00000B                     	ds	1
   468  00000C                     _Byte2:
   469                           	opt stack 0
   470  00000C                     	ds	1
   471  00000D                     _Byte3:
   472                           	opt stack 0
   473  00000D                     	ds	1
   474  00000E                     _Byte4:
   475                           	opt stack 0
   476  00000E                     	ds	1
   477  00000F                     _Byte5:
   478                           	opt stack 0
   479  00000F                     	ds	1
   480  000010                     _Byte6:
   481                           	opt stack 0
   482  000010                     	ds	1
   483  000011                     _DAC_Step:
   484                           	opt stack 0
   485  000011                     	ds	1
   486  000012                     _Dummy:
   487                           	opt stack 0
   488  000012                     	ds	1
   489  000013                     _start:
   490                           	opt stack 0
   491  000013                     	ds	1
   492                           tblptru	equ	0xFF8
   493                           postinc0	equ	0xFEE
   494                           wreg	equ	0xFE8
   495                           
   496                           	psect	cstackCOMRAM
   497  000001                     __pcstackCOMRAM:
   498                           	opt stack 0
   499  000001                     ?___awdiv:
   500                           	opt stack 0
   501  000001                     DAC_SetOutput@inputData:
   502                           	opt stack 0
   503  000001                     SPI1_Exchange8bit@data:
   504                           	opt stack 0
   505  000001                     ___awdiv@dividend:
   506                           	opt stack 0
   507                           
   508                           ; 2 bytes @ 0x0
   509  000001                     	ds	1
   510  000002                     MIPISPI@b:
   511                           	opt stack 0
   512                           
   513                           ; 1 bytes @ 0x1
   514  000002                     	ds	1
   515  000003                     MIPISPI@a:
   516                           	opt stack 0
   517  000003                     ___awdiv@divisor:
   518                           	opt stack 0
   519                           
   520                           ; 2 bytes @ 0x2
   521  000003                     	ds	2
   522  000005                     ___awdiv@counter:
   523                           	opt stack 0
   524                           
   525                           ; 1 bytes @ 0x4
   526  000005                     	ds	1
   527  000006                     ___awdiv@sign:
   528                           	opt stack 0
   529                           
   530                           ; 1 bytes @ 0x5
   531  000006                     	ds	1
   532  000007                     ___awdiv@quotient:
   533                           	opt stack 0
   534                           
   535                           ; 2 bytes @ 0x6
   536  000007                     	ds	2
   537  000009                     ??_main:
   538                           
   539                           ; 0 bytes @ 0x8
   540  000009                     	ds	2
   541                           tblptru	equ	0xFF8
   542                           postinc0	equ	0xFEE
   543                           wreg	equ	0xFE8
   544                           
   545 ;;
   546 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   547 ;;
   548 ;; *************** function _main *****************
   549 ;; Defined at:
   550 ;;		line 145 in file "main.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;		None
   553 ;; Auto vars:     Size  Location     Type
   554 ;;		None
   555 ;; Return value:  Size  Location     Type
   556 ;;		None               void
   557 ;; Registers used:
   558 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   559 ;; Tracked objects:
   560 ;;		On entry : 0/0
   561 ;;		On exit  : 0/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMRAM   BANK0   BANK1
   564 ;;      Params:         0       0       0
   565 ;;      Locals:         0       0       0
   566 ;;      Temps:          2       0       0
   567 ;;      Totals:         2       0       0
   568 ;;Total ram usage:        2 bytes
   569 ;; Hardware stack levels required when called:    2
   570 ;; This function calls:
   571 ;;		_DAC_SetOutput
   572 ;;		_MIPISPI
   573 ;;		_SYSTEM_Initialize
   574 ;;		___awdiv
   575 ;; This function is called by:
   576 ;;		Startup code after reset
   577 ;; This function uses a non-reentrant model
   578 ;;
   579                           
   580                           	psect	text0
   581  001CAA                     __ptext0:
   582                           	opt stack 0
   583  001CAA                     _main:
   584                           	opt stack 29
   585                           
   586                           ;main.c: 149: if (start == 1) goto reset;
   587                           
   588                           ;incstack = 0
   589  001CAA  0413               	decf	_start,w,c
   590  001CAC  B4D8               	btfsc	status,2,c
   591  001CAE  D011               	goto	l1247
   592  001CB0  D001               	goto	l1233
   593  001CB2  D00F               	goto	l1247
   594  001CB4                     l1233:
   595                           
   596                           ;main.c: 151: SYSTEM_Initialize();
   597  001CB4  EC8E  F00D         	call	_SYSTEM_Initialize	;wreg free
   598  001CB8  D000               	goto	l1235
   599  001CBA                     l1235:
   600  001CBA  9089               	bcf	3977,0,c	;volatile
   601  001CBC  D000               	goto	l1237
   602  001CBE                     l1237:
   603  001CBE  9289               	bcf	3977,1,c	;volatile
   604  001CC0  D000               	goto	l1239
   605  001CC2                     l1239:
   606  001CC2  9C89               	bcf	3977,6,c	;volatile
   607  001CC4  D000               	goto	l1241
   608  001CC6                     l1241:
   609  001CC6  9E89               	bcf	3977,7,c	;volatile
   610  001CC8  D000               	goto	l1243
   611  001CCA                     l1243:
   612  001CCA  908B               	bcf	3979,0,c	;volatile
   613  001CCC  D000               	goto	l1245
   614  001CCE                     l1245:
   615  001CCE  928B               	bcf	3979,1,c	;volatile
   616  001CD0  D000               	goto	l1247
   617  001CD2                     l1247:
   618                           
   619                           ;main.c: 188: start = 1;
   620  001CD2  0E01               	movlw	1
   621  001CD4  6E13               	movwf	_start,c
   622                           
   623                           ;main.c: 189: if (INTCONbits.RBIF == 0) {
   624  001CD6  A0F2               	btfss	intcon,0,c	;volatile
   625  001CD8  D0E7               	goto	l302
   626                           
   627                           ;main.c: 191: else {
   628                           ;main.c: 192: INTCONbits.RBIF = 0;}
   629  001CDA  90F2               	bcf	intcon,0,c	;volatile
   630                           
   631                           ;main.c: 195: while ((PORTB & 0xC0) != 0xC0) {
   632                           
   633                           ;main.c: 193: while (1) {
   634  001CDC  D000               	goto	l1253
   635  001CDE                     l1253:
   636  001CDE  5081               	movf	3969,w,c	;volatile
   637  001CE0  0BC0               	andlw	192
   638  001CE2  0AC0               	xorlw	192
   639  001CE4  A4D8               	btfss	status,2,c
   640  001CE6  D7FB               	goto	l1253
   641                           
   642                           ;main.c: 196: }
   643                           ;main.c: 197: Byte1 = PORTB;
   644  001CE8  CF81 F00B          	movff	3969,_Byte1	;volatile
   645                           
   646                           ;main.c: 199: while ((PORTB & 0xC0) != 0x80) {
   647  001CEC  D000               	goto	l1255
   648  001CEE                     l1255:
   649  001CEE  5081               	movf	3969,w,c	;volatile
   650  001CF0  0BC0               	andlw	192
   651  001CF2  0A80               	xorlw	128
   652  001CF4  A4D8               	btfss	status,2,c
   653  001CF6  D7FB               	goto	l1255
   654                           
   655                           ;main.c: 200: }
   656                           ;main.c: 201: Byte3 = PORTB & 0x3F;
   657  001CF8  5081               	movf	3969,w,c	;volatile
   658  001CFA  0B3F               	andlw	63
   659  001CFC  6E0D               	movwf	_Byte3,c
   660                           
   661                           ;main.c: 203: while ((PORTB & 0xC0) != 0x40) {
   662  001CFE  D000               	goto	l1259
   663  001D00                     l1259:
   664  001D00  5081               	movf	3969,w,c	;volatile
   665  001D02  0BC0               	andlw	192
   666  001D04  0A40               	xorlw	64
   667  001D06  A4D8               	btfss	status,2,c
   668  001D08  D7FB               	goto	l1259
   669                           
   670                           ;main.c: 204: }
   671                           ;main.c: 205: Byte4 = PORTB & 0x3F;
   672  001D0A  5081               	movf	3969,w,c	;volatile
   673  001D0C  0B3F               	andlw	63
   674  001D0E  6E0E               	movwf	_Byte4,c
   675                           
   676                           ;main.c: 207: while ((PORTB & 0x80) != 0x80) {
   677  001D10  D000               	goto	l217
   678  001D12                     l217:
   679  001D12  AE81               	btfss	3969,7,c	;volatile
   680  001D14  D7FE               	goto	l217
   681                           
   682                           ;main.c: 208: }
   683                           ;main.c: 209: Byte5 = PORTB & 0x7F;
   684  001D16  5081               	movf	3969,w,c	;volatile
   685  001D18  0B7F               	andlw	127
   686  001D1A  6E0F               	movwf	_Byte5,c
   687                           
   688                           ;main.c: 211: while ((PORTB & 0x80) != 0x00) {
   689  001D1C  D000               	goto	l220
   690  001D1E                     l220:
   691  001D1E  BE81               	btfsc	3969,7,c	;volatile
   692  001D20  D7FE               	goto	l220
   693                           
   694                           ;main.c: 212: }
   695                           ;main.c: 213: Byte6 = PORTB & 0x7F;
   696  001D22  5081               	movf	3969,w,c	;volatile
   697  001D24  0B7F               	andlw	127
   698  001D26  6E10               	movwf	_Byte6,c
   699                           
   700                           ;main.c: 216: DAC_Step = ((Byte4 << 4) & 0xC0);
   701  001D28  380E               	swapf	_Byte4,w,c
   702  001D2A  0BF0               	andlw	240
   703  001D2C  0BC0               	andlw	192
   704  001D2E  6E11               	movwf	_DAC_Step,c
   705                           
   706                           ;main.c: 217: DAC_Step = (DAC_Step | Byte3);
   707  001D30  5011               	movf	_DAC_Step,w,c
   708  001D32  100D               	iorwf	_Byte3,w,c
   709  001D34  6E11               	movwf	_DAC_Step,c
   710                           
   711                           ;main.c: 218: DAC_SetOutput((DAC_Step/8));
   712  001D36  C011  F001         	movff	_DAC_Step,___awdiv@dividend
   713  001D3A  6A02               	clrf	___awdiv@dividend+1,c
   714  001D3C  0E00               	movlw	0
   715  001D3E  6E04               	movwf	___awdiv@divisor+1,c
   716  001D40  0E08               	movlw	8
   717  001D42  6E03               	movwf	___awdiv@divisor,c
   718  001D44  ECBC  F00D         	call	___awdiv	;wreg free
   719  001D48  5001               	movf	?___awdiv,w,c
   720  001D4A  EC66  F00D         	call	_DAC_SetOutput
   721                           
   722                           ;main.c: 221: if ((Byte4 & 0x02) == 0x02)
   723  001D4E  A20E               	btfss	_Byte4,1,c
   724  001D50  D002               	goto	l227
   725                           
   726                           ;main.c: 222: do { LATA0 = 1; } while(0);
   727  001D52  8089               	bsf	3977,0,c	;volatile
   728  001D54  D002               	goto	l226
   729  001D56                     l227:
   730  001D56  9089               	bcf	3977,0,c	;volatile
   731  001D58  D000               	goto	l226
   732  001D5A                     l226:
   733                           
   734                           ;main.c: 225: if ((Byte4 & 0x01) == 0x01)
   735  001D5A  A00E               	btfss	_Byte4,0,c
   736  001D5C  D002               	goto	l233
   737                           
   738                           ;main.c: 226: do { LATA1 = 1; } while(0);
   739  001D5E  8289               	bsf	3977,1,c	;volatile
   740  001D60  D002               	goto	l1271
   741  001D62                     l233:
   742  001D62  9289               	bcf	3977,1,c	;volatile
   743  001D64  D000               	goto	l1271
   744  001D66                     l1271:
   745                           
   746                           ;main.c: 232: MIPISPI(Byte5, Byte6);
   747  001D66  C010  F002         	movff	_Byte6,MIPISPI@b
   748  001D6A  500F               	movf	_Byte5,w,c
   749  001D6C  EC07  F00E         	call	_MIPISPI
   750                           
   751                           ;main.c: 236: switch ((Byte1 & 0x38)){
   752  001D70  D02C               	goto	l1275
   753  001D72                     l237:
   754  001D72  9C89               	bcf	3977,6,c	;volatile
   755  001D74  D005               	goto	l247
   756                           
   757                           ;main.c: 239: do { LATA7 = 0; } while(0);
   758  001D76  D004               	goto	l247
   759                           
   760                           ;main.c: 240: do { LATC2 = 0; } while(0);
   761  001D78  D010               	goto	l263
   762                           
   763                           ;main.c: 241: break;
   764  001D7A  D075               	goto	l1279
   765  001D7C                     l245:
   766  001D7C  8C89               	bsf	3977,6,c	;volatile
   767  001D7E  D000               	goto	l247
   768  001D80                     l247:
   769  001D80  9E89               	bcf	3977,7,c	;volatile
   770  001D82  D00B               	goto	l263
   771                           
   772                           ;main.c: 245: do { LATC2 = 0; } while(0);
   773  001D84  D00A               	goto	l263
   774                           
   775                           ;main.c: 246: break;
   776  001D86  D06F               	goto	l1279
   777  001D88                     l252:
   778  001D88  9C89               	bcf	3977,6,c	;volatile
   779  001D8A  D000               	goto	l254
   780  001D8C                     l254:
   781  001D8C  8E89               	bsf	3977,7,c	;volatile
   782  001D8E  D005               	goto	l263
   783                           
   784                           ;main.c: 250: do { LATC2 = 0; } while(0);
   785  001D90  D004               	goto	l263
   786                           
   787                           ;main.c: 251: break;
   788  001D92  D069               	goto	l1279
   789  001D94                     l259:
   790  001D94  8C89               	bsf	3977,6,c	;volatile
   791  001D96  D7FA               	goto	l254
   792                           
   793                           ;main.c: 254: do { LATA7 = 1; } while(0);
   794  001D98  D7F9               	goto	l254
   795  001D9A                     l263:
   796  001D9A  948B               	bcf	3979,2,c	;volatile
   797                           
   798                           ;main.c: 256: break;
   799  001D9C  D064               	goto	l1279
   800  001D9E                     l266:
   801  001D9E  9C89               	bcf	3977,6,c	;volatile
   802  001DA0  D005               	goto	l275
   803                           
   804                           ;main.c: 259: do { LATA7 = 0; } while(0);
   805  001DA2  D004               	goto	l275
   806                           
   807                           ;main.c: 260: do { LATC2 = 1; } while(0);
   808  001DA4  D010               	goto	l291
   809                           
   810                           ;main.c: 261: break;
   811  001DA6  D05F               	goto	l1279
   812  001DA8                     l273:
   813  001DA8  8C89               	bsf	3977,6,c	;volatile
   814  001DAA  D000               	goto	l275
   815  001DAC                     l275:
   816  001DAC  9E89               	bcf	3977,7,c	;volatile
   817  001DAE  D00B               	goto	l291
   818                           
   819                           ;main.c: 265: do { LATC2 = 1; } while(0);
   820  001DB0  D00A               	goto	l291
   821                           
   822                           ;main.c: 266: break;
   823  001DB2  D059               	goto	l1279
   824  001DB4                     l280:
   825  001DB4  9C89               	bcf	3977,6,c	;volatile
   826  001DB6  D000               	goto	l282
   827  001DB8                     l282:
   828  001DB8  8E89               	bsf	3977,7,c	;volatile
   829  001DBA  D005               	goto	l291
   830                           
   831                           ;main.c: 270: do { LATC2 = 1; } while(0);
   832  001DBC  D004               	goto	l291
   833                           
   834                           ;main.c: 271: break;
   835  001DBE  D053               	goto	l1279
   836  001DC0                     l287:
   837  001DC0  8C89               	bsf	3977,6,c	;volatile
   838  001DC2  D7FA               	goto	l282
   839                           
   840                           ;main.c: 274: do { LATA7 = 1; } while(0);
   841  001DC4  D7F9               	goto	l282
   842  001DC6                     l291:
   843  001DC6  848B               	bsf	3979,2,c	;volatile
   844                           
   845                           ;main.c: 279: }
   846                           
   847                           ;main.c: 278: break;
   848                           
   849                           ;main.c: 277: default:
   850                           
   851                           ;main.c: 276: break;
   852  001DC8  D04E               	goto	l1279
   853  001DCA                     l1275:
   854  001DCA  500B               	movf	_Byte1,w,c
   855  001DCC  0B38               	andlw	56
   856  001DCE  6E09               	movwf	??_main& (0+255),c
   857  001DD0  6A0A               	clrf	(??_main+1)& (0+255),c
   858                           
   859                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   860                           ; Switch size 1, requested type "space"
   861                           ; Number of cases is 1, Range of values is 0 to 0
   862                           ; switch strategies available:
   863                           ; Name         Instructions Cycles
   864                           ; simple_byte            4     3 (average)
   865                           ;	Chosen strategy is simple_byte
   866  001DD2  500A               	movf	??_main+1,w,c
   867  001DD4  0A00               	xorlw	0	; case 0
   868  001DD6  A4D8               	btfss	status,2,c
   869  001DD8  D046               	goto	l1279
   870                           
   871                           ; Switch size 1, requested type "space"
   872                           ; Number of cases is 8, Range of values is 0 to 56
   873                           ; switch strategies available:
   874                           ; Name         Instructions Cycles
   875                           ; simple_byte           25    13 (average)
   876                           ;	Chosen strategy is simple_byte
   877  001DDA  5009               	movf	??_main,w,c
   878  001DDC  0A00               	xorlw	0	; case 0
   879  001DDE  B4D8               	btfsc	status,2,c
   880  001DE0  D7EF               	goto	l287
   881  001DE2  0A08               	xorlw	8	; case 8
   882  001DE4  B4D8               	btfsc	status,2,c
   883  001DE6  D7C5               	goto	l237
   884  001DE8  0A18               	xorlw	24	; case 16
   885  001DEA  B4D8               	btfsc	status,2,c
   886  001DEC  D7C7               	goto	l245
   887  001DEE  0A08               	xorlw	8	; case 24
   888  001DF0  B4D8               	btfsc	status,2,c
   889  001DF2  D7CA               	goto	l252
   890  001DF4  0A38               	xorlw	56	; case 32
   891  001DF6  B4D8               	btfsc	status,2,c
   892  001DF8  D7CD               	goto	l259
   893  001DFA  0A08               	xorlw	8	; case 40
   894  001DFC  B4D8               	btfsc	status,2,c
   895  001DFE  D7CF               	goto	l266
   896  001E00  0A18               	xorlw	24	; case 48
   897  001E02  B4D8               	btfsc	status,2,c
   898  001E04  D7D1               	goto	l273
   899  001E06  0A08               	xorlw	8	; case 56
   900  001E08  B4D8               	btfsc	status,2,c
   901  001E0A  D7D4               	goto	l280
   902                           
   903                           ;main.c: 281: switch ((Byte1 & 0x07)){
   904  001E0C  D02C               	goto	l1279
   905  001E0E                     l296:
   906  001E0E  908B               	bcf	3979,0,c	;volatile
   907  001E10  D005               	goto	l306
   908                           
   909                           ;main.c: 284: do { LATC1 = 0; } while(0);
   910  001E12  D004               	goto	l306
   911                           
   912                           ;main.c: 285: do { LATC4 = 0; } while(0);
   913  001E14  D010               	goto	l322
   914                           
   915                           ;main.c: 286: break;
   916  001E16  D048               	goto	l302
   917  001E18                     l304:
   918  001E18  808B               	bsf	3979,0,c	;volatile
   919  001E1A  D000               	goto	l306
   920  001E1C                     l306:
   921  001E1C  928B               	bcf	3979,1,c	;volatile
   922  001E1E  D00B               	goto	l322
   923                           
   924                           ;main.c: 290: do { LATC4 = 0; } while(0);
   925  001E20  D00A               	goto	l322
   926                           
   927                           ;main.c: 291: break;
   928  001E22  D042               	goto	l302
   929  001E24                     l311:
   930  001E24  908B               	bcf	3979,0,c	;volatile
   931  001E26  D000               	goto	l313
   932  001E28                     l313:
   933  001E28  828B               	bsf	3979,1,c	;volatile
   934  001E2A  D005               	goto	l322
   935                           
   936                           ;main.c: 295: do { LATC4 = 0; } while(0);
   937  001E2C  D004               	goto	l322
   938                           
   939                           ;main.c: 296: break;
   940  001E2E  D03C               	goto	l302
   941  001E30                     l318:
   942  001E30  808B               	bsf	3979,0,c	;volatile
   943  001E32  D7FA               	goto	l313
   944                           
   945                           ;main.c: 299: do { LATC1 = 1; } while(0);
   946  001E34  D7F9               	goto	l313
   947  001E36                     l322:
   948  001E36  988B               	bcf	3979,4,c	;volatile
   949                           
   950                           ;main.c: 301: break;
   951  001E38  D037               	goto	l302
   952  001E3A                     l325:
   953  001E3A  908B               	bcf	3979,0,c	;volatile
   954  001E3C  D005               	goto	l334
   955                           
   956                           ;main.c: 304: do { LATC1 = 0; } while(0);
   957  001E3E  D004               	goto	l334
   958                           
   959                           ;main.c: 305: do { LATC4 = 1; } while(0);
   960  001E40  D010               	goto	l350
   961                           
   962                           ;main.c: 306: break;
   963  001E42  D032               	goto	l302
   964  001E44                     l332:
   965  001E44  808B               	bsf	3979,0,c	;volatile
   966  001E46  D000               	goto	l334
   967  001E48                     l334:
   968  001E48  928B               	bcf	3979,1,c	;volatile
   969  001E4A  D00B               	goto	l350
   970                           
   971                           ;main.c: 310: do { LATC4 = 1; } while(0);
   972  001E4C  D00A               	goto	l350
   973                           
   974                           ;main.c: 311: break;
   975  001E4E  D02C               	goto	l302
   976  001E50                     l339:
   977  001E50  908B               	bcf	3979,0,c	;volatile
   978  001E52  D000               	goto	l341
   979  001E54                     l341:
   980  001E54  828B               	bsf	3979,1,c	;volatile
   981  001E56  D005               	goto	l350
   982                           
   983                           ;main.c: 315: do { LATC4 = 1; } while(0);
   984  001E58  D004               	goto	l350
   985                           
   986                           ;main.c: 316: break;
   987  001E5A  D026               	goto	l302
   988  001E5C                     l346:
   989  001E5C  808B               	bsf	3979,0,c	;volatile
   990  001E5E  D7FA               	goto	l341
   991                           
   992                           ;main.c: 319: do { LATC1 = 1; } while(0);
   993  001E60  D7F9               	goto	l341
   994  001E62                     l350:
   995  001E62  888B               	bsf	3979,4,c	;volatile
   996                           
   997                           ;main.c: 324: }
   998                           
   999                           ;main.c: 323: break;
  1000                           
  1001                           ;main.c: 322: default:
  1002                           
  1003                           ;main.c: 321: break;
  1004  001E64  D021               	goto	l302
  1005  001E66                     l1279:
  1006  001E66  500B               	movf	_Byte1,w,c
  1007  001E68  0B07               	andlw	7
  1008  001E6A  6E09               	movwf	??_main& (0+255),c
  1009  001E6C  6A0A               	clrf	(??_main+1)& (0+255),c
  1010                           
  1011                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1012                           ; Switch size 1, requested type "space"
  1013                           ; Number of cases is 1, Range of values is 0 to 0
  1014                           ; switch strategies available:
  1015                           ; Name         Instructions Cycles
  1016                           ; simple_byte            4     3 (average)
  1017                           ;	Chosen strategy is simple_byte
  1018  001E6E  500A               	movf	??_main+1,w,c
  1019  001E70  0A00               	xorlw	0	; case 0
  1020  001E72  A4D8               	btfss	status,2,c
  1021  001E74  D019               	goto	l302
  1022                           
  1023                           ; Switch size 1, requested type "space"
  1024                           ; Number of cases is 8, Range of values is 0 to 7
  1025                           ; switch strategies available:
  1026                           ; Name         Instructions Cycles
  1027                           ; simple_byte           25    13 (average)
  1028                           ;	Chosen strategy is simple_byte
  1029  001E76  5009               	movf	??_main,w,c
  1030  001E78  0A00               	xorlw	0	; case 0
  1031  001E7A  B4D8               	btfsc	status,2,c
  1032  001E7C  D7EF               	goto	l346
  1033  001E7E  0A01               	xorlw	1	; case 1
  1034  001E80  B4D8               	btfsc	status,2,c
  1035  001E82  D7C5               	goto	l296
  1036  001E84  0A03               	xorlw	3	; case 2
  1037  001E86  B4D8               	btfsc	status,2,c
  1038  001E88  D7C7               	goto	l304
  1039  001E8A  0A01               	xorlw	1	; case 3
  1040  001E8C  B4D8               	btfsc	status,2,c
  1041  001E8E  D7CA               	goto	l311
  1042  001E90  0A07               	xorlw	7	; case 4
  1043  001E92  B4D8               	btfsc	status,2,c
  1044  001E94  D7CD               	goto	l318
  1045  001E96  0A01               	xorlw	1	; case 5
  1046  001E98  B4D8               	btfsc	status,2,c
  1047  001E9A  D7CF               	goto	l325
  1048  001E9C  0A03               	xorlw	3	; case 6
  1049  001E9E  B4D8               	btfsc	status,2,c
  1050  001EA0  D7D1               	goto	l332
  1051  001EA2  0A01               	xorlw	1	; case 7
  1052  001EA4  B4D8               	btfsc	status,2,c
  1053  001EA6  D7D4               	goto	l339
  1054  001EA8                     l302:
  1055  001EA8  0003               	sleep		;# 
  1056  001EAA  D719               	goto	l1253
  1057  001EAC  EF00  F000         	goto	start
  1058  001EB0                     __end_of_main:
  1059                           	opt stack 0
  1060                           tblptru	equ	0xFF8
  1061                           intcon	equ	0xFF2
  1062                           postinc0	equ	0xFEE
  1063                           wreg	equ	0xFE8
  1064                           status	equ	0xFD8
  1065                           
  1066 ;; *************** function ___awdiv *****************
  1067 ;; Defined at:
  1068 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  1069 ;; Parameters:    Size  Location     Type
  1070 ;;  dividend        2    0[COMRAM] int 
  1071 ;;  divisor         2    2[COMRAM] int 
  1072 ;; Auto vars:     Size  Location     Type
  1073 ;;  quotient        2    6[COMRAM] int 
  1074 ;;  sign            1    5[COMRAM] unsigned char 
  1075 ;;  counter         1    4[COMRAM] unsigned char 
  1076 ;; Return value:  Size  Location     Type
  1077 ;;                  2    0[COMRAM] int 
  1078 ;; Registers used:
  1079 ;;		wreg, status,2, status,0
  1080 ;; Tracked objects:
  1081 ;;		On entry : 0/0
  1082 ;;		On exit  : 0/0
  1083 ;;		Unchanged: 0/0
  1084 ;; Data sizes:     COMRAM   BANK0   BANK1
  1085 ;;      Params:         4       0       0
  1086 ;;      Locals:         4       0       0
  1087 ;;      Temps:          0       0       0
  1088 ;;      Totals:         8       0       0
  1089 ;;Total ram usage:        8 bytes
  1090 ;; Hardware stack levels used:    1
  1091 ;; This function calls:
  1092 ;;		Nothing
  1093 ;; This function is called by:
  1094 ;;		_main
  1095 ;; This function uses a non-reentrant model
  1096 ;;
  1097                           
  1098                           	psect	text1
  1099  001B78                     __ptext1:
  1100                           	opt stack 0
  1101  001B78                     ___awdiv:
  1102                           	opt stack 30
  1103                           
  1104                           ;incstack = 0
  1105  001B78  0E00               	movlw	0
  1106  001B7A  6E06               	movwf	___awdiv@sign,c
  1107  001B7C  AE04               	btfss	___awdiv@divisor+1,7,c
  1108  001B7E  D007               	goto	l1193
  1109  001B80  6C03               	negf	___awdiv@divisor,c
  1110  001B82  1E04               	comf	___awdiv@divisor+1,f,c
  1111  001B84  B0D8               	btfsc	status,0,c
  1112  001B86  2A04               	incf	___awdiv@divisor+1,f,c
  1113  001B88  0E01               	movlw	1
  1114  001B8A  6E06               	movwf	___awdiv@sign,c
  1115  001B8C  D000               	goto	l1193
  1116  001B8E                     l1193:
  1117  001B8E  AE02               	btfss	___awdiv@dividend+1,7,c
  1118  001B90  D007               	goto	l1199
  1119  001B92  6C01               	negf	___awdiv@dividend,c
  1120  001B94  1E02               	comf	___awdiv@dividend+1,f,c
  1121  001B96  B0D8               	btfsc	status,0,c
  1122  001B98  2A02               	incf	___awdiv@dividend+1,f,c
  1123  001B9A  0E01               	movlw	1
  1124  001B9C  1A06               	xorwf	___awdiv@sign,f,c
  1125  001B9E  D000               	goto	l1199
  1126  001BA0                     l1199:
  1127  001BA0  0E00               	movlw	0
  1128  001BA2  6E08               	movwf	___awdiv@quotient+1,c
  1129  001BA4  0E00               	movlw	0
  1130  001BA6  6E07               	movwf	___awdiv@quotient,c
  1131  001BA8  5003               	movf	___awdiv@divisor,w,c
  1132  001BAA  1004               	iorwf	___awdiv@divisor+1,w,c
  1133  001BAC  B4D8               	btfsc	status,2,c
  1134  001BAE  D021               	goto	l1221
  1135  001BB0  0E01               	movlw	1
  1136  001BB2  6E05               	movwf	___awdiv@counter,c
  1137  001BB4  D005               	goto	l1207
  1138  001BB6                     l1205:
  1139  001BB6  90D8               	bcf	status,0,c
  1140  001BB8  3603               	rlcf	___awdiv@divisor,f,c
  1141  001BBA  3604               	rlcf	___awdiv@divisor+1,f,c
  1142  001BBC  2A05               	incf	___awdiv@counter,f,c
  1143  001BBE  D000               	goto	l1207
  1144  001BC0                     l1207:
  1145  001BC0  BE04               	btfsc	___awdiv@divisor+1,7,c
  1146  001BC2  D002               	goto	l1209
  1147  001BC4  D7F8               	goto	l1205
  1148  001BC6  D000               	goto	l1209
  1149  001BC8                     l1209:
  1150  001BC8  90D8               	bcf	status,0,c
  1151  001BCA  3607               	rlcf	___awdiv@quotient,f,c
  1152  001BCC  3608               	rlcf	___awdiv@quotient+1,f,c
  1153  001BCE  5003               	movf	___awdiv@divisor,w,c
  1154  001BD0  5C01               	subwf	___awdiv@dividend,w,c
  1155  001BD2  5004               	movf	___awdiv@divisor+1,w,c
  1156  001BD4  5802               	subwfb	___awdiv@dividend+1,w,c
  1157  001BD6  A0D8               	btfss	status,0,c
  1158  001BD8  D006               	goto	l1217
  1159  001BDA  5003               	movf	___awdiv@divisor,w,c
  1160  001BDC  5E01               	subwf	___awdiv@dividend,f,c
  1161  001BDE  5004               	movf	___awdiv@divisor+1,w,c
  1162  001BE0  5A02               	subwfb	___awdiv@dividend+1,f,c
  1163  001BE2  8007               	bsf	___awdiv@quotient,0,c
  1164  001BE4  D000               	goto	l1217
  1165  001BE6                     l1217:
  1166  001BE6  90D8               	bcf	status,0,c
  1167  001BE8  3204               	rrcf	___awdiv@divisor+1,f,c
  1168  001BEA  3203               	rrcf	___awdiv@divisor,f,c
  1169  001BEC  2E05               	decfsz	___awdiv@counter,f,c
  1170  001BEE  D7EC               	goto	l1209
  1171  001BF0  D000               	goto	l1221
  1172  001BF2                     l1221:
  1173  001BF2  5006               	movf	___awdiv@sign,w,c
  1174  001BF4  B4D8               	btfsc	status,2,c
  1175  001BF6  D005               	goto	l1225
  1176  001BF8  6C07               	negf	___awdiv@quotient,c
  1177  001BFA  1E08               	comf	___awdiv@quotient+1,f,c
  1178  001BFC  B0D8               	btfsc	status,0,c
  1179  001BFE  2A08               	incf	___awdiv@quotient+1,f,c
  1180  001C00  D000               	goto	l1225
  1181  001C02                     l1225:
  1182  001C02  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1183  001C06  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1184  001C0A  0012               	return	
  1185  001C0C  0012               	return		;funcret
  1186  001C0E                     __end_of___awdiv:
  1187                           	opt stack 0
  1188                           tblptru	equ	0xFF8
  1189                           intcon	equ	0xFF2
  1190                           postinc0	equ	0xFEE
  1191                           wreg	equ	0xFE8
  1192                           status	equ	0xFD8
  1193                           
  1194 ;; *************** function _SYSTEM_Initialize *****************
  1195 ;; Defined at:
  1196 ;;		line 106 in file "mcc_generated_files/mcc.c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;		None
  1199 ;; Auto vars:     Size  Location     Type
  1200 ;;		None
  1201 ;; Return value:  Size  Location     Type
  1202 ;;		None               void
  1203 ;; Registers used:
  1204 ;;		wreg, status,2, cstack
  1205 ;; Tracked objects:
  1206 ;;		On entry : 0/0
  1207 ;;		On exit  : 0/0
  1208 ;;		Unchanged: 0/0
  1209 ;; Data sizes:     COMRAM   BANK0   BANK1
  1210 ;;      Params:         0       0       0
  1211 ;;      Locals:         0       0       0
  1212 ;;      Temps:          0       0       0
  1213 ;;      Totals:         0       0       0
  1214 ;;Total ram usage:        0 bytes
  1215 ;; Hardware stack levels used:    1
  1216 ;; Hardware stack levels required when called:    1
  1217 ;; This function calls:
  1218 ;;		_DAC_Initialize
  1219 ;;		_INTERRUPT_ON_CHANGE_Initialize
  1220 ;;		_OSCILLATOR_Initialize
  1221 ;;		_PIN_MANAGER_Initialize
  1222 ;;		_SPI1_Initialize
  1223 ;; This function is called by:
  1224 ;;		_main
  1225 ;; This function uses a non-reentrant model
  1226 ;;
  1227                           
  1228                           	psect	text2
  1229  001B1C                     __ptext2:
  1230                           	opt stack 0
  1231  001B1C                     _SYSTEM_Initialize:
  1232                           	opt stack 29
  1233                           
  1234                           ;mcc.c: 107: OSCILLATOR_Initialize();
  1235                           
  1236                           ;incstack = 0
  1237  001B1C  EC77  F00D         	call	_OSCILLATOR_Initialize	;wreg free
  1238                           
  1239                           ;mcc.c: 108: PIN_MANAGER_Initialize();
  1240  001B20  ECA4  F00D         	call	_PIN_MANAGER_Initialize	;wreg free
  1241                           
  1242                           ;mcc.c: 109: DAC_Initialize();
  1243  001B24  EC70  F00D         	call	_DAC_Initialize	;wreg free
  1244                           
  1245                           ;mcc.c: 110: SPI1_Initialize();
  1246  001B28  EC7E  F00D         	call	_SPI1_Initialize	;wreg free
  1247                           
  1248                           ;mcc.c: 111: INTERRUPT_ON_CHANGE_Initialize();
  1249  001B2C  EC6A  F00D         	call	_INTERRUPT_ON_CHANGE_Initialize	;wreg free
  1250  001B30  0012               	return		;funcret
  1251  001B32                     __end_of_SYSTEM_Initialize:
  1252                           	opt stack 0
  1253                           tblptru	equ	0xFF8
  1254                           intcon	equ	0xFF2
  1255                           postinc0	equ	0xFEE
  1256                           wreg	equ	0xFE8
  1257                           status	equ	0xFD8
  1258                           
  1259 ;; *************** function _SPI1_Initialize *****************
  1260 ;; Defined at:
  1261 ;;		line 64 in file "mcc_generated_files/spi1.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;		None
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;		None
  1266 ;; Return value:  Size  Location     Type
  1267 ;;		None               void
  1268 ;; Registers used:
  1269 ;;		wreg, status,2
  1270 ;; Tracked objects:
  1271 ;;		On entry : 0/0
  1272 ;;		On exit  : 0/0
  1273 ;;		Unchanged: 0/0
  1274 ;; Data sizes:     COMRAM   BANK0   BANK1
  1275 ;;      Params:         0       0       0
  1276 ;;      Locals:         0       0       0
  1277 ;;      Temps:          0       0       0
  1278 ;;      Totals:         0       0       0
  1279 ;;Total ram usage:        0 bytes
  1280 ;; Hardware stack levels used:    1
  1281 ;; This function calls:
  1282 ;;		Nothing
  1283 ;; This function is called by:
  1284 ;;		_SYSTEM_Initialize
  1285 ;; This function uses a non-reentrant model
  1286 ;;
  1287                           
  1288                           	psect	text3
  1289  001AFC                     __ptext3:
  1290                           	opt stack 0
  1291  001AFC                     _SPI1_Initialize:
  1292                           	opt stack 29
  1293                           
  1294                           ;spi1.c: 68: SSP1STAT = 0x00;
  1295                           
  1296                           ;incstack = 0
  1297  001AFC  0E00               	movlw	0
  1298  001AFE  6EC7               	movwf	4039,c	;volatile
  1299                           
  1300                           ;spi1.c: 71: SSP1CON1 = 0x20;
  1301  001B00  0E20               	movlw	32
  1302  001B02  6EC6               	movwf	4038,c	;volatile
  1303                           
  1304                           ;spi1.c: 74: SSP1ADD = 0x00;
  1305  001B04  0E00               	movlw	0
  1306  001B06  6EC8               	movwf	4040,c	;volatile
  1307  001B08  0012               	return		;funcret
  1308  001B0A                     __end_of_SPI1_Initialize:
  1309                           	opt stack 0
  1310                           tblptru	equ	0xFF8
  1311                           intcon	equ	0xFF2
  1312                           postinc0	equ	0xFEE
  1313                           wreg	equ	0xFE8
  1314                           status	equ	0xFD8
  1315                           
  1316 ;; *************** function _PIN_MANAGER_Initialize *****************
  1317 ;; Defined at:
  1318 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  1319 ;; Parameters:    Size  Location     Type
  1320 ;;		None
  1321 ;; Auto vars:     Size  Location     Type
  1322 ;;		None
  1323 ;; Return value:  Size  Location     Type
  1324 ;;		None               void
  1325 ;; Registers used:
  1326 ;;		wreg, status,2
  1327 ;; Tracked objects:
  1328 ;;		On entry : 0/0
  1329 ;;		On exit  : 0/0
  1330 ;;		Unchanged: 0/0
  1331 ;; Data sizes:     COMRAM   BANK0   BANK1
  1332 ;;      Params:         0       0       0
  1333 ;;      Locals:         0       0       0
  1334 ;;      Temps:          0       0       0
  1335 ;;      Totals:         0       0       0
  1336 ;;Total ram usage:        0 bytes
  1337 ;; Hardware stack levels used:    1
  1338 ;; This function calls:
  1339 ;;		Nothing
  1340 ;; This function is called by:
  1341 ;;		_SYSTEM_Initialize
  1342 ;; This function uses a non-reentrant model
  1343 ;;
  1344                           
  1345                           	psect	text4
  1346  001B48                     __ptext4:
  1347                           	opt stack 0
  1348  001B48                     _PIN_MANAGER_Initialize:
  1349                           	opt stack 29
  1350                           
  1351                           ;pin_manager.c: 51: LATA = 0x00;
  1352                           
  1353                           ;incstack = 0
  1354  001B48  0E00               	movlw	0
  1355  001B4A  6E89               	movwf	3977,c	;volatile
  1356                           
  1357                           ;pin_manager.c: 52: TRISA = 0x38;
  1358  001B4C  0E38               	movlw	56
  1359  001B4E  6E92               	movwf	3986,c	;volatile
  1360                           
  1361                           ;pin_manager.c: 53: ANSELA = 0x2C;
  1362  001B50  0E2C               	movlw	44
  1363  001B52  010F               	movlb	15	; () banked
  1364  001B54  6F38               	movwf	56,b	;volatile
  1365                           
  1366                           ;pin_manager.c: 55: LATB = 0x00;
  1367  001B56  0E00               	movlw	0
  1368  001B58  6E8A               	movwf	3978,c	;volatile
  1369                           
  1370                           ; BSR set to: 15
  1371                           ;pin_manager.c: 56: TRISB = 0xFF;
  1372  001B5A  6893               	setf	3987,c	;volatile
  1373                           
  1374                           ;pin_manager.c: 57: ANSELB = 0x00;
  1375  001B5C  0E00               	movlw	0
  1376  001B5E  010F               	movlb	15	; () banked
  1377  001B60  6F39               	movwf	57,b	;volatile
  1378                           
  1379                           ;pin_manager.c: 58: WPUB = 0x00;
  1380  001B62  0E00               	movlw	0
  1381  001B64  6E61               	movwf	3937,c	;volatile
  1382                           
  1383                           ;pin_manager.c: 60: LATC = 0x00;
  1384  001B66  0E00               	movlw	0
  1385  001B68  6E8B               	movwf	3979,c	;volatile
  1386                           
  1387                           ;pin_manager.c: 61: TRISC = 0xC0;
  1388  001B6A  0EC0               	movlw	192
  1389  001B6C  6E94               	movwf	3988,c	;volatile
  1390                           
  1391                           ;pin_manager.c: 62: ANSELC = 0xC0;
  1392  001B6E  0EC0               	movlw	192
  1393  001B70  010F               	movlb	15	; () banked
  1394  001B72  6F3A               	movwf	58,b	;volatile
  1395                           
  1396                           ; BSR set to: 15
  1397                           ;pin_manager.c: 64: INTCON2bits.nRBPU = 0x01;
  1398  001B74  8EF1               	bsf	intcon2,7,c	;volatile
  1399                           
  1400                           ; BSR set to: 15
  1401  001B76  0012               	return		;funcret
  1402  001B78                     __end_of_PIN_MANAGER_Initialize:
  1403                           	opt stack 0
  1404                           tblptru	equ	0xFF8
  1405                           intcon	equ	0xFF2
  1406                           intcon2	equ	0xFF1
  1407                           postinc0	equ	0xFEE
  1408                           wreg	equ	0xFE8
  1409                           status	equ	0xFD8
  1410                           
  1411 ;; *************** function _OSCILLATOR_Initialize *****************
  1412 ;; Defined at:
  1413 ;;		line 114 in file "mcc_generated_files/mcc.c"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;		None
  1416 ;; Auto vars:     Size  Location     Type
  1417 ;;		None
  1418 ;; Return value:  Size  Location     Type
  1419 ;;		None               void
  1420 ;; Registers used:
  1421 ;;		wreg, status,2
  1422 ;; Tracked objects:
  1423 ;;		On entry : 0/0
  1424 ;;		On exit  : 0/0
  1425 ;;		Unchanged: 0/0
  1426 ;; Data sizes:     COMRAM   BANK0   BANK1
  1427 ;;      Params:         0       0       0
  1428 ;;      Locals:         0       0       0
  1429 ;;      Temps:          0       0       0
  1430 ;;      Totals:         0       0       0
  1431 ;;Total ram usage:        0 bytes
  1432 ;; Hardware stack levels used:    1
  1433 ;; This function calls:
  1434 ;;		Nothing
  1435 ;; This function is called by:
  1436 ;;		_SYSTEM_Initialize
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440                           	psect	text5
  1441  001AEE                     __ptext5:
  1442                           	opt stack 0
  1443  001AEE                     _OSCILLATOR_Initialize:
  1444                           	opt stack 29
  1445                           
  1446                           ;mcc.c: 116: OSCCON = 0x70;
  1447                           
  1448                           ; BSR set to: 15
  1449                           ;incstack = 0
  1450  001AEE  0E70               	movlw	112
  1451  001AF0  6ED3               	movwf	4051,c	;volatile
  1452                           
  1453                           ;mcc.c: 118: OSCCON2 = 0x04;
  1454  001AF2  0E04               	movlw	4
  1455  001AF4  6ED2               	movwf	4050,c	;volatile
  1456                           
  1457                           ;mcc.c: 120: OSCTUNE = 0x40;
  1458  001AF6  0E40               	movlw	64
  1459  001AF8  6E9B               	movwf	3995,c	;volatile
  1460  001AFA  0012               	return		;funcret
  1461  001AFC                     __end_of_OSCILLATOR_Initialize:
  1462                           	opt stack 0
  1463                           tblptru	equ	0xFF8
  1464                           intcon	equ	0xFF2
  1465                           intcon2	equ	0xFF1
  1466                           postinc0	equ	0xFEE
  1467                           wreg	equ	0xFE8
  1468                           status	equ	0xFD8
  1469                           
  1470 ;; *************** function _INTERRUPT_ON_CHANGE_Initialize *****************
  1471 ;; Defined at:
  1472 ;;		line 125 in file "mcc_generated_files/mcc.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;		None
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;		None
  1477 ;; Return value:  Size  Location     Type
  1478 ;;		None               void
  1479 ;; Registers used:
  1480 ;;		wreg, status,2
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMRAM   BANK0   BANK1
  1486 ;;      Params:         0       0       0
  1487 ;;      Locals:         0       0       0
  1488 ;;      Temps:          0       0       0
  1489 ;;      Totals:         0       0       0
  1490 ;;Total ram usage:        0 bytes
  1491 ;; Hardware stack levels used:    1
  1492 ;; This function calls:
  1493 ;;		Nothing
  1494 ;; This function is called by:
  1495 ;;		_SYSTEM_Initialize
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           	psect	text6
  1500  001AD4                     __ptext6:
  1501                           	opt stack 0
  1502  001AD4                     _INTERRUPT_ON_CHANGE_Initialize:
  1503                           	opt stack 29
  1504                           
  1505                           ;mcc.c: 129: INTCONbits.RBIE = 1;
  1506                           
  1507                           ;incstack = 0
  1508  001AD4  86F2               	bsf	intcon,3,c	;volatile
  1509                           
  1510                           ;mcc.c: 130: INTCONbits.RBIF = 0;
  1511  001AD6  90F2               	bcf	intcon,0,c	;volatile
  1512                           
  1513                           ;mcc.c: 131: INTCON2bits.RBIP = 1;
  1514  001AD8  80F1               	bsf	intcon2,0,c	;volatile
  1515                           
  1516                           ;mcc.c: 132: IOCB = 0x80;
  1517  001ADA  0E80               	movlw	128
  1518  001ADC  6E62               	movwf	3938,c	;volatile
  1519  001ADE  0012               	return		;funcret
  1520  001AE0                     __end_of_INTERRUPT_ON_CHANGE_Initialize:
  1521                           	opt stack 0
  1522                           tblptru	equ	0xFF8
  1523                           intcon	equ	0xFF2
  1524                           intcon2	equ	0xFF1
  1525                           postinc0	equ	0xFEE
  1526                           wreg	equ	0xFE8
  1527                           status	equ	0xFD8
  1528                           
  1529 ;; *************** function _DAC_Initialize *****************
  1530 ;; Defined at:
  1531 ;;		line 57 in file "mcc_generated_files/dac.c"
  1532 ;; Parameters:    Size  Location     Type
  1533 ;;		None
  1534 ;; Auto vars:     Size  Location     Type
  1535 ;;		None
  1536 ;; Return value:  Size  Location     Type
  1537 ;;		None               void
  1538 ;; Registers used:
  1539 ;;		wreg, status,2
  1540 ;; Tracked objects:
  1541 ;;		On entry : 0/0
  1542 ;;		On exit  : 0/0
  1543 ;;		Unchanged: 0/0
  1544 ;; Data sizes:     COMRAM   BANK0   BANK1
  1545 ;;      Params:         0       0       0
  1546 ;;      Locals:         0       0       0
  1547 ;;      Temps:          0       0       0
  1548 ;;      Totals:         0       0       0
  1549 ;;Total ram usage:        0 bytes
  1550 ;; Hardware stack levels used:    1
  1551 ;; This function calls:
  1552 ;;		Nothing
  1553 ;; This function is called by:
  1554 ;;		_SYSTEM_Initialize
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           	psect	text7
  1559  001AE0                     __ptext7:
  1560                           	opt stack 0
  1561  001AE0                     _DAC_Initialize:
  1562                           	opt stack 29
  1563                           
  1564                           ;dac.c: 59: VREFCON1 = 0xE0;
  1565                           
  1566                           ;incstack = 0
  1567  001AE0  0EE0               	movlw	224
  1568  001AE2  010F               	movlb	15	; () banked
  1569  001AE4  6F41               	movwf	65,b	;volatile
  1570                           
  1571                           ;dac.c: 61: DACCON1 = 0x00;
  1572  001AE6  0E00               	movlw	0
  1573  001AE8  010F               	movlb	15	; () banked
  1574  001AEA  6F40               	movwf	64,b	;volatile
  1575                           
  1576                           ; BSR set to: 15
  1577  001AEC  0012               	return		;funcret
  1578  001AEE                     __end_of_DAC_Initialize:
  1579                           	opt stack 0
  1580                           tblptru	equ	0xFF8
  1581                           intcon	equ	0xFF2
  1582                           intcon2	equ	0xFF1
  1583                           postinc0	equ	0xFEE
  1584                           wreg	equ	0xFE8
  1585                           status	equ	0xFD8
  1586                           
  1587 ;; *************** function _MIPISPI *****************
  1588 ;; Defined at:
  1589 ;;		line 122 in file "main.c"
  1590 ;; Parameters:    Size  Location     Type
  1591 ;;  a               1    wreg     unsigned char 
  1592 ;;  b               1    1[COMRAM] unsigned char 
  1593 ;; Auto vars:     Size  Location     Type
  1594 ;;  a               1    2[COMRAM] unsigned char 
  1595 ;; Return value:  Size  Location     Type
  1596 ;;		None               void
  1597 ;; Registers used:
  1598 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1599 ;; Tracked objects:
  1600 ;;		On entry : 0/0
  1601 ;;		On exit  : 0/0
  1602 ;;		Unchanged: 0/0
  1603 ;; Data sizes:     COMRAM   BANK0   BANK1
  1604 ;;      Params:         1       0       0
  1605 ;;      Locals:         1       0       0
  1606 ;;      Temps:          0       0       0
  1607 ;;      Totals:         2       0       0
  1608 ;;Total ram usage:        2 bytes
  1609 ;; Hardware stack levels used:    1
  1610 ;; Hardware stack levels required when called:    1
  1611 ;; This function calls:
  1612 ;;		_SPI1_Exchange8bit
  1613 ;; This function is called by:
  1614 ;;		_main
  1615 ;; This function uses a non-reentrant model
  1616 ;;
  1617                           
  1618                           	psect	text8
  1619  001C0E                     __ptext8:
  1620                           	opt stack 0
  1621  001C0E                     _MIPISPI:
  1622                           	opt stack 29
  1623                           
  1624                           ; BSR set to: 15
  1625                           ;incstack = 0
  1626                           ;MIPISPI@a stored from wreg
  1627  001C0E  6E03               	movwf	MIPISPI@a,c
  1628                           
  1629                           ;main.c: 124: SSP1CON1bits.SSPEN1 = 0;
  1630  001C10  9AC6               	bcf	4038,5,c	;volatile
  1631                           
  1632                           ;main.c: 125: do { LATC5 = 1; } while(0);
  1633  001C12  8A8B               	bsf	3979,5,c	;volatile
  1634  001C14  D000               	goto	l182
  1635  001C16                     l182:
  1636  001C16  9A8B               	bcf	3979,5,c	;volatile
  1637                           
  1638                           ;main.c: 127: SSP1CON1bits.SSPEN1 = 1;
  1639  001C18  8AC6               	bsf	4038,5,c	;volatile
  1640                           
  1641                           ;main.c: 129: SPI1_Exchange8bit(SLAVEWRITEADD[0]);
  1642  001C1A  0EFD               	movlw	low _SLAVEWRITEADD
  1643  001C1C  6EF6               	movwf	tblptrl,c
  1644  001C1E                     	if	1	;There is more than 1 active tblptr byte
  1645  001C1E  0E1F               	movlw	high _SLAVEWRITEADD
  1646  001C20  6EF7               	movwf	tblptrh,c
  1647  001C22                     	endif
  1648  001C22                     	if	0	;There are less than 3 active tblptr bytes
  1649  001C22                     	endif
  1650  001C22  0008               	tblrd		*
  1651  001C24  50F5               	movf	tablat,w,c
  1652  001C26  EC85  F00D         	call	_SPI1_Exchange8bit
  1653                           
  1654                           ;main.c: 130: SPI1_Exchange8bit(ADDRESSDATA[a]);
  1655  001C2A  5003               	movf	MIPISPI@a,w,c
  1656  001C2C  0D01               	mullw	1
  1657  001C2E  0EB1               	movlw	low _ADDRESSDATA
  1658  001C30  24F3               	addwf	prodl,w,c
  1659  001C32  6EF6               	movwf	tblptrl,c
  1660  001C34  0E1E               	movlw	high _ADDRESSDATA
  1661  001C36  20F4               	addwfc	prodh,w,c
  1662  001C38  6EF7               	movwf	tblptrh,c
  1663  001C3A                     	if	0	;There are less than 3 active tblptr bytes
  1664  001C3A                     	endif
  1665  001C3A  0008               	tblrd		*
  1666  001C3C  50F5               	movf	tablat,w,c
  1667  001C3E  EC85  F00D         	call	_SPI1_Exchange8bit
  1668                           
  1669                           ;main.c: 131: SPI1_Exchange8bit(DATABUSPARK[a]);
  1670  001C42  5003               	movf	MIPISPI@a,w,c
  1671  001C44  0D01               	mullw	1
  1672  001C46  0E33               	movlw	low _DATABUSPARK
  1673  001C48  24F3               	addwf	prodl,w,c
  1674  001C4A  6EF6               	movwf	tblptrl,c
  1675  001C4C  0E1F               	movlw	high _DATABUSPARK
  1676  001C4E  20F4               	addwfc	prodh,w,c
  1677  001C50  6EF7               	movwf	tblptrh,c
  1678  001C52                     	if	0	;There are less than 3 active tblptr bytes
  1679  001C52                     	endif
  1680  001C52  0008               	tblrd		*
  1681  001C54  50F5               	movf	tablat,w,c
  1682  001C56  EC85  F00D         	call	_SPI1_Exchange8bit
  1683                           
  1684                           ;main.c: 133: SSP1CON1bits.SSPEN1 = 0;
  1685  001C5A  9AC6               	bcf	4038,5,c	;volatile
  1686  001C5C  D000               	goto	l1173
  1687  001C5E                     l1173:
  1688  001C5E  8A8B               	bsf	3979,5,c	;volatile
  1689  001C60  D000               	goto	l1175
  1690  001C62                     l1175:
  1691  001C62  9A8B               	bcf	3979,5,c	;volatile
  1692  001C64  D000               	goto	l1177
  1693  001C66                     l1177:
  1694                           
  1695                           ;main.c: 136: SSP1CON1bits.SSPEN1 = 1;
  1696  001C66  8AC6               	bsf	4038,5,c	;volatile
  1697                           
  1698                           ;main.c: 138: SPI1_Exchange8bit(SLAVEWRITEADD[1]);
  1699  001C68  0EFE               	movlw	low (_SLAVEWRITEADD+1)
  1700  001C6A  6EF6               	movwf	tblptrl,c
  1701  001C6C  0E1F               	movlw	high (_SLAVEWRITEADD+1)
  1702  001C6E  6EF7               	movwf	tblptrh,c
  1703  001C70                     	if	0	;tblptru may be non-zero
  1704  001C70                     	endif
  1705  001C70                     	if	0	;tblptru may be non-zero
  1706  001C70                     	endif
  1707  001C70  0008               	tblrd		*
  1708  001C72  50F5               	movf	tablat,w,c
  1709  001C74  EC85  F00D         	call	_SPI1_Exchange8bit
  1710                           
  1711                           ;main.c: 139: SPI1_Exchange8bit(ADDRESSDATA[b]);
  1712  001C78  5002               	movf	MIPISPI@b,w,c
  1713  001C7A  0D01               	mullw	1
  1714  001C7C  0EB1               	movlw	low _ADDRESSDATA
  1715  001C7E  24F3               	addwf	prodl,w,c
  1716  001C80  6EF6               	movwf	tblptrl,c
  1717  001C82  0E1E               	movlw	high _ADDRESSDATA
  1718  001C84  20F4               	addwfc	prodh,w,c
  1719  001C86  6EF7               	movwf	tblptrh,c
  1720  001C88                     	if	0	;There are less than 3 active tblptr bytes
  1721  001C88                     	endif
  1722  001C88  0008               	tblrd		*
  1723  001C8A  50F5               	movf	tablat,w,c
  1724  001C8C  EC85  F00D         	call	_SPI1_Exchange8bit
  1725                           
  1726                           ;main.c: 140: SPI1_Exchange8bit(DATABUSPARK[b]);
  1727  001C90  5002               	movf	MIPISPI@b,w,c
  1728  001C92  0D01               	mullw	1
  1729  001C94  0E33               	movlw	low _DATABUSPARK
  1730  001C96  24F3               	addwf	prodl,w,c
  1731  001C98  6EF6               	movwf	tblptrl,c
  1732  001C9A  0E1F               	movlw	high _DATABUSPARK
  1733  001C9C  20F4               	addwfc	prodh,w,c
  1734  001C9E  6EF7               	movwf	tblptrh,c
  1735  001CA0                     	if	0	;There are less than 3 active tblptr bytes
  1736  001CA0                     	endif
  1737  001CA0  0008               	tblrd		*
  1738  001CA2  50F5               	movf	tablat,w,c
  1739  001CA4  EC85  F00D         	call	_SPI1_Exchange8bit
  1740  001CA8  0012               	return		;funcret
  1741  001CAA                     __end_of_MIPISPI:
  1742                           	opt stack 0
  1743                           tblptru	equ	0xFF8
  1744                           tblptrh	equ	0xFF7
  1745                           tblptrl	equ	0xFF6
  1746                           tablat	equ	0xFF5
  1747                           prodh	equ	0xFF4
  1748                           prodl	equ	0xFF3
  1749                           intcon	equ	0xFF2
  1750                           intcon2	equ	0xFF1
  1751                           postinc0	equ	0xFEE
  1752                           wreg	equ	0xFE8
  1753                           status	equ	0xFD8
  1754                           
  1755 ;; *************** function _SPI1_Exchange8bit *****************
  1756 ;; Defined at:
  1757 ;;		line 77 in file "mcc_generated_files/spi1.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;  data            1    wreg     unsigned char 
  1760 ;; Auto vars:     Size  Location     Type
  1761 ;;  data            1    0[COMRAM] unsigned char 
  1762 ;; Return value:  Size  Location     Type
  1763 ;;                  1    wreg      unsigned char 
  1764 ;; Registers used:
  1765 ;;		wreg, status,2
  1766 ;; Tracked objects:
  1767 ;;		On entry : 0/0
  1768 ;;		On exit  : 0/0
  1769 ;;		Unchanged: 0/0
  1770 ;; Data sizes:     COMRAM   BANK0   BANK1
  1771 ;;      Params:         0       0       0
  1772 ;;      Locals:         1       0       0
  1773 ;;      Temps:          0       0       0
  1774 ;;      Totals:         1       0       0
  1775 ;;Total ram usage:        1 bytes
  1776 ;; Hardware stack levels used:    1
  1777 ;; This function calls:
  1778 ;;		Nothing
  1779 ;; This function is called by:
  1780 ;;		_MIPISPI
  1781 ;;		_SPI1_Exchange8bitBuffer
  1782 ;; This function uses a non-reentrant model
  1783 ;;
  1784                           
  1785                           	psect	text9
  1786  001B0A                     __ptext9:
  1787                           	opt stack 0
  1788  001B0A                     _SPI1_Exchange8bit:
  1789                           	opt stack 29
  1790                           
  1791                           ;incstack = 0
  1792                           ;SPI1_Exchange8bit@data stored from wreg
  1793  001B0A  6E01               	movwf	SPI1_Exchange8bit@data,c
  1794                           
  1795                           ;spi1.c: 79: SSP1CON1bits.WCOL = 0;
  1796  001B0C  9EC6               	bcf	4038,7,c	;volatile
  1797                           
  1798                           ;spi1.c: 81: SSP1BUF = data;
  1799  001B0E  C001  FFC9         	movff	SPI1_Exchange8bit@data,4041	;volatile
  1800                           
  1801                           ;spi1.c: 83: while (SSP1STATbits.BF == 0x0) {
  1802  001B12  D000               	goto	l84
  1803  001B14                     l84:
  1804  001B14  A0C7               	btfss	4039,0,c	;volatile
  1805  001B16  D7FE               	goto	l84
  1806                           
  1807                           ;spi1.c: 84: }
  1808                           ;spi1.c: 86: return (SSP1BUF);
  1809  001B18  50C9               	movf	4041,w,c	;volatile
  1810  001B1A  0012               	return		;funcret
  1811  001B1C                     __end_of_SPI1_Exchange8bit:
  1812                           	opt stack 0
  1813                           tblptru	equ	0xFF8
  1814                           tblptrh	equ	0xFF7
  1815                           tblptrl	equ	0xFF6
  1816                           tablat	equ	0xFF5
  1817                           prodh	equ	0xFF4
  1818                           prodl	equ	0xFF3
  1819                           intcon	equ	0xFF2
  1820                           intcon2	equ	0xFF1
  1821                           postinc0	equ	0xFEE
  1822                           wreg	equ	0xFE8
  1823                           status	equ	0xFD8
  1824                           
  1825 ;; *************** function _DAC_SetOutput *****************
  1826 ;; Defined at:
  1827 ;;		line 64 in file "mcc_generated_files/dac.c"
  1828 ;; Parameters:    Size  Location     Type
  1829 ;;  inputData       1    wreg     unsigned char 
  1830 ;; Auto vars:     Size  Location     Type
  1831 ;;  inputData       1    0[COMRAM] unsigned char 
  1832 ;; Return value:  Size  Location     Type
  1833 ;;		None               void
  1834 ;; Registers used:
  1835 ;;		wreg
  1836 ;; Tracked objects:
  1837 ;;		On entry : 0/0
  1838 ;;		On exit  : 0/0
  1839 ;;		Unchanged: 0/0
  1840 ;; Data sizes:     COMRAM   BANK0   BANK1
  1841 ;;      Params:         0       0       0
  1842 ;;      Locals:         1       0       0
  1843 ;;      Temps:          0       0       0
  1844 ;;      Totals:         1       0       0
  1845 ;;Total ram usage:        1 bytes
  1846 ;; Hardware stack levels used:    1
  1847 ;; This function calls:
  1848 ;;		Nothing
  1849 ;; This function is called by:
  1850 ;;		_main
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853                           
  1854                           	psect	text10
  1855  001ACC                     __ptext10:
  1856                           	opt stack 0
  1857  001ACC                     _DAC_SetOutput:
  1858                           	opt stack 30
  1859                           
  1860                           ;incstack = 0
  1861                           ;DAC_SetOutput@inputData stored from wreg
  1862  001ACC  6E01               	movwf	DAC_SetOutput@inputData,c
  1863                           
  1864                           ;dac.c: 65: DACCON1 = inputData;
  1865  001ACE  C001  FF40         	movff	DAC_SetOutput@inputData,3904	;volatile
  1866  001AD2  0012               	return		;funcret
  1867  001AD4                     __end_of_DAC_SetOutput:
  1868                           	opt stack 0
  1869                           tblptru	equ	0xFF8
  1870                           tblptrh	equ	0xFF7
  1871                           tblptrl	equ	0xFF6
  1872                           tablat	equ	0xFF5
  1873                           prodh	equ	0xFF4
  1874                           prodl	equ	0xFF3
  1875                           intcon	equ	0xFF2
  1876                           intcon2	equ	0xFF1
  1877                           postinc0	equ	0xFEE
  1878                           wreg	equ	0xFE8
  1879                           status	equ	0xFD8
  1880                           tblptru	equ	0xFF8
  1881                           tblptrh	equ	0xFF7
  1882                           tblptrl	equ	0xFF6
  1883                           tablat	equ	0xFF5
  1884                           prodh	equ	0xFF4
  1885                           prodl	equ	0xFF3
  1886                           intcon	equ	0xFF2
  1887                           intcon2	equ	0xFF1
  1888                           postinc0	equ	0xFEE
  1889                           wreg	equ	0xFE8
  1890                           status	equ	0xFD8
  1891                           
  1892                           	psect	rparam
  1893  0000                     tblptru	equ	0xFF8
  1894                           tblptrh	equ	0xFF7
  1895                           tblptrl	equ	0xFF6
  1896                           tablat	equ	0xFF5
  1897                           prodh	equ	0xFF4
  1898                           prodl	equ	0xFF3
  1899                           intcon	equ	0xFF2
  1900                           intcon2	equ	0xFF1
  1901                           postinc0	equ	0xFEE
  1902                           wreg	equ	0xFE8
  1903                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    334
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      19
    BANK0           160      0       0
    BANK1           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___awdiv
    _MIPISPI->_SPI1_Exchange8bit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     547
                                              8 COMRAM     2     2      0
                      _DAC_SetOutput
                            _MIPISPI
                  _SYSTEM_Initialize
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     386
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _DAC_Initialize
     _INTERRUPT_ON_CHANGE_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_ON_CHANGE_Initialize                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DAC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MIPISPI                                              2     1      1     146
                                              1 COMRAM     2     1      1
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (2) _SPI1_Exchange8bit                                    1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DAC_SetOutput                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DAC_SetOutput
   _MIPISPI
     _SPI1_Exchange8bit
   _SYSTEM_Initialize
     _DAC_Initialize
     _INTERRUPT_ON_CHANGE_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
   ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      A      13       1       20.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      13       6        0.0%
DATA                 0      0      13       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri May 06 15:56:51 2016

                      _SPI1_Exchange8bit 1B0A                              __CFG_CP0$ON 000000  
                            __CFG_CP1$ON 000000                       ?_SPI1_Exchange8bit 0001  
                                     l84 1B14                              __CFG_CPB$ON 000000  
                            __CFG_CPD$ON 000000                             ___awdiv@sign 0006  
                            __CFG_LVP$ON 000000                                      l220 1D1E  
                                    l302 1EA8                                      l311 1E24  
                                    l304 1E18                                      l313 1E28  
                                    l233 1D62                                      l217 1D12  
                                    l322 1E36                                      l306 1E1C  
                                    l226 1D5A                                      l227 1D56  
                                    l332 1E44                                      l252 1D88  
                                    l341 1E54                                      l325 1E3A  
                                    l245 1D7C                                      l237 1D72  
                                    l182 1C16                                      l350 1E62  
                                    l334 1E48                                      l318 1E30  
                                    l254 1D8C                                      l263 1D9A  
                                    l247 1D80                                      l280 1DB4  
                                    l273 1DA8                                      l346 1E5C  
                                    l282 1DB8                                      l266 1D9E  
                                    l339 1E50                                      l291 1DC6  
                                    l275 1DAC                                      l259 1D94  
                                    l287 1DC0                                      l296 1E0E  
                    ??_SPI1_Exchange8bit 0001                                      wreg 000FE8  
                                   l1205 1BB6                                     l1221 1BF2  
                                   l1207 1BC0                                     l1225 1C02  
                                   l1217 1BE6                                     l1209 1BC8  
                                   l1241 1CC6                                     l1233 1CB4  
                                   l1243 1CCA                                     l1235 1CBA  
                                   l1173 1C5E                                     l1253 1CDE  
                                   l1245 1CCE                                     l1237 1CBE  
                                   l1175 1C62                                     l1271 1D66  
                                   l1255 1CEE                                     l1239 1CC2  
                                   l1247 1CD2                                     l1177 1C66  
                                   l1193 1B8E                                     l1275 1DCA  
                                   l1259 1D00                                     l1199 1BA0  
                                   l1279 1E66                          __end_of_MIPISPI 1CAA  
                                   _DATA 1EF2                                     _IOCB 000F62  
                                   _LATA 000F89                                     _LATB 000F8A  
                                   _LATC 000F8B                                     _WPUB 000F61  
                                   _main 1CAA                            __CFG_BORV$190 000000  
                  __end_of_SLAVEWRITEADD 1FFF                                     prodh 000FF4  
                                   prodl 000FF3                                     start 0000  
              __end_of_SPI1_Exchange8bit 1B1C                            __CFG_IESO$OFF 000000  
                           ___param_bank 000010           __size_of_OSCILLATOR_Initialize 000E  
          __end_of_OSCILLATOR_Initialize 1AFC                                    ?_main 0001  
                        __end_of___awdiv 1C0E                          ___awdiv@divisor 0003  
                                  _LATA0 007C48                                    _LATA1 007C49  
                                  _LATC0 007C58                                    _LATC1 007C59  
                                  _LATC2 007C5A                                    _LATA6 007C4E  
                                  _LATA7 007C4F                                    _LATC4 007C5C  
                                  _LATC5 007C5D                           __CFG_DEBUG$OFF 000000  
                        ___awdiv@counter 0005                                    _PORTB 000F81  
                                  _TRISA 000F92                                    _TRISB 000F93  
                                  _TRISC 000F94                         __end_of_SLAVEADD 1FFD  
                          __CFG_WRT0$OFF 000000                            __CFG_WRT1$OFF 000000  
                                  _Byte1 000B                                    _Byte2 000C  
                                  _Byte3 000D                                    _Byte4 000E  
                                  _Byte5 000F                                    _Byte6 0010  
                                  _Dummy 0012                           __CFG_EBTR0$OFF 000000  
                         __CFG_FCMEN$OFF 000000                           __CFG_EBTR1$OFF 000000  
                          __CFG_WRTB$OFF 000000                            __CFG_WRTC$OFF 000000  
                          __CFG_WRTD$OFF 000000                           __CFG_EBTRB$OFF 000000  
                     __CFG_MCLRE$EXTMCLR 000000                                    _start 0013  
                         __CFG_BOREN$OFF 000000                                    tablat 000FF5  
                                  status 000FD8                           __CFG_HFOFST$ON 000000  
               __size_of_SPI1_Initialize 000E                             __end_of_DATA 1F33  
                       ??_DAC_Initialize 0001                          __initialization 1B32  
                           __end_of_main 1EB0                                   ??_main 0009  
                          __activetblptr 000002                           __CFG_PLLCFG$ON 000000  
                              ??_MIPISPI 0003                         ___awdiv@dividend 0001  
                                 _ANSELA 000F38                                   _ANSELB 000F39  
                                 _ANSELC 000F3A                           __CFG_WDTEN$OFF 000000  
                                 _REGADD 1FF9                                   _PARITY 1F74  
                                 _OSCCON 000FD3                    SPI1_Exchange8bit@data 0001  
             __size_of_SPI1_Exchange8bit 0012                           __CFG_XINST$OFF 000000  
                              ??___awdiv 0005                                   clear_0 1B38  
                       ___awdiv@quotient 0007                       __end_of_ACTIVEBAND 1FF5  
                      __end_of_DacOutput 1FF9                             __mediumconst 1EB0  
                                 tblptrh 000FF7                                   tblptrl 000FF6  
                                 tblptru 000FF8                        _SYSTEM_Initialize 1B1C  
                             __accesstop 0060                  __end_of__initialization 1B3E  
                        __CFG_PBADEN$OFF 000000                       ?_SYSTEM_Initialize 0001  
                          ___rparam_used 000001                   DAC_SetOutput@inputData 0001  
                         __pcstackCOMRAM 0001                      ??_SYSTEM_Initialize 0001  
                      ??_SPI1_Initialize 0001                   __size_of_DAC_SetOutput 0008  
              __end_of_SYSTEM_Initialize 1B32                       __CFG_CCP2MX$PORTC1 000000  
                     __CFG_CCP3MX$PORTB5 000000                                  _DACCON1 000F40  
                                _MIPISPI 1C0E                                  _OSCCON2 000FD2  
                                _OSCTUNE 000F9B                                  _SSP1ADD 000FC8  
                                _SSP1BUF 000FC9                      __end_of_ADDRESSDATA 1EF2  
                        __CFG_PWRTEN$OFF 000000                                  __Hparam 0000  
                                __Lparam 0000                            _DAC_SetOutput 1ACC  
                                ___awdiv 1B78   __end_of_INTERRUPT_ON_CHANGE_Initialize 1AE0  
__size_of_INTERRUPT_ON_CHANGE_Initialize 000C           _INTERRUPT_ON_CHANGE_Initialize 1AD4  
                        __CFG_STVREN$OFF 000000                                  __pcinit 1B32  
                                __ramtop 0200                                  __ptext0 1CAA  
                                __ptext1 1B78                                  __ptext2 1B1C  
                                __ptext3 1AFC                                  __ptext4 1B48  
                                __ptext5 1AEE                                  __ptext6 1AD4  
                                __ptext7 1AE0                                  __ptext8 1C0E  
                                __ptext9 1B0A                    _OSCILLATOR_Initialize 1AEE  
               ??_PIN_MANAGER_Initialize 0001               __size_of_SYSTEM_Initialize 0016  
                   end_of_initialization 1B3E                      __end_of_DATABUSPARK 1F74  
                          __Lmediumconst 1EB0                           ?_DAC_SetOutput 0001  
                                postinc0 000FEE                                _DacOutput 1FF5  
                            _ADDRESSDATA 1EB1                           __end_of_REGADD 1FFB  
                        _SPI1_Initialize 1AFC                           __end_of_PARITY 1FB5  
                          _SLAVEWRITEADD 1FFD                   ?_OSCILLATOR_Initialize 0001  
                __size_of_DAC_Initialize 000E                      start_initialization 1B32  
        __size_of_PIN_MANAGER_Initialize 0030                              _DATABUSPARK 1F33  
                        ??_DAC_SetOutput 0001                              __pbssCOMRAM 000B  
                               ?_MIPISPI 0002                  __end_of_SPI1_Initialize 1B0A  
                               MIPISPI@a 0003                                 MIPISPI@b 0002  
                 _PIN_MANAGER_Initialize 1B48                            __pmediumconst 1EB0  
                               ?___awdiv 0001                         __CFG_PRICLKEN$ON 000000  
                               _DAC_Step 0011         ??_INTERRUPT_ON_CHANGE_Initialize 0001  
        ?_INTERRUPT_ON_CHANGE_Initialize 0001                                 _SLAVEADD 1FFB  
                       __CFG_WDTPS$32768 000000                                 _SSP1CON1 000FC6  
                               _SSP1STAT 000FC7                                 _VREFCON1 000F41  
                         _DAC_Initialize 1AE0                         __size_of_MIPISPI 009C  
                       ?_SPI1_Initialize 0001                              _INTCON2bits 000FF1  
                             _ACTIVEBAND 1FB5                                 __Hrparam 0000  
                               __Lrparam 0000                        __CFG_P2BMX$PORTB5 000000  
                ??_OSCILLATOR_Initialize 0001                         __size_of___awdiv 0096  
                 __end_of_DAC_Initialize 1AEE                                 __ptext10 1ACC  
                           _SSP1CON1bits 000FC6                            __size_of_main 0206  
                        ?_DAC_Initialize 0001                             _SSP1STATbits 000FC7  
                             _INTCONbits 000FF2                  ?_PIN_MANAGER_Initialize 0001  
                  __end_of_DAC_SetOutput 1AD4                        __CFG_T3CMX$PORTC0 000000  
         __end_of_PIN_MANAGER_Initialize 1B78                        __CFG_FOSC$INTIO67 000000  
