

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri May 06 13:02:44 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18LF23K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    21  0000                     
    22                           	psect	mediumconst
    23  001EB0                     __pmediumconst:
    24                           	opt stack 0
    25  001EB0  00                 	db	0
    26  001EB1                     _ADDRESSDATA:
    27                           	opt stack 0
    28  001EB1  18                 	db	24
    29  001EB2  18                 	db	24
    30  001EB3  18                 	db	24
    31  001EB4  18                 	db	24
    32  001EB5  18                 	db	24
    33  001EB6  18                 	db	24
    34  001EB7  18                 	db	24
    35  001EB8  18                 	db	24
    36  001EB9  18                 	db	24
    37  001EBA  18                 	db	24
    38  001EBB  18                 	db	24
    39  001EBC  18                 	db	24
    40  001EBD  18                 	db	24
    41  001EBE  18                 	db	24
    42  001EBF  18                 	db	24
    43  001EC0  18                 	db	24
    44  001EC1  18                 	db	24
    45  001EC2  18                 	db	24
    46  001EC3  18                 	db	24
    47  001EC4  18                 	db	24
    48  001EC5  18                 	db	24
    49  001EC6  18                 	db	24
    50  001EC7  18                 	db	24
    51  001EC8  18                 	db	24
    52  001EC9  18                 	db	24
    53  001ECA  18                 	db	24
    54  001ECB  18                 	db	24
    55  001ECC  18                 	db	24
    56  001ECD  18                 	db	24
    57  001ECE  18                 	db	24
    58  001ECF  18                 	db	24
    59  001ED0  18                 	db	24
    60  001ED1  19                 	db	25
    61  001ED2  19                 	db	25
    62  001ED3  19                 	db	25
    63  001ED4  19                 	db	25
    64  001ED5  19                 	db	25
    65  001ED6  19                 	db	25
    66  001ED7  19                 	db	25
    67  001ED8  19                 	db	25
    68  001ED9  19                 	db	25
    69  001EDA  19                 	db	25
    70  001EDB  19                 	db	25
    71  001EDC  19                 	db	25
    72  001EDD  19                 	db	25
    73  001EDE  19                 	db	25
    74  001EDF  19                 	db	25
    75  001EE0  19                 	db	25
    76  001EE1  19                 	db	25
    77  001EE2  19                 	db	25
    78  001EE3  19                 	db	25
    79  001EE4  19                 	db	25
    80  001EE5  19                 	db	25
    81  001EE6  19                 	db	25
    82  001EE7  19                 	db	25
    83  001EE8  19                 	db	25
    84  001EE9  19                 	db	25
    85  001EEA  19                 	db	25
    86  001EEB  19                 	db	25
    87  001EEC  19                 	db	25
    88  001EED  19                 	db	25
    89  001EEE  19                 	db	25
    90  001EEF  19                 	db	25
    91  001EF0  19                 	db	25
    92  001EF1  1A                 	db	26
    93  001EF2                     __end_of_ADDRESSDATA:
    94                           	opt stack 0
    95  001EF2                     _DATA:
    96                           	opt stack 0
    97  001EF2  00                 	db	0
    98  001EF3  80                 	db	128
    99  001EF4  40                 	db	64
   100  001EF5  C0                 	db	192
   101  001EF6  20                 	db	32
   102  001EF7  A0                 	db	160
   103  001EF8  60                 	db	96
   104  001EF9  E0                 	db	224
   105  001EFA  10                 	db	16
   106  001EFB  90                 	db	144
   107  001EFC  50                 	db	80
   108  001EFD  D0                 	db	208
   109  001EFE  30                 	db	48
   110  001EFF  B0                 	db	176
   111  001F00  70                 	db	112
   112  001F01  F0                 	db	240
   113  001F02  08                 	db	8
   114  001F03  88                 	db	136
   115  001F04  48                 	db	72
   116  001F05  C8                 	db	200
   117  001F06  28                 	db	40
   118  001F07  A8                 	db	168
   119  001F08  68                 	db	104
   120  001F09  E8                 	db	232
   121  001F0A  18                 	db	24
   122  001F0B  98                 	db	152
   123  001F0C  58                 	db	88
   124  001F0D  D8                 	db	216
   125  001F0E  38                 	db	56
   126  001F0F  B8                 	db	184
   127  001F10  78                 	db	120
   128  001F11  F8                 	db	248
   129  001F12  04                 	db	4
   130  001F13  84                 	db	132
   131  001F14  44                 	db	68
   132  001F15  C4                 	db	196
   133  001F16  24                 	db	36
   134  001F17  A4                 	db	164
   135  001F18  64                 	db	100
   136  001F19  E4                 	db	228
   137  001F1A  14                 	db	20
   138  001F1B  94                 	db	148
   139  001F1C  54                 	db	84
   140  001F1D  D4                 	db	212
   141  001F1E  34                 	db	52
   142  001F1F  B4                 	db	180
   143  001F20  74                 	db	116
   144  001F21  F4                 	db	244
   145  001F22  0C                 	db	12
   146  001F23  8C                 	db	140
   147  001F24  4C                 	db	76
   148  001F25  CC                 	db	204
   149  001F26  2C                 	db	44
   150  001F27  AC                 	db	172
   151  001F28  6C                 	db	108
   152  001F29  EC                 	db	236
   153  001F2A  1C                 	db	28
   154  001F2B  9C                 	db	156
   155  001F2C  5C                 	db	92
   156  001F2D  DC                 	db	220
   157  001F2E  3C                 	db	60
   158  001F2F  BC                 	db	188
   159  001F30  7C                 	db	124
   160  001F31  FC                 	db	252
   161  001F32  06                 	db	6
   162  001F33                     __end_of_DATA:
   163                           	opt stack 0
   164  001F33                     _DATABUSPARK:
   165                           	opt stack 0
   166  001F33  04                 	db	4
   167  001F34  08                 	db	8
   168  001F35  10                 	db	16
   169  001F36  1C                 	db	28
   170  001F37  20                 	db	32
   171  001F38  2C                 	db	44
   172  001F39  34                 	db	52
   173  001F3A  38                 	db	56
   174  001F3B  40                 	db	64
   175  001F3C  4C                 	db	76
   176  001F3D  54                 	db	84
   177  001F3E  58                 	db	88
   178  001F3F  64                 	db	100
   179  001F40  68                 	db	104
   180  001F41  70                 	db	112
   181  001F42  7C                 	db	124
   182  001F43  80                 	db	128
   183  001F44  8C                 	db	140
   184  001F45  94                 	db	148
   185  001F46  98                 	db	152
   186  001F47  A4                 	db	164
   187  001F48  A8                 	db	168
   188  001F49  B0                 	db	176
   189  001F4A  BC                 	db	188
   190  001F4B  C4                 	db	196
   191  001F4C  C8                 	db	200
   192  001F4D  D0                 	db	208
   193  001F4E  DC                 	db	220
   194  001F4F  E0                 	db	224
   195  001F50  EC                 	db	236
   196  001F51  F4                 	db	244
   197  001F52  F8                 	db	248
   198  001F53  00                 	db	0
   199  001F54  0C                 	db	12
   200  001F55  14                 	db	20
   201  001F56  18                 	db	24
   202  001F57  24                 	db	36
   203  001F58  28                 	db	40
   204  001F59  30                 	db	48
   205  001F5A  3C                 	db	60
   206  001F5B  44                 	db	68
   207  001F5C  48                 	db	72
   208  001F5D  50                 	db	80
   209  001F5E  5C                 	db	92
   210  001F5F  60                 	db	96
   211  001F60  6C                 	db	108
   212  001F61  74                 	db	116
   213  001F62  78                 	db	120
   214  001F63  84                 	db	132
   215  001F64  88                 	db	136
   216  001F65  90                 	db	144
   217  001F66  9C                 	db	156
   218  001F67  A0                 	db	160
   219  001F68  AC                 	db	172
   220  001F69  B4                 	db	180
   221  001F6A  B8                 	db	184
   222  001F6B  C0                 	db	192
   223  001F6C  CC                 	db	204
   224  001F6D  D4                 	db	212
   225  001F6E  D8                 	db	216
   226  001F6F  E4                 	db	228
   227  001F70  E8                 	db	232
   228  001F71  F0                 	db	240
   229  001F72  FC                 	db	252
   230  001F73  04                 	db	4
   231  001F74                     __end_of_DATABUSPARK:
   232                           	opt stack 0
   233  001F74                     _PARITY:
   234                           	opt stack 0
   235  001F74  01                 	db	1
   236  001F75  00                 	db	0
   237  001F76  00                 	db	0
   238  001F77  01                 	db	1
   239  001F78  00                 	db	0
   240  001F79  01                 	db	1
   241  001F7A  01                 	db	1
   242  001F7B  00                 	db	0
   243  001F7C  00                 	db	0
   244  001F7D  01                 	db	1
   245  001F7E  01                 	db	1
   246  001F7F  00                 	db	0
   247  001F80  01                 	db	1
   248  001F81  00                 	db	0
   249  001F82  00                 	db	0
   250  001F83  01                 	db	1
   251  001F84  00                 	db	0
   252  001F85  01                 	db	1
   253  001F86  01                 	db	1
   254  001F87  00                 	db	0
   255  001F88  01                 	db	1
   256  001F89  00                 	db	0
   257  001F8A  00                 	db	0
   258  001F8B  01                 	db	1
   259  001F8C  01                 	db	1
   260  001F8D  00                 	db	0
   261  001F8E  00                 	db	0
   262  001F8F  01                 	db	1
   263  001F90  00                 	db	0
   264  001F91  01                 	db	1
   265  001F92  01                 	db	1
   266  001F93  00                 	db	0
   267  001F94  00                 	db	0
   268  001F95  01                 	db	1
   269  001F96  01                 	db	1
   270  001F97  00                 	db	0
   271  001F98  01                 	db	1
   272  001F99  00                 	db	0
   273  001F9A  00                 	db	0
   274  001F9B  01                 	db	1
   275  001F9C  01                 	db	1
   276  001F9D  00                 	db	0
   277  001F9E  00                 	db	0
   278  001F9F  01                 	db	1
   279  001FA0  00                 	db	0
   280  001FA1  01                 	db	1
   281  001FA2  01                 	db	1
   282  001FA3  00                 	db	0
   283  001FA4  01                 	db	1
   284  001FA5  00                 	db	0
   285  001FA6  00                 	db	0
   286  001FA7  01                 	db	1
   287  001FA8  00                 	db	0
   288  001FA9  01                 	db	1
   289  001FAA  01                 	db	1
   290  001FAB  00                 	db	0
   291  001FAC  00                 	db	0
   292  001FAD  01                 	db	1
   293  001FAE  01                 	db	1
   294  001FAF  00                 	db	0
   295  001FB0  01                 	db	1
   296  001FB1  00                 	db	0
   297  001FB2  00                 	db	0
   298  001FB3  01                 	db	1
   299  001FB4  01                 	db	1
   300  001FB5                     __end_of_PARITY:
   301                           	opt stack 0
   302  001FB5                     _ACTIVEBAND:
   303                           	opt stack 0
   304  001FB5  00                 	db	0
   305  001FB6  00                 	db	0
   306  001FB7  00                 	db	0
   307  001FB8  00                 	db	0
   308  001FB9  00                 	db	0
   309  001FBA  01                 	db	1
   310  001FBB  00                 	db	0
   311  001FBC  00                 	db	0
   312  001FBD  01                 	db	1
   313  001FBE  00                 	db	0
   314  001FBF  00                 	db	0
   315  001FC0  00                 	db	0
   316  001FC1  01                 	db	1
   317  001FC2  01                 	db	1
   318  001FC3  00                 	db	0
   319  001FC4  00                 	db	0
   320  001FC5  00                 	db	0
   321  001FC6  00                 	db	0
   322  001FC7  00                 	db	0
   323  001FC8  00                 	db	0
   324  001FC9  01                 	db	1
   325  001FCA  00                 	db	0
   326  001FCB  00                 	db	0
   327  001FCC  00                 	db	0
   328  001FCD  00                 	db	0
   329  001FCE  00                 	db	0
   330  001FCF  01                 	db	1
   331  001FD0  00                 	db	0
   332  001FD1  00                 	db	0
   333  001FD2  01                 	db	1
   334  001FD3  00                 	db	0
   335  001FD4  00                 	db	0
   336  001FD5  00                 	db	0
   337  001FD6  00                 	db	0
   338  001FD7  00                 	db	0
   339  001FD8  00                 	db	0
   340  001FD9  00                 	db	0
   341  001FDA  00                 	db	0
   342  001FDB  00                 	db	0
   343  001FDC  00                 	db	0
   344  001FDD  00                 	db	0
   345  001FDE  00                 	db	0
   346  001FDF  00                 	db	0
   347  001FE0  00                 	db	0
   348  001FE1  00                 	db	0
   349  001FE2  00                 	db	0
   350  001FE3  00                 	db	0
   351  001FE4  00                 	db	0
   352  001FE5  00                 	db	0
   353  001FE6  00                 	db	0
   354  001FE7  00                 	db	0
   355  001FE8  00                 	db	0
   356  001FE9  00                 	db	0
   357  001FEA  00                 	db	0
   358  001FEB  00                 	db	0
   359  001FEC  00                 	db	0
   360  001FED  00                 	db	0
   361  001FEE  00                 	db	0
   362  001FEF  00                 	db	0
   363  001FF0  00                 	db	0
   364  001FF1  00                 	db	0
   365  001FF2  00                 	db	0
   366  001FF3  00                 	db	0
   367  001FF4  00                 	db	0
   368  001FF5                     __end_of_ACTIVEBAND:
   369                           	opt stack 0
   370  001FF5                     _DacOutput:
   371                           	opt stack 0
   372  001FF5  2B                 	db	43
   373  001FF6  48                 	db	72
   374  001FF7  56                 	db	86
   375  001FF8  64                 	db	100
   376  001FF9                     __end_of_DacOutput:
   377                           	opt stack 0
   378  001FF9                     _REGADD:
   379                           	opt stack 0
   380  001FF9  07                 	db	7
   381  001FFA  10                 	db	16
   382  001FFB                     __end_of_REGADD:
   383                           	opt stack 0
   384  001FFB                     _SLAVEADD:
   385                           	opt stack 0
   386  001FFB  06                 	db	6
   387  001FFC  0E                 	db	14
   388  001FFD                     __end_of_SLAVEADD:
   389                           	opt stack 0
   390  001FFD                     _SLAVEWRITEADD:
   391                           	opt stack 0
   392  001FFD  64                 	db	100
   393  001FFE  74                 	db	116
   394  001FFF                     __end_of_SLAVEWRITEADD:
   395                           	opt stack 0
   396  0000                     _ANSELA	set	3896
   397  0000                     _ANSELB	set	3897
   398  0000                     _ANSELC	set	3898
   399  0000                     _DACCON1	set	3904
   400  0000                     _VREFCON1	set	3905
   401  0000                     _INTCON2bits	set	4081
   402  0000                     _INTCONbits	set	4082
   403  0000                     _IOCB	set	3938
   404  0000                     _LATA	set	3977
   405  0000                     _LATB	set	3978
   406  0000                     _LATC	set	3979
   407  0000                     _OSCCON	set	4051
   408  0000                     _OSCCON2	set	4050
   409  0000                     _OSCTUNE	set	3995
   410  0000                     _PORTB	set	3969
   411  0000                     _SSP1ADD	set	4040
   412  0000                     _SSP1BUF	set	4041
   413  0000                     _SSP1CON1	set	4038
   414  0000                     _SSP1CON1bits	set	4038
   415  0000                     _SSP1STAT	set	4039
   416  0000                     _SSP1STATbits	set	4039
   417  0000                     _TRISA	set	3986
   418  0000                     _TRISB	set	3987
   419  0000                     _TRISC	set	3988
   420  0000                     _WPUB	set	3937
   421  0000                     _LATA0	set	31816
   422  0000                     _LATA1	set	31817
   423  0000                     _LATA6	set	31822
   424  0000                     _LATA7	set	31823
   425  0000                     _LATC0	set	31832
   426  0000                     _LATC1	set	31833
   427  0000                     _LATC2	set	31834
   428  0000                     _LATC4	set	31836
   429  0000                     _LATC5	set	31837
   430                           
   431                           ; #config settings
   432  001FFF  00                 	db	0	; dummy byte at the end
   433  0000                     
   434                           	psect	cinit
   435  001BDA                     __pcinit:
   436                           	opt stack 0
   437  001BDA                     start_initialization:
   438                           	opt stack 0
   439  001BDA                     __initialization:
   440                           	opt stack 0
   441                           
   442                           ; Clear objects allocated to COMRAM (9 bytes)
   443  001BDA  EE00  F001         	lfsr	0,__pbssCOMRAM
   444  001BDE  0E09               	movlw	9
   445  001BE0                     clear_0:
   446  001BE0  6AEE               	clrf	postinc0,c
   447  001BE2  06E8               	decf	wreg,f,c
   448  001BE4  E1FD               	bnz	clear_0
   449  001BE6                     end_of_initialization:
   450                           	opt stack 0
   451  001BE6                     __end_of__initialization:
   452                           	opt stack 0
   453  001BE6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   454  001BE8  6EF8               	movwf	tblptru,c
   455  001BEA  0100               	movlb	0
   456  001BEC  EF5E  F00E         	goto	_main	;jump to C main() function
   457                           tblptru	equ	0xFF8
   458                           postinc0	equ	0xFEE
   459                           wreg	equ	0xFE8
   460                           
   461                           	psect	bssCOMRAM
   462  000001                     __pbssCOMRAM:
   463                           	opt stack 0
   464  000001                     _Byte1:
   465                           	opt stack 0
   466  000001                     	ds	1
   467  000002                     _Byte2:
   468                           	opt stack 0
   469  000002                     	ds	1
   470  000003                     _Byte3:
   471                           	opt stack 0
   472  000003                     	ds	1
   473  000004                     _Byte4:
   474                           	opt stack 0
   475  000004                     	ds	1
   476  000005                     _Byte5:
   477                           	opt stack 0
   478  000005                     	ds	1
   479  000006                     _Byte6:
   480                           	opt stack 0
   481  000006                     	ds	1
   482  000007                     _DAC_Step:
   483                           	opt stack 0
   484  000007                     	ds	1
   485  000008                     _Dummy:
   486                           	opt stack 0
   487  000008                     	ds	1
   488  000009                     _start:
   489                           	opt stack 0
   490  000009                     	ds	1
   491                           tblptru	equ	0xFF8
   492                           postinc0	equ	0xFEE
   493                           wreg	equ	0xFE8
   494                           
   495                           	psect	cstackCOMRAM
   496  00000A                     __pcstackCOMRAM:
   497                           	opt stack 0
   498  00000A                     DAC_SetOutput@inputData:
   499                           	opt stack 0
   500  00000A                     SPI1_Exchange8bit@data:
   501                           	opt stack 0
   502                           
   503                           ; 1 bytes @ 0x0
   504  00000A                     	ds	1
   505  00000B                     MIPISPI@b:
   506                           	opt stack 0
   507                           
   508                           ; 1 bytes @ 0x1
   509  00000B                     	ds	1
   510  00000C                     MIPISPI@a:
   511                           	opt stack 0
   512                           
   513                           ; 1 bytes @ 0x2
   514  00000C                     	ds	1
   515  00000D                     ??_main:
   516                           
   517                           ; 0 bytes @ 0x3
   518  00000D                     	ds	2
   519                           tblptru	equ	0xFF8
   520                           postinc0	equ	0xFEE
   521                           wreg	equ	0xFE8
   522                           
   523 ;;
   524 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   525 ;;
   526 ;; *************** function _main *****************
   527 ;; Defined at:
   528 ;;		line 145 in file "main.c"
   529 ;; Parameters:    Size  Location     Type
   530 ;;		None
   531 ;; Auto vars:     Size  Location     Type
   532 ;;		None
   533 ;; Return value:  Size  Location     Type
   534 ;;		None               void
   535 ;; Registers used:
   536 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   537 ;; Tracked objects:
   538 ;;		On entry : 0/0
   539 ;;		On exit  : 0/0
   540 ;;		Unchanged: 0/0
   541 ;; Data sizes:     COMRAM   BANK0   BANK1
   542 ;;      Params:         0       0       0
   543 ;;      Locals:         0       0       0
   544 ;;      Temps:          2       0       0
   545 ;;      Totals:         2       0       0
   546 ;;Total ram usage:        2 bytes
   547 ;; Hardware stack levels required when called:    2
   548 ;; This function calls:
   549 ;;		_DAC_SetOutput
   550 ;;		_MIPISPI
   551 ;;		_SYSTEM_Initialize
   552 ;; This function is called by:
   553 ;;		Startup code after reset
   554 ;; This function uses a non-reentrant model
   555 ;;
   556                           
   557                           	psect	text0
   558  001CBC                     __ptext0:
   559                           	opt stack 0
   560  001CBC                     _main:
   561                           	opt stack 29
   562                           
   563                           ;main.c: 149: if (start == 1) goto reset;
   564                           
   565                           ;incstack = 0
   566  001CBC  0409               	decf	_start,w,c
   567  001CBE  B4D8               	btfsc	status,2,c
   568  001CC0  D011               	goto	l1159
   569  001CC2  D001               	goto	l1145
   570  001CC4  D00F               	goto	l1159
   571  001CC6                     l1145:
   572                           
   573                           ;main.c: 151: SYSTEM_Initialize();
   574  001CC6  ECE2  F00D         	call	_SYSTEM_Initialize	;wreg free
   575  001CCA  D000               	goto	l1147
   576  001CCC                     l1147:
   577  001CCC  9089               	bcf	3977,0,c	;volatile
   578  001CCE  D000               	goto	l1149
   579  001CD0                     l1149:
   580  001CD0  9289               	bcf	3977,1,c	;volatile
   581  001CD2  D000               	goto	l1151
   582  001CD4                     l1151:
   583  001CD4  9C89               	bcf	3977,6,c	;volatile
   584  001CD6  D000               	goto	l1153
   585  001CD8                     l1153:
   586  001CD8  9E89               	bcf	3977,7,c	;volatile
   587  001CDA  D000               	goto	l1155
   588  001CDC                     l1155:
   589  001CDC  908B               	bcf	3979,0,c	;volatile
   590  001CDE  D000               	goto	l1157
   591  001CE0                     l1157:
   592  001CE0  928B               	bcf	3979,1,c	;volatile
   593  001CE2  D000               	goto	l1159
   594  001CE4                     l1159:
   595                           
   596                           ;main.c: 188: start = 1;
   597  001CE4  0E01               	movlw	1
   598  001CE6  6E09               	movwf	_start,c
   599                           
   600                           ;main.c: 189: if (INTCONbits.RBIF == 0) {
   601  001CE8  A0F2               	btfss	intcon,0,c	;volatile
   602  001CEA  D0DE               	goto	l302
   603                           
   604                           ;main.c: 191: else {
   605                           ;main.c: 192: INTCONbits.RBIF = 0;}
   606  001CEC  90F2               	bcf	intcon,0,c	;volatile
   607                           
   608                           ;main.c: 195: while ((PORTB & 0xC0) != 0xC0) {
   609                           
   610                           ;main.c: 193: while (1) {
   611  001CEE  D000               	goto	l1165
   612  001CF0                     l1165:
   613  001CF0  5081               	movf	3969,w,c	;volatile
   614  001CF2  0BC0               	andlw	192
   615  001CF4  0AC0               	xorlw	192
   616  001CF6  A4D8               	btfss	status,2,c
   617  001CF8  D7FB               	goto	l1165
   618                           
   619                           ;main.c: 196: }
   620                           ;main.c: 197: Byte1 = PORTB;
   621  001CFA  CF81 F001          	movff	3969,_Byte1	;volatile
   622                           
   623                           ;main.c: 199: while ((PORTB & 0xC0) != 0x80) {
   624  001CFE  D000               	goto	l1167
   625  001D00                     l1167:
   626  001D00  5081               	movf	3969,w,c	;volatile
   627  001D02  0BC0               	andlw	192
   628  001D04  0A80               	xorlw	128
   629  001D06  A4D8               	btfss	status,2,c
   630  001D08  D7FB               	goto	l1167
   631                           
   632                           ;main.c: 200: }
   633                           ;main.c: 201: Byte3 = PORTB & 0x3F;
   634  001D0A  5081               	movf	3969,w,c	;volatile
   635  001D0C  0B3F               	andlw	63
   636  001D0E  6E03               	movwf	_Byte3,c
   637                           
   638                           ;main.c: 203: while ((PORTB & 0xC0) != 0x40) {
   639  001D10  D000               	goto	l1171
   640  001D12                     l1171:
   641  001D12  5081               	movf	3969,w,c	;volatile
   642  001D14  0BC0               	andlw	192
   643  001D16  0A40               	xorlw	64
   644  001D18  A4D8               	btfss	status,2,c
   645  001D1A  D7FB               	goto	l1171
   646                           
   647                           ;main.c: 204: }
   648                           ;main.c: 205: Byte4 = PORTB & 0x3F;
   649  001D1C  5081               	movf	3969,w,c	;volatile
   650  001D1E  0B3F               	andlw	63
   651  001D20  6E04               	movwf	_Byte4,c
   652                           
   653                           ;main.c: 207: while ((PORTB & 0x80) != 0x80) {
   654  001D22  D000               	goto	l217
   655  001D24                     l217:
   656  001D24  AE81               	btfss	3969,7,c	;volatile
   657  001D26  D7FE               	goto	l217
   658                           
   659                           ;main.c: 208: }
   660                           ;main.c: 209: Byte5 = PORTB & 0x7F;
   661  001D28  5081               	movf	3969,w,c	;volatile
   662  001D2A  0B7F               	andlw	127
   663  001D2C  6E05               	movwf	_Byte5,c
   664                           
   665                           ;main.c: 211: while ((PORTB & 0x80) != 0x00) {
   666  001D2E  D000               	goto	l220
   667  001D30                     l220:
   668  001D30  BE81               	btfsc	3969,7,c	;volatile
   669  001D32  D7FE               	goto	l220
   670                           
   671                           ;main.c: 212: }
   672                           ;main.c: 213: Byte6 = PORTB & 0x7F;
   673  001D34  5081               	movf	3969,w,c	;volatile
   674  001D36  0B7F               	andlw	127
   675  001D38  6E06               	movwf	_Byte6,c
   676                           
   677                           ;main.c: 216: DAC_Step = ((Byte4 << 4) & 0xC0);
   678  001D3A  3804               	swapf	_Byte4,w,c
   679  001D3C  0BF0               	andlw	240
   680  001D3E  0BC0               	andlw	192
   681  001D40  6E07               	movwf	_DAC_Step,c
   682                           
   683                           ;main.c: 217: DAC_Step = (DAC_Step | Byte3);
   684  001D42  5007               	movf	_DAC_Step,w,c
   685  001D44  1003               	iorwf	_Byte3,w,c
   686  001D46  6E07               	movwf	_DAC_Step,c
   687                           
   688                           ;main.c: 218: DAC_SetOutput(DAC_Step);
   689  001D48  5007               	movf	_DAC_Step,w,c
   690  001D4A  ECBA  F00D         	call	_DAC_SetOutput
   691                           
   692                           ;main.c: 221: if ((Byte4 & 0x02) == 0x02)
   693  001D4E  A204               	btfss	_Byte4,1,c
   694  001D50  D002               	goto	l227
   695                           
   696                           ;main.c: 222: do { LATA0 = 1; } while(0);
   697  001D52  8089               	bsf	3977,0,c	;volatile
   698  001D54  D002               	goto	l226
   699  001D56                     l227:
   700  001D56  9089               	bcf	3977,0,c	;volatile
   701  001D58  D000               	goto	l226
   702  001D5A                     l226:
   703                           
   704                           ;main.c: 225: if ((Byte4 & 0x01) == 0x01)
   705  001D5A  A004               	btfss	_Byte4,0,c
   706  001D5C  D002               	goto	l233
   707                           
   708                           ;main.c: 226: do { LATA1 = 1; } while(0);
   709  001D5E  8289               	bsf	3977,1,c	;volatile
   710  001D60  D002               	goto	l1183
   711  001D62                     l233:
   712  001D62  9289               	bcf	3977,1,c	;volatile
   713  001D64  D000               	goto	l1183
   714  001D66                     l1183:
   715                           
   716                           ;main.c: 232: MIPISPI(Byte5, Byte6);
   717  001D66  C006  F00B         	movff	_Byte6,MIPISPI@b
   718  001D6A  5005               	movf	_Byte5,w,c
   719  001D6C  EC10  F00E         	call	_MIPISPI
   720                           
   721                           ;main.c: 236: switch ((Byte1 & 0x38)){
   722  001D70  D02C               	goto	l1187
   723  001D72                     l237:
   724  001D72  9C89               	bcf	3977,6,c	;volatile
   725  001D74  D005               	goto	l247
   726                           
   727                           ;main.c: 239: do { LATA7 = 0; } while(0);
   728  001D76  D004               	goto	l247
   729                           
   730                           ;main.c: 240: do { LATC2 = 0; } while(0);
   731  001D78  D010               	goto	l263
   732                           
   733                           ;main.c: 241: break;
   734  001D7A  D075               	goto	l1191
   735  001D7C                     l245:
   736  001D7C  8C89               	bsf	3977,6,c	;volatile
   737  001D7E  D000               	goto	l247
   738  001D80                     l247:
   739  001D80  9E89               	bcf	3977,7,c	;volatile
   740  001D82  D00B               	goto	l263
   741                           
   742                           ;main.c: 245: do { LATC2 = 0; } while(0);
   743  001D84  D00A               	goto	l263
   744                           
   745                           ;main.c: 246: break;
   746  001D86  D06F               	goto	l1191
   747  001D88                     l252:
   748  001D88  9C89               	bcf	3977,6,c	;volatile
   749  001D8A  D000               	goto	l254
   750  001D8C                     l254:
   751  001D8C  8E89               	bsf	3977,7,c	;volatile
   752  001D8E  D005               	goto	l263
   753                           
   754                           ;main.c: 250: do { LATC2 = 0; } while(0);
   755  001D90  D004               	goto	l263
   756                           
   757                           ;main.c: 251: break;
   758  001D92  D069               	goto	l1191
   759  001D94                     l259:
   760  001D94  8C89               	bsf	3977,6,c	;volatile
   761  001D96  D7FA               	goto	l254
   762                           
   763                           ;main.c: 254: do { LATA7 = 1; } while(0);
   764  001D98  D7F9               	goto	l254
   765  001D9A                     l263:
   766  001D9A  948B               	bcf	3979,2,c	;volatile
   767                           
   768                           ;main.c: 256: break;
   769  001D9C  D064               	goto	l1191
   770  001D9E                     l266:
   771  001D9E  9C89               	bcf	3977,6,c	;volatile
   772  001DA0  D005               	goto	l275
   773                           
   774                           ;main.c: 259: do { LATA7 = 0; } while(0);
   775  001DA2  D004               	goto	l275
   776                           
   777                           ;main.c: 260: do { LATC2 = 1; } while(0);
   778  001DA4  D010               	goto	l291
   779                           
   780                           ;main.c: 261: break;
   781  001DA6  D05F               	goto	l1191
   782  001DA8                     l273:
   783  001DA8  8C89               	bsf	3977,6,c	;volatile
   784  001DAA  D000               	goto	l275
   785  001DAC                     l275:
   786  001DAC  9E89               	bcf	3977,7,c	;volatile
   787  001DAE  D00B               	goto	l291
   788                           
   789                           ;main.c: 265: do { LATC2 = 1; } while(0);
   790  001DB0  D00A               	goto	l291
   791                           
   792                           ;main.c: 266: break;
   793  001DB2  D059               	goto	l1191
   794  001DB4                     l280:
   795  001DB4  9C89               	bcf	3977,6,c	;volatile
   796  001DB6  D000               	goto	l282
   797  001DB8                     l282:
   798  001DB8  8E89               	bsf	3977,7,c	;volatile
   799  001DBA  D005               	goto	l291
   800                           
   801                           ;main.c: 270: do { LATC2 = 1; } while(0);
   802  001DBC  D004               	goto	l291
   803                           
   804                           ;main.c: 271: break;
   805  001DBE  D053               	goto	l1191
   806  001DC0                     l287:
   807  001DC0  8C89               	bsf	3977,6,c	;volatile
   808  001DC2  D7FA               	goto	l282
   809                           
   810                           ;main.c: 274: do { LATA7 = 1; } while(0);
   811  001DC4  D7F9               	goto	l282
   812  001DC6                     l291:
   813  001DC6  848B               	bsf	3979,2,c	;volatile
   814                           
   815                           ;main.c: 279: }
   816                           
   817                           ;main.c: 278: break;
   818                           
   819                           ;main.c: 277: default:
   820                           
   821                           ;main.c: 276: break;
   822  001DC8  D04E               	goto	l1191
   823  001DCA                     l1187:
   824  001DCA  5001               	movf	_Byte1,w,c
   825  001DCC  0B38               	andlw	56
   826  001DCE  6E0D               	movwf	??_main& (0+255),c
   827  001DD0  6A0E               	clrf	(??_main+1)& (0+255),c
   828                           
   829                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   830                           ; Switch size 1, requested type "space"
   831                           ; Number of cases is 1, Range of values is 0 to 0
   832                           ; switch strategies available:
   833                           ; Name         Instructions Cycles
   834                           ; simple_byte            4     3 (average)
   835                           ;	Chosen strategy is simple_byte
   836  001DD2  500E               	movf	??_main+1,w,c
   837  001DD4  0A00               	xorlw	0	; case 0
   838  001DD6  A4D8               	btfss	status,2,c
   839  001DD8  D046               	goto	l1191
   840                           
   841                           ; Switch size 1, requested type "space"
   842                           ; Number of cases is 8, Range of values is 0 to 56
   843                           ; switch strategies available:
   844                           ; Name         Instructions Cycles
   845                           ; simple_byte           25    13 (average)
   846                           ;	Chosen strategy is simple_byte
   847  001DDA  500D               	movf	??_main,w,c
   848  001DDC  0A00               	xorlw	0	; case 0
   849  001DDE  B4D8               	btfsc	status,2,c
   850  001DE0  D7EF               	goto	l287
   851  001DE2  0A08               	xorlw	8	; case 8
   852  001DE4  B4D8               	btfsc	status,2,c
   853  001DE6  D7C5               	goto	l237
   854  001DE8  0A18               	xorlw	24	; case 16
   855  001DEA  B4D8               	btfsc	status,2,c
   856  001DEC  D7C7               	goto	l245
   857  001DEE  0A08               	xorlw	8	; case 24
   858  001DF0  B4D8               	btfsc	status,2,c
   859  001DF2  D7CA               	goto	l252
   860  001DF4  0A38               	xorlw	56	; case 32
   861  001DF6  B4D8               	btfsc	status,2,c
   862  001DF8  D7CD               	goto	l259
   863  001DFA  0A08               	xorlw	8	; case 40
   864  001DFC  B4D8               	btfsc	status,2,c
   865  001DFE  D7CF               	goto	l266
   866  001E00  0A18               	xorlw	24	; case 48
   867  001E02  B4D8               	btfsc	status,2,c
   868  001E04  D7D1               	goto	l273
   869  001E06  0A08               	xorlw	8	; case 56
   870  001E08  B4D8               	btfsc	status,2,c
   871  001E0A  D7D4               	goto	l280
   872                           
   873                           ;main.c: 281: switch ((Byte1 & 0x07)){
   874  001E0C  D02C               	goto	l1191
   875  001E0E                     l296:
   876  001E0E  908B               	bcf	3979,0,c	;volatile
   877  001E10  D005               	goto	l306
   878                           
   879                           ;main.c: 284: do { LATC1 = 0; } while(0);
   880  001E12  D004               	goto	l306
   881                           
   882                           ;main.c: 285: do { LATC4 = 0; } while(0);
   883  001E14  D010               	goto	l322
   884                           
   885                           ;main.c: 286: break;
   886  001E16  D048               	goto	l302
   887  001E18                     l304:
   888  001E18  808B               	bsf	3979,0,c	;volatile
   889  001E1A  D000               	goto	l306
   890  001E1C                     l306:
   891  001E1C  928B               	bcf	3979,1,c	;volatile
   892  001E1E  D00B               	goto	l322
   893                           
   894                           ;main.c: 290: do { LATC4 = 0; } while(0);
   895  001E20  D00A               	goto	l322
   896                           
   897                           ;main.c: 291: break;
   898  001E22  D042               	goto	l302
   899  001E24                     l311:
   900  001E24  908B               	bcf	3979,0,c	;volatile
   901  001E26  D000               	goto	l313
   902  001E28                     l313:
   903  001E28  828B               	bsf	3979,1,c	;volatile
   904  001E2A  D005               	goto	l322
   905                           
   906                           ;main.c: 295: do { LATC4 = 0; } while(0);
   907  001E2C  D004               	goto	l322
   908                           
   909                           ;main.c: 296: break;
   910  001E2E  D03C               	goto	l302
   911  001E30                     l318:
   912  001E30  808B               	bsf	3979,0,c	;volatile
   913  001E32  D7FA               	goto	l313
   914                           
   915                           ;main.c: 299: do { LATC1 = 1; } while(0);
   916  001E34  D7F9               	goto	l313
   917  001E36                     l322:
   918  001E36  988B               	bcf	3979,4,c	;volatile
   919                           
   920                           ;main.c: 301: break;
   921  001E38  D037               	goto	l302
   922  001E3A                     l325:
   923  001E3A  908B               	bcf	3979,0,c	;volatile
   924  001E3C  D005               	goto	l334
   925                           
   926                           ;main.c: 304: do { LATC1 = 0; } while(0);
   927  001E3E  D004               	goto	l334
   928                           
   929                           ;main.c: 305: do { LATC4 = 1; } while(0);
   930  001E40  D010               	goto	l350
   931                           
   932                           ;main.c: 306: break;
   933  001E42  D032               	goto	l302
   934  001E44                     l332:
   935  001E44  808B               	bsf	3979,0,c	;volatile
   936  001E46  D000               	goto	l334
   937  001E48                     l334:
   938  001E48  928B               	bcf	3979,1,c	;volatile
   939  001E4A  D00B               	goto	l350
   940                           
   941                           ;main.c: 310: do { LATC4 = 1; } while(0);
   942  001E4C  D00A               	goto	l350
   943                           
   944                           ;main.c: 311: break;
   945  001E4E  D02C               	goto	l302
   946  001E50                     l339:
   947  001E50  908B               	bcf	3979,0,c	;volatile
   948  001E52  D000               	goto	l341
   949  001E54                     l341:
   950  001E54  828B               	bsf	3979,1,c	;volatile
   951  001E56  D005               	goto	l350
   952                           
   953                           ;main.c: 315: do { LATC4 = 1; } while(0);
   954  001E58  D004               	goto	l350
   955                           
   956                           ;main.c: 316: break;
   957  001E5A  D026               	goto	l302
   958  001E5C                     l346:
   959  001E5C  808B               	bsf	3979,0,c	;volatile
   960  001E5E  D7FA               	goto	l341
   961                           
   962                           ;main.c: 319: do { LATC1 = 1; } while(0);
   963  001E60  D7F9               	goto	l341
   964  001E62                     l350:
   965  001E62  888B               	bsf	3979,4,c	;volatile
   966                           
   967                           ;main.c: 324: }
   968                           
   969                           ;main.c: 323: break;
   970                           
   971                           ;main.c: 322: default:
   972                           
   973                           ;main.c: 321: break;
   974  001E64  D021               	goto	l302
   975  001E66                     l1191:
   976  001E66  5001               	movf	_Byte1,w,c
   977  001E68  0B07               	andlw	7
   978  001E6A  6E0D               	movwf	??_main& (0+255),c
   979  001E6C  6A0E               	clrf	(??_main+1)& (0+255),c
   980                           
   981                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   982                           ; Switch size 1, requested type "space"
   983                           ; Number of cases is 1, Range of values is 0 to 0
   984                           ; switch strategies available:
   985                           ; Name         Instructions Cycles
   986                           ; simple_byte            4     3 (average)
   987                           ;	Chosen strategy is simple_byte
   988  001E6E  500E               	movf	??_main+1,w,c
   989  001E70  0A00               	xorlw	0	; case 0
   990  001E72  A4D8               	btfss	status,2,c
   991  001E74  D019               	goto	l302
   992                           
   993                           ; Switch size 1, requested type "space"
   994                           ; Number of cases is 8, Range of values is 0 to 7
   995                           ; switch strategies available:
   996                           ; Name         Instructions Cycles
   997                           ; simple_byte           25    13 (average)
   998                           ;	Chosen strategy is simple_byte
   999  001E76  500D               	movf	??_main,w,c
  1000  001E78  0A00               	xorlw	0	; case 0
  1001  001E7A  B4D8               	btfsc	status,2,c
  1002  001E7C  D7EF               	goto	l346
  1003  001E7E  0A01               	xorlw	1	; case 1
  1004  001E80  B4D8               	btfsc	status,2,c
  1005  001E82  D7C5               	goto	l296
  1006  001E84  0A03               	xorlw	3	; case 2
  1007  001E86  B4D8               	btfsc	status,2,c
  1008  001E88  D7C7               	goto	l304
  1009  001E8A  0A01               	xorlw	1	; case 3
  1010  001E8C  B4D8               	btfsc	status,2,c
  1011  001E8E  D7CA               	goto	l311
  1012  001E90  0A07               	xorlw	7	; case 4
  1013  001E92  B4D8               	btfsc	status,2,c
  1014  001E94  D7CD               	goto	l318
  1015  001E96  0A01               	xorlw	1	; case 5
  1016  001E98  B4D8               	btfsc	status,2,c
  1017  001E9A  D7CF               	goto	l325
  1018  001E9C  0A03               	xorlw	3	; case 6
  1019  001E9E  B4D8               	btfsc	status,2,c
  1020  001EA0  D7D1               	goto	l332
  1021  001EA2  0A01               	xorlw	1	; case 7
  1022  001EA4  B4D8               	btfsc	status,2,c
  1023  001EA6  D7D4               	goto	l339
  1024  001EA8                     l302:
  1025  001EA8  0003               	sleep		;# 
  1026  001EAA  D722               	goto	l1165
  1027  001EAC  EF00  F000         	goto	start
  1028  001EB0                     __end_of_main:
  1029                           	opt stack 0
  1030                           tblptru	equ	0xFF8
  1031                           intcon	equ	0xFF2
  1032                           postinc0	equ	0xFEE
  1033                           wreg	equ	0xFE8
  1034                           status	equ	0xFD8
  1035                           
  1036 ;; *************** function _SYSTEM_Initialize *****************
  1037 ;; Defined at:
  1038 ;;		line 106 in file "mcc_generated_files/mcc.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;		None
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;		None
  1043 ;; Return value:  Size  Location     Type
  1044 ;;		None               void
  1045 ;; Registers used:
  1046 ;;		wreg, status,2, cstack
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMRAM   BANK0   BANK1
  1052 ;;      Params:         0       0       0
  1053 ;;      Locals:         0       0       0
  1054 ;;      Temps:          0       0       0
  1055 ;;      Totals:         0       0       0
  1056 ;;Total ram usage:        0 bytes
  1057 ;; Hardware stack levels used:    1
  1058 ;; Hardware stack levels required when called:    1
  1059 ;; This function calls:
  1060 ;;		_DAC_Initialize
  1061 ;;		_INTERRUPT_ON_CHANGE_Initialize
  1062 ;;		_OSCILLATOR_Initialize
  1063 ;;		_PIN_MANAGER_Initialize
  1064 ;;		_SPI1_Initialize
  1065 ;; This function is called by:
  1066 ;;		_main
  1067 ;; This function uses a non-reentrant model
  1068 ;;
  1069                           
  1070                           	psect	text1
  1071  001BC4                     __ptext1:
  1072                           	opt stack 0
  1073  001BC4                     _SYSTEM_Initialize:
  1074                           	opt stack 29
  1075                           
  1076                           ;mcc.c: 107: OSCILLATOR_Initialize();
  1077                           
  1078                           ;incstack = 0
  1079  001BC4  ECCB  F00D         	call	_OSCILLATOR_Initialize	;wreg free
  1080                           
  1081                           ;mcc.c: 108: PIN_MANAGER_Initialize();
  1082  001BC8  ECF8  F00D         	call	_PIN_MANAGER_Initialize	;wreg free
  1083                           
  1084                           ;mcc.c: 109: DAC_Initialize();
  1085  001BCC  ECC4  F00D         	call	_DAC_Initialize	;wreg free
  1086                           
  1087                           ;mcc.c: 110: SPI1_Initialize();
  1088  001BD0  ECD2  F00D         	call	_SPI1_Initialize	;wreg free
  1089                           
  1090                           ;mcc.c: 111: INTERRUPT_ON_CHANGE_Initialize();
  1091  001BD4  ECBE  F00D         	call	_INTERRUPT_ON_CHANGE_Initialize	;wreg free
  1092  001BD8  0012               	return		;funcret
  1093  001BDA                     __end_of_SYSTEM_Initialize:
  1094                           	opt stack 0
  1095                           tblptru	equ	0xFF8
  1096                           intcon	equ	0xFF2
  1097                           postinc0	equ	0xFEE
  1098                           wreg	equ	0xFE8
  1099                           status	equ	0xFD8
  1100                           
  1101 ;; *************** function _SPI1_Initialize *****************
  1102 ;; Defined at:
  1103 ;;		line 64 in file "mcc_generated_files/spi1.c"
  1104 ;; Parameters:    Size  Location     Type
  1105 ;;		None
  1106 ;; Auto vars:     Size  Location     Type
  1107 ;;		None
  1108 ;; Return value:  Size  Location     Type
  1109 ;;		None               void
  1110 ;; Registers used:
  1111 ;;		wreg, status,2
  1112 ;; Tracked objects:
  1113 ;;		On entry : 0/0
  1114 ;;		On exit  : 0/0
  1115 ;;		Unchanged: 0/0
  1116 ;; Data sizes:     COMRAM   BANK0   BANK1
  1117 ;;      Params:         0       0       0
  1118 ;;      Locals:         0       0       0
  1119 ;;      Temps:          0       0       0
  1120 ;;      Totals:         0       0       0
  1121 ;;Total ram usage:        0 bytes
  1122 ;; Hardware stack levels used:    1
  1123 ;; This function calls:
  1124 ;;		Nothing
  1125 ;; This function is called by:
  1126 ;;		_SYSTEM_Initialize
  1127 ;; This function uses a non-reentrant model
  1128 ;;
  1129                           
  1130                           	psect	text2
  1131  001BA4                     __ptext2:
  1132                           	opt stack 0
  1133  001BA4                     _SPI1_Initialize:
  1134                           	opt stack 29
  1135                           
  1136                           ;spi1.c: 68: SSP1STAT = 0x00;
  1137                           
  1138                           ;incstack = 0
  1139  001BA4  0E00               	movlw	0
  1140  001BA6  6EC7               	movwf	4039,c	;volatile
  1141                           
  1142                           ;spi1.c: 71: SSP1CON1 = 0x20;
  1143  001BA8  0E20               	movlw	32
  1144  001BAA  6EC6               	movwf	4038,c	;volatile
  1145                           
  1146                           ;spi1.c: 74: SSP1ADD = 0x00;
  1147  001BAC  0E00               	movlw	0
  1148  001BAE  6EC8               	movwf	4040,c	;volatile
  1149  001BB0  0012               	return		;funcret
  1150  001BB2                     __end_of_SPI1_Initialize:
  1151                           	opt stack 0
  1152                           tblptru	equ	0xFF8
  1153                           intcon	equ	0xFF2
  1154                           postinc0	equ	0xFEE
  1155                           wreg	equ	0xFE8
  1156                           status	equ	0xFD8
  1157                           
  1158 ;; *************** function _PIN_MANAGER_Initialize *****************
  1159 ;; Defined at:
  1160 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  1161 ;; Parameters:    Size  Location     Type
  1162 ;;		None
  1163 ;; Auto vars:     Size  Location     Type
  1164 ;;		None
  1165 ;; Return value:  Size  Location     Type
  1166 ;;		None               void
  1167 ;; Registers used:
  1168 ;;		wreg, status,2
  1169 ;; Tracked objects:
  1170 ;;		On entry : 0/0
  1171 ;;		On exit  : 0/0
  1172 ;;		Unchanged: 0/0
  1173 ;; Data sizes:     COMRAM   BANK0   BANK1
  1174 ;;      Params:         0       0       0
  1175 ;;      Locals:         0       0       0
  1176 ;;      Temps:          0       0       0
  1177 ;;      Totals:         0       0       0
  1178 ;;Total ram usage:        0 bytes
  1179 ;; Hardware stack levels used:    1
  1180 ;; This function calls:
  1181 ;;		Nothing
  1182 ;; This function is called by:
  1183 ;;		_SYSTEM_Initialize
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187                           	psect	text3
  1188  001BF0                     __ptext3:
  1189                           	opt stack 0
  1190  001BF0                     _PIN_MANAGER_Initialize:
  1191                           	opt stack 29
  1192                           
  1193                           ;pin_manager.c: 51: LATA = 0x00;
  1194                           
  1195                           ;incstack = 0
  1196  001BF0  0E00               	movlw	0
  1197  001BF2  6E89               	movwf	3977,c	;volatile
  1198                           
  1199                           ;pin_manager.c: 52: TRISA = 0x38;
  1200  001BF4  0E38               	movlw	56
  1201  001BF6  6E92               	movwf	3986,c	;volatile
  1202                           
  1203                           ;pin_manager.c: 53: ANSELA = 0x2C;
  1204  001BF8  0E2C               	movlw	44
  1205  001BFA  010F               	movlb	15	; () banked
  1206  001BFC  6F38               	movwf	56,b	;volatile
  1207                           
  1208                           ;pin_manager.c: 55: LATB = 0x00;
  1209  001BFE  0E00               	movlw	0
  1210  001C00  6E8A               	movwf	3978,c	;volatile
  1211                           
  1212                           ; BSR set to: 15
  1213                           ;pin_manager.c: 56: TRISB = 0xFF;
  1214  001C02  6893               	setf	3987,c	;volatile
  1215                           
  1216                           ;pin_manager.c: 57: ANSELB = 0x00;
  1217  001C04  0E00               	movlw	0
  1218  001C06  010F               	movlb	15	; () banked
  1219  001C08  6F39               	movwf	57,b	;volatile
  1220                           
  1221                           ;pin_manager.c: 58: WPUB = 0x00;
  1222  001C0A  0E00               	movlw	0
  1223  001C0C  6E61               	movwf	3937,c	;volatile
  1224                           
  1225                           ;pin_manager.c: 60: LATC = 0x00;
  1226  001C0E  0E00               	movlw	0
  1227  001C10  6E8B               	movwf	3979,c	;volatile
  1228                           
  1229                           ;pin_manager.c: 61: TRISC = 0xC0;
  1230  001C12  0EC0               	movlw	192
  1231  001C14  6E94               	movwf	3988,c	;volatile
  1232                           
  1233                           ;pin_manager.c: 62: ANSELC = 0xC0;
  1234  001C16  0EC0               	movlw	192
  1235  001C18  010F               	movlb	15	; () banked
  1236  001C1A  6F3A               	movwf	58,b	;volatile
  1237                           
  1238                           ; BSR set to: 15
  1239                           ;pin_manager.c: 64: INTCON2bits.nRBPU = 0x01;
  1240  001C1C  8EF1               	bsf	intcon2,7,c	;volatile
  1241                           
  1242                           ; BSR set to: 15
  1243  001C1E  0012               	return		;funcret
  1244  001C20                     __end_of_PIN_MANAGER_Initialize:
  1245                           	opt stack 0
  1246                           tblptru	equ	0xFF8
  1247                           intcon	equ	0xFF2
  1248                           intcon2	equ	0xFF1
  1249                           postinc0	equ	0xFEE
  1250                           wreg	equ	0xFE8
  1251                           status	equ	0xFD8
  1252                           
  1253 ;; *************** function _OSCILLATOR_Initialize *****************
  1254 ;; Defined at:
  1255 ;;		line 114 in file "mcc_generated_files/mcc.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;		None
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;		None
  1260 ;; Return value:  Size  Location     Type
  1261 ;;		None               void
  1262 ;; Registers used:
  1263 ;;		wreg, status,2
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMRAM   BANK0   BANK1
  1269 ;;      Params:         0       0       0
  1270 ;;      Locals:         0       0       0
  1271 ;;      Temps:          0       0       0
  1272 ;;      Totals:         0       0       0
  1273 ;;Total ram usage:        0 bytes
  1274 ;; Hardware stack levels used:    1
  1275 ;; This function calls:
  1276 ;;		Nothing
  1277 ;; This function is called by:
  1278 ;;		_SYSTEM_Initialize
  1279 ;; This function uses a non-reentrant model
  1280 ;;
  1281                           
  1282                           	psect	text4
  1283  001B96                     __ptext4:
  1284                           	opt stack 0
  1285  001B96                     _OSCILLATOR_Initialize:
  1286                           	opt stack 29
  1287                           
  1288                           ;mcc.c: 116: OSCCON = 0x70;
  1289                           
  1290                           ; BSR set to: 15
  1291                           ;incstack = 0
  1292  001B96  0E70               	movlw	112
  1293  001B98  6ED3               	movwf	4051,c	;volatile
  1294                           
  1295                           ;mcc.c: 118: OSCCON2 = 0x04;
  1296  001B9A  0E04               	movlw	4
  1297  001B9C  6ED2               	movwf	4050,c	;volatile
  1298                           
  1299                           ;mcc.c: 120: OSCTUNE = 0x40;
  1300  001B9E  0E40               	movlw	64
  1301  001BA0  6E9B               	movwf	3995,c	;volatile
  1302  001BA2  0012               	return		;funcret
  1303  001BA4                     __end_of_OSCILLATOR_Initialize:
  1304                           	opt stack 0
  1305                           tblptru	equ	0xFF8
  1306                           intcon	equ	0xFF2
  1307                           intcon2	equ	0xFF1
  1308                           postinc0	equ	0xFEE
  1309                           wreg	equ	0xFE8
  1310                           status	equ	0xFD8
  1311                           
  1312 ;; *************** function _INTERRUPT_ON_CHANGE_Initialize *****************
  1313 ;; Defined at:
  1314 ;;		line 125 in file "mcc_generated_files/mcc.c"
  1315 ;; Parameters:    Size  Location     Type
  1316 ;;		None
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;		None
  1319 ;; Return value:  Size  Location     Type
  1320 ;;		None               void
  1321 ;; Registers used:
  1322 ;;		wreg, status,2
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMRAM   BANK0   BANK1
  1328 ;;      Params:         0       0       0
  1329 ;;      Locals:         0       0       0
  1330 ;;      Temps:          0       0       0
  1331 ;;      Totals:         0       0       0
  1332 ;;Total ram usage:        0 bytes
  1333 ;; Hardware stack levels used:    1
  1334 ;; This function calls:
  1335 ;;		Nothing
  1336 ;; This function is called by:
  1337 ;;		_SYSTEM_Initialize
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           	psect	text5
  1342  001B7C                     __ptext5:
  1343                           	opt stack 0
  1344  001B7C                     _INTERRUPT_ON_CHANGE_Initialize:
  1345                           	opt stack 29
  1346                           
  1347                           ;mcc.c: 129: INTCONbits.RBIE = 1;
  1348                           
  1349                           ;incstack = 0
  1350  001B7C  86F2               	bsf	intcon,3,c	;volatile
  1351                           
  1352                           ;mcc.c: 130: INTCONbits.RBIF = 0;
  1353  001B7E  90F2               	bcf	intcon,0,c	;volatile
  1354                           
  1355                           ;mcc.c: 131: INTCON2bits.RBIP = 1;
  1356  001B80  80F1               	bsf	intcon2,0,c	;volatile
  1357                           
  1358                           ;mcc.c: 132: IOCB = 0x80;
  1359  001B82  0E80               	movlw	128
  1360  001B84  6E62               	movwf	3938,c	;volatile
  1361  001B86  0012               	return		;funcret
  1362  001B88                     __end_of_INTERRUPT_ON_CHANGE_Initialize:
  1363                           	opt stack 0
  1364                           tblptru	equ	0xFF8
  1365                           intcon	equ	0xFF2
  1366                           intcon2	equ	0xFF1
  1367                           postinc0	equ	0xFEE
  1368                           wreg	equ	0xFE8
  1369                           status	equ	0xFD8
  1370                           
  1371 ;; *************** function _DAC_Initialize *****************
  1372 ;; Defined at:
  1373 ;;		line 57 in file "mcc_generated_files/dac.c"
  1374 ;; Parameters:    Size  Location     Type
  1375 ;;		None
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;		None
  1378 ;; Return value:  Size  Location     Type
  1379 ;;		None               void
  1380 ;; Registers used:
  1381 ;;		wreg, status,2
  1382 ;; Tracked objects:
  1383 ;;		On entry : 0/0
  1384 ;;		On exit  : 0/0
  1385 ;;		Unchanged: 0/0
  1386 ;; Data sizes:     COMRAM   BANK0   BANK1
  1387 ;;      Params:         0       0       0
  1388 ;;      Locals:         0       0       0
  1389 ;;      Temps:          0       0       0
  1390 ;;      Totals:         0       0       0
  1391 ;;Total ram usage:        0 bytes
  1392 ;; Hardware stack levels used:    1
  1393 ;; This function calls:
  1394 ;;		Nothing
  1395 ;; This function is called by:
  1396 ;;		_SYSTEM_Initialize
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400                           	psect	text6
  1401  001B88                     __ptext6:
  1402                           	opt stack 0
  1403  001B88                     _DAC_Initialize:
  1404                           	opt stack 29
  1405                           
  1406                           ;dac.c: 59: VREFCON1 = 0xA0;
  1407                           
  1408                           ;incstack = 0
  1409  001B88  0EA0               	movlw	160
  1410  001B8A  010F               	movlb	15	; () banked
  1411  001B8C  6F41               	movwf	65,b	;volatile
  1412                           
  1413                           ;dac.c: 61: DACCON1 = 0x00;
  1414  001B8E  0E00               	movlw	0
  1415  001B90  010F               	movlb	15	; () banked
  1416  001B92  6F40               	movwf	64,b	;volatile
  1417                           
  1418                           ; BSR set to: 15
  1419  001B94  0012               	return		;funcret
  1420  001B96                     __end_of_DAC_Initialize:
  1421                           	opt stack 0
  1422                           tblptru	equ	0xFF8
  1423                           intcon	equ	0xFF2
  1424                           intcon2	equ	0xFF1
  1425                           postinc0	equ	0xFEE
  1426                           wreg	equ	0xFE8
  1427                           status	equ	0xFD8
  1428                           
  1429 ;; *************** function _MIPISPI *****************
  1430 ;; Defined at:
  1431 ;;		line 122 in file "main.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;  a               1    wreg     unsigned char 
  1434 ;;  b               1    1[COMRAM] unsigned char 
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;  a               1    2[COMRAM] unsigned char 
  1437 ;; Return value:  Size  Location     Type
  1438 ;;		None               void
  1439 ;; Registers used:
  1440 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMRAM   BANK0   BANK1
  1446 ;;      Params:         1       0       0
  1447 ;;      Locals:         1       0       0
  1448 ;;      Temps:          0       0       0
  1449 ;;      Totals:         2       0       0
  1450 ;;Total ram usage:        2 bytes
  1451 ;; Hardware stack levels used:    1
  1452 ;; Hardware stack levels required when called:    1
  1453 ;; This function calls:
  1454 ;;		_SPI1_Exchange8bit
  1455 ;; This function is called by:
  1456 ;;		_main
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	text7
  1461  001C20                     __ptext7:
  1462                           	opt stack 0
  1463  001C20                     _MIPISPI:
  1464                           	opt stack 29
  1465                           
  1466                           ; BSR set to: 15
  1467                           ;incstack = 0
  1468                           ;MIPISPI@a stored from wreg
  1469  001C20  6E0C               	movwf	MIPISPI@a,c
  1470                           
  1471                           ;main.c: 124: SSP1CON1bits.SSPEN1 = 0;
  1472  001C22  9AC6               	bcf	4038,5,c	;volatile
  1473                           
  1474                           ;main.c: 125: do { LATC5 = 1; } while(0);
  1475  001C24  8A8B               	bsf	3979,5,c	;volatile
  1476  001C26  D000               	goto	l182
  1477  001C28                     l182:
  1478  001C28  9A8B               	bcf	3979,5,c	;volatile
  1479                           
  1480                           ;main.c: 127: SSP1CON1bits.SSPEN1 = 1;
  1481  001C2A  8AC6               	bsf	4038,5,c	;volatile
  1482                           
  1483                           ;main.c: 129: SPI1_Exchange8bit(SLAVEWRITEADD[0]);
  1484  001C2C  0EFD               	movlw	low _SLAVEWRITEADD
  1485  001C2E  6EF6               	movwf	tblptrl,c
  1486  001C30                     	if	1	;There is more than 1 active tblptr byte
  1487  001C30  0E1F               	movlw	high _SLAVEWRITEADD
  1488  001C32  6EF7               	movwf	tblptrh,c
  1489  001C34                     	endif
  1490  001C34                     	if	0	;There are less than 3 active tblptr bytes
  1491  001C34                     	endif
  1492  001C34  0008               	tblrd		*
  1493  001C36  50F5               	movf	tablat,w,c
  1494  001C38  ECD9  F00D         	call	_SPI1_Exchange8bit
  1495                           
  1496                           ;main.c: 130: SPI1_Exchange8bit(ADDRESSDATA[a]);
  1497  001C3C  500C               	movf	MIPISPI@a,w,c
  1498  001C3E  0D01               	mullw	1
  1499  001C40  0EB1               	movlw	low _ADDRESSDATA
  1500  001C42  24F3               	addwf	prodl,w,c
  1501  001C44  6EF6               	movwf	tblptrl,c
  1502  001C46  0E1E               	movlw	high _ADDRESSDATA
  1503  001C48  20F4               	addwfc	prodh,w,c
  1504  001C4A  6EF7               	movwf	tblptrh,c
  1505  001C4C                     	if	0	;There are less than 3 active tblptr bytes
  1506  001C4C                     	endif
  1507  001C4C  0008               	tblrd		*
  1508  001C4E  50F5               	movf	tablat,w,c
  1509  001C50  ECD9  F00D         	call	_SPI1_Exchange8bit
  1510                           
  1511                           ;main.c: 131: SPI1_Exchange8bit(DATABUSPARK[a]);
  1512  001C54  500C               	movf	MIPISPI@a,w,c
  1513  001C56  0D01               	mullw	1
  1514  001C58  0E33               	movlw	low _DATABUSPARK
  1515  001C5A  24F3               	addwf	prodl,w,c
  1516  001C5C  6EF6               	movwf	tblptrl,c
  1517  001C5E  0E1F               	movlw	high _DATABUSPARK
  1518  001C60  20F4               	addwfc	prodh,w,c
  1519  001C62  6EF7               	movwf	tblptrh,c
  1520  001C64                     	if	0	;There are less than 3 active tblptr bytes
  1521  001C64                     	endif
  1522  001C64  0008               	tblrd		*
  1523  001C66  50F5               	movf	tablat,w,c
  1524  001C68  ECD9  F00D         	call	_SPI1_Exchange8bit
  1525                           
  1526                           ;main.c: 133: SSP1CON1bits.SSPEN1 = 0;
  1527  001C6C  9AC6               	bcf	4038,5,c	;volatile
  1528  001C6E  D000               	goto	l1129
  1529  001C70                     l1129:
  1530  001C70  8A8B               	bsf	3979,5,c	;volatile
  1531  001C72  D000               	goto	l1131
  1532  001C74                     l1131:
  1533  001C74  9A8B               	bcf	3979,5,c	;volatile
  1534  001C76  D000               	goto	l1133
  1535  001C78                     l1133:
  1536                           
  1537                           ;main.c: 136: SSP1CON1bits.SSPEN1 = 1;
  1538  001C78  8AC6               	bsf	4038,5,c	;volatile
  1539                           
  1540                           ;main.c: 138: SPI1_Exchange8bit(SLAVEWRITEADD[1]);
  1541  001C7A  0EFE               	movlw	low (_SLAVEWRITEADD+1)
  1542  001C7C  6EF6               	movwf	tblptrl,c
  1543  001C7E  0E1F               	movlw	high (_SLAVEWRITEADD+1)
  1544  001C80  6EF7               	movwf	tblptrh,c
  1545  001C82                     	if	0	;tblptru may be non-zero
  1546  001C82                     	endif
  1547  001C82                     	if	0	;tblptru may be non-zero
  1548  001C82                     	endif
  1549  001C82  0008               	tblrd		*
  1550  001C84  50F5               	movf	tablat,w,c
  1551  001C86  ECD9  F00D         	call	_SPI1_Exchange8bit
  1552                           
  1553                           ;main.c: 139: SPI1_Exchange8bit(ADDRESSDATA[b]);
  1554  001C8A  500B               	movf	MIPISPI@b,w,c
  1555  001C8C  0D01               	mullw	1
  1556  001C8E  0EB1               	movlw	low _ADDRESSDATA
  1557  001C90  24F3               	addwf	prodl,w,c
  1558  001C92  6EF6               	movwf	tblptrl,c
  1559  001C94  0E1E               	movlw	high _ADDRESSDATA
  1560  001C96  20F4               	addwfc	prodh,w,c
  1561  001C98  6EF7               	movwf	tblptrh,c
  1562  001C9A                     	if	0	;There are less than 3 active tblptr bytes
  1563  001C9A                     	endif
  1564  001C9A  0008               	tblrd		*
  1565  001C9C  50F5               	movf	tablat,w,c
  1566  001C9E  ECD9  F00D         	call	_SPI1_Exchange8bit
  1567                           
  1568                           ;main.c: 140: SPI1_Exchange8bit(DATABUSPARK[b]);
  1569  001CA2  500B               	movf	MIPISPI@b,w,c
  1570  001CA4  0D01               	mullw	1
  1571  001CA6  0E33               	movlw	low _DATABUSPARK
  1572  001CA8  24F3               	addwf	prodl,w,c
  1573  001CAA  6EF6               	movwf	tblptrl,c
  1574  001CAC  0E1F               	movlw	high _DATABUSPARK
  1575  001CAE  20F4               	addwfc	prodh,w,c
  1576  001CB0  6EF7               	movwf	tblptrh,c
  1577  001CB2                     	if	0	;There are less than 3 active tblptr bytes
  1578  001CB2                     	endif
  1579  001CB2  0008               	tblrd		*
  1580  001CB4  50F5               	movf	tablat,w,c
  1581  001CB6  ECD9  F00D         	call	_SPI1_Exchange8bit
  1582  001CBA  0012               	return		;funcret
  1583  001CBC                     __end_of_MIPISPI:
  1584                           	opt stack 0
  1585                           tblptru	equ	0xFF8
  1586                           tblptrh	equ	0xFF7
  1587                           tblptrl	equ	0xFF6
  1588                           tablat	equ	0xFF5
  1589                           prodh	equ	0xFF4
  1590                           prodl	equ	0xFF3
  1591                           intcon	equ	0xFF2
  1592                           intcon2	equ	0xFF1
  1593                           postinc0	equ	0xFEE
  1594                           wreg	equ	0xFE8
  1595                           status	equ	0xFD8
  1596                           
  1597 ;; *************** function _SPI1_Exchange8bit *****************
  1598 ;; Defined at:
  1599 ;;		line 77 in file "mcc_generated_files/spi1.c"
  1600 ;; Parameters:    Size  Location     Type
  1601 ;;  data            1    wreg     unsigned char 
  1602 ;; Auto vars:     Size  Location     Type
  1603 ;;  data            1    0[COMRAM] unsigned char 
  1604 ;; Return value:  Size  Location     Type
  1605 ;;                  1    wreg      unsigned char 
  1606 ;; Registers used:
  1607 ;;		wreg, status,2
  1608 ;; Tracked objects:
  1609 ;;		On entry : 0/0
  1610 ;;		On exit  : 0/0
  1611 ;;		Unchanged: 0/0
  1612 ;; Data sizes:     COMRAM   BANK0   BANK1
  1613 ;;      Params:         0       0       0
  1614 ;;      Locals:         1       0       0
  1615 ;;      Temps:          0       0       0
  1616 ;;      Totals:         1       0       0
  1617 ;;Total ram usage:        1 bytes
  1618 ;; Hardware stack levels used:    1
  1619 ;; This function calls:
  1620 ;;		Nothing
  1621 ;; This function is called by:
  1622 ;;		_MIPISPI
  1623 ;;		_SPI1_Exchange8bitBuffer
  1624 ;; This function uses a non-reentrant model
  1625 ;;
  1626                           
  1627                           	psect	text8
  1628  001BB2                     __ptext8:
  1629                           	opt stack 0
  1630  001BB2                     _SPI1_Exchange8bit:
  1631                           	opt stack 29
  1632                           
  1633                           ;incstack = 0
  1634                           ;SPI1_Exchange8bit@data stored from wreg
  1635  001BB2  6E0A               	movwf	SPI1_Exchange8bit@data,c
  1636                           
  1637                           ;spi1.c: 79: SSP1CON1bits.WCOL = 0;
  1638  001BB4  9EC6               	bcf	4038,7,c	;volatile
  1639                           
  1640                           ;spi1.c: 81: SSP1BUF = data;
  1641  001BB6  C00A  FFC9         	movff	SPI1_Exchange8bit@data,4041	;volatile
  1642                           
  1643                           ;spi1.c: 83: while (SSP1STATbits.BF == 0x0) {
  1644  001BBA  D000               	goto	l84
  1645  001BBC                     l84:
  1646  001BBC  A0C7               	btfss	4039,0,c	;volatile
  1647  001BBE  D7FE               	goto	l84
  1648                           
  1649                           ;spi1.c: 84: }
  1650                           ;spi1.c: 86: return (SSP1BUF);
  1651  001BC0  50C9               	movf	4041,w,c	;volatile
  1652  001BC2  0012               	return		;funcret
  1653  001BC4                     __end_of_SPI1_Exchange8bit:
  1654                           	opt stack 0
  1655                           tblptru	equ	0xFF8
  1656                           tblptrh	equ	0xFF7
  1657                           tblptrl	equ	0xFF6
  1658                           tablat	equ	0xFF5
  1659                           prodh	equ	0xFF4
  1660                           prodl	equ	0xFF3
  1661                           intcon	equ	0xFF2
  1662                           intcon2	equ	0xFF1
  1663                           postinc0	equ	0xFEE
  1664                           wreg	equ	0xFE8
  1665                           status	equ	0xFD8
  1666                           
  1667 ;; *************** function _DAC_SetOutput *****************
  1668 ;; Defined at:
  1669 ;;		line 64 in file "mcc_generated_files/dac.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;  inputData       1    wreg     unsigned char 
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;  inputData       1    0[COMRAM] unsigned char 
  1674 ;; Return value:  Size  Location     Type
  1675 ;;		None               void
  1676 ;; Registers used:
  1677 ;;		wreg
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMRAM   BANK0   BANK1
  1683 ;;      Params:         0       0       0
  1684 ;;      Locals:         1       0       0
  1685 ;;      Temps:          0       0       0
  1686 ;;      Totals:         1       0       0
  1687 ;;Total ram usage:        1 bytes
  1688 ;; Hardware stack levels used:    1
  1689 ;; This function calls:
  1690 ;;		Nothing
  1691 ;; This function is called by:
  1692 ;;		_main
  1693 ;; This function uses a non-reentrant model
  1694 ;;
  1695                           
  1696                           	psect	text9
  1697  001B74                     __ptext9:
  1698                           	opt stack 0
  1699  001B74                     _DAC_SetOutput:
  1700                           	opt stack 30
  1701                           
  1702                           ;incstack = 0
  1703                           ;DAC_SetOutput@inputData stored from wreg
  1704  001B74  6E0A               	movwf	DAC_SetOutput@inputData,c
  1705                           
  1706                           ;dac.c: 65: DACCON1 = inputData;
  1707  001B76  C00A  FF40         	movff	DAC_SetOutput@inputData,3904	;volatile
  1708  001B7A  0012               	return		;funcret
  1709  001B7C                     __end_of_DAC_SetOutput:
  1710                           	opt stack 0
  1711                           tblptru	equ	0xFF8
  1712                           tblptrh	equ	0xFF7
  1713                           tblptrl	equ	0xFF6
  1714                           tablat	equ	0xFF5
  1715                           prodh	equ	0xFF4
  1716                           prodl	equ	0xFF3
  1717                           intcon	equ	0xFF2
  1718                           intcon2	equ	0xFF1
  1719                           postinc0	equ	0xFEE
  1720                           wreg	equ	0xFE8
  1721                           status	equ	0xFD8
  1722                           tblptru	equ	0xFF8
  1723                           tblptrh	equ	0xFF7
  1724                           tblptrl	equ	0xFF6
  1725                           tablat	equ	0xFF5
  1726                           prodh	equ	0xFF4
  1727                           prodl	equ	0xFF3
  1728                           intcon	equ	0xFF2
  1729                           intcon2	equ	0xFF1
  1730                           postinc0	equ	0xFEE
  1731                           wreg	equ	0xFE8
  1732                           status	equ	0xFD8
  1733                           
  1734                           	psect	rparam
  1735  0000                     tblptru	equ	0xFF8
  1736                           tblptrh	equ	0xFF7
  1737                           tblptrl	equ	0xFF6
  1738                           tablat	equ	0xFF5
  1739                           prodh	equ	0xFF4
  1740                           prodl	equ	0xFF3
  1741                           intcon	equ	0xFF2
  1742                           intcon2	equ	0xFF1
  1743                           postinc0	equ	0xFEE
  1744                           wreg	equ	0xFE8
  1745                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    334
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      5      14
    BANK0           160      0       0
    BANK1           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_MIPISPI
    _MIPISPI->_SPI1_Exchange8bit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     161
                                              3 COMRAM     2     2      0
                      _DAC_SetOutput
                            _MIPISPI
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _DAC_Initialize
     _INTERRUPT_ON_CHANGE_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_ON_CHANGE_Initialize                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DAC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MIPISPI                                              2     1      1     146
                                              1 COMRAM     2     1      1
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (2) _SPI1_Exchange8bit                                    1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DAC_SetOutput                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DAC_SetOutput
   _MIPISPI
     _SPI1_Exchange8bit
   _SYSTEM_Initialize
     _DAC_Initialize
     _INTERRUPT_ON_CHANGE_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      5       E       1       14.7%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       E       6        0.0%
DATA                 0      0       E       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri May 06 13:02:44 2016

                      _SPI1_Exchange8bit 1BB2                              __CFG_CP0$ON 000000  
                            __CFG_CP1$ON 000000                       ?_SPI1_Exchange8bit 000A  
                                     l84 1BBC                              __CFG_CPB$ON 000000  
                            __CFG_CPD$ON 000000                              __CFG_LVP$ON 000000  
                                    l220 1D30                                      l302 1EA8  
                                    l311 1E24                                      l304 1E18  
                                    l313 1E28                                      l233 1D62  
                                    l217 1D24                                      l322 1E36  
                                    l306 1E1C                                      l226 1D5A  
                                    l227 1D56                                      l332 1E44  
                                    l252 1D88                                      l341 1E54  
                                    l325 1E3A                                      l245 1D7C  
                                    l237 1D72                                      l182 1C28  
                                    l350 1E62                                      l334 1E48  
                                    l318 1E30                                      l254 1D8C  
                                    l263 1D9A                                      l247 1D80  
                                    l280 1DB4                                      l273 1DA8  
                                    l346 1E5C                                      l282 1DB8  
                                    l266 1D9E                                      l339 1E50  
                                    l291 1DC6                                      l275 1DAC  
                                    l259 1D94                                      l287 1DC0  
                                    l296 1E0E                      ??_SPI1_Exchange8bit 000A  
                                    wreg 000FE8                                     l1131 1C74  
                                   l1133 1C78                                     l1151 1CD4  
                                   l1129 1C70                                     l1153 1CD8  
                                   l1145 1CC6                                     l1171 1D12  
                                   l1155 1CDC                                     l1147 1CCC  
                                   l1165 1CF0                                     l1157 1CE0  
                                   l1149 1CD0                                     l1191 1E66  
                                   l1183 1D66                                     l1167 1D00  
                                   l1159 1CE4                                     l1187 1DCA  
                        __end_of_MIPISPI 1CBC                                     _DATA 1EF2  
                                   _IOCB 000F62                                     _LATA 000F89  
                                   _LATB 000F8A                                     _LATC 000F8B  
                                   _WPUB 000F61                                     _main 1CBC  
                          __CFG_BORV$190 000000                    __end_of_SLAVEWRITEADD 1FFF  
                                   prodh 000FF4                                     prodl 000FF3  
                                   start 0000                __end_of_SPI1_Exchange8bit 1BC4  
                          __CFG_IESO$OFF 000000                             ___param_bank 000010  
         __size_of_OSCILLATOR_Initialize 000E            __end_of_OSCILLATOR_Initialize 1BA4  
                                  ?_main 000A                                    _LATA0 007C48  
                                  _LATA1 007C49                                    _LATC0 007C58  
                                  _LATC1 007C59                                    _LATC2 007C5A  
                                  _LATA6 007C4E                                    _LATA7 007C4F  
                                  _LATC4 007C5C                                    _LATC5 007C5D  
                         __CFG_DEBUG$OFF 000000                                    _PORTB 000F81  
                                  _TRISA 000F92                                    _TRISB 000F93  
                                  _TRISC 000F94                         __end_of_SLAVEADD 1FFD  
                          __CFG_WRT0$OFF 000000                            __CFG_WRT1$OFF 000000  
                                  _Byte1 0001                                    _Byte2 0002  
                                  _Byte3 0003                                    _Byte4 0004  
                                  _Byte5 0005                                    _Byte6 0006  
                                  _Dummy 0008                           __CFG_EBTR0$OFF 000000  
                         __CFG_FCMEN$OFF 000000                           __CFG_EBTR1$OFF 000000  
                          __CFG_WRTB$OFF 000000                            __CFG_WRTC$OFF 000000  
                          __CFG_WRTD$OFF 000000                           __CFG_EBTRB$OFF 000000  
                     __CFG_MCLRE$EXTMCLR 000000                                    _start 0009  
                         __CFG_BOREN$OFF 000000                                    tablat 000FF5  
                                  status 000FD8                           __CFG_HFOFST$ON 000000  
               __size_of_SPI1_Initialize 000E                             __end_of_DATA 1F33  
                       ??_DAC_Initialize 000A                          __initialization 1BDA  
                           __end_of_main 1EB0                                   ??_main 000D  
                          __activetblptr 000002                           __CFG_PLLCFG$ON 000000  
                              ??_MIPISPI 000C                                   _ANSELA 000F38  
                                 _ANSELB 000F39                                   _ANSELC 000F3A  
                         __CFG_WDTEN$OFF 000000                                   _REGADD 1FF9  
                                 _PARITY 1F74                                   _OSCCON 000FD3  
                  SPI1_Exchange8bit@data 000A               __size_of_SPI1_Exchange8bit 0012  
                         __CFG_XINST$OFF 000000                                   clear_0 1BE0  
                     __end_of_ACTIVEBAND 1FF5                        __end_of_DacOutput 1FF9  
                           __mediumconst 1EB0                                   tblptrh 000FF7  
                                 tblptrl 000FF6                                   tblptru 000FF8  
                      _SYSTEM_Initialize 1BC4                               __accesstop 0060  
                __end_of__initialization 1BE6                          __CFG_PBADEN$OFF 000000  
                     ?_SYSTEM_Initialize 000A                            ___rparam_used 000001  
                 DAC_SetOutput@inputData 000A                           __pcstackCOMRAM 000A  
                    ??_SYSTEM_Initialize 000A                        ??_SPI1_Initialize 000A  
                 __size_of_DAC_SetOutput 0008                __end_of_SYSTEM_Initialize 1BDA  
                     __CFG_CCP2MX$PORTC1 000000                       __CFG_CCP3MX$PORTB5 000000  
                                _DACCON1 000F40                                  _MIPISPI 1C20  
                                _OSCCON2 000FD2                                  _OSCTUNE 000F9B  
                                _SSP1ADD 000FC8                                  _SSP1BUF 000FC9  
                    __end_of_ADDRESSDATA 1EF2                          __CFG_PWRTEN$OFF 000000  
                                __Hparam 0000                                  __Lparam 0000  
                          _DAC_SetOutput 1B74   __end_of_INTERRUPT_ON_CHANGE_Initialize 1B88  
__size_of_INTERRUPT_ON_CHANGE_Initialize 000C           _INTERRUPT_ON_CHANGE_Initialize 1B7C  
                        __CFG_STVREN$OFF 000000                                  __pcinit 1BDA  
                                __ramtop 0200                                  __ptext0 1CBC  
                                __ptext1 1BC4                                  __ptext2 1BA4  
                                __ptext3 1BF0                                  __ptext4 1B96  
                                __ptext5 1B7C                                  __ptext6 1B88  
                                __ptext7 1C20                                  __ptext8 1BB2  
                                __ptext9 1B74                    _OSCILLATOR_Initialize 1B96  
               ??_PIN_MANAGER_Initialize 000A               __size_of_SYSTEM_Initialize 0016  
                   end_of_initialization 1BE6                      __end_of_DATABUSPARK 1F74  
                          __Lmediumconst 1EB0                           ?_DAC_SetOutput 000A  
                                postinc0 000FEE                                _DacOutput 1FF5  
                            _ADDRESSDATA 1EB1                           __end_of_REGADD 1FFB  
                        _SPI1_Initialize 1BA4                           __end_of_PARITY 1FB5  
                          _SLAVEWRITEADD 1FFD                   ?_OSCILLATOR_Initialize 000A  
                __size_of_DAC_Initialize 000E                      start_initialization 1BDA  
        __size_of_PIN_MANAGER_Initialize 0030                              _DATABUSPARK 1F33  
                        ??_DAC_SetOutput 000A                              __pbssCOMRAM 0001  
                               ?_MIPISPI 000B                  __end_of_SPI1_Initialize 1BB2  
                               MIPISPI@a 000C                                 MIPISPI@b 000B  
                 _PIN_MANAGER_Initialize 1BF0                            __pmediumconst 1EB0  
                       __CFG_PRICLKEN$ON 000000                                 _DAC_Step 0007  
       ??_INTERRUPT_ON_CHANGE_Initialize 000A          ?_INTERRUPT_ON_CHANGE_Initialize 000A  
                               _SLAVEADD 1FFB                         __CFG_WDTPS$32768 000000  
                               _SSP1CON1 000FC6                                 _SSP1STAT 000FC7  
                               _VREFCON1 000F41                           _DAC_Initialize 1B88  
                       __size_of_MIPISPI 009C                         ?_SPI1_Initialize 000A  
                            _INTCON2bits 000FF1                               _ACTIVEBAND 1FB5  
                               __Hrparam 0000                                 __Lrparam 0000  
                      __CFG_P2BMX$PORTB5 000000                  ??_OSCILLATOR_Initialize 000A  
                 __end_of_DAC_Initialize 1B96                             _SSP1CON1bits 000FC6  
                          __size_of_main 01F4                          ?_DAC_Initialize 000A  
                           _SSP1STATbits 000FC7                               _INTCONbits 000FF2  
                ?_PIN_MANAGER_Initialize 000A                    __end_of_DAC_SetOutput 1B7C  
                      __CFG_T3CMX$PORTC0 000000           __end_of_PIN_MANAGER_Initialize 1C20  
                      __CFG_FOSC$INTIO67 000000  
