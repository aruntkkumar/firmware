

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Jan 14 12:31:45 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16LF1618
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	dabs	1,0x7E,2
    21  0000                     	;# 
    22  0001                     	;# 
    23  0002                     	;# 
    24  0003                     	;# 
    25  0004                     	;# 
    26  0005                     	;# 
    27  0006                     	;# 
    28  0007                     	;# 
    29  0008                     	;# 
    30  0009                     	;# 
    31  000A                     	;# 
    32  000B                     	;# 
    33  000C                     	;# 
    34  000D                     	;# 
    35  000E                     	;# 
    36  0010                     	;# 
    37  0011                     	;# 
    38  0012                     	;# 
    39  0013                     	;# 
    40  0014                     	;# 
    41  0015                     	;# 
    42  0016                     	;# 
    43  0016                     	;# 
    44  0017                     	;# 
    45  0018                     	;# 
    46  0019                     	;# 
    47  001A                     	;# 
    48  001A                     	;# 
    49  001B                     	;# 
    50  001B                     	;# 
    51  001C                     	;# 
    52  001D                     	;# 
    53  001E                     	;# 
    54  001F                     	;# 
    55  008C                     	;# 
    56  008D                     	;# 
    57  008E                     	;# 
    58  0090                     	;# 
    59  0091                     	;# 
    60  0092                     	;# 
    61  0093                     	;# 
    62  0094                     	;# 
    63  0095                     	;# 
    64  0096                     	;# 
    65  0098                     	;# 
    66  0099                     	;# 
    67  009A                     	;# 
    68  009B                     	;# 
    69  009B                     	;# 
    70  009C                     	;# 
    71  009D                     	;# 
    72  009E                     	;# 
    73  009F                     	;# 
    74  010C                     	;# 
    75  010D                     	;# 
    76  010E                     	;# 
    77  0111                     	;# 
    78  0112                     	;# 
    79  0113                     	;# 
    80  0114                     	;# 
    81  0115                     	;# 
    82  0116                     	;# 
    83  0117                     	;# 
    84  0118                     	;# 
    85  0119                     	;# 
    86  011C                     	;# 
    87  018C                     	;# 
    88  018D                     	;# 
    89  018E                     	;# 
    90  0191                     	;# 
    91  0191                     	;# 
    92  0192                     	;# 
    93  0193                     	;# 
    94  0193                     	;# 
    95  0194                     	;# 
    96  0195                     	;# 
    97  0196                     	;# 
    98  0199                     	;# 
    99  0199                     	;# 
   100  0199                     	;# 
   101  019A                     	;# 
   102  019A                     	;# 
   103  019A                     	;# 
   104  019B                     	;# 
   105  019B                     	;# 
   106  019B                     	;# 
   107  019B                     	;# 
   108  019B                     	;# 
   109  019C                     	;# 
   110  019C                     	;# 
   111  019C                     	;# 
   112  019D                     	;# 
   113  019D                     	;# 
   114  019D                     	;# 
   115  019E                     	;# 
   116  019E                     	;# 
   117  019E                     	;# 
   118  019F                     	;# 
   119  019F                     	;# 
   120  019F                     	;# 
   121  019F                     	;# 
   122  019F                     	;# 
   123  020C                     	;# 
   124  020D                     	;# 
   125  020E                     	;# 
   126  0211                     	;# 
   127  0211                     	;# 
   128  0212                     	;# 
   129  0212                     	;# 
   130  0213                     	;# 
   131  0213                     	;# 
   132  0214                     	;# 
   133  0214                     	;# 
   134  0215                     	;# 
   135  0215                     	;# 
   136  0215                     	;# 
   137  0215                     	;# 
   138  0216                     	;# 
   139  0216                     	;# 
   140  0217                     	;# 
   141  0217                     	;# 
   142  028C                     	;# 
   143  028D                     	;# 
   144  028E                     	;# 
   145  0291                     	;# 
   146  0291                     	;# 
   147  0292                     	;# 
   148  0293                     	;# 
   149  0294                     	;# 
   150  0298                     	;# 
   151  0298                     	;# 
   152  0299                     	;# 
   153  029A                     	;# 
   154  029B                     	;# 
   155  029E                     	;# 
   156  030C                     	;# 
   157  030D                     	;# 
   158  030E                     	;# 
   159  038C                     	;# 
   160  038D                     	;# 
   161  038E                     	;# 
   162  0391                     	;# 
   163  0392                     	;# 
   164  0393                     	;# 
   165  0394                     	;# 
   166  0395                     	;# 
   167  0396                     	;# 
   168  0397                     	;# 
   169  0398                     	;# 
   170  0399                     	;# 
   171  040E                     	;# 
   172  0413                     	;# 
   173  0413                     	;# 
   174  0414                     	;# 
   175  0414                     	;# 
   176  0415                     	;# 
   177  0416                     	;# 
   178  0417                     	;# 
   179  0418                     	;# 
   180  041A                     	;# 
   181  041A                     	;# 
   182  041B                     	;# 
   183  041B                     	;# 
   184  041C                     	;# 
   185  041D                     	;# 
   186  041E                     	;# 
   187  041F                     	;# 
   188  0493                     	;# 
   189  0494                     	;# 
   190  0495                     	;# 
   191  0496                     	;# 
   192  049A                     	;# 
   193  049B                     	;# 
   194  049C                     	;# 
   195  049D                     	;# 
   196  058C                     	;# 
   197  058C                     	;# 
   198  058D                     	;# 
   199  058E                     	;# 
   200  058E                     	;# 
   201  058F                     	;# 
   202  0590                     	;# 
   203  0590                     	;# 
   204  0591                     	;# 
   205  0592                     	;# 
   206  0592                     	;# 
   207  0593                     	;# 
   208  0594                     	;# 
   209  0594                     	;# 
   210  0595                     	;# 
   211  0596                     	;# 
   212  0596                     	;# 
   213  0597                     	;# 
   214  0598                     	;# 
   215  0599                     	;# 
   216  059A                     	;# 
   217  059B                     	;# 
   218  059B                     	;# 
   219  059C                     	;# 
   220  059D                     	;# 
   221  060C                     	;# 
   222  060C                     	;# 
   223  060D                     	;# 
   224  060E                     	;# 
   225  060F                     	;# 
   226  060F                     	;# 
   227  0610                     	;# 
   228  0611                     	;# 
   229  0612                     	;# 
   230  0613                     	;# 
   231  0614                     	;# 
   232  0617                     	;# 
   233  0618                     	;# 
   234  0619                     	;# 
   235  061A                     	;# 
   236  061B                     	;# 
   237  061C                     	;# 
   238  0691                     	;# 
   239  0692                     	;# 
   240  0693                     	;# 
   241  0694                     	;# 
   242  0695                     	;# 
   243  0696                     	;# 
   244  0697                     	;# 
   245  0699                     	;# 
   246  069A                     	;# 
   247  0711                     	;# 
   248  0712                     	;# 
   249  0713                     	;# 
   250  0714                     	;# 
   251  0715                     	;# 
   252  0718                     	;# 
   253  0718                     	;# 
   254  0719                     	;# 
   255  071A                     	;# 
   256  071A                     	;# 
   257  071B                     	;# 
   258  071C                     	;# 
   259  071D                     	;# 
   260  0791                     	;# 
   261  0791                     	;# 
   262  0792                     	;# 
   263  0793                     	;# 
   264  0793                     	;# 
   265  0794                     	;# 
   266  0795                     	;# 
   267  0795                     	;# 
   268  0796                     	;# 
   269  0797                     	;# 
   270  0797                     	;# 
   271  0798                     	;# 
   272  0799                     	;# 
   273  079A                     	;# 
   274  080C                     	;# 
   275  080C                     	;# 
   276  080D                     	;# 
   277  080E                     	;# 
   278  080E                     	;# 
   279  080F                     	;# 
   280  0810                     	;# 
   281  0810                     	;# 
   282  0811                     	;# 
   283  0812                     	;# 
   284  0812                     	;# 
   285  0813                     	;# 
   286  0814                     	;# 
   287  0815                     	;# 
   288  0816                     	;# 
   289  0817                     	;# 
   290  0818                     	;# 
   291  0819                     	;# 
   292  081A                     	;# 
   293  081A                     	;# 
   294  081B                     	;# 
   295  081C                     	;# 
   296  081C                     	;# 
   297  081D                     	;# 
   298  088C                     	;# 
   299  088D                     	;# 
   300  088E                     	;# 
   301  088F                     	;# 
   302  088F                     	;# 
   303  0890                     	;# 
   304  0891                     	;# 
   305  0892                     	;# 
   306  0893                     	;# 
   307  0893                     	;# 
   308  0894                     	;# 
   309  0895                     	;# 
   310  0896                     	;# 
   311  0897                     	;# 
   312  0897                     	;# 
   313  0898                     	;# 
   314  0899                     	;# 
   315  0D8C                     	;# 
   316  0D8C                     	;# 
   317  0D8D                     	;# 
   318  0D8E                     	;# 
   319  0D8F                     	;# 
   320  0D8F                     	;# 
   321  0D90                     	;# 
   322  0D91                     	;# 
   323  0D92                     	;# 
   324  0D92                     	;# 
   325  0D93                     	;# 
   326  0D94                     	;# 
   327  0D95                     	;# 
   328  0D95                     	;# 
   329  0D96                     	;# 
   330  0D97                     	;# 
   331  0D98                     	;# 
   332  0D99                     	;# 
   333  0D9A                     	;# 
   334  0D9B                     	;# 
   335  0D9C                     	;# 
   336  0D9D                     	;# 
   337  0D9E                     	;# 
   338  0D9E                     	;# 
   339  0D9F                     	;# 
   340  0DA0                     	;# 
   341  0DA1                     	;# 
   342  0DA1                     	;# 
   343  0DA2                     	;# 
   344  0DA3                     	;# 
   345  0DA4                     	;# 
   346  0DA4                     	;# 
   347  0DA5                     	;# 
   348  0DA6                     	;# 
   349  0DA7                     	;# 
   350  0DA7                     	;# 
   351  0DA8                     	;# 
   352  0DA9                     	;# 
   353  0DAA                     	;# 
   354  0DAB                     	;# 
   355  0DAC                     	;# 
   356  0DAD                     	;# 
   357  0DAE                     	;# 
   358  0DAF                     	;# 
   359  0E0F                     	;# 
   360  0E10                     	;# 
   361  0E11                     	;# 
   362  0E12                     	;# 
   363  0E13                     	;# 
   364  0E14                     	;# 
   365  0E15                     	;# 
   366  0E16                     	;# 
   367  0E17                     	;# 
   368  0E18                     	;# 
   369  0E19                     	;# 
   370  0E1A                     	;# 
   371  0E1B                     	;# 
   372  0E1C                     	;# 
   373  0E1D                     	;# 
   374  0E1E                     	;# 
   375  0E1F                     	;# 
   376  0E20                     	;# 
   377  0E21                     	;# 
   378  0E22                     	;# 
   379  0E23                     	;# 
   380  0E24                     	;# 
   381  0E25                     	;# 
   382  0E26                     	;# 
   383  0E27                     	;# 
   384  0E28                     	;# 
   385  0E29                     	;# 
   386  0E2A                     	;# 
   387  0E2B                     	;# 
   388  0E2C                     	;# 
   389  0E2D                     	;# 
   390  0E2E                     	;# 
   391  0E90                     	;# 
   392  0E91                     	;# 
   393  0E92                     	;# 
   394  0E94                     	;# 
   395  0E95                     	;# 
   396  0E9C                     	;# 
   397  0E9D                     	;# 
   398  0E9E                     	;# 
   399  0E9F                     	;# 
   400  0EA0                     	;# 
   401  0EA1                     	;# 
   402  0EA2                     	;# 
   403  0EA3                     	;# 
   404  0EA4                     	;# 
   405  0EA5                     	;# 
   406  0EA6                     	;# 
   407  0EA7                     	;# 
   408  0F0F                     	;# 
   409  0F10                     	;# 
   410  0F11                     	;# 
   411  0F12                     	;# 
   412  0F13                     	;# 
   413  0F14                     	;# 
   414  0F15                     	;# 
   415  0F16                     	;# 
   416  0F17                     	;# 
   417  0F18                     	;# 
   418  0F19                     	;# 
   419  0F1A                     	;# 
   420  0F1B                     	;# 
   421  0F1C                     	;# 
   422  0F1D                     	;# 
   423  0F1E                     	;# 
   424  0F1F                     	;# 
   425  0F20                     	;# 
   426  0F21                     	;# 
   427  0F22                     	;# 
   428  0F23                     	;# 
   429  0FE4                     	;# 
   430  0FE5                     	;# 
   431  0FE6                     	;# 
   432  0FE7                     	;# 
   433  0FE8                     	;# 
   434  0FE9                     	;# 
   435  0FEA                     	;# 
   436  0FEB                     	;# 
   437  0FED                     	;# 
   438  0FEE                     	;# 
   439  0FEF                     	;# 
   440  0000                     	;# 
   441  0001                     	;# 
   442  0002                     	;# 
   443  0003                     	;# 
   444  0004                     	;# 
   445  0005                     	;# 
   446  0006                     	;# 
   447  0007                     	;# 
   448  0008                     	;# 
   449  0009                     	;# 
   450  000A                     	;# 
   451  000B                     	;# 
   452  000C                     	;# 
   453  000D                     	;# 
   454  000E                     	;# 
   455  0010                     	;# 
   456  0011                     	;# 
   457  0012                     	;# 
   458  0013                     	;# 
   459  0014                     	;# 
   460  0015                     	;# 
   461  0016                     	;# 
   462  0016                     	;# 
   463  0017                     	;# 
   464  0018                     	;# 
   465  0019                     	;# 
   466  001A                     	;# 
   467  001A                     	;# 
   468  001B                     	;# 
   469  001B                     	;# 
   470  001C                     	;# 
   471  001D                     	;# 
   472  001E                     	;# 
   473  001F                     	;# 
   474  008C                     	;# 
   475  008D                     	;# 
   476  008E                     	;# 
   477  0090                     	;# 
   478  0091                     	;# 
   479  0092                     	;# 
   480  0093                     	;# 
   481  0094                     	;# 
   482  0095                     	;# 
   483  0096                     	;# 
   484  0098                     	;# 
   485  0099                     	;# 
   486  009A                     	;# 
   487  009B                     	;# 
   488  009B                     	;# 
   489  009C                     	;# 
   490  009D                     	;# 
   491  009E                     	;# 
   492  009F                     	;# 
   493  010C                     	;# 
   494  010D                     	;# 
   495  010E                     	;# 
   496  0111                     	;# 
   497  0112                     	;# 
   498  0113                     	;# 
   499  0114                     	;# 
   500  0115                     	;# 
   501  0116                     	;# 
   502  0117                     	;# 
   503  0118                     	;# 
   504  0119                     	;# 
   505  011C                     	;# 
   506  018C                     	;# 
   507  018D                     	;# 
   508  018E                     	;# 
   509  0191                     	;# 
   510  0191                     	;# 
   511  0192                     	;# 
   512  0193                     	;# 
   513  0193                     	;# 
   514  0194                     	;# 
   515  0195                     	;# 
   516  0196                     	;# 
   517  0199                     	;# 
   518  0199                     	;# 
   519  0199                     	;# 
   520  019A                     	;# 
   521  019A                     	;# 
   522  019A                     	;# 
   523  019B                     	;# 
   524  019B                     	;# 
   525  019B                     	;# 
   526  019B                     	;# 
   527  019B                     	;# 
   528  019C                     	;# 
   529  019C                     	;# 
   530  019C                     	;# 
   531  019D                     	;# 
   532  019D                     	;# 
   533  019D                     	;# 
   534  019E                     	;# 
   535  019E                     	;# 
   536  019E                     	;# 
   537  019F                     	;# 
   538  019F                     	;# 
   539  019F                     	;# 
   540  019F                     	;# 
   541  019F                     	;# 
   542  020C                     	;# 
   543  020D                     	;# 
   544  020E                     	;# 
   545  0211                     	;# 
   546  0211                     	;# 
   547  0212                     	;# 
   548  0212                     	;# 
   549  0213                     	;# 
   550  0213                     	;# 
   551  0214                     	;# 
   552  0214                     	;# 
   553  0215                     	;# 
   554  0215                     	;# 
   555  0215                     	;# 
   556  0215                     	;# 
   557  0216                     	;# 
   558  0216                     	;# 
   559  0217                     	;# 
   560  0217                     	;# 
   561  028C                     	;# 
   562  028D                     	;# 
   563  028E                     	;# 
   564  0291                     	;# 
   565  0291                     	;# 
   566  0292                     	;# 
   567  0293                     	;# 
   568  0294                     	;# 
   569  0298                     	;# 
   570  0298                     	;# 
   571  0299                     	;# 
   572  029A                     	;# 
   573  029B                     	;# 
   574  029E                     	;# 
   575  030C                     	;# 
   576  030D                     	;# 
   577  030E                     	;# 
   578  038C                     	;# 
   579  038D                     	;# 
   580  038E                     	;# 
   581  0391                     	;# 
   582  0392                     	;# 
   583  0393                     	;# 
   584  0394                     	;# 
   585  0395                     	;# 
   586  0396                     	;# 
   587  0397                     	;# 
   588  0398                     	;# 
   589  0399                     	;# 
   590  040E                     	;# 
   591  0413                     	;# 
   592  0413                     	;# 
   593  0414                     	;# 
   594  0414                     	;# 
   595  0415                     	;# 
   596  0416                     	;# 
   597  0417                     	;# 
   598  0418                     	;# 
   599  041A                     	;# 
   600  041A                     	;# 
   601  041B                     	;# 
   602  041B                     	;# 
   603  041C                     	;# 
   604  041D                     	;# 
   605  041E                     	;# 
   606  041F                     	;# 
   607  0493                     	;# 
   608  0494                     	;# 
   609  0495                     	;# 
   610  0496                     	;# 
   611  049A                     	;# 
   612  049B                     	;# 
   613  049C                     	;# 
   614  049D                     	;# 
   615  058C                     	;# 
   616  058C                     	;# 
   617  058D                     	;# 
   618  058E                     	;# 
   619  058E                     	;# 
   620  058F                     	;# 
   621  0590                     	;# 
   622  0590                     	;# 
   623  0591                     	;# 
   624  0592                     	;# 
   625  0592                     	;# 
   626  0593                     	;# 
   627  0594                     	;# 
   628  0594                     	;# 
   629  0595                     	;# 
   630  0596                     	;# 
   631  0596                     	;# 
   632  0597                     	;# 
   633  0598                     	;# 
   634  0599                     	;# 
   635  059A                     	;# 
   636  059B                     	;# 
   637  059B                     	;# 
   638  059C                     	;# 
   639  059D                     	;# 
   640  060C                     	;# 
   641  060C                     	;# 
   642  060D                     	;# 
   643  060E                     	;# 
   644  060F                     	;# 
   645  060F                     	;# 
   646  0610                     	;# 
   647  0611                     	;# 
   648  0612                     	;# 
   649  0613                     	;# 
   650  0614                     	;# 
   651  0617                     	;# 
   652  0618                     	;# 
   653  0619                     	;# 
   654  061A                     	;# 
   655  061B                     	;# 
   656  061C                     	;# 
   657  0691                     	;# 
   658  0692                     	;# 
   659  0693                     	;# 
   660  0694                     	;# 
   661  0695                     	;# 
   662  0696                     	;# 
   663  0697                     	;# 
   664  0699                     	;# 
   665  069A                     	;# 
   666  0711                     	;# 
   667  0712                     	;# 
   668  0713                     	;# 
   669  0714                     	;# 
   670  0715                     	;# 
   671  0718                     	;# 
   672  0718                     	;# 
   673  0719                     	;# 
   674  071A                     	;# 
   675  071A                     	;# 
   676  071B                     	;# 
   677  071C                     	;# 
   678  071D                     	;# 
   679  0791                     	;# 
   680  0791                     	;# 
   681  0792                     	;# 
   682  0793                     	;# 
   683  0793                     	;# 
   684  0794                     	;# 
   685  0795                     	;# 
   686  0795                     	;# 
   687  0796                     	;# 
   688  0797                     	;# 
   689  0797                     	;# 
   690  0798                     	;# 
   691  0799                     	;# 
   692  079A                     	;# 
   693  080C                     	;# 
   694  080C                     	;# 
   695  080D                     	;# 
   696  080E                     	;# 
   697  080E                     	;# 
   698  080F                     	;# 
   699  0810                     	;# 
   700  0810                     	;# 
   701  0811                     	;# 
   702  0812                     	;# 
   703  0812                     	;# 
   704  0813                     	;# 
   705  0814                     	;# 
   706  0815                     	;# 
   707  0816                     	;# 
   708  0817                     	;# 
   709  0818                     	;# 
   710  0819                     	;# 
   711  081A                     	;# 
   712  081A                     	;# 
   713  081B                     	;# 
   714  081C                     	;# 
   715  081C                     	;# 
   716  081D                     	;# 
   717  088C                     	;# 
   718  088D                     	;# 
   719  088E                     	;# 
   720  088F                     	;# 
   721  088F                     	;# 
   722  0890                     	;# 
   723  0891                     	;# 
   724  0892                     	;# 
   725  0893                     	;# 
   726  0893                     	;# 
   727  0894                     	;# 
   728  0895                     	;# 
   729  0896                     	;# 
   730  0897                     	;# 
   731  0897                     	;# 
   732  0898                     	;# 
   733  0899                     	;# 
   734  0D8C                     	;# 
   735  0D8C                     	;# 
   736  0D8D                     	;# 
   737  0D8E                     	;# 
   738  0D8F                     	;# 
   739  0D8F                     	;# 
   740  0D90                     	;# 
   741  0D91                     	;# 
   742  0D92                     	;# 
   743  0D92                     	;# 
   744  0D93                     	;# 
   745  0D94                     	;# 
   746  0D95                     	;# 
   747  0D95                     	;# 
   748  0D96                     	;# 
   749  0D97                     	;# 
   750  0D98                     	;# 
   751  0D99                     	;# 
   752  0D9A                     	;# 
   753  0D9B                     	;# 
   754  0D9C                     	;# 
   755  0D9D                     	;# 
   756  0D9E                     	;# 
   757  0D9E                     	;# 
   758  0D9F                     	;# 
   759  0DA0                     	;# 
   760  0DA1                     	;# 
   761  0DA1                     	;# 
   762  0DA2                     	;# 
   763  0DA3                     	;# 
   764  0DA4                     	;# 
   765  0DA4                     	;# 
   766  0DA5                     	;# 
   767  0DA6                     	;# 
   768  0DA7                     	;# 
   769  0DA7                     	;# 
   770  0DA8                     	;# 
   771  0DA9                     	;# 
   772  0DAA                     	;# 
   773  0DAB                     	;# 
   774  0DAC                     	;# 
   775  0DAD                     	;# 
   776  0DAE                     	;# 
   777  0DAF                     	;# 
   778  0E0F                     	;# 
   779  0E10                     	;# 
   780  0E11                     	;# 
   781  0E12                     	;# 
   782  0E13                     	;# 
   783  0E14                     	;# 
   784  0E15                     	;# 
   785  0E16                     	;# 
   786  0E17                     	;# 
   787  0E18                     	;# 
   788  0E19                     	;# 
   789  0E1A                     	;# 
   790  0E1B                     	;# 
   791  0E1C                     	;# 
   792  0E1D                     	;# 
   793  0E1E                     	;# 
   794  0E1F                     	;# 
   795  0E20                     	;# 
   796  0E21                     	;# 
   797  0E22                     	;# 
   798  0E23                     	;# 
   799  0E24                     	;# 
   800  0E25                     	;# 
   801  0E26                     	;# 
   802  0E27                     	;# 
   803  0E28                     	;# 
   804  0E29                     	;# 
   805  0E2A                     	;# 
   806  0E2B                     	;# 
   807  0E2C                     	;# 
   808  0E2D                     	;# 
   809  0E2E                     	;# 
   810  0E90                     	;# 
   811  0E91                     	;# 
   812  0E92                     	;# 
   813  0E94                     	;# 
   814  0E95                     	;# 
   815  0E9C                     	;# 
   816  0E9D                     	;# 
   817  0E9E                     	;# 
   818  0E9F                     	;# 
   819  0EA0                     	;# 
   820  0EA1                     	;# 
   821  0EA2                     	;# 
   822  0EA3                     	;# 
   823  0EA4                     	;# 
   824  0EA5                     	;# 
   825  0EA6                     	;# 
   826  0EA7                     	;# 
   827  0F0F                     	;# 
   828  0F10                     	;# 
   829  0F11                     	;# 
   830  0F12                     	;# 
   831  0F13                     	;# 
   832  0F14                     	;# 
   833  0F15                     	;# 
   834  0F16                     	;# 
   835  0F17                     	;# 
   836  0F18                     	;# 
   837  0F19                     	;# 
   838  0F1A                     	;# 
   839  0F1B                     	;# 
   840  0F1C                     	;# 
   841  0F1D                     	;# 
   842  0F1E                     	;# 
   843  0F1F                     	;# 
   844  0F20                     	;# 
   845  0F21                     	;# 
   846  0F22                     	;# 
   847  0F23                     	;# 
   848  0FE4                     	;# 
   849  0FE5                     	;# 
   850  0FE6                     	;# 
   851  0FE7                     	;# 
   852  0FE8                     	;# 
   853  0FE9                     	;# 
   854  0FEA                     	;# 
   855  0FEB                     	;# 
   856  0FED                     	;# 
   857  0FEE                     	;# 
   858  0FEF                     	;# 
   859  0000                     	;# 
   860  0001                     	;# 
   861  0002                     	;# 
   862  0003                     	;# 
   863  0004                     	;# 
   864  0005                     	;# 
   865  0006                     	;# 
   866  0007                     	;# 
   867  0008                     	;# 
   868  0009                     	;# 
   869  000A                     	;# 
   870  000B                     	;# 
   871  000C                     	;# 
   872  000D                     	;# 
   873  000E                     	;# 
   874  0010                     	;# 
   875  0011                     	;# 
   876  0012                     	;# 
   877  0013                     	;# 
   878  0014                     	;# 
   879  0015                     	;# 
   880  0016                     	;# 
   881  0016                     	;# 
   882  0017                     	;# 
   883  0018                     	;# 
   884  0019                     	;# 
   885  001A                     	;# 
   886  001A                     	;# 
   887  001B                     	;# 
   888  001B                     	;# 
   889  001C                     	;# 
   890  001D                     	;# 
   891  001E                     	;# 
   892  001F                     	;# 
   893  008C                     	;# 
   894  008D                     	;# 
   895  008E                     	;# 
   896  0090                     	;# 
   897  0091                     	;# 
   898  0092                     	;# 
   899  0093                     	;# 
   900  0094                     	;# 
   901  0095                     	;# 
   902  0096                     	;# 
   903  0098                     	;# 
   904  0099                     	;# 
   905  009A                     	;# 
   906  009B                     	;# 
   907  009B                     	;# 
   908  009C                     	;# 
   909  009D                     	;# 
   910  009E                     	;# 
   911  009F                     	;# 
   912  010C                     	;# 
   913  010D                     	;# 
   914  010E                     	;# 
   915  0111                     	;# 
   916  0112                     	;# 
   917  0113                     	;# 
   918  0114                     	;# 
   919  0115                     	;# 
   920  0116                     	;# 
   921  0117                     	;# 
   922  0118                     	;# 
   923  0119                     	;# 
   924  011C                     	;# 
   925  018C                     	;# 
   926  018D                     	;# 
   927  018E                     	;# 
   928  0191                     	;# 
   929  0191                     	;# 
   930  0192                     	;# 
   931  0193                     	;# 
   932  0193                     	;# 
   933  0194                     	;# 
   934  0195                     	;# 
   935  0196                     	;# 
   936  0199                     	;# 
   937  0199                     	;# 
   938  0199                     	;# 
   939  019A                     	;# 
   940  019A                     	;# 
   941  019A                     	;# 
   942  019B                     	;# 
   943  019B                     	;# 
   944  019B                     	;# 
   945  019B                     	;# 
   946  019B                     	;# 
   947  019C                     	;# 
   948  019C                     	;# 
   949  019C                     	;# 
   950  019D                     	;# 
   951  019D                     	;# 
   952  019D                     	;# 
   953  019E                     	;# 
   954  019E                     	;# 
   955  019E                     	;# 
   956  019F                     	;# 
   957  019F                     	;# 
   958  019F                     	;# 
   959  019F                     	;# 
   960  019F                     	;# 
   961  020C                     	;# 
   962  020D                     	;# 
   963  020E                     	;# 
   964  0211                     	;# 
   965  0211                     	;# 
   966  0212                     	;# 
   967  0212                     	;# 
   968  0213                     	;# 
   969  0213                     	;# 
   970  0214                     	;# 
   971  0214                     	;# 
   972  0215                     	;# 
   973  0215                     	;# 
   974  0215                     	;# 
   975  0215                     	;# 
   976  0216                     	;# 
   977  0216                     	;# 
   978  0217                     	;# 
   979  0217                     	;# 
   980  028C                     	;# 
   981  028D                     	;# 
   982  028E                     	;# 
   983  0291                     	;# 
   984  0291                     	;# 
   985  0292                     	;# 
   986  0293                     	;# 
   987  0294                     	;# 
   988  0298                     	;# 
   989  0298                     	;# 
   990  0299                     	;# 
   991  029A                     	;# 
   992  029B                     	;# 
   993  029E                     	;# 
   994  030C                     	;# 
   995  030D                     	;# 
   996  030E                     	;# 
   997  038C                     	;# 
   998  038D                     	;# 
   999  038E                     	;# 
  1000  0391                     	;# 
  1001  0392                     	;# 
  1002  0393                     	;# 
  1003  0394                     	;# 
  1004  0395                     	;# 
  1005  0396                     	;# 
  1006  0397                     	;# 
  1007  0398                     	;# 
  1008  0399                     	;# 
  1009  040E                     	;# 
  1010  0413                     	;# 
  1011  0413                     	;# 
  1012  0414                     	;# 
  1013  0414                     	;# 
  1014  0415                     	;# 
  1015  0416                     	;# 
  1016  0417                     	;# 
  1017  0418                     	;# 
  1018  041A                     	;# 
  1019  041A                     	;# 
  1020  041B                     	;# 
  1021  041B                     	;# 
  1022  041C                     	;# 
  1023  041D                     	;# 
  1024  041E                     	;# 
  1025  041F                     	;# 
  1026  0493                     	;# 
  1027  0494                     	;# 
  1028  0495                     	;# 
  1029  0496                     	;# 
  1030  049A                     	;# 
  1031  049B                     	;# 
  1032  049C                     	;# 
  1033  049D                     	;# 
  1034  058C                     	;# 
  1035  058C                     	;# 
  1036  058D                     	;# 
  1037  058E                     	;# 
  1038  058E                     	;# 
  1039  058F                     	;# 
  1040  0590                     	;# 
  1041  0590                     	;# 
  1042  0591                     	;# 
  1043  0592                     	;# 
  1044  0592                     	;# 
  1045  0593                     	;# 
  1046  0594                     	;# 
  1047  0594                     	;# 
  1048  0595                     	;# 
  1049  0596                     	;# 
  1050  0596                     	;# 
  1051  0597                     	;# 
  1052  0598                     	;# 
  1053  0599                     	;# 
  1054  059A                     	;# 
  1055  059B                     	;# 
  1056  059B                     	;# 
  1057  059C                     	;# 
  1058  059D                     	;# 
  1059  060C                     	;# 
  1060  060C                     	;# 
  1061  060D                     	;# 
  1062  060E                     	;# 
  1063  060F                     	;# 
  1064  060F                     	;# 
  1065  0610                     	;# 
  1066  0611                     	;# 
  1067  0612                     	;# 
  1068  0613                     	;# 
  1069  0614                     	;# 
  1070  0617                     	;# 
  1071  0618                     	;# 
  1072  0619                     	;# 
  1073  061A                     	;# 
  1074  061B                     	;# 
  1075  061C                     	;# 
  1076  0691                     	;# 
  1077  0692                     	;# 
  1078  0693                     	;# 
  1079  0694                     	;# 
  1080  0695                     	;# 
  1081  0696                     	;# 
  1082  0697                     	;# 
  1083  0699                     	;# 
  1084  069A                     	;# 
  1085  0711                     	;# 
  1086  0712                     	;# 
  1087  0713                     	;# 
  1088  0714                     	;# 
  1089  0715                     	;# 
  1090  0718                     	;# 
  1091  0718                     	;# 
  1092  0719                     	;# 
  1093  071A                     	;# 
  1094  071A                     	;# 
  1095  071B                     	;# 
  1096  071C                     	;# 
  1097  071D                     	;# 
  1098  0791                     	;# 
  1099  0791                     	;# 
  1100  0792                     	;# 
  1101  0793                     	;# 
  1102  0793                     	;# 
  1103  0794                     	;# 
  1104  0795                     	;# 
  1105  0795                     	;# 
  1106  0796                     	;# 
  1107  0797                     	;# 
  1108  0797                     	;# 
  1109  0798                     	;# 
  1110  0799                     	;# 
  1111  079A                     	;# 
  1112  080C                     	;# 
  1113  080C                     	;# 
  1114  080D                     	;# 
  1115  080E                     	;# 
  1116  080E                     	;# 
  1117  080F                     	;# 
  1118  0810                     	;# 
  1119  0810                     	;# 
  1120  0811                     	;# 
  1121  0812                     	;# 
  1122  0812                     	;# 
  1123  0813                     	;# 
  1124  0814                     	;# 
  1125  0815                     	;# 
  1126  0816                     	;# 
  1127  0817                     	;# 
  1128  0818                     	;# 
  1129  0819                     	;# 
  1130  081A                     	;# 
  1131  081A                     	;# 
  1132  081B                     	;# 
  1133  081C                     	;# 
  1134  081C                     	;# 
  1135  081D                     	;# 
  1136  088C                     	;# 
  1137  088D                     	;# 
  1138  088E                     	;# 
  1139  088F                     	;# 
  1140  088F                     	;# 
  1141  0890                     	;# 
  1142  0891                     	;# 
  1143  0892                     	;# 
  1144  0893                     	;# 
  1145  0893                     	;# 
  1146  0894                     	;# 
  1147  0895                     	;# 
  1148  0896                     	;# 
  1149  0897                     	;# 
  1150  0897                     	;# 
  1151  0898                     	;# 
  1152  0899                     	;# 
  1153  0D8C                     	;# 
  1154  0D8C                     	;# 
  1155  0D8D                     	;# 
  1156  0D8E                     	;# 
  1157  0D8F                     	;# 
  1158  0D8F                     	;# 
  1159  0D90                     	;# 
  1160  0D91                     	;# 
  1161  0D92                     	;# 
  1162  0D92                     	;# 
  1163  0D93                     	;# 
  1164  0D94                     	;# 
  1165  0D95                     	;# 
  1166  0D95                     	;# 
  1167  0D96                     	;# 
  1168  0D97                     	;# 
  1169  0D98                     	;# 
  1170  0D99                     	;# 
  1171  0D9A                     	;# 
  1172  0D9B                     	;# 
  1173  0D9C                     	;# 
  1174  0D9D                     	;# 
  1175  0D9E                     	;# 
  1176  0D9E                     	;# 
  1177  0D9F                     	;# 
  1178  0DA0                     	;# 
  1179  0DA1                     	;# 
  1180  0DA1                     	;# 
  1181  0DA2                     	;# 
  1182  0DA3                     	;# 
  1183  0DA4                     	;# 
  1184  0DA4                     	;# 
  1185  0DA5                     	;# 
  1186  0DA6                     	;# 
  1187  0DA7                     	;# 
  1188  0DA7                     	;# 
  1189  0DA8                     	;# 
  1190  0DA9                     	;# 
  1191  0DAA                     	;# 
  1192  0DAB                     	;# 
  1193  0DAC                     	;# 
  1194  0DAD                     	;# 
  1195  0DAE                     	;# 
  1196  0DAF                     	;# 
  1197  0E0F                     	;# 
  1198  0E10                     	;# 
  1199  0E11                     	;# 
  1200  0E12                     	;# 
  1201  0E13                     	;# 
  1202  0E14                     	;# 
  1203  0E15                     	;# 
  1204  0E16                     	;# 
  1205  0E17                     	;# 
  1206  0E18                     	;# 
  1207  0E19                     	;# 
  1208  0E1A                     	;# 
  1209  0E1B                     	;# 
  1210  0E1C                     	;# 
  1211  0E1D                     	;# 
  1212  0E1E                     	;# 
  1213  0E1F                     	;# 
  1214  0E20                     	;# 
  1215  0E21                     	;# 
  1216  0E22                     	;# 
  1217  0E23                     	;# 
  1218  0E24                     	;# 
  1219  0E25                     	;# 
  1220  0E26                     	;# 
  1221  0E27                     	;# 
  1222  0E28                     	;# 
  1223  0E29                     	;# 
  1224  0E2A                     	;# 
  1225  0E2B                     	;# 
  1226  0E2C                     	;# 
  1227  0E2D                     	;# 
  1228  0E2E                     	;# 
  1229  0E90                     	;# 
  1230  0E91                     	;# 
  1231  0E92                     	;# 
  1232  0E94                     	;# 
  1233  0E95                     	;# 
  1234  0E9C                     	;# 
  1235  0E9D                     	;# 
  1236  0E9E                     	;# 
  1237  0E9F                     	;# 
  1238  0EA0                     	;# 
  1239  0EA1                     	;# 
  1240  0EA2                     	;# 
  1241  0EA3                     	;# 
  1242  0EA4                     	;# 
  1243  0EA5                     	;# 
  1244  0EA6                     	;# 
  1245  0EA7                     	;# 
  1246  0F0F                     	;# 
  1247  0F10                     	;# 
  1248  0F11                     	;# 
  1249  0F12                     	;# 
  1250  0F13                     	;# 
  1251  0F14                     	;# 
  1252  0F15                     	;# 
  1253  0F16                     	;# 
  1254  0F17                     	;# 
  1255  0F18                     	;# 
  1256  0F19                     	;# 
  1257  0F1A                     	;# 
  1258  0F1B                     	;# 
  1259  0F1C                     	;# 
  1260  0F1D                     	;# 
  1261  0F1E                     	;# 
  1262  0F1F                     	;# 
  1263  0F20                     	;# 
  1264  0F21                     	;# 
  1265  0F22                     	;# 
  1266  0F23                     	;# 
  1267  0FE4                     	;# 
  1268  0FE5                     	;# 
  1269  0FE6                     	;# 
  1270  0FE7                     	;# 
  1271  0FE8                     	;# 
  1272  0FE9                     	;# 
  1273  0FEA                     	;# 
  1274  0FEB                     	;# 
  1275  0FED                     	;# 
  1276  0FEE                     	;# 
  1277  0FEF                     	;# 
  1278  0000                     	;# 
  1279  0001                     	;# 
  1280  0002                     	;# 
  1281  0003                     	;# 
  1282  0004                     	;# 
  1283  0005                     	;# 
  1284  0006                     	;# 
  1285  0007                     	;# 
  1286  0008                     	;# 
  1287  0009                     	;# 
  1288  000A                     	;# 
  1289  000B                     	;# 
  1290  000C                     	;# 
  1291  000D                     	;# 
  1292  000E                     	;# 
  1293  0010                     	;# 
  1294  0011                     	;# 
  1295  0012                     	;# 
  1296  0013                     	;# 
  1297  0014                     	;# 
  1298  0015                     	;# 
  1299  0016                     	;# 
  1300  0016                     	;# 
  1301  0017                     	;# 
  1302  0018                     	;# 
  1303  0019                     	;# 
  1304  001A                     	;# 
  1305  001A                     	;# 
  1306  001B                     	;# 
  1307  001B                     	;# 
  1308  001C                     	;# 
  1309  001D                     	;# 
  1310  001E                     	;# 
  1311  001F                     	;# 
  1312  008C                     	;# 
  1313  008D                     	;# 
  1314  008E                     	;# 
  1315  0090                     	;# 
  1316  0091                     	;# 
  1317  0092                     	;# 
  1318  0093                     	;# 
  1319  0094                     	;# 
  1320  0095                     	;# 
  1321  0096                     	;# 
  1322  0098                     	;# 
  1323  0099                     	;# 
  1324  009A                     	;# 
  1325  009B                     	;# 
  1326  009B                     	;# 
  1327  009C                     	;# 
  1328  009D                     	;# 
  1329  009E                     	;# 
  1330  009F                     	;# 
  1331  010C                     	;# 
  1332  010D                     	;# 
  1333  010E                     	;# 
  1334  0111                     	;# 
  1335  0112                     	;# 
  1336  0113                     	;# 
  1337  0114                     	;# 
  1338  0115                     	;# 
  1339  0116                     	;# 
  1340  0117                     	;# 
  1341  0118                     	;# 
  1342  0119                     	;# 
  1343  011C                     	;# 
  1344  018C                     	;# 
  1345  018D                     	;# 
  1346  018E                     	;# 
  1347  0191                     	;# 
  1348  0191                     	;# 
  1349  0192                     	;# 
  1350  0193                     	;# 
  1351  0193                     	;# 
  1352  0194                     	;# 
  1353  0195                     	;# 
  1354  0196                     	;# 
  1355  0199                     	;# 
  1356  0199                     	;# 
  1357  0199                     	;# 
  1358  019A                     	;# 
  1359  019A                     	;# 
  1360  019A                     	;# 
  1361  019B                     	;# 
  1362  019B                     	;# 
  1363  019B                     	;# 
  1364  019B                     	;# 
  1365  019B                     	;# 
  1366  019C                     	;# 
  1367  019C                     	;# 
  1368  019C                     	;# 
  1369  019D                     	;# 
  1370  019D                     	;# 
  1371  019D                     	;# 
  1372  019E                     	;# 
  1373  019E                     	;# 
  1374  019E                     	;# 
  1375  019F                     	;# 
  1376  019F                     	;# 
  1377  019F                     	;# 
  1378  019F                     	;# 
  1379  019F                     	;# 
  1380  020C                     	;# 
  1381  020D                     	;# 
  1382  020E                     	;# 
  1383  0211                     	;# 
  1384  0211                     	;# 
  1385  0212                     	;# 
  1386  0212                     	;# 
  1387  0213                     	;# 
  1388  0213                     	;# 
  1389  0214                     	;# 
  1390  0214                     	;# 
  1391  0215                     	;# 
  1392  0215                     	;# 
  1393  0215                     	;# 
  1394  0215                     	;# 
  1395  0216                     	;# 
  1396  0216                     	;# 
  1397  0217                     	;# 
  1398  0217                     	;# 
  1399  028C                     	;# 
  1400  028D                     	;# 
  1401  028E                     	;# 
  1402  0291                     	;# 
  1403  0291                     	;# 
  1404  0292                     	;# 
  1405  0293                     	;# 
  1406  0294                     	;# 
  1407  0298                     	;# 
  1408  0298                     	;# 
  1409  0299                     	;# 
  1410  029A                     	;# 
  1411  029B                     	;# 
  1412  029E                     	;# 
  1413  030C                     	;# 
  1414  030D                     	;# 
  1415  030E                     	;# 
  1416  038C                     	;# 
  1417  038D                     	;# 
  1418  038E                     	;# 
  1419  0391                     	;# 
  1420  0392                     	;# 
  1421  0393                     	;# 
  1422  0394                     	;# 
  1423  0395                     	;# 
  1424  0396                     	;# 
  1425  0397                     	;# 
  1426  0398                     	;# 
  1427  0399                     	;# 
  1428  040E                     	;# 
  1429  0413                     	;# 
  1430  0413                     	;# 
  1431  0414                     	;# 
  1432  0414                     	;# 
  1433  0415                     	;# 
  1434  0416                     	;# 
  1435  0417                     	;# 
  1436  0418                     	;# 
  1437  041A                     	;# 
  1438  041A                     	;# 
  1439  041B                     	;# 
  1440  041B                     	;# 
  1441  041C                     	;# 
  1442  041D                     	;# 
  1443  041E                     	;# 
  1444  041F                     	;# 
  1445  0493                     	;# 
  1446  0494                     	;# 
  1447  0495                     	;# 
  1448  0496                     	;# 
  1449  049A                     	;# 
  1450  049B                     	;# 
  1451  049C                     	;# 
  1452  049D                     	;# 
  1453  058C                     	;# 
  1454  058C                     	;# 
  1455  058D                     	;# 
  1456  058E                     	;# 
  1457  058E                     	;# 
  1458  058F                     	;# 
  1459  0590                     	;# 
  1460  0590                     	;# 
  1461  0591                     	;# 
  1462  0592                     	;# 
  1463  0592                     	;# 
  1464  0593                     	;# 
  1465  0594                     	;# 
  1466  0594                     	;# 
  1467  0595                     	;# 
  1468  0596                     	;# 
  1469  0596                     	;# 
  1470  0597                     	;# 
  1471  0598                     	;# 
  1472  0599                     	;# 
  1473  059A                     	;# 
  1474  059B                     	;# 
  1475  059B                     	;# 
  1476  059C                     	;# 
  1477  059D                     	;# 
  1478  060C                     	;# 
  1479  060C                     	;# 
  1480  060D                     	;# 
  1481  060E                     	;# 
  1482  060F                     	;# 
  1483  060F                     	;# 
  1484  0610                     	;# 
  1485  0611                     	;# 
  1486  0612                     	;# 
  1487  0613                     	;# 
  1488  0614                     	;# 
  1489  0617                     	;# 
  1490  0618                     	;# 
  1491  0619                     	;# 
  1492  061A                     	;# 
  1493  061B                     	;# 
  1494  061C                     	;# 
  1495  0691                     	;# 
  1496  0692                     	;# 
  1497  0693                     	;# 
  1498  0694                     	;# 
  1499  0695                     	;# 
  1500  0696                     	;# 
  1501  0697                     	;# 
  1502  0699                     	;# 
  1503  069A                     	;# 
  1504  0711                     	;# 
  1505  0712                     	;# 
  1506  0713                     	;# 
  1507  0714                     	;# 
  1508  0715                     	;# 
  1509  0718                     	;# 
  1510  0718                     	;# 
  1511  0719                     	;# 
  1512  071A                     	;# 
  1513  071A                     	;# 
  1514  071B                     	;# 
  1515  071C                     	;# 
  1516  071D                     	;# 
  1517  0791                     	;# 
  1518  0791                     	;# 
  1519  0792                     	;# 
  1520  0793                     	;# 
  1521  0793                     	;# 
  1522  0794                     	;# 
  1523  0795                     	;# 
  1524  0795                     	;# 
  1525  0796                     	;# 
  1526  0797                     	;# 
  1527  0797                     	;# 
  1528  0798                     	;# 
  1529  0799                     	;# 
  1530  079A                     	;# 
  1531  080C                     	;# 
  1532  080C                     	;# 
  1533  080D                     	;# 
  1534  080E                     	;# 
  1535  080E                     	;# 
  1536  080F                     	;# 
  1537  0810                     	;# 
  1538  0810                     	;# 
  1539  0811                     	;# 
  1540  0812                     	;# 
  1541  0812                     	;# 
  1542  0813                     	;# 
  1543  0814                     	;# 
  1544  0815                     	;# 
  1545  0816                     	;# 
  1546  0817                     	;# 
  1547  0818                     	;# 
  1548  0819                     	;# 
  1549  081A                     	;# 
  1550  081A                     	;# 
  1551  081B                     	;# 
  1552  081C                     	;# 
  1553  081C                     	;# 
  1554  081D                     	;# 
  1555  088C                     	;# 
  1556  088D                     	;# 
  1557  088E                     	;# 
  1558  088F                     	;# 
  1559  088F                     	;# 
  1560  0890                     	;# 
  1561  0891                     	;# 
  1562  0892                     	;# 
  1563  0893                     	;# 
  1564  0893                     	;# 
  1565  0894                     	;# 
  1566  0895                     	;# 
  1567  0896                     	;# 
  1568  0897                     	;# 
  1569  0897                     	;# 
  1570  0898                     	;# 
  1571  0899                     	;# 
  1572  0D8C                     	;# 
  1573  0D8C                     	;# 
  1574  0D8D                     	;# 
  1575  0D8E                     	;# 
  1576  0D8F                     	;# 
  1577  0D8F                     	;# 
  1578  0D90                     	;# 
  1579  0D91                     	;# 
  1580  0D92                     	;# 
  1581  0D92                     	;# 
  1582  0D93                     	;# 
  1583  0D94                     	;# 
  1584  0D95                     	;# 
  1585  0D95                     	;# 
  1586  0D96                     	;# 
  1587  0D97                     	;# 
  1588  0D98                     	;# 
  1589  0D99                     	;# 
  1590  0D9A                     	;# 
  1591  0D9B                     	;# 
  1592  0D9C                     	;# 
  1593  0D9D                     	;# 
  1594  0D9E                     	;# 
  1595  0D9E                     	;# 
  1596  0D9F                     	;# 
  1597  0DA0                     	;# 
  1598  0DA1                     	;# 
  1599  0DA1                     	;# 
  1600  0DA2                     	;# 
  1601  0DA3                     	;# 
  1602  0DA4                     	;# 
  1603  0DA4                     	;# 
  1604  0DA5                     	;# 
  1605  0DA6                     	;# 
  1606  0DA7                     	;# 
  1607  0DA7                     	;# 
  1608  0DA8                     	;# 
  1609  0DA9                     	;# 
  1610  0DAA                     	;# 
  1611  0DAB                     	;# 
  1612  0DAC                     	;# 
  1613  0DAD                     	;# 
  1614  0DAE                     	;# 
  1615  0DAF                     	;# 
  1616  0E0F                     	;# 
  1617  0E10                     	;# 
  1618  0E11                     	;# 
  1619  0E12                     	;# 
  1620  0E13                     	;# 
  1621  0E14                     	;# 
  1622  0E15                     	;# 
  1623  0E16                     	;# 
  1624  0E17                     	;# 
  1625  0E18                     	;# 
  1626  0E19                     	;# 
  1627  0E1A                     	;# 
  1628  0E1B                     	;# 
  1629  0E1C                     	;# 
  1630  0E1D                     	;# 
  1631  0E1E                     	;# 
  1632  0E1F                     	;# 
  1633  0E20                     	;# 
  1634  0E21                     	;# 
  1635  0E22                     	;# 
  1636  0E23                     	;# 
  1637  0E24                     	;# 
  1638  0E25                     	;# 
  1639  0E26                     	;# 
  1640  0E27                     	;# 
  1641  0E28                     	;# 
  1642  0E29                     	;# 
  1643  0E2A                     	;# 
  1644  0E2B                     	;# 
  1645  0E2C                     	;# 
  1646  0E2D                     	;# 
  1647  0E2E                     	;# 
  1648  0E90                     	;# 
  1649  0E91                     	;# 
  1650  0E92                     	;# 
  1651  0E94                     	;# 
  1652  0E95                     	;# 
  1653  0E9C                     	;# 
  1654  0E9D                     	;# 
  1655  0E9E                     	;# 
  1656  0E9F                     	;# 
  1657  0EA0                     	;# 
  1658  0EA1                     	;# 
  1659  0EA2                     	;# 
  1660  0EA3                     	;# 
  1661  0EA4                     	;# 
  1662  0EA5                     	;# 
  1663  0EA6                     	;# 
  1664  0EA7                     	;# 
  1665  0F0F                     	;# 
  1666  0F10                     	;# 
  1667  0F11                     	;# 
  1668  0F12                     	;# 
  1669  0F13                     	;# 
  1670  0F14                     	;# 
  1671  0F15                     	;# 
  1672  0F16                     	;# 
  1673  0F17                     	;# 
  1674  0F18                     	;# 
  1675  0F19                     	;# 
  1676  0F1A                     	;# 
  1677  0F1B                     	;# 
  1678  0F1C                     	;# 
  1679  0F1D                     	;# 
  1680  0F1E                     	;# 
  1681  0F1F                     	;# 
  1682  0F20                     	;# 
  1683  0F21                     	;# 
  1684  0F22                     	;# 
  1685  0F23                     	;# 
  1686  0FE4                     	;# 
  1687  0FE5                     	;# 
  1688  0FE6                     	;# 
  1689  0FE7                     	;# 
  1690  0FE8                     	;# 
  1691  0FE9                     	;# 
  1692  0FEA                     	;# 
  1693  0FEB                     	;# 
  1694  0FED                     	;# 
  1695  0FEE                     	;# 
  1696  0FEF                     	;# 
  1697                           
  1698                           	psect	stringtext
  1699  0800                     __pstringtext:	
  1700  0800                     _DATA:	
  1701  0800  3400               	retlw	0
  1702  0801  3480               	retlw	128
  1703  0802  3440               	retlw	64
  1704  0803  34C0               	retlw	192
  1705  0804  3420               	retlw	32
  1706  0805  34A0               	retlw	160
  1707  0806  3460               	retlw	96
  1708  0807  34E0               	retlw	224
  1709  0808  3410               	retlw	16
  1710  0809  3490               	retlw	144
  1711  080A  3450               	retlw	80
  1712  080B  34D0               	retlw	208
  1713  080C  3430               	retlw	48
  1714  080D  34B0               	retlw	176
  1715  080E  3470               	retlw	112
  1716  080F  34F0               	retlw	240
  1717  0810  3408               	retlw	8
  1718  0811  3488               	retlw	136
  1719  0812  3448               	retlw	72
  1720  0813  34C8               	retlw	200
  1721  0814  3428               	retlw	40
  1722  0815  34A8               	retlw	168
  1723  0816  3468               	retlw	104
  1724  0817  34E8               	retlw	232
  1725  0818  3418               	retlw	24
  1726  0819  3498               	retlw	152
  1727  081A  3458               	retlw	88
  1728  081B  34D8               	retlw	216
  1729  081C  3438               	retlw	56
  1730  081D  34B8               	retlw	184
  1731  081E  3478               	retlw	120
  1732  081F  34F8               	retlw	248
  1733  0820  3404               	retlw	4
  1734  0821  3484               	retlw	132
  1735  0822  3444               	retlw	68
  1736  0823  34C4               	retlw	196
  1737  0824  3424               	retlw	36
  1738  0825  34A4               	retlw	164
  1739  0826  3464               	retlw	100
  1740  0827  34E4               	retlw	228
  1741  0828  3414               	retlw	20
  1742  0829  3494               	retlw	148
  1743  082A  3454               	retlw	84
  1744  082B  34D4               	retlw	212
  1745  082C  3434               	retlw	52
  1746  082D  34B4               	retlw	180
  1747  082E  3474               	retlw	116
  1748  082F  34F4               	retlw	244
  1749  0830  340C               	retlw	12
  1750  0831  348C               	retlw	140
  1751  0832  344C               	retlw	76
  1752  0833  34CC               	retlw	204
  1753  0834  342C               	retlw	44
  1754  0835  34AC               	retlw	172
  1755  0836  346C               	retlw	108
  1756  0837  34EC               	retlw	236
  1757  0838  341C               	retlw	28
  1758  0839  349C               	retlw	156
  1759  083A  345C               	retlw	92
  1760  083B  34DC               	retlw	220
  1761  083C  343C               	retlw	60
  1762  083D  34BC               	retlw	188
  1763  083E  347C               	retlw	124
  1764  083F  34FC               	retlw	252
  1765  0840  3406               	retlw	6
  1766  0841                     __end_of_DATA:	
  1767  0841                     _ACTIVEBAND:	
  1768  0841  3400               	retlw	0
  1769  0842  3400               	retlw	0
  1770  0843  3400               	retlw	0
  1771  0844  3400               	retlw	0
  1772  0845  3400               	retlw	0
  1773  0846  3401               	retlw	1
  1774  0847  3400               	retlw	0
  1775  0848  3400               	retlw	0
  1776  0849  3401               	retlw	1
  1777  084A  3400               	retlw	0
  1778  084B  3400               	retlw	0
  1779  084C  3400               	retlw	0
  1780  084D  3401               	retlw	1
  1781  084E  3401               	retlw	1
  1782  084F  3400               	retlw	0
  1783  0850  3400               	retlw	0
  1784  0851  3400               	retlw	0
  1785  0852  3400               	retlw	0
  1786  0853  3400               	retlw	0
  1787  0854  3400               	retlw	0
  1788  0855  3401               	retlw	1
  1789  0856  3400               	retlw	0
  1790  0857  3400               	retlw	0
  1791  0858  3400               	retlw	0
  1792  0859  3400               	retlw	0
  1793  085A  3400               	retlw	0
  1794  085B  3401               	retlw	1
  1795  085C  3400               	retlw	0
  1796  085D  3400               	retlw	0
  1797  085E  3401               	retlw	1
  1798  085F  3400               	retlw	0
  1799  0860  3400               	retlw	0
  1800  0861  3400               	retlw	0
  1801  0862  3400               	retlw	0
  1802  0863  3400               	retlw	0
  1803  0864  3400               	retlw	0
  1804  0865  3400               	retlw	0
  1805  0866  3400               	retlw	0
  1806  0867  3400               	retlw	0
  1807  0868  3400               	retlw	0
  1808  0869  3400               	retlw	0
  1809  086A  3400               	retlw	0
  1810  086B  3400               	retlw	0
  1811  086C  3400               	retlw	0
  1812  086D  3400               	retlw	0
  1813  086E  3400               	retlw	0
  1814  086F  3400               	retlw	0
  1815  0870  3400               	retlw	0
  1816  0871  3400               	retlw	0
  1817  0872  3400               	retlw	0
  1818  0873  3400               	retlw	0
  1819  0874  3400               	retlw	0
  1820  0875  3400               	retlw	0
  1821  0876  3400               	retlw	0
  1822  0877  3400               	retlw	0
  1823  0878  3400               	retlw	0
  1824  0879  3400               	retlw	0
  1825  087A  3400               	retlw	0
  1826  087B  3400               	retlw	0
  1827  087C  3400               	retlw	0
  1828  087D  3400               	retlw	0
  1829  087E  3400               	retlw	0
  1830  087F  3400               	retlw	0
  1831  0880  3400               	retlw	0
  1832  0881                     __end_of_ACTIVEBAND:	
  1833  0881                     _DacOutput:	
  1834  0881  342B               	retlw	43
  1835  0882  3448               	retlw	72
  1836  0883  3456               	retlw	86
  1837  0884  3464               	retlw	100
  1838  0885                     __end_of_DacOutput:	
  1839  0885                     _REGADD:	
  1840  0885  3407               	retlw	7
  1841  0886  3410               	retlw	16
  1842  0887                     __end_of_REGADD:	
  1843  0887                     _SLAVEADD:	
  1844  0887  3406               	retlw	6
  1845  0888  340E               	retlw	14
  1846  0889                     __end_of_SLAVEADD:	
  1847  000E                     _PORTC	set	14
  1848  0095                     _OPTION_REGbits	set	149
  1849  0099                     _OSCCON	set	153
  1850  009A                     _OSCSTAT	set	154
  1851  0098                     _OSCTUNE	set	152
  1852  008C                     _TRISA	set	140
  1853  008D                     _TRISB	set	141
  1854  008E                     _TRISC	set	142
  1855  0118                     _DAC1CON0	set	280
  1856  0119                     _DAC1CON1	set	281
  1857  010C                     _LATA	set	268
  1858  010D                     _LATB	set	269
  1859  010E                     _LATC	set	270
  1860  0861                     _LATA1	set	2145
  1861  0862                     _LATA2	set	2146
  1862  0864                     _LATA4	set	2148
  1863  086C                     _LATB4	set	2156
  1864  086D                     _LATB5	set	2157
  1865  086E                     _LATB6	set	2158
  1866  086F                     _LATB7	set	2159
  1867  018C                     _ANSELA	set	396
  1868  018D                     _ANSELB	set	397
  1869  018E                     _ANSELC	set	398
  1870  020D                     _WPUB	set	525
  1871  020E                     _WPUC	set	526
  1872                           
  1873                           ; #config settings
  1874  0000                     
  1875                           	psect	cinit
  1876  07F6                     start_initialization:	
  1877  07F6                     __initialization:	
  1878                           
  1879                           ; Clear objects allocated to COMMON
  1880  07F6  01FD               	clrf	__pbssCOMMON& (0+127)
  1881                           
  1882                           ; Clear objects allocated to BANK0
  1883  07F7  01A0               	clrf	__pbssBANK0& (0+127)
  1884  07F8  01A1               	clrf	(__pbssBANK0+1)& (0+127)
  1885  07F9  01A2               	clrf	(__pbssBANK0+2)& (0+127)
  1886  07FA  01A3               	clrf	(__pbssBANK0+3)& (0+127)
  1887  07FB  01A4               	clrf	(__pbssBANK0+4)& (0+127)
  1888  07FC  01A5               	clrf	(__pbssBANK0+5)& (0+127)
  1889  07FD                     end_of_initialization:	
  1890                           ;End of C runtime variable initialization code
  1891                           
  1892  07FD                     __end_of__initialization:	
  1893  07FD  0020               	movlb	0
  1894  07FE  3186  2E18         	ljmp	_main	;jump to C main() function
  1895                           
  1896                           	psect	bssCOMMON
  1897  007D                     __pbssCOMMON:	
  1898  007D                     _Byte1:	
  1899  007D                     	ds	1
  1900                           
  1901                           	psect	bssBANK0
  1902  0020                     __pbssBANK0:	
  1903  0020                     _Byte2:	
  1904  0020                     	ds	1
  1905  0021                     _Byte3:	
  1906  0021                     	ds	1
  1907  0022                     _parity1:	
  1908  0022                     	ds	1
  1909  0023                     _parity2:	
  1910  0023                     	ds	1
  1911  0024                     _parity3:	
  1912  0024                     	ds	1
  1913  0025                     _parity4:	
  1914  0025                     	ds	1
  1915                           
  1916                           	psect	cstackCOMMON
  1917  0070                     __pcstackCOMMON:	
  1918  0070                     ?_OSCILLATOR_Initialize:	
  1919  0070                     ??_OSCILLATOR_Initialize:	
  1920                           ; 0 bytes @ 0x0
  1921                           
  1922  0070                     ?_DAC1_Initialize:	
  1923                           ; 0 bytes @ 0x0
  1924                           
  1925  0070                     ??_DAC1_Initialize:	
  1926                           ; 0 bytes @ 0x0
  1927                           
  1928  0070                     ?_DAC1_SetOutput:	
  1929                           ; 0 bytes @ 0x0
  1930                           
  1931  0070                     ??_DAC1_SetOutput:	
  1932                           ; 0 bytes @ 0x0
  1933                           
  1934  0070                     ?_PIN_MANAGER_Initialize:	
  1935                           ; 0 bytes @ 0x0
  1936                           
  1937  0070                     ??_PIN_MANAGER_Initialize:	
  1938                           ; 0 bytes @ 0x0
  1939                           
  1940  0070                     ?_SYSTEM_Initialize:	
  1941                           ; 0 bytes @ 0x0
  1942                           
  1943  0070                     ??_SYSTEM_Initialize:	
  1944                           ; 0 bytes @ 0x0
  1945                           
  1946  0070                     ?_shiftRegister:	
  1947                           ; 0 bytes @ 0x0
  1948                           
  1949  0070                     ??_paritycheck:	
  1950                           ; 0 bytes @ 0x0
  1951                           
  1952  0070                     ?_ConfigureShiftRegister:	
  1953                           ; 0 bytes @ 0x0
  1954                           
  1955  0070                     ??_ConfigureShiftRegister:	
  1956                           ; 0 bytes @ 0x0
  1957                           
  1958  0070                     ?_main:	
  1959                           ; 0 bytes @ 0x0
  1960                           
  1961  0070                     ?_paritycheck:	
  1962                           ; 0 bytes @ 0x0
  1963                           
  1964  0070                     DAC1_SetOutput@inputData:	
  1965                           ; 1 bytes @ 0x0
  1966                           
  1967  0070                     shiftRegister@Dummy2:	
  1968                           ; 1 bytes @ 0x0
  1969                           
  1970                           
  1971                           ; 1 bytes @ 0x0
  1972  0070                     	ds	1
  1973  0071                     shiftRegister@y:	
  1974  0071                     paritycheck@parity:	
  1975                           ; 1 bytes @ 0x1
  1976                           
  1977  0071                     ConfigureShiftRegister@i:	
  1978                           ; 1 bytes @ 0x1
  1979                           
  1980                           
  1981                           ; 1 bytes @ 0x1
  1982  0071                     	ds	1
  1983  0072                     ??_shiftRegister:	
  1984  0072                     paritycheck@Dummy:	
  1985                           ; 0 bytes @ 0x2
  1986                           
  1987  0072                     ConfigureShiftRegister@ReverseReg:	
  1988                           ; 1 bytes @ 0x2
  1989                           
  1990                           
  1991                           ; 1 bytes @ 0x2
  1992  0072                     	ds	1
  1993  0073                     shiftRegister@m:	
  1994                           
  1995                           ; 1 bytes @ 0x3
  1996  0073                     	ds	1
  1997  0074                     shiftRegister@Dummy1:	
  1998                           
  1999                           ; 1 bytes @ 0x4
  2000  0074                     	ds	1
  2001  0075                     ?_MIPI:	
  2002  0075                     MIPI@b:	
  2003                           ; 0 bytes @ 0x5
  2004                           
  2005                           
  2006                           ; 1 bytes @ 0x5
  2007  0075                     	ds	1
  2008  0076                     MIPI@c:	
  2009                           
  2010                           ; 1 bytes @ 0x6
  2011  0076                     	ds	1
  2012  0077                     MIPI@d:	
  2013                           
  2014                           ; 1 bytes @ 0x7
  2015  0077                     	ds	1
  2016  0078                     ??_MIPI:	
  2017                           
  2018                           ; 0 bytes @ 0x8
  2019  0078                     	ds	2
  2020  007A                     MIPI@a:	
  2021                           
  2022                           ; 1 bytes @ 0xA
  2023  007A                     	ds	1
  2024  007B                     MIPI@j:	
  2025                           
  2026                           ; 1 bytes @ 0xB
  2027  007B                     	ds	1
  2028  007C                     MIPI@i:	
  2029                           
  2030                           ; 1 bytes @ 0xC
  2031  007C                     	ds	1
  2032                           
  2033                           	psect	cstackBANK0
  2034  0026                     __pcstackBANK0:	
  2035  0026                     ??_main:	
  2036                           
  2037                           ; 0 bytes @ 0x0
  2038  0026                     	ds	3
  2039                           
  2040                           	psect	maintext
  2041  0618                     __pmaintext:	
  2042 ;;
  2043 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2044 ;;
  2045 ;; *************** function _main *****************
  2046 ;; Defined at:
  2047 ;;		line 291 in file "main.c"
  2048 ;; Parameters:    Size  Location     Type
  2049 ;;		None
  2050 ;; Auto vars:     Size  Location     Type
  2051 ;;		None
  2052 ;; Return value:  Size  Location     Type
  2053 ;;		None               void
  2054 ;; Registers used:
  2055 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2056 ;; Tracked objects:
  2057 ;;		On entry : B1F/0
  2058 ;;		On exit  : 0/0
  2059 ;;		Unchanged: 0/0
  2060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2061 ;;      Params:         0       0       0       0       0       0       0       0
  2062 ;;      Locals:         0       0       0       0       0       0       0       0
  2063 ;;      Temps:          0       3       0       0       0       0       0       0
  2064 ;;      Totals:         0       3       0       0       0       0       0       0
  2065 ;;Total ram usage:        3 bytes
  2066 ;; Hardware stack levels required when called:    2
  2067 ;; This function calls:
  2068 ;;		_ConfigureShiftRegister
  2069 ;;		_DAC1_Initialize
  2070 ;;		_DAC1_SetOutput
  2071 ;;		_MIPI
  2072 ;;		_PIN_MANAGER_Initialize
  2073 ;;		_SYSTEM_Initialize
  2074 ;; This function is called by:
  2075 ;;		Startup code after reset
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           
  2079                           
  2080                           ;psect for function _main
  2081  0618                     _main:	
  2082                           
  2083                           ;main.c: 293: SYSTEM_Initialize();
  2084                           
  2085                           ;incstack = 0
  2086                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2087  0618  3185  256E  3186   	fcall	_SYSTEM_Initialize
  2088                           
  2089                           ;main.c: 294: DAC1_Initialize();
  2090  061B  3185  2563  3186   	fcall	_DAC1_Initialize
  2091                           
  2092                           ;main.c: 295: PIN_MANAGER_Initialize();
  2093  061E  3185  2593  3186   	fcall	_PIN_MANAGER_Initialize
  2094                           
  2095                           ;main.c: 297: DAC1_SetOutput(0);
  2096  0621  3000               	movlw	0
  2097  0622  3185  255E  3186   	fcall	_DAC1_SetOutput
  2098                           
  2099                           ;main.c: 300: do { LATA1 = 0; } while(0);
  2100  0625  0022               	movlb	2	; select bank2
  2101  0626  108C               	bcf	12,1	;volatile
  2102                           
  2103                           ;main.c: 301: do { LATA4 = 0; } while(0);
  2104  0627  120C               	bcf	12,4	;volatile
  2105                           
  2106                           ;main.c: 302: do { LATA2 = 0; } while(0);
  2107  0628  110C               	bcf	12,2	;volatile
  2108                           
  2109                           ;main.c: 303: do { LATB4 = 0; } while(0);
  2110  0629  120D               	bcf	13,4	;volatile
  2111  062A                     l944:	
  2112                           ;main.c: 305: while ((PORTC & 0xC0) != 0xC0) {
  2113                           
  2114                           ;main.c: 304: while (1) {
  2115                           
  2116  062A  30C0               	movlw	192
  2117  062B  0020               	movlb	0	; select bank0
  2118  062C  050E               	andwf	14,w	;volatile
  2119  062D  00A6               	movwf	??_main
  2120  062E  30C0               	movlw	192
  2121  062F  0626               	xorwf	??_main,w
  2122  0630  1D03               	btfss	3,2
  2123  0631  2E2A               	goto	l944
  2124                           
  2125                           ;main.c: 306: }
  2126                           ;main.c: 307: Byte1 = PORTC;
  2127  0632  080E               	movf	14,w	;volatile
  2128  0633  00A6               	movwf	??_main
  2129  0634  0826               	movf	??_main,w
  2130  0635  00FD               	movwf	_Byte1
  2131  0636                     l948:	
  2132                           ;main.c: 308: while ((PORTC & 0xC0) != 0x40) {
  2133                           
  2134  0636  30C0               	movlw	192
  2135  0637  050E               	andwf	14,w	;volatile
  2136  0638  00A6               	movwf	??_main
  2137  0639  3040               	movlw	64
  2138  063A  0626               	xorwf	??_main,w
  2139  063B  1D03               	btfss	3,2
  2140  063C  2E36               	goto	l948
  2141                           
  2142                           ;main.c: 309: }
  2143                           ;main.c: 310: Byte2 = PORTC & 0x3F;
  2144  063D  080E               	movf	14,w	;volatile
  2145  063E  393F               	andlw	63
  2146  063F  00A6               	movwf	??_main
  2147  0640  0826               	movf	??_main,w
  2148  0641  00A0               	movwf	_Byte2
  2149  0642                     l952:	
  2150                           ;main.c: 311: while ((PORTC & 0xC0) != 0x80) {
  2151                           
  2152  0642  30C0               	movlw	192
  2153  0643  050E               	andwf	14,w	;volatile
  2154  0644  00A6               	movwf	??_main
  2155  0645  3080               	movlw	128
  2156  0646  0626               	xorwf	??_main,w
  2157  0647  1D03               	btfss	3,2
  2158  0648  2E42               	goto	l952
  2159                           
  2160                           ;main.c: 312: }
  2161                           ;main.c: 313: Byte3 = PORTC & 0x3F;
  2162  0649  080E               	movf	14,w	;volatile
  2163  064A  393F               	andlw	63
  2164  064B  00A6               	movwf	??_main
  2165  064C  0826               	movf	??_main,w
  2166  064D  00A1               	movwf	_Byte3
  2167                           
  2168                           ;main.c: 314: if (((Byte1 & 0x10) == 0x10) && ((Byte1 & 0x0C) != 0x00))
  2169  064E  1E7D               	btfss	_Byte1,4
  2170  064F  2E5E               	goto	l962
  2171  0650  087D               	movf	_Byte1,w
  2172  0651  390C               	andlw	12
  2173  0652  1903               	btfsc	3,2
  2174  0653  2E5E               	goto	l962
  2175                           
  2176                           ;main.c: 315: DAC1_SetOutput(DacOutput[(Byte1 & 0x03)]);
  2177  0654  087D               	movf	_Byte1,w
  2178  0655  3903               	andlw	3
  2179  0656  3E81               	addlw	low (_DacOutput| (0+32768))
  2180  0657  0084               	movwf	4
  2181  0658  3088               	movlw	high (_DacOutput| (0+32768))
  2182  0659  1803               	skipnc
  2183  065A  3E01               	addlw	1
  2184  065B  0085               	movwf	5
  2185  065C  0800               	movf	0,w	;code access
  2186  065D  2E5F               	goto	L1
  2187  065E                     l962:	
  2188                           
  2189                           ;main.c: 316: else
  2190                           ;main.c: 317: DAC1_SetOutput(0);
  2191  065E  3000               	movlw	0
  2192  065F                     L1:	
  2193  065F  3185  255E  3186   	fcall	_DAC1_SetOutput
  2194                           
  2195                           ;main.c: 319: if ((Byte1 & 0x3C) == 0x20) {
  2196  0662  303C               	movlw	60
  2197  0663  057D               	andwf	_Byte1,w
  2198  0664  0020               	movlb	0	; select bank0
  2199  0665  00A6               	movwf	??_main
  2200  0666  3020               	movlw	32
  2201  0667  0626               	xorwf	??_main,w
  2202  0668  1D03               	btfss	3,2
  2203  0669  2E6E               	goto	l966
  2204                           
  2205                           ;main.c: 320: do { LATA2 = 0; } while(0);
  2206  066A  0022               	movlb	2	; select bank2
  2207  066B  110C               	bcf	12,2	;volatile
  2208                           
  2209                           ;main.c: 321: do { LATB4 = 1; } while(0);
  2210  066C  160D               	bsf	13,4	;volatile
  2211                           
  2212                           ;main.c: 322: } else {
  2213  066D  2E96               	goto	l974
  2214  066E                     l966:	
  2215                           
  2216                           ;main.c: 323: if (((Byte1 & 0x30) != 0x00) && ((Byte1 & 0x0C) != 0x00)) {
  2217  066E  087D               	movf	_Byte1,w
  2218  066F  3930               	andlw	48
  2219  0670  1903               	btfsc	3,2
  2220  0671  2E93               	goto	l206
  2221  0672  087D               	movf	_Byte1,w
  2222  0673  390C               	andlw	12
  2223  0674  1903               	btfsc	3,2
  2224  0675  2E93               	goto	l206
  2225                           
  2226                           ;main.c: 324: do { LATB4 = 1; } while(0);
  2227  0676  0022               	movlb	2	; select bank2
  2228  0677  160D               	bsf	13,4	;volatile
  2229                           
  2230                           ;main.c: 325: if (ACTIVEBAND[Byte2] || ACTIVEBAND[Byte3])
  2231  0678  0020               	movlb	0	; select bank0
  2232  0679  0820               	movf	_Byte2,w
  2233  067A  3E41               	addlw	low (_ACTIVEBAND| (0+32768))
  2234  067B  0084               	movwf	4
  2235  067C  3088               	movlw	high (_ACTIVEBAND| (0+32768))
  2236  067D  1803               	skipnc
  2237  067E  3E01               	addlw	1
  2238  067F  0085               	movwf	5
  2239  0680  0012               	moviw fsr0++
  2240  0681  1D03               	btfss	3,2
  2241  0682  2E8D               	goto	l200
  2242  0683  0821               	movf	_Byte3,w
  2243  0684  3E41               	addlw	low (_ACTIVEBAND| (0+32768))
  2244  0685  0084               	movwf	4
  2245  0686  3088               	movlw	high (_ACTIVEBAND| (0+32768))
  2246  0687  1803               	skipnc
  2247  0688  3E01               	addlw	1
  2248  0689  0085               	movwf	5
  2249  068A  0012               	moviw fsr0++
  2250  068B  1903               	btfsc	3,2
  2251  068C  2E90               	goto	l203
  2252  068D                     l200:	
  2253                           ;main.c: 326: do { LATA2 = 1; } while(0);
  2254                           
  2255  068D  0022               	movlb	2	; select bank2
  2256  068E  150C               	bsf	12,2	;volatile
  2257  068F  2E96               	goto	l974
  2258  0690                     l203:	
  2259                           ;main.c: 327: else
  2260                           ;main.c: 328: do { LATA2 = 0; } while(0);
  2261                           
  2262  0690  0022               	movlb	2	; select bank2
  2263  0691  110C               	bcf	12,2	;volatile
  2264                           
  2265                           ;main.c: 336: } else {
  2266  0692  2E96               	goto	l974
  2267  0693                     l206:	
  2268                           ;main.c: 337: do { LATA2 = 0; } while(0);
  2269                           
  2270  0693  0022               	movlb	2	; select bank2
  2271  0694  110C               	bcf	12,2	;volatile
  2272                           
  2273                           ;main.c: 338: do { LATB4 = 0; } while(0);
  2274  0695  120D               	bcf	13,4	;volatile
  2275  0696                     l974:	
  2276                           
  2277                           ;main.c: 339: }
  2278                           ;main.c: 340: }
  2279                           ;main.c: 356: if ((Byte1 & 0x0C) == 0x00)
  2280  0696  087D               	movf	_Byte1,w
  2281  0697  390C               	andlw	12
  2282  0698  1D03               	btfss	3,2
  2283  0699  2EA5               	goto	l978
  2284                           
  2285                           ;main.c: 357: MIPI(Byte2,Byte2,Byte3,Byte3);
  2286  069A  0020               	movlb	0	; select bank0
  2287  069B  0820               	movf	_Byte2,w
  2288  069C  00A6               	movwf	??_main
  2289  069D  0826               	movf	??_main,w
  2290  069E  00F5               	movwf	MIPI@b
  2291  069F  0821               	movf	_Byte3,w
  2292  06A0  00A7               	movwf	??_main+1
  2293  06A1  0827               	movf	??_main+1,w
  2294  06A2  00F6               	movwf	MIPI@c
  2295  06A3  0821               	movf	_Byte3,w
  2296  06A4  2EC8               	goto	L3
  2297  06A5                     l978:	
  2298                           
  2299                           ;main.c: 358: else if ((Byte1 & 0x0C) == 0x04)
  2300  06A5  300C               	movlw	12
  2301  06A6  057D               	andwf	_Byte1,w
  2302  06A7  0020               	movlb	0	; select bank0
  2303  06A8  00A6               	movwf	??_main
  2304  06A9  3004               	movlw	4
  2305  06AA  0626               	xorwf	??_main,w
  2306  06AB  1D03               	btfss	3,2
  2307  06AC  2EB7               	goto	l982
  2308                           
  2309                           ;main.c: 359: MIPI(64,64,Byte3,Byte3);
  2310  06AD  3040               	movlw	64
  2311  06AE  00A6               	movwf	??_main
  2312  06AF  0826               	movf	??_main,w
  2313  06B0  00F5               	movwf	MIPI@b
  2314  06B1  0821               	movf	_Byte3,w
  2315  06B2  00A7               	movwf	??_main+1
  2316  06B3  0827               	movf	??_main+1,w
  2317  06B4  00F6               	movwf	MIPI@c
  2318  06B5  0821               	movf	_Byte3,w
  2319  06B6  2ED7               	goto	L4
  2320  06B7                     l982:	
  2321                           
  2322                           ;main.c: 360: else if ((Byte1 & 0x0C) == 0x08)
  2323  06B7  300C               	movlw	12
  2324  06B8  057D               	andwf	_Byte1,w
  2325  06B9  0020               	movlb	0	; select bank0
  2326  06BA  00A6               	movwf	??_main
  2327  06BB  3008               	movlw	8
  2328  06BC  0626               	xorwf	??_main,w
  2329  06BD  1D03               	btfss	3,2
  2330  06BE  2ECD               	goto	l986
  2331                           
  2332                           ;main.c: 361: MIPI(Byte2,Byte2,64,64);
  2333  06BF  0820               	movf	_Byte2,w
  2334  06C0  00A6               	movwf	??_main
  2335  06C1  0826               	movf	??_main,w
  2336  06C2  00F5               	movwf	MIPI@b
  2337  06C3  3040               	movlw	64
  2338  06C4  00A7               	movwf	??_main+1
  2339  06C5  0827               	movf	??_main+1,w
  2340  06C6  00F6               	movwf	MIPI@c
  2341  06C7  3040               	movlw	64
  2342  06C8                     L3:	
  2343  06C8  00A8               	movwf	??_main+2
  2344  06C9  0828               	movf	??_main+2,w
  2345  06CA  00F7               	movwf	MIPI@d
  2346  06CB  0820               	movf	_Byte2,w
  2347  06CC  2EDB               	goto	L2
  2348  06CD                     l986:	
  2349                           
  2350                           ;main.c: 362: else
  2351                           ;main.c: 363: MIPI(64,64,64,64);
  2352  06CD  3040               	movlw	64
  2353  06CE  0020               	movlb	0	; select bank0
  2354  06CF  00A6               	movwf	??_main
  2355  06D0  0826               	movf	??_main,w
  2356  06D1  00F5               	movwf	MIPI@b
  2357  06D2  3040               	movlw	64
  2358  06D3  00A7               	movwf	??_main+1
  2359  06D4  0827               	movf	??_main+1,w
  2360  06D5  00F6               	movwf	MIPI@c
  2361  06D6  3040               	movlw	64
  2362  06D7                     L4:	
  2363  06D7  00A8               	movwf	??_main+2
  2364  06D8  0828               	movf	??_main+2,w
  2365  06D9  00F7               	movwf	MIPI@d
  2366  06DA  3040               	movlw	64
  2367  06DB                     L2:	
  2368  06DB  3186  26E6  3186   	fcall	_MIPI
  2369                           
  2370                           ;main.c: 444: do { LATA1 = 1; } while(0);
  2371  06DE  0022               	movlb	2	; select bank2
  2372  06DF  148C               	bsf	12,1	;volatile
  2373                           
  2374                           ;main.c: 445: ConfigureShiftRegister();
  2375  06E0  3185  25D5  3186   	fcall	_ConfigureShiftRegister
  2376                           
  2377                           ;main.c: 446: do { LATA1 = 0; } while(0);
  2378  06E3  0022               	movlb	2	; select bank2
  2379  06E4  108C               	bcf	12,1	;volatile
  2380  06E5  2E2A               	goto	l944
  2381  06E6                     __end_of_main:	
  2382                           
  2383                           	psect	text1
  2384  056E                     __ptext1:	
  2385 ;; *************** function _SYSTEM_Initialize *****************
  2386 ;; Defined at:
  2387 ;;		line 75 in file "mcc_generated_files/mcc.c"
  2388 ;; Parameters:    Size  Location     Type
  2389 ;;		None
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;		None
  2392 ;; Return value:  Size  Location     Type
  2393 ;;		None               void
  2394 ;; Registers used:
  2395 ;;		wreg, status,2, status,0, pclath, cstack
  2396 ;; Tracked objects:
  2397 ;;		On entry : 0/0
  2398 ;;		On exit  : 0/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2401 ;;      Params:         0       0       0       0       0       0       0       0
  2402 ;;      Locals:         0       0       0       0       0       0       0       0
  2403 ;;      Temps:          0       0       0       0       0       0       0       0
  2404 ;;      Totals:         0       0       0       0       0       0       0       0
  2405 ;;Total ram usage:        0 bytes
  2406 ;; Hardware stack levels used:    1
  2407 ;; Hardware stack levels required when called:    1
  2408 ;; This function calls:
  2409 ;;		_DAC1_Initialize
  2410 ;;		_OSCILLATOR_Initialize
  2411 ;;		_PIN_MANAGER_Initialize
  2412 ;; This function is called by:
  2413 ;;		_main
  2414 ;; This function uses a non-reentrant model
  2415 ;;
  2416                           
  2417                           
  2418                           ;psect for function _SYSTEM_Initialize
  2419  056E                     _SYSTEM_Initialize:	
  2420                           
  2421                           ;mcc.c: 76: OSCILLATOR_Initialize();
  2422                           
  2423                           ;incstack = 0
  2424                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2425  056E  3185  2568  3185   	fcall	_OSCILLATOR_Initialize
  2426                           
  2427                           ;mcc.c: 77: PIN_MANAGER_Initialize();
  2428  0571  3185  2593  3185   	fcall	_PIN_MANAGER_Initialize
  2429                           
  2430                           ;mcc.c: 78: DAC1_Initialize();
  2431  0574  3185  2563         	fcall	_DAC1_Initialize
  2432  0576  0008               	return
  2433  0577                     __end_of_SYSTEM_Initialize:	
  2434                           
  2435                           	psect	text2
  2436  0593                     __ptext2:	
  2437 ;; *************** function _PIN_MANAGER_Initialize *****************
  2438 ;; Defined at:
  2439 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;		None
  2442 ;; Auto vars:     Size  Location     Type
  2443 ;;		None
  2444 ;; Return value:  Size  Location     Type
  2445 ;;		None               void
  2446 ;; Registers used:
  2447 ;;		wreg, status,2
  2448 ;; Tracked objects:
  2449 ;;		On entry : 0/0
  2450 ;;		On exit  : 0/0
  2451 ;;		Unchanged: 0/0
  2452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2453 ;;      Params:         0       0       0       0       0       0       0       0
  2454 ;;      Locals:         0       0       0       0       0       0       0       0
  2455 ;;      Temps:          0       0       0       0       0       0       0       0
  2456 ;;      Totals:         0       0       0       0       0       0       0       0
  2457 ;;Total ram usage:        0 bytes
  2458 ;; Hardware stack levels used:    1
  2459 ;; This function calls:
  2460 ;;		Nothing
  2461 ;; This function is called by:
  2462 ;;		_SYSTEM_Initialize
  2463 ;;		_main
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467                           
  2468                           ;psect for function _PIN_MANAGER_Initialize
  2469  0593                     _PIN_MANAGER_Initialize:	
  2470                           
  2471                           ;pin_manager.c: 51: LATA = 0x00;
  2472                           
  2473                           ;incstack = 0
  2474                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2475  0593  0022               	movlb	2	; select bank2
  2476  0594  018C               	clrf	12	;volatile
  2477                           
  2478                           ;pin_manager.c: 52: TRISA = 0x28;
  2479  0595  3028               	movlw	40
  2480  0596  0021               	movlb	1	; select bank1
  2481  0597  008C               	movwf	12	;volatile
  2482                           
  2483                           ;pin_manager.c: 53: ANSELA = 0x01;
  2484  0598  3001               	movlw	1
  2485  0599  0023               	movlb	3	; select bank3
  2486  059A  008C               	movwf	12	;volatile
  2487                           
  2488                           ;pin_manager.c: 55: LATB = 0x00;
  2489  059B  0022               	movlb	2	; select bank2
  2490  059C  018D               	clrf	13	;volatile
  2491                           
  2492                           ;pin_manager.c: 56: TRISB = 0x00;
  2493  059D  0021               	movlb	1	; select bank1
  2494  059E  018D               	clrf	13	;volatile
  2495                           
  2496                           ;pin_manager.c: 57: ANSELB = 0x00;
  2497  059F  0023               	movlb	3	; select bank3
  2498  05A0  018D               	clrf	13	;volatile
  2499                           
  2500                           ;pin_manager.c: 58: WPUB = 0x00;
  2501  05A1  0024               	movlb	4	; select bank4
  2502  05A2  018D               	clrf	13	;volatile
  2503                           
  2504                           ;pin_manager.c: 60: LATC = 0x00;
  2505  05A3  0022               	movlb	2	; select bank2
  2506  05A4  018E               	clrf	14	;volatile
  2507                           
  2508                           ;pin_manager.c: 61: TRISC = 0xFF;
  2509  05A5  30FF               	movlw	255
  2510  05A6  0021               	movlb	1	; select bank1
  2511  05A7  008E               	movwf	14	;volatile
  2512                           
  2513                           ;pin_manager.c: 62: ANSELC = 0x00;
  2514  05A8  0023               	movlb	3	; select bank3
  2515  05A9  018E               	clrf	14	;volatile
  2516                           
  2517                           ;pin_manager.c: 63: WPUC = 0x00;
  2518  05AA  0024               	movlb	4	; select bank4
  2519  05AB  018E               	clrf	14	;volatile
  2520                           
  2521                           ;pin_manager.c: 65: OPTION_REGbits.nWPUEN = 0x01;
  2522  05AC  0021               	movlb	1	; select bank1
  2523  05AD  1795               	bsf	21,7	;volatile
  2524  05AE  0008               	return
  2525  05AF                     __end_of_PIN_MANAGER_Initialize:	
  2526                           
  2527                           	psect	text3
  2528  0568                     __ptext3:	
  2529 ;; *************** function _OSCILLATOR_Initialize *****************
  2530 ;; Defined at:
  2531 ;;		line 81 in file "mcc_generated_files/mcc.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;		None
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;		None
  2536 ;; Return value:  Size  Location     Type
  2537 ;;		None               void
  2538 ;; Registers used:
  2539 ;;		wreg, status,2
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2545 ;;      Params:         0       0       0       0       0       0       0       0
  2546 ;;      Locals:         0       0       0       0       0       0       0       0
  2547 ;;      Temps:          0       0       0       0       0       0       0       0
  2548 ;;      Totals:         0       0       0       0       0       0       0       0
  2549 ;;Total ram usage:        0 bytes
  2550 ;; Hardware stack levels used:    1
  2551 ;; This function calls:
  2552 ;;		Nothing
  2553 ;; This function is called by:
  2554 ;;		_SYSTEM_Initialize
  2555 ;; This function uses a non-reentrant model
  2556 ;;
  2557                           
  2558                           
  2559                           ;psect for function _OSCILLATOR_Initialize
  2560  0568                     _OSCILLATOR_Initialize:	
  2561                           
  2562                           ;mcc.c: 83: OSCCON = 0x7A;
  2563                           
  2564                           ;incstack = 0
  2565                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2566  0568  307A               	movlw	122
  2567  0569  0021               	movlb	1	; select bank1
  2568  056A  0099               	movwf	25	;volatile
  2569                           
  2570                           ;mcc.c: 85: OSCSTAT = 0x00;
  2571  056B  019A               	clrf	26	;volatile
  2572                           
  2573                           ;mcc.c: 87: OSCTUNE = 0x00;
  2574  056C  0198               	clrf	24	;volatile
  2575  056D  0008               	return
  2576  056E                     __end_of_OSCILLATOR_Initialize:	
  2577                           
  2578                           	psect	text4
  2579  0563                     __ptext4:	
  2580 ;; *************** function _DAC1_Initialize *****************
  2581 ;; Defined at:
  2582 ;;		line 58 in file "mcc_generated_files/dac1.c"
  2583 ;; Parameters:    Size  Location     Type
  2584 ;;		None
  2585 ;; Auto vars:     Size  Location     Type
  2586 ;;		None
  2587 ;; Return value:  Size  Location     Type
  2588 ;;		None               void
  2589 ;; Registers used:
  2590 ;;		wreg, status,2
  2591 ;; Tracked objects:
  2592 ;;		On entry : 0/0
  2593 ;;		On exit  : 0/0
  2594 ;;		Unchanged: 0/0
  2595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2596 ;;      Params:         0       0       0       0       0       0       0       0
  2597 ;;      Locals:         0       0       0       0       0       0       0       0
  2598 ;;      Temps:          0       0       0       0       0       0       0       0
  2599 ;;      Totals:         0       0       0       0       0       0       0       0
  2600 ;;Total ram usage:        0 bytes
  2601 ;; Hardware stack levels used:    1
  2602 ;; This function calls:
  2603 ;;		Nothing
  2604 ;; This function is called by:
  2605 ;;		_SYSTEM_Initialize
  2606 ;;		_main
  2607 ;; This function uses a non-reentrant model
  2608 ;;
  2609                           
  2610                           
  2611                           ;psect for function _DAC1_Initialize
  2612  0563                     _DAC1_Initialize:	
  2613                           
  2614                           ;dac1.c: 60: DAC1CON0 = 0xA0;
  2615                           
  2616                           ;incstack = 0
  2617                           ; Regs used in _DAC1_Initialize: [wreg+status,2]
  2618  0563  30A0               	movlw	160
  2619  0564  0022               	movlb	2	; select bank2
  2620  0565  0098               	movwf	24	;volatile
  2621                           
  2622                           ;dac1.c: 62: DAC1CON1 = 0x00;
  2623  0566  0199               	clrf	25	;volatile
  2624  0567  0008               	return
  2625  0568                     __end_of_DAC1_Initialize:	
  2626                           
  2627                           	psect	text5
  2628  06E6                     __ptext5:	
  2629 ;; *************** function _MIPI *****************
  2630 ;; Defined at:
  2631 ;;		line 162 in file "main.c"
  2632 ;; Parameters:    Size  Location     Type
  2633 ;;  a               1    wreg     unsigned char 
  2634 ;;  b               1    5[COMMON] unsigned char 
  2635 ;;  c               1    6[COMMON] unsigned char 
  2636 ;;  d               1    7[COMMON] unsigned char 
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;  a               1   10[COMMON] unsigned char 
  2639 ;;  j               1   11[COMMON] unsigned char 
  2640 ;;  i               1   12[COMMON] unsigned char 
  2641 ;; Return value:  Size  Location     Type
  2642 ;;		None               void
  2643 ;; Registers used:
  2644 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2645 ;; Tracked objects:
  2646 ;;		On entry : 0/0
  2647 ;;		On exit  : 0/0
  2648 ;;		Unchanged: 0/0
  2649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2650 ;;      Params:         3       0       0       0       0       0       0       0
  2651 ;;      Locals:         3       0       0       0       0       0       0       0
  2652 ;;      Temps:          2       0       0       0       0       0       0       0
  2653 ;;      Totals:         8       0       0       0       0       0       0       0
  2654 ;;Total ram usage:        8 bytes
  2655 ;; Hardware stack levels used:    1
  2656 ;; Hardware stack levels required when called:    1
  2657 ;; This function calls:
  2658 ;;		_paritycheck
  2659 ;;		_shiftRegister
  2660 ;; This function is called by:
  2661 ;;		_main
  2662 ;; This function uses a non-reentrant model
  2663 ;;
  2664                           
  2665                           
  2666                           ;psect for function _MIPI
  2667  06E6                     _MIPI:	
  2668                           
  2669                           ;incstack = 0
  2670                           ; Regs used in _MIPI: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2671                           ;MIPI@a stored from wreg
  2672  06E6  00FA               	movwf	MIPI@a
  2673                           
  2674                           ;main.c: 163: parity1 = paritycheck(DATA[a]);
  2675  06E7  087A               	movf	MIPI@a,w
  2676  06E8  3E00               	addlw	low (_DATA| (0+32768))
  2677  06E9  0084               	movwf	4
  2678  06EA  3088               	movlw	high (_DATA| (0+32768))
  2679  06EB  1803               	skipnc
  2680  06EC  3E01               	addlw	1
  2681  06ED  0085               	movwf	5
  2682  06EE  0800               	movf	0,w	;code access
  2683  06EF  3185  2577  3186   	fcall	_paritycheck
  2684  06F2  00F8               	movwf	??_MIPI
  2685  06F3  0878               	movf	??_MIPI,w
  2686  06F4  0020               	movlb	0	; select bank0
  2687  06F5  00A2               	movwf	_parity1
  2688                           
  2689                           ;main.c: 164: parity2 = paritycheck(DATA[b]);
  2690  06F6  0875               	movf	MIPI@b,w
  2691  06F7  3E00               	addlw	low (_DATA| (0+32768))
  2692  06F8  0084               	movwf	4
  2693  06F9  3088               	movlw	high (_DATA| (0+32768))
  2694  06FA  1803               	skipnc
  2695  06FB  3E01               	addlw	1
  2696  06FC  0085               	movwf	5
  2697  06FD  0800               	movf	0,w	;code access
  2698  06FE  3185  2577  3186   	fcall	_paritycheck
  2699  0701  00F8               	movwf	??_MIPI
  2700  0702  0878               	movf	??_MIPI,w
  2701  0703  0020               	movlb	0	; select bank0
  2702  0704  00A3               	movwf	_parity2
  2703                           
  2704                           ;main.c: 165: parity3 = paritycheck(DATA[c]);
  2705  0705  0876               	movf	MIPI@c,w
  2706  0706  3E00               	addlw	low (_DATA| (0+32768))
  2707  0707  0084               	movwf	4
  2708  0708  3088               	movlw	high (_DATA| (0+32768))
  2709  0709  1803               	skipnc
  2710  070A  3E01               	addlw	1
  2711  070B  0085               	movwf	5
  2712  070C  0800               	movf	0,w	;code access
  2713  070D  3185  2577  3186   	fcall	_paritycheck
  2714  0710  00F8               	movwf	??_MIPI
  2715  0711  0878               	movf	??_MIPI,w
  2716  0712  0020               	movlb	0	; select bank0
  2717  0713  00A4               	movwf	_parity3
  2718                           
  2719                           ;main.c: 166: parity4 = paritycheck(DATA[d]);
  2720  0714  0877               	movf	MIPI@d,w
  2721  0715  3E00               	addlw	low (_DATA| (0+32768))
  2722  0716  0084               	movwf	4
  2723  0717  3088               	movlw	high (_DATA| (0+32768))
  2724  0718  1803               	skipnc
  2725  0719  3E01               	addlw	1
  2726  071A  0085               	movwf	5
  2727  071B  0800               	movf	0,w	;code access
  2728  071C  3185  2577  3186   	fcall	_paritycheck
  2729  071F  00F8               	movwf	??_MIPI
  2730  0720  0878               	movf	??_MIPI,w
  2731  0721  0020               	movlb	0	; select bank0
  2732  0722  00A5               	movwf	_parity4
  2733                           
  2734                           ;main.c: 167: for (uint8_t i=0; i<2; i++){
  2735  0723  01FC               	clrf	MIPI@i
  2736  0724                     L7:	
  2737  0724  3002               	movlw	2
  2738  0725  027C               	subwf	MIPI@i,w
  2739  0726  1803               	btfsc	3,0
  2740  0727  0008               	return
  2741                           
  2742                           ;main.c: 168: for (uint8_t j=0; j<2; j++){
  2743  0728  01FB               	clrf	MIPI@j
  2744  0729  3002               	movlw	2
  2745  072A  027B               	subwf	MIPI@j,w
  2746  072B  1803               	btfsc	3,0
  2747  072C  2FF1               	goto	l900
  2748  072D                     l128:	
  2749                           ;main.c: 169: do { LATB7 = 1; } while(0);
  2750                           
  2751  072D  0022               	movlb	2	; select bank2
  2752  072E  178D               	bsf	13,7	;volatile
  2753                           
  2754                           ;main.c: 170: do { LATB5 = 1; } while(0);
  2755  072F  168D               	bsf	13,5	;volatile
  2756  0730  0000               	nop	;# 
  2757                           
  2758                           ;main.c: 172: do { LATB7 = 0; } while(0);
  2759  0731  0022               	movlb	2	; select bank2
  2760  0732  138D               	bcf	13,7	;volatile
  2761                           
  2762                           ;main.c: 173: do { LATB5 = 0; } while(0);
  2763  0733  128D               	bcf	13,5	;volatile
  2764                           
  2765                           ;main.c: 174: shiftRegister (SLAVEADD[i],SLAVEADD[i],4);
  2766  0734  087C               	movf	MIPI@i,w
  2767  0735  3E87               	addlw	low (_SLAVEADD| (0+32768))
  2768  0736  0084               	movwf	4
  2769  0737  3088               	movlw	high (_SLAVEADD| (0+32768))
  2770  0738  1803               	skipnc
  2771  0739  3E01               	addlw	1
  2772  073A  0085               	movwf	5
  2773  073B  0800               	movf	0,w	;code access
  2774  073C  00F8               	movwf	??_MIPI
  2775  073D  0878               	movf	??_MIPI,w
  2776  073E  00F0               	movwf	shiftRegister@Dummy2
  2777  073F  3004               	movlw	4
  2778  0740  00F9               	movwf	??_MIPI+1
  2779  0741  0879               	movf	??_MIPI+1,w
  2780  0742  00F1               	movwf	shiftRegister@y
  2781  0743  087C               	movf	MIPI@i,w
  2782  0744  3E87               	addlw	low (_SLAVEADD| (0+32768))
  2783  0745  0084               	movwf	4
  2784  0746  3088               	movlw	high (_SLAVEADD| (0+32768))
  2785  0747  1803               	skipnc
  2786  0748  3E01               	addlw	1
  2787  0749  0085               	movwf	5
  2788  074A  0800               	movf	0,w	;code access
  2789  074B  3185  25AF  3186   	fcall	_shiftRegister
  2790                           
  2791                           ;main.c: 175: shiftRegister (0x02,0x02,3);
  2792  074E  3002               	movlw	2
  2793  074F  00F8               	movwf	??_MIPI
  2794  0750  0878               	movf	??_MIPI,w
  2795  0751  00F0               	movwf	shiftRegister@Dummy2
  2796  0752  3003               	movlw	3
  2797  0753  00F9               	movwf	??_MIPI+1
  2798  0754  0879               	movf	??_MIPI+1,w
  2799  0755  00F1               	movwf	shiftRegister@y
  2800  0756  3002               	movlw	2
  2801  0757  3185  25AF  3186   	fcall	_shiftRegister
  2802                           
  2803                           ;main.c: 176: shiftRegister (REGADD[j],REGADD[j],5);
  2804  075A  087B               	movf	MIPI@j,w
  2805  075B  3E85               	addlw	low (_REGADD| (0+32768))
  2806  075C  0084               	movwf	4
  2807  075D  3088               	movlw	high (_REGADD| (0+32768))
  2808  075E  1803               	skipnc
  2809  075F  3E01               	addlw	1
  2810  0760  0085               	movwf	5
  2811  0761  0800               	movf	0,w	;code access
  2812  0762  00F8               	movwf	??_MIPI
  2813  0763  0878               	movf	??_MIPI,w
  2814  0764  00F0               	movwf	shiftRegister@Dummy2
  2815  0765  3005               	movlw	5
  2816  0766  00F9               	movwf	??_MIPI+1
  2817  0767  0879               	movf	??_MIPI+1,w
  2818  0768  00F1               	movwf	shiftRegister@y
  2819  0769  087B               	movf	MIPI@j,w
  2820  076A  3E85               	addlw	low (_REGADD| (0+32768))
  2821  076B  0084               	movwf	4
  2822  076C  3088               	movlw	high (_REGADD| (0+32768))
  2823  076D  1803               	skipnc
  2824  076E  3E01               	addlw	1
  2825  076F  0085               	movwf	5
  2826  0770  0800               	movf	0,w	;code access
  2827  0771  3185  25AF  3186   	fcall	_shiftRegister
  2828                           
  2829                           ;main.c: 177: if (i==0)
  2830  0774  087C               	movf	MIPI@i,w
  2831  0775  1D03               	btfss	3,2
  2832  0776  2F7D               	goto	l880
  2833                           
  2834                           ;main.c: 178: shiftRegister (0x01,0x01,1);
  2835  0777  01F0               	clrf	shiftRegister@Dummy2
  2836  0778  0AF0               	incf	shiftRegister@Dummy2,f
  2837  0779  01F1               	clrf	shiftRegister@y
  2838  077A  0AF1               	incf	shiftRegister@y,f
  2839  077B  3001               	movlw	1
  2840  077C  2F81               	goto	L5
  2841  077D                     l880:	
  2842                           
  2843                           ;main.c: 179: else
  2844                           ;main.c: 180: shiftRegister (0x00,0x00,1);
  2845  077D  01F0               	clrf	shiftRegister@Dummy2
  2846  077E  01F1               	clrf	shiftRegister@y
  2847  077F  0AF1               	incf	shiftRegister@y,f
  2848  0780  3000               	movlw	0
  2849  0781                     L5:	
  2850  0781  3185  25AF  3186   	fcall	_shiftRegister
  2851                           
  2852                           ;main.c: 181: if (j==0){
  2853  0784  087B               	movf	MIPI@j,w
  2854  0785  1D03               	btfss	3,2
  2855  0786  2F98               	goto	l886
  2856                           
  2857                           ;main.c: 182: shiftRegister (0x00,0x00,8);
  2858  0787  01F0               	clrf	shiftRegister@Dummy2
  2859  0788  3008               	movlw	8
  2860  0789  00F8               	movwf	??_MIPI
  2861  078A  0878               	movf	??_MIPI,w
  2862  078B  00F1               	movwf	shiftRegister@y
  2863  078C  3000               	movlw	0
  2864  078D  3185  25AF  3186   	fcall	_shiftRegister
  2865                           
  2866                           ;main.c: 183: shiftRegister (0x01,0x01,2);
  2867  0790  01F0               	clrf	shiftRegister@Dummy2
  2868  0791  0AF0               	incf	shiftRegister@Dummy2,f
  2869  0792  3002               	movlw	2
  2870  0793  00F8               	movwf	??_MIPI
  2871  0794  0878               	movf	??_MIPI,w
  2872  0795  00F1               	movwf	shiftRegister@y
  2873  0796  3001               	movlw	1
  2874  0797  2FE4               	goto	L6
  2875  0798                     l886:	
  2876                           ;main.c: 184: }
  2877                           
  2878                           
  2879                           ;main.c: 185: else{
  2880                           ;main.c: 186: if (i==0){
  2881  0798  087C               	movf	MIPI@i,w
  2882  0799  1D03               	btfss	3,2
  2883  079A  2FC0               	goto	l892
  2884                           
  2885                           ;main.c: 187: shiftRegister (DATA[a],DATA[c],8);
  2886  079B  0876               	movf	MIPI@c,w
  2887  079C  3E00               	addlw	low (_DATA| (0+32768))
  2888  079D  0084               	movwf	4
  2889  079E  3088               	movlw	high (_DATA| (0+32768))
  2890  079F  1803               	skipnc
  2891  07A0  3E01               	addlw	1
  2892  07A1  0085               	movwf	5
  2893  07A2  0800               	movf	0,w	;code access
  2894  07A3  00F8               	movwf	??_MIPI
  2895  07A4  0878               	movf	??_MIPI,w
  2896  07A5  00F0               	movwf	shiftRegister@Dummy2
  2897  07A6  3008               	movlw	8
  2898  07A7  00F9               	movwf	??_MIPI+1
  2899  07A8  0879               	movf	??_MIPI+1,w
  2900  07A9  00F1               	movwf	shiftRegister@y
  2901  07AA  087A               	movf	MIPI@a,w
  2902  07AB  3E00               	addlw	low (_DATA| (0+32768))
  2903  07AC  0084               	movwf	4
  2904  07AD  3088               	movlw	high (_DATA| (0+32768))
  2905  07AE  1803               	skipnc
  2906  07AF  3E01               	addlw	1
  2907  07B0  0085               	movwf	5
  2908  07B1  0800               	movf	0,w	;code access
  2909  07B2  3185  25AF  3186   	fcall	_shiftRegister
  2910                           
  2911                           ;main.c: 188: shiftRegister (parity1,parity3,2);
  2912  07B5  0020               	movlb	0	; select bank0
  2913  07B6  0824               	movf	_parity3,w
  2914  07B7  00F8               	movwf	??_MIPI
  2915  07B8  0878               	movf	??_MIPI,w
  2916  07B9  00F0               	movwf	shiftRegister@Dummy2
  2917  07BA  3002               	movlw	2
  2918  07BB  00F9               	movwf	??_MIPI+1
  2919  07BC  0879               	movf	??_MIPI+1,w
  2920  07BD  00F1               	movwf	shiftRegister@y
  2921  07BE  0822               	movf	_parity1,w
  2922  07BF  2FE4               	goto	L6
  2923  07C0                     l892:	
  2924                           ;main.c: 189: }else{
  2925                           
  2926                           
  2927                           ;main.c: 190: shiftRegister (DATA[b],DATA[d],8);
  2928  07C0  0877               	movf	MIPI@d,w
  2929  07C1  3E00               	addlw	low (_DATA| (0+32768))
  2930  07C2  0084               	movwf	4
  2931  07C3  3088               	movlw	high (_DATA| (0+32768))
  2932  07C4  1803               	skipnc
  2933  07C5  3E01               	addlw	1
  2934  07C6  0085               	movwf	5
  2935  07C7  0800               	movf	0,w	;code access
  2936  07C8  00F8               	movwf	??_MIPI
  2937  07C9  0878               	movf	??_MIPI,w
  2938  07CA  00F0               	movwf	shiftRegister@Dummy2
  2939  07CB  3008               	movlw	8
  2940  07CC  00F9               	movwf	??_MIPI+1
  2941  07CD  0879               	movf	??_MIPI+1,w
  2942  07CE  00F1               	movwf	shiftRegister@y
  2943  07CF  0875               	movf	MIPI@b,w
  2944  07D0  3E00               	addlw	low (_DATA| (0+32768))
  2945  07D1  0084               	movwf	4
  2946  07D2  3088               	movlw	high (_DATA| (0+32768))
  2947  07D3  1803               	skipnc
  2948  07D4  3E01               	addlw	1
  2949  07D5  0085               	movwf	5
  2950  07D6  0800               	movf	0,w	;code access
  2951  07D7  3185  25AF  3186   	fcall	_shiftRegister
  2952                           
  2953                           ;main.c: 191: shiftRegister (parity2,parity4,2);
  2954  07DA  0020               	movlb	0	; select bank0
  2955  07DB  0825               	movf	_parity4,w
  2956  07DC  00F8               	movwf	??_MIPI
  2957  07DD  0878               	movf	??_MIPI,w
  2958  07DE  00F0               	movwf	shiftRegister@Dummy2
  2959  07DF  3002               	movlw	2
  2960  07E0  00F9               	movwf	??_MIPI+1
  2961  07E1  0879               	movf	??_MIPI+1,w
  2962  07E2  00F1               	movwf	shiftRegister@y
  2963  07E3  0823               	movf	_parity2,w
  2964  07E4                     L6:	
  2965  07E4  3185  25AF  3186   	fcall	_shiftRegister
  2966  07E7  0000               	nop	;# 
  2967  07E8  0000               	nop	;# 
  2968  07E9  3001               	movlw	1
  2969  07EA  00F8               	movwf	??_MIPI
  2970  07EB  0878               	movf	??_MIPI,w
  2971  07EC  07FB               	addwf	MIPI@j,f
  2972  07ED  3002               	movlw	2
  2973  07EE  027B               	subwf	MIPI@j,w
  2974  07EF  1C03               	skipc
  2975  07F0  2F2D               	goto	l128
  2976  07F1                     l900:	
  2977  07F1  3001               	movlw	1
  2978  07F2  00F8               	movwf	??_MIPI
  2979  07F3  0878               	movf	??_MIPI,w
  2980  07F4  07FC               	addwf	MIPI@i,f
  2981  07F5  2F24               	goto	L7
  2982  07F6                     __end_of_MIPI:	
  2983                           
  2984                           	psect	text6
  2985  05AF                     __ptext6:	
  2986 ;; *************** function _shiftRegister *****************
  2987 ;; Defined at:
  2988 ;;		line 139 in file "main.c"
  2989 ;; Parameters:    Size  Location     Type
  2990 ;;  Dummy1          1    wreg     unsigned char 
  2991 ;;  Dummy2          1    0[COMMON] unsigned char 
  2992 ;;  y               1    1[COMMON] unsigned char 
  2993 ;; Auto vars:     Size  Location     Type
  2994 ;;  Dummy1          1    4[COMMON] unsigned char 
  2995 ;;  m               1    3[COMMON] unsigned char 
  2996 ;; Return value:  Size  Location     Type
  2997 ;;		None               void
  2998 ;; Registers used:
  2999 ;;		wreg, status,2, status,0
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3005 ;;      Params:         2       0       0       0       0       0       0       0
  3006 ;;      Locals:         2       0       0       0       0       0       0       0
  3007 ;;      Temps:          1       0       0       0       0       0       0       0
  3008 ;;      Totals:         5       0       0       0       0       0       0       0
  3009 ;;Total ram usage:        5 bytes
  3010 ;; Hardware stack levels used:    1
  3011 ;; This function calls:
  3012 ;;		Nothing
  3013 ;; This function is called by:
  3014 ;;		_MIPI
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           
  3019                           ;psect for function _shiftRegister
  3020  05AF                     _shiftRegister:	
  3021                           
  3022                           ;incstack = 0
  3023                           ; Regs used in _shiftRegister: [wreg+status,2+status,0]
  3024                           ;shiftRegister@Dummy1 stored from wreg
  3025  05AF  00F4               	movwf	shiftRegister@Dummy1
  3026                           
  3027                           ;main.c: 140: for (uint8_t m=0; m<y; m++){
  3028  05B0  01F3               	clrf	shiftRegister@m
  3029  05B1                     l834:	
  3030  05B1  0871               	movf	shiftRegister@y,w
  3031  05B2  0273               	subwf	shiftRegister@m,w
  3032  05B3  1803               	btfsc	3,0
  3033  05B4  0008               	return
  3034                           
  3035                           ;main.c: 141: do { LATB6 = 1; } while(0);
  3036  05B5  0022               	movlb	2	; select bank2
  3037  05B6  170D               	bsf	13,6	;volatile
  3038                           
  3039                           ;main.c: 142: LATB7 = Dummy1 & 0x01;
  3040  05B7  1C74               	btfss	shiftRegister@Dummy1,0
  3041  05B8  2DBC               	goto	u370
  3042  05B9  0022               	movlb	2	; select bank2
  3043  05BA  178D               	bsf	13,7	;volatile
  3044  05BB  2DBE               	goto	l824
  3045  05BC                     u370:	
  3046  05BC  0022               	movlb	2	; select bank2
  3047  05BD  138D               	bcf	13,7	;volatile
  3048  05BE                     l824:	
  3049                           
  3050                           ;main.c: 143: LATB5 = Dummy2 & 0x01;
  3051  05BE  1C70               	btfss	shiftRegister@Dummy2,0
  3052  05BF  2DC3               	goto	u390
  3053  05C0  0022               	movlb	2	; select bank2
  3054  05C1  168D               	bsf	13,5	;volatile
  3055  05C2  2DC5               	goto	u404
  3056  05C3                     u390:	
  3057  05C3  0022               	movlb	2	; select bank2
  3058  05C4  128D               	bcf	13,5	;volatile
  3059  05C5                     u404:	
  3060  05C5  0000               	nop	;# 
  3061                           
  3062                           ;main.c: 145: do { LATB6 = 0; } while(0);
  3063  05C6  0022               	movlb	2	; select bank2
  3064  05C7  130D               	bcf	13,6	;volatile
  3065                           
  3066                           ;main.c: 146: Dummy1 = Dummy1 >> 1;
  3067  05C8  3674               	lsrf	shiftRegister@Dummy1,w
  3068  05C9  00F2               	movwf	??_shiftRegister
  3069  05CA  0872               	movf	??_shiftRegister,w
  3070  05CB  00F4               	movwf	shiftRegister@Dummy1
  3071                           
  3072                           ;main.c: 147: Dummy2 = Dummy2 >> 1;
  3073  05CC  3670               	lsrf	shiftRegister@Dummy2,w
  3074  05CD  00F2               	movwf	??_shiftRegister
  3075  05CE  0872               	movf	??_shiftRegister,w
  3076  05CF  00F0               	movwf	shiftRegister@Dummy2
  3077  05D0  3001               	movlw	1
  3078  05D1  00F2               	movwf	??_shiftRegister
  3079  05D2  0872               	movf	??_shiftRegister,w
  3080  05D3  07F3               	addwf	shiftRegister@m,f
  3081  05D4  2DB1               	goto	l834
  3082  05D5                     __end_of_shiftRegister:	
  3083                           
  3084                           	psect	text7
  3085  0577                     __ptext7:	
  3086 ;; *************** function _paritycheck *****************
  3087 ;; Defined at:
  3088 ;;		line 151 in file "main.c"
  3089 ;; Parameters:    Size  Location     Type
  3090 ;;  Dummy           1    wreg     unsigned char 
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;  Dummy           1    2[COMMON] unsigned char 
  3093 ;;  parity          1    1[COMMON] unsigned char 
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  1    wreg      unsigned char 
  3096 ;; Registers used:
  3097 ;;		wreg, status,2, status,0
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3103 ;;      Params:         0       0       0       0       0       0       0       0
  3104 ;;      Locals:         2       0       0       0       0       0       0       0
  3105 ;;      Temps:          1       0       0       0       0       0       0       0
  3106 ;;      Totals:         3       0       0       0       0       0       0       0
  3107 ;;Total ram usage:        3 bytes
  3108 ;; Hardware stack levels used:    1
  3109 ;; This function calls:
  3110 ;;		Nothing
  3111 ;; This function is called by:
  3112 ;;		_MIPI
  3113 ;; This function uses a non-reentrant model
  3114 ;;
  3115                           
  3116                           
  3117                           ;psect for function _paritycheck
  3118  0577                     _paritycheck:	
  3119                           
  3120                           ;incstack = 0
  3121                           ; Regs used in _paritycheck: [wreg+status,2+status,0]
  3122                           ;paritycheck@Dummy stored from wreg
  3123  0577  00F2               	movwf	paritycheck@Dummy
  3124                           
  3125                           ;main.c: 152: bool parity = 0;
  3126  0578  01F1               	clrf	paritycheck@parity
  3127  0579                     l116:	
  3128                           ;main.c: 153: while (Dummy)
  3129                           
  3130  0579  0872               	movf	paritycheck@Dummy,w
  3131  057A  1903               	btfsc	3,2
  3132  057B  2D8C               	goto	l840
  3133                           
  3134                           ;main.c: 154: {
  3135                           ;main.c: 155: parity = !parity;
  3136  057C  0871               	movf	paritycheck@parity,w
  3137  057D  1D03               	btfss	3,2
  3138  057E  2D81               	goto	u420
  3139  057F  3001               	movlw	1
  3140  0580  2D82               	goto	u430
  3141  0581                     u420:	
  3142  0581  3000               	movlw	0
  3143  0582                     u430:	
  3144  0582  00F0               	movwf	??_paritycheck
  3145  0583  0870               	movf	??_paritycheck,w
  3146  0584  00F1               	movwf	paritycheck@parity
  3147                           
  3148                           ;main.c: 156: Dummy = Dummy & (Dummy - 1);
  3149  0585  0872               	movf	paritycheck@Dummy,w
  3150  0586  3EFF               	addlw	255
  3151  0587  0572               	andwf	paritycheck@Dummy,w
  3152  0588  00F0               	movwf	??_paritycheck
  3153  0589  0870               	movf	??_paritycheck,w
  3154  058A  00F2               	movwf	paritycheck@Dummy
  3155  058B  2D79               	goto	l116
  3156  058C                     l840:	
  3157                           
  3158                           ;main.c: 157: }
  3159                           ;main.c: 158: if (parity) return 0;
  3160  058C  0871               	movf	paritycheck@parity,w
  3161  058D  1903               	btfsc	3,2
  3162  058E  2D91               	goto	l848
  3163  058F  3000               	movlw	0
  3164  0590  0008               	return
  3165  0591                     l848:	
  3166                           
  3167                           ;main.c: 159: else return 1;
  3168  0591  3001               	movlw	1
  3169  0592  0008               	return
  3170  0593                     __end_of_paritycheck:	
  3171                           
  3172                           	psect	text8
  3173  055E                     __ptext8:	
  3174 ;; *************** function _DAC1_SetOutput *****************
  3175 ;; Defined at:
  3176 ;;		line 65 in file "mcc_generated_files/dac1.c"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;  inputData       1    wreg     unsigned char 
  3179 ;; Auto vars:     Size  Location     Type
  3180 ;;  inputData       1    0[COMMON] unsigned char 
  3181 ;; Return value:  Size  Location     Type
  3182 ;;		None               void
  3183 ;; Registers used:
  3184 ;;		wreg
  3185 ;; Tracked objects:
  3186 ;;		On entry : 0/0
  3187 ;;		On exit  : 0/0
  3188 ;;		Unchanged: 0/0
  3189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3190 ;;      Params:         0       0       0       0       0       0       0       0
  3191 ;;      Locals:         1       0       0       0       0       0       0       0
  3192 ;;      Temps:          0       0       0       0       0       0       0       0
  3193 ;;      Totals:         1       0       0       0       0       0       0       0
  3194 ;;Total ram usage:        1 bytes
  3195 ;; Hardware stack levels used:    1
  3196 ;; This function calls:
  3197 ;;		Nothing
  3198 ;; This function is called by:
  3199 ;;		_main
  3200 ;; This function uses a non-reentrant model
  3201 ;;
  3202                           
  3203                           
  3204                           ;psect for function _DAC1_SetOutput
  3205  055E                     _DAC1_SetOutput:	
  3206                           
  3207                           ;incstack = 0
  3208                           ; Regs used in _DAC1_SetOutput: [wreg]
  3209                           ;DAC1_SetOutput@inputData stored from wreg
  3210  055E  00F0               	movwf	DAC1_SetOutput@inputData
  3211                           
  3212                           ;dac1.c: 66: DAC1CON1 = inputData;
  3213  055F  0870               	movf	DAC1_SetOutput@inputData,w
  3214  0560  0022               	movlb	2	; select bank2
  3215  0561  0099               	movwf	25	;volatile
  3216  0562  0008               	return
  3217  0563                     __end_of_DAC1_SetOutput:	
  3218                           
  3219                           	psect	text9
  3220  05D5                     __ptext9:	
  3221 ;; *************** function _ConfigureShiftRegister *****************
  3222 ;; Defined at:
  3223 ;;		line 200 in file "main.c"
  3224 ;; Parameters:    Size  Location     Type
  3225 ;;		None
  3226 ;; Auto vars:     Size  Location     Type
  3227 ;;  ReverseReg      1    2[COMMON] unsigned char 
  3228 ;;  i               1    1[COMMON] unsigned char 
  3229 ;; Return value:  Size  Location     Type
  3230 ;;		None               void
  3231 ;; Registers used:
  3232 ;;		wreg, status,2, status,0
  3233 ;; Tracked objects:
  3234 ;;		On entry : 0/0
  3235 ;;		On exit  : 0/0
  3236 ;;		Unchanged: 0/0
  3237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3238 ;;      Params:         0       0       0       0       0       0       0       0
  3239 ;;      Locals:         2       0       0       0       0       0       0       0
  3240 ;;      Temps:          1       0       0       0       0       0       0       0
  3241 ;;      Totals:         3       0       0       0       0       0       0       0
  3242 ;;Total ram usage:        3 bytes
  3243 ;; Hardware stack levels used:    1
  3244 ;; This function calls:
  3245 ;;		Nothing
  3246 ;; This function is called by:
  3247 ;;		_main
  3248 ;; This function uses a non-reentrant model
  3249 ;;
  3250                           
  3251                           
  3252                           ;psect for function _ConfigureShiftRegister
  3253  05D5                     _ConfigureShiftRegister:	
  3254                           
  3255                           ;main.c: 201: uint8_t ReverseReg, i;
  3256                           ;main.c: 202: if ((Byte1 & 0x03) == 0x00)
  3257                           
  3258                           ;incstack = 0
  3259                           ; Regs used in _ConfigureShiftRegister: [wreg+status,2+status,0]
  3260  05D5  087D               	movf	_Byte1,w
  3261  05D6  3903               	andlw	3
  3262  05D7  1D03               	btfss	3,2
  3263  05D8  2DDB               	goto	l908
  3264                           
  3265                           ;main.c: 203: ReverseReg = 0x30;
  3266  05D9  3030               	movlw	48
  3267  05DA  2DED               	goto	L10
  3268  05DB                     l908:	
  3269                           
  3270                           ;main.c: 204: else if ((Byte1 & 0x03) == 0x01)
  3271  05DB  3003               	movlw	3
  3272  05DC  057D               	andwf	_Byte1,w
  3273  05DD  00F0               	movwf	??_ConfigureShiftRegister
  3274  05DE  0370               	decf	??_ConfigureShiftRegister,w
  3275  05DF  1D03               	btfss	3,2
  3276  05E0  2DE3               	goto	l912
  3277                           
  3278                           ;main.c: 205: ReverseReg = 0x10;
  3279  05E1  3010               	movlw	16
  3280  05E2  2DED               	goto	L10
  3281  05E3                     l912:	
  3282                           
  3283                           ;main.c: 206: else if ((Byte1 & 0x03) == 0x02)
  3284  05E3  3003               	movlw	3
  3285  05E4  057D               	andwf	_Byte1,w
  3286  05E5  00F0               	movwf	??_ConfigureShiftRegister
  3287  05E6  3002               	movlw	2
  3288  05E7  0670               	xorwf	??_ConfigureShiftRegister,w
  3289  05E8  1D03               	btfss	3,2
  3290  05E9  2DEC               	goto	l916
  3291                           
  3292                           ;main.c: 207: ReverseReg = 0xB0;
  3293  05EA  30B0               	movlw	176
  3294  05EB  2DED               	goto	L10
  3295  05EC                     l916:	
  3296                           
  3297                           ;main.c: 208: else
  3298                           ;main.c: 209: ReverseReg = 0x90;
  3299  05EC  3090               	movlw	144
  3300  05ED                     L10:	
  3301  05ED  00F0               	movwf	??_ConfigureShiftRegister
  3302  05EE  0870               	movf	??_ConfigureShiftRegister,w
  3303  05EF  00F2               	movwf	ConfigureShiftRegister@ReverseReg
  3304                           
  3305                           ;main.c: 270: LATA4 = 0;
  3306  05F0  0022               	movlb	2	; select bank2
  3307  05F1  120C               	bcf	12,4	;volatile
  3308                           
  3309                           ;main.c: 271: do { LATB6 = 1; } while(0);
  3310  05F2  170D               	bsf	13,6	;volatile
  3311  05F3  0000               	nop	;# 
  3312                           
  3313                           ;main.c: 273: do { LATB6 = 0; } while(0);
  3314  05F4  0022               	movlb	2	; select bank2
  3315  05F5  130D               	bcf	13,6	;volatile
  3316                           
  3317                           ;main.c: 275: for (i=0; i<8; i++) {
  3318  05F6  01F1               	clrf	ConfigureShiftRegister@i
  3319  05F7  3008               	movlw	8
  3320  05F8  0271               	subwf	ConfigureShiftRegister@i,w
  3321  05F9  1803               	btfsc	3,0
  3322  05FA  2E12               	goto	l156
  3323  05FB                     l155:	
  3324                           
  3325                           ;main.c: 276: LATA4 = ReverseReg & 0x01;
  3326  05FB  1C72               	btfss	ConfigureShiftRegister@ReverseReg,0
  3327  05FC  2E00               	goto	u570
  3328  05FD  0022               	movlb	2	; select bank2
  3329  05FE  160C               	bsf	12,4	;volatile
  3330  05FF  2E02               	goto	l157
  3331  0600                     u570:	
  3332  0600  0022               	movlb	2	; select bank2
  3333  0601  120C               	bcf	12,4	;volatile
  3334  0602                     l157:	
  3335                           ;main.c: 277: do { LATB6 = 1; } while(0);
  3336                           
  3337  0602  170D               	bsf	13,6	;volatile
  3338  0603  0000               	nop	;# 
  3339                           
  3340                           ;main.c: 279: do { LATB6 = 0; } while(0);
  3341  0604  0022               	movlb	2	; select bank2
  3342  0605  130D               	bcf	13,6	;volatile
  3343                           
  3344                           ;main.c: 280: ReverseReg = ReverseReg >> 1;
  3345  0606  3672               	lsrf	ConfigureShiftRegister@ReverseReg,w
  3346  0607  00F0               	movwf	??_ConfigureShiftRegister
  3347  0608  0870               	movf	??_ConfigureShiftRegister,w
  3348  0609  00F2               	movwf	ConfigureShiftRegister@ReverseReg
  3349  060A  3001               	movlw	1
  3350  060B  00F0               	movwf	??_ConfigureShiftRegister
  3351  060C  0870               	movf	??_ConfigureShiftRegister,w
  3352  060D  07F1               	addwf	ConfigureShiftRegister@i,f
  3353  060E  3008               	movlw	8
  3354  060F  0271               	subwf	ConfigureShiftRegister@i,w
  3355  0610  1C03               	skipc
  3356  0611  2DFB               	goto	l155
  3357  0612                     l156:	
  3358                           
  3359                           ;main.c: 281: }
  3360                           ;main.c: 284: LATA4 = 0;
  3361  0612  120C               	bcf	12,4	;volatile
  3362                           
  3363                           ;main.c: 285: do { LATB6 = 1; } while(0);
  3364  0613  170D               	bsf	13,6	;volatile
  3365  0614  0000               	nop	;# 
  3366                           
  3367                           ;main.c: 287: do { LATB6 = 0; } while(0);
  3368  0615  0022               	movlb	2	; select bank2
  3369  0616  130D               	bcf	13,6	;volatile
  3370  0617  0008               	return
  3371  0618                     __end_of_ConfigureShiftRegister:	
  3372  007E                     btemp	set	126	;btemp
  3373  007E                     wtemp	set	126
  3374  007E                     wtemp0	set	126
  3375  0080                     wtemp1	set	128
  3376  0082                     wtemp2	set	130
  3377  0084                     wtemp3	set	132
  3378  0086                     wtemp4	set	134
  3379  0088                     wtemp5	set	136
  3380  007F                     wtemp6	set	127
  3381  007E                     ttemp	set	126
  3382  007E                     ttemp0	set	126
  3383  0081                     ttemp1	set	129
  3384  0084                     ttemp2	set	132
  3385  0087                     ttemp3	set	135
  3386  007F                     ttemp4	set	127
  3387  007E                     ltemp	set	126
  3388  007E                     ltemp0	set	126
  3389  0082                     ltemp1	set	130
  3390  0086                     ltemp2	set	134
  3391  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    137
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80      3       9
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_MIPI
    _MIPI->_shiftRegister

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    2250
                                              0 BANK0      3     3      0
             _ConfigureShiftRegister
                    _DAC1_Initialize
                     _DAC1_SetOutput
                               _MIPI
             _PIN_MANAGER_Initialize
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _DAC1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DAC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MIPI                                                 8     5      3    2133
                                              5 COMMON     8     5      3
                        _paritycheck
                      _shiftRegister
 ---------------------------------------------------------------------------------
 (2) _shiftRegister                                        5     3      2    1082
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) _paritycheck                                          3     3      0     113
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _DAC1_SetOutput                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureShiftRegister                               3     3      0      95
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureShiftRegister
   _DAC1_Initialize
   _DAC1_SetOutput
   _MIPI
     _paritycheck
     _shiftRegister
   _PIN_MANAGER_Initialize
   _SYSTEM_Initialize
     _DAC1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      17       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      3       9       6       11.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      17      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Jan 14 12:31:45 2016

                     __CFG_CP$OFF 0000                       __CFG_LVP$ON 0000                   _DAC1_Initialize 0563  
                             l200 068D                               l203 0690                               l116 0579  
                             l206 0693                               l128 072D                               l155 05FB  
                             l156 0612                               l157 0602                               l900 07F1  
                             l912 05E3                               l840 058C                               l824 05BE  
                             l834 05B1                               l916 05EC                               l908 05DB  
                             l848 0591                               l880 077D                               l952 0642  
                             l944 062A                               l962 065E                               l892 07C0  
                             l948 0636                               l886 0798                               l982 06B7  
                             l974 0696                               l966 066E                               l986 06CD  
                             l978 06A5                               u420 0581                               u404 05C5  
                             u430 0582                               u370 05BC                               u390 05C3  
                             u570 0600    __end_of_ConfigureShiftRegister 0618                      __CFG_BORV$LO 0000  
                  _DAC1_SetOutput 055E                      __CFG_ZCD$OFF 0000                              _DATA 0800  
                            _LATA 010C                              _LATB 010D                              _LATC 010E  
                            _MIPI 06E6                              _WPUB 020D                              _WPUC 020E  
                    __CFG_WRT$OFF 0000                              _main 0618                              fsr0h 0005  
                            fsr0l 0004                              indf0 0000                              btemp 007E  
                            ltemp 007E                              start 0002                              ttemp 007E  
                            wtemp 007E                             ?_MIPI 0075                             MIPI@a 007A  
                           MIPI@b 0075                             MIPI@c 0076                             MIPI@d 0077  
                           MIPI@i 007C                             MIPI@j 007B    __size_of_OSCILLATOR_Initialize 0006  
   __end_of_OSCILLATOR_Initialize 056E                             ?_main 0070                     __CFG_WDTE$OFF 0000  
                           _LATA1 0861                             _LATA2 0862                             _LATA4 0864  
                           _LATB4 086C                             _LATB5 086D                             _LATB6 086E  
                           _LATB7 086F            __end_of_DAC1_SetOutput 0563                             _PORTC 000E  
                           _TRISA 008C                             _TRISB 008D                             _TRISC 008E  
                __end_of_SLAVEADD 0889                             _Byte1 007D                             _Byte2 0020  
                           _Byte3 0021                     __CFG_PWRTE$ON 0000                    __CFG_BOREN$OFF 0000  
                           ltemp0 007E                             ltemp1 0082                             ltemp2 0086  
                           ltemp3 0080                             ttemp0 007E                             ttemp1 0081  
                           ttemp2 0084                             ttemp3 0087                             ttemp4 007F  
                           status 0003                             wtemp0 007E                             wtemp1 0080  
                           wtemp2 0082                             wtemp3 0084                             wtemp4 0086  
                           wtemp5 0088                             wtemp6 007F                      __end_of_DATA 0841  
                    __end_of_MIPI 07F6                    __CFG_MCLRE$OFF 0000                   __initialization 07F6  
                    __end_of_main 06E6           __end_of_DAC1_Initialize 0568                      ?_paritycheck 0070  
                          ??_MIPI 0078                    __CFG_LPBOR$OFF 0000                            ??_main 0026  
                 ?_DAC1_SetOutput 0070                    __CFG_PLLEN$OFF 0000                            _ANSELA 018C  
                          _ANSELB 018D                            _ANSELC 018E                            _REGADD 0885  
                          _OSCCON 0099           DAC1_SetOutput@inputData 0070                    __CFG_STVREN$ON 0000  
              __end_of_ACTIVEBAND 0881                 __end_of_DacOutput 0885             __end_of_shiftRegister 05D5  
               _SYSTEM_Initialize 056E           __end_of__initialization 07FD                ?_SYSTEM_Initialize 0070  
                  __pcstackCOMMON 0070               ??_SYSTEM_Initialize 0070                  ?_DAC1_Initialize 0070  
                  _OPTION_REGbits 0095         __end_of_SYSTEM_Initialize 0577                        __pbssBANK0 0020  
                paritycheck@Dummy 0072                    shiftRegister@m 0073                    shiftRegister@y 0071  
                      __pmaintext 0618                   __CFG_PPS1WAY$ON 0000              __size_of_paritycheck 001C  
                 __CFG_WDTCCS$SWC 0000                           _OSCSTAT 009A                           _OSCTUNE 0098  
             shiftRegister@Dummy1 0074               shiftRegister@Dummy2 0070                  ??_DAC1_SetOutput 0070  
         ConfigureShiftRegister@i 0071                           __ptext1 056E                           __ptext2 0593  
                         __ptext3 0568                           __ptext4 0563                           __ptext5 06E6  
                         __ptext6 05AF                           __ptext7 0577                           __ptext8 055E  
                         __ptext9 05D5             _OSCILLATOR_Initialize 0568                           _parity1 0022  
                         _parity2 0023                           _parity3 0024                           _parity4 0025  
        ??_PIN_MANAGER_Initialize 0070        __size_of_SYSTEM_Initialize 0009              end_of_initialization 07FD  
                    __pstringtext 0800          ??_ConfigureShiftRegister 0070                  __CFG_FOSC$INTOSC 0000  
                       _DacOutput 0881                    __end_of_REGADD 0887            ?_OSCILLATOR_Initialize 0070  
             start_initialization 07F6   __size_of_PIN_MANAGER_Initialize 001C            __size_of_shiftRegister 0026  
 __size_of_ConfigureShiftRegister 0043          __size_of_DAC1_Initialize 0005                       __pbssCOMMON 007D  
                       ___latbits 0001                     __pcstackBANK0 0026                 paritycheck@parity 0071  
          _PIN_MANAGER_Initialize 0593                     ??_paritycheck 0070                          _DAC1CON0 0118  
                        _DAC1CON1 0119                     _shiftRegister 05AF            _ConfigureShiftRegister 05D5  
                        _SLAVEADD 0887              __CFG_WDTCPS$WDTCPS1F 0000                    ?_shiftRegister 0070  
             __end_of_paritycheck 0593                 ??_DAC1_Initialize 0070                        _ACTIVEBAND 0841  
         ??_OSCILLATOR_Initialize 0070           __size_of_DAC1_SetOutput 0005                     __size_of_MIPI 0110  
                   __size_of_main 00CE              __CFG_WDTCWS$WDTCWSSW 0000  ConfigureShiftRegister@ReverseReg 0072  
                     _paritycheck 0577                   ??_shiftRegister 0072           ?_PIN_MANAGER_Initialize 0070  
               __CFG_CLKOUTEN$OFF 0000           ?_ConfigureShiftRegister 0070    __end_of_PIN_MANAGER_Initialize 05AF  
