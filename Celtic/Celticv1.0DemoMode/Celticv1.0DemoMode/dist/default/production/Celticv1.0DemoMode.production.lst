

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Mon Feb 15 11:15:37 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16LF1618
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     	;# 
    21  0001                     	;# 
    22  0002                     	;# 
    23  0003                     	;# 
    24  0004                     	;# 
    25  0005                     	;# 
    26  0006                     	;# 
    27  0007                     	;# 
    28  0008                     	;# 
    29  0009                     	;# 
    30  000A                     	;# 
    31  000B                     	;# 
    32  000C                     	;# 
    33  000D                     	;# 
    34  000E                     	;# 
    35  0010                     	;# 
    36  0011                     	;# 
    37  0012                     	;# 
    38  0013                     	;# 
    39  0014                     	;# 
    40  0015                     	;# 
    41  0016                     	;# 
    42  0016                     	;# 
    43  0017                     	;# 
    44  0018                     	;# 
    45  0019                     	;# 
    46  001A                     	;# 
    47  001A                     	;# 
    48  001B                     	;# 
    49  001B                     	;# 
    50  001C                     	;# 
    51  001D                     	;# 
    52  001E                     	;# 
    53  001F                     	;# 
    54  008C                     	;# 
    55  008D                     	;# 
    56  008E                     	;# 
    57  0090                     	;# 
    58  0091                     	;# 
    59  0092                     	;# 
    60  0093                     	;# 
    61  0094                     	;# 
    62  0095                     	;# 
    63  0096                     	;# 
    64  0098                     	;# 
    65  0099                     	;# 
    66  009A                     	;# 
    67  009B                     	;# 
    68  009B                     	;# 
    69  009C                     	;# 
    70  009D                     	;# 
    71  009E                     	;# 
    72  009F                     	;# 
    73  010C                     	;# 
    74  010D                     	;# 
    75  010E                     	;# 
    76  0111                     	;# 
    77  0112                     	;# 
    78  0113                     	;# 
    79  0114                     	;# 
    80  0115                     	;# 
    81  0116                     	;# 
    82  0117                     	;# 
    83  0118                     	;# 
    84  0119                     	;# 
    85  011C                     	;# 
    86  018C                     	;# 
    87  018D                     	;# 
    88  018E                     	;# 
    89  0191                     	;# 
    90  0191                     	;# 
    91  0192                     	;# 
    92  0193                     	;# 
    93  0193                     	;# 
    94  0194                     	;# 
    95  0195                     	;# 
    96  0196                     	;# 
    97  0199                     	;# 
    98  0199                     	;# 
    99  0199                     	;# 
   100  019A                     	;# 
   101  019A                     	;# 
   102  019A                     	;# 
   103  019B                     	;# 
   104  019B                     	;# 
   105  019B                     	;# 
   106  019B                     	;# 
   107  019B                     	;# 
   108  019C                     	;# 
   109  019C                     	;# 
   110  019C                     	;# 
   111  019D                     	;# 
   112  019D                     	;# 
   113  019D                     	;# 
   114  019E                     	;# 
   115  019E                     	;# 
   116  019E                     	;# 
   117  019F                     	;# 
   118  019F                     	;# 
   119  019F                     	;# 
   120  019F                     	;# 
   121  019F                     	;# 
   122  020C                     	;# 
   123  020D                     	;# 
   124  020E                     	;# 
   125  0211                     	;# 
   126  0211                     	;# 
   127  0212                     	;# 
   128  0212                     	;# 
   129  0213                     	;# 
   130  0213                     	;# 
   131  0214                     	;# 
   132  0214                     	;# 
   133  0215                     	;# 
   134  0215                     	;# 
   135  0215                     	;# 
   136  0215                     	;# 
   137  0216                     	;# 
   138  0216                     	;# 
   139  0217                     	;# 
   140  0217                     	;# 
   141  028C                     	;# 
   142  028D                     	;# 
   143  028E                     	;# 
   144  0291                     	;# 
   145  0291                     	;# 
   146  0292                     	;# 
   147  0293                     	;# 
   148  0294                     	;# 
   149  0298                     	;# 
   150  0298                     	;# 
   151  0299                     	;# 
   152  029A                     	;# 
   153  029B                     	;# 
   154  029E                     	;# 
   155  030C                     	;# 
   156  030D                     	;# 
   157  030E                     	;# 
   158  038C                     	;# 
   159  038D                     	;# 
   160  038E                     	;# 
   161  0391                     	;# 
   162  0392                     	;# 
   163  0393                     	;# 
   164  0394                     	;# 
   165  0395                     	;# 
   166  0396                     	;# 
   167  0397                     	;# 
   168  0398                     	;# 
   169  0399                     	;# 
   170  040E                     	;# 
   171  0413                     	;# 
   172  0413                     	;# 
   173  0414                     	;# 
   174  0414                     	;# 
   175  0415                     	;# 
   176  0416                     	;# 
   177  0417                     	;# 
   178  0418                     	;# 
   179  041A                     	;# 
   180  041A                     	;# 
   181  041B                     	;# 
   182  041B                     	;# 
   183  041C                     	;# 
   184  041D                     	;# 
   185  041E                     	;# 
   186  041F                     	;# 
   187  0493                     	;# 
   188  0494                     	;# 
   189  0495                     	;# 
   190  0496                     	;# 
   191  049A                     	;# 
   192  049B                     	;# 
   193  049C                     	;# 
   194  049D                     	;# 
   195  058C                     	;# 
   196  058C                     	;# 
   197  058D                     	;# 
   198  058E                     	;# 
   199  058E                     	;# 
   200  058F                     	;# 
   201  0590                     	;# 
   202  0590                     	;# 
   203  0591                     	;# 
   204  0592                     	;# 
   205  0592                     	;# 
   206  0593                     	;# 
   207  0594                     	;# 
   208  0594                     	;# 
   209  0595                     	;# 
   210  0596                     	;# 
   211  0596                     	;# 
   212  0597                     	;# 
   213  0598                     	;# 
   214  0599                     	;# 
   215  059A                     	;# 
   216  059B                     	;# 
   217  059B                     	;# 
   218  059C                     	;# 
   219  059D                     	;# 
   220  060C                     	;# 
   221  060C                     	;# 
   222  060D                     	;# 
   223  060E                     	;# 
   224  060F                     	;# 
   225  060F                     	;# 
   226  0610                     	;# 
   227  0611                     	;# 
   228  0612                     	;# 
   229  0613                     	;# 
   230  0614                     	;# 
   231  0617                     	;# 
   232  0618                     	;# 
   233  0619                     	;# 
   234  061A                     	;# 
   235  061B                     	;# 
   236  061C                     	;# 
   237  0691                     	;# 
   238  0692                     	;# 
   239  0693                     	;# 
   240  0694                     	;# 
   241  0695                     	;# 
   242  0696                     	;# 
   243  0697                     	;# 
   244  0699                     	;# 
   245  069A                     	;# 
   246  0711                     	;# 
   247  0712                     	;# 
   248  0713                     	;# 
   249  0714                     	;# 
   250  0715                     	;# 
   251  0718                     	;# 
   252  0718                     	;# 
   253  0719                     	;# 
   254  071A                     	;# 
   255  071A                     	;# 
   256  071B                     	;# 
   257  071C                     	;# 
   258  071D                     	;# 
   259  0791                     	;# 
   260  0791                     	;# 
   261  0792                     	;# 
   262  0793                     	;# 
   263  0793                     	;# 
   264  0794                     	;# 
   265  0795                     	;# 
   266  0795                     	;# 
   267  0796                     	;# 
   268  0797                     	;# 
   269  0797                     	;# 
   270  0798                     	;# 
   271  0799                     	;# 
   272  079A                     	;# 
   273  080C                     	;# 
   274  080C                     	;# 
   275  080D                     	;# 
   276  080E                     	;# 
   277  080E                     	;# 
   278  080F                     	;# 
   279  0810                     	;# 
   280  0810                     	;# 
   281  0811                     	;# 
   282  0812                     	;# 
   283  0812                     	;# 
   284  0813                     	;# 
   285  0814                     	;# 
   286  0815                     	;# 
   287  0816                     	;# 
   288  0817                     	;# 
   289  0818                     	;# 
   290  0819                     	;# 
   291  081A                     	;# 
   292  081A                     	;# 
   293  081B                     	;# 
   294  081C                     	;# 
   295  081C                     	;# 
   296  081D                     	;# 
   297  088C                     	;# 
   298  088D                     	;# 
   299  088E                     	;# 
   300  088F                     	;# 
   301  088F                     	;# 
   302  0890                     	;# 
   303  0891                     	;# 
   304  0892                     	;# 
   305  0893                     	;# 
   306  0893                     	;# 
   307  0894                     	;# 
   308  0895                     	;# 
   309  0896                     	;# 
   310  0897                     	;# 
   311  0897                     	;# 
   312  0898                     	;# 
   313  0899                     	;# 
   314  0D8C                     	;# 
   315  0D8C                     	;# 
   316  0D8D                     	;# 
   317  0D8E                     	;# 
   318  0D8F                     	;# 
   319  0D8F                     	;# 
   320  0D90                     	;# 
   321  0D91                     	;# 
   322  0D92                     	;# 
   323  0D92                     	;# 
   324  0D93                     	;# 
   325  0D94                     	;# 
   326  0D95                     	;# 
   327  0D95                     	;# 
   328  0D96                     	;# 
   329  0D97                     	;# 
   330  0D98                     	;# 
   331  0D99                     	;# 
   332  0D9A                     	;# 
   333  0D9B                     	;# 
   334  0D9C                     	;# 
   335  0D9D                     	;# 
   336  0D9E                     	;# 
   337  0D9E                     	;# 
   338  0D9F                     	;# 
   339  0DA0                     	;# 
   340  0DA1                     	;# 
   341  0DA1                     	;# 
   342  0DA2                     	;# 
   343  0DA3                     	;# 
   344  0DA4                     	;# 
   345  0DA4                     	;# 
   346  0DA5                     	;# 
   347  0DA6                     	;# 
   348  0DA7                     	;# 
   349  0DA7                     	;# 
   350  0DA8                     	;# 
   351  0DA9                     	;# 
   352  0DAA                     	;# 
   353  0DAB                     	;# 
   354  0DAC                     	;# 
   355  0DAD                     	;# 
   356  0DAE                     	;# 
   357  0DAF                     	;# 
   358  0E0F                     	;# 
   359  0E10                     	;# 
   360  0E11                     	;# 
   361  0E12                     	;# 
   362  0E13                     	;# 
   363  0E14                     	;# 
   364  0E15                     	;# 
   365  0E16                     	;# 
   366  0E17                     	;# 
   367  0E18                     	;# 
   368  0E19                     	;# 
   369  0E1A                     	;# 
   370  0E1B                     	;# 
   371  0E1C                     	;# 
   372  0E1D                     	;# 
   373  0E1E                     	;# 
   374  0E1F                     	;# 
   375  0E20                     	;# 
   376  0E21                     	;# 
   377  0E22                     	;# 
   378  0E23                     	;# 
   379  0E24                     	;# 
   380  0E25                     	;# 
   381  0E26                     	;# 
   382  0E27                     	;# 
   383  0E28                     	;# 
   384  0E29                     	;# 
   385  0E2A                     	;# 
   386  0E2B                     	;# 
   387  0E2C                     	;# 
   388  0E2D                     	;# 
   389  0E2E                     	;# 
   390  0E90                     	;# 
   391  0E91                     	;# 
   392  0E92                     	;# 
   393  0E94                     	;# 
   394  0E95                     	;# 
   395  0E9C                     	;# 
   396  0E9D                     	;# 
   397  0E9E                     	;# 
   398  0E9F                     	;# 
   399  0EA0                     	;# 
   400  0EA1                     	;# 
   401  0EA2                     	;# 
   402  0EA3                     	;# 
   403  0EA4                     	;# 
   404  0EA5                     	;# 
   405  0EA6                     	;# 
   406  0EA7                     	;# 
   407  0F0F                     	;# 
   408  0F10                     	;# 
   409  0F11                     	;# 
   410  0F12                     	;# 
   411  0F13                     	;# 
   412  0F14                     	;# 
   413  0F15                     	;# 
   414  0F16                     	;# 
   415  0F17                     	;# 
   416  0F18                     	;# 
   417  0F19                     	;# 
   418  0F1A                     	;# 
   419  0F1B                     	;# 
   420  0F1C                     	;# 
   421  0F1D                     	;# 
   422  0F1E                     	;# 
   423  0F1F                     	;# 
   424  0F20                     	;# 
   425  0F21                     	;# 
   426  0F22                     	;# 
   427  0F23                     	;# 
   428  0FE4                     	;# 
   429  0FE5                     	;# 
   430  0FE6                     	;# 
   431  0FE7                     	;# 
   432  0FE8                     	;# 
   433  0FE9                     	;# 
   434  0FEA                     	;# 
   435  0FEB                     	;# 
   436  0FED                     	;# 
   437  0FEE                     	;# 
   438  0FEF                     	;# 
   439  0000                     	;# 
   440  0001                     	;# 
   441  0002                     	;# 
   442  0003                     	;# 
   443  0004                     	;# 
   444  0005                     	;# 
   445  0006                     	;# 
   446  0007                     	;# 
   447  0008                     	;# 
   448  0009                     	;# 
   449  000A                     	;# 
   450  000B                     	;# 
   451  000C                     	;# 
   452  000D                     	;# 
   453  000E                     	;# 
   454  0010                     	;# 
   455  0011                     	;# 
   456  0012                     	;# 
   457  0013                     	;# 
   458  0014                     	;# 
   459  0015                     	;# 
   460  0016                     	;# 
   461  0016                     	;# 
   462  0017                     	;# 
   463  0018                     	;# 
   464  0019                     	;# 
   465  001A                     	;# 
   466  001A                     	;# 
   467  001B                     	;# 
   468  001B                     	;# 
   469  001C                     	;# 
   470  001D                     	;# 
   471  001E                     	;# 
   472  001F                     	;# 
   473  008C                     	;# 
   474  008D                     	;# 
   475  008E                     	;# 
   476  0090                     	;# 
   477  0091                     	;# 
   478  0092                     	;# 
   479  0093                     	;# 
   480  0094                     	;# 
   481  0095                     	;# 
   482  0096                     	;# 
   483  0098                     	;# 
   484  0099                     	;# 
   485  009A                     	;# 
   486  009B                     	;# 
   487  009B                     	;# 
   488  009C                     	;# 
   489  009D                     	;# 
   490  009E                     	;# 
   491  009F                     	;# 
   492  010C                     	;# 
   493  010D                     	;# 
   494  010E                     	;# 
   495  0111                     	;# 
   496  0112                     	;# 
   497  0113                     	;# 
   498  0114                     	;# 
   499  0115                     	;# 
   500  0116                     	;# 
   501  0117                     	;# 
   502  0118                     	;# 
   503  0119                     	;# 
   504  011C                     	;# 
   505  018C                     	;# 
   506  018D                     	;# 
   507  018E                     	;# 
   508  0191                     	;# 
   509  0191                     	;# 
   510  0192                     	;# 
   511  0193                     	;# 
   512  0193                     	;# 
   513  0194                     	;# 
   514  0195                     	;# 
   515  0196                     	;# 
   516  0199                     	;# 
   517  0199                     	;# 
   518  0199                     	;# 
   519  019A                     	;# 
   520  019A                     	;# 
   521  019A                     	;# 
   522  019B                     	;# 
   523  019B                     	;# 
   524  019B                     	;# 
   525  019B                     	;# 
   526  019B                     	;# 
   527  019C                     	;# 
   528  019C                     	;# 
   529  019C                     	;# 
   530  019D                     	;# 
   531  019D                     	;# 
   532  019D                     	;# 
   533  019E                     	;# 
   534  019E                     	;# 
   535  019E                     	;# 
   536  019F                     	;# 
   537  019F                     	;# 
   538  019F                     	;# 
   539  019F                     	;# 
   540  019F                     	;# 
   541  020C                     	;# 
   542  020D                     	;# 
   543  020E                     	;# 
   544  0211                     	;# 
   545  0211                     	;# 
   546  0212                     	;# 
   547  0212                     	;# 
   548  0213                     	;# 
   549  0213                     	;# 
   550  0214                     	;# 
   551  0214                     	;# 
   552  0215                     	;# 
   553  0215                     	;# 
   554  0215                     	;# 
   555  0215                     	;# 
   556  0216                     	;# 
   557  0216                     	;# 
   558  0217                     	;# 
   559  0217                     	;# 
   560  028C                     	;# 
   561  028D                     	;# 
   562  028E                     	;# 
   563  0291                     	;# 
   564  0291                     	;# 
   565  0292                     	;# 
   566  0293                     	;# 
   567  0294                     	;# 
   568  0298                     	;# 
   569  0298                     	;# 
   570  0299                     	;# 
   571  029A                     	;# 
   572  029B                     	;# 
   573  029E                     	;# 
   574  030C                     	;# 
   575  030D                     	;# 
   576  030E                     	;# 
   577  038C                     	;# 
   578  038D                     	;# 
   579  038E                     	;# 
   580  0391                     	;# 
   581  0392                     	;# 
   582  0393                     	;# 
   583  0394                     	;# 
   584  0395                     	;# 
   585  0396                     	;# 
   586  0397                     	;# 
   587  0398                     	;# 
   588  0399                     	;# 
   589  040E                     	;# 
   590  0413                     	;# 
   591  0413                     	;# 
   592  0414                     	;# 
   593  0414                     	;# 
   594  0415                     	;# 
   595  0416                     	;# 
   596  0417                     	;# 
   597  0418                     	;# 
   598  041A                     	;# 
   599  041A                     	;# 
   600  041B                     	;# 
   601  041B                     	;# 
   602  041C                     	;# 
   603  041D                     	;# 
   604  041E                     	;# 
   605  041F                     	;# 
   606  0493                     	;# 
   607  0494                     	;# 
   608  0495                     	;# 
   609  0496                     	;# 
   610  049A                     	;# 
   611  049B                     	;# 
   612  049C                     	;# 
   613  049D                     	;# 
   614  058C                     	;# 
   615  058C                     	;# 
   616  058D                     	;# 
   617  058E                     	;# 
   618  058E                     	;# 
   619  058F                     	;# 
   620  0590                     	;# 
   621  0590                     	;# 
   622  0591                     	;# 
   623  0592                     	;# 
   624  0592                     	;# 
   625  0593                     	;# 
   626  0594                     	;# 
   627  0594                     	;# 
   628  0595                     	;# 
   629  0596                     	;# 
   630  0596                     	;# 
   631  0597                     	;# 
   632  0598                     	;# 
   633  0599                     	;# 
   634  059A                     	;# 
   635  059B                     	;# 
   636  059B                     	;# 
   637  059C                     	;# 
   638  059D                     	;# 
   639  060C                     	;# 
   640  060C                     	;# 
   641  060D                     	;# 
   642  060E                     	;# 
   643  060F                     	;# 
   644  060F                     	;# 
   645  0610                     	;# 
   646  0611                     	;# 
   647  0612                     	;# 
   648  0613                     	;# 
   649  0614                     	;# 
   650  0617                     	;# 
   651  0618                     	;# 
   652  0619                     	;# 
   653  061A                     	;# 
   654  061B                     	;# 
   655  061C                     	;# 
   656  0691                     	;# 
   657  0692                     	;# 
   658  0693                     	;# 
   659  0694                     	;# 
   660  0695                     	;# 
   661  0696                     	;# 
   662  0697                     	;# 
   663  0699                     	;# 
   664  069A                     	;# 
   665  0711                     	;# 
   666  0712                     	;# 
   667  0713                     	;# 
   668  0714                     	;# 
   669  0715                     	;# 
   670  0718                     	;# 
   671  0718                     	;# 
   672  0719                     	;# 
   673  071A                     	;# 
   674  071A                     	;# 
   675  071B                     	;# 
   676  071C                     	;# 
   677  071D                     	;# 
   678  0791                     	;# 
   679  0791                     	;# 
   680  0792                     	;# 
   681  0793                     	;# 
   682  0793                     	;# 
   683  0794                     	;# 
   684  0795                     	;# 
   685  0795                     	;# 
   686  0796                     	;# 
   687  0797                     	;# 
   688  0797                     	;# 
   689  0798                     	;# 
   690  0799                     	;# 
   691  079A                     	;# 
   692  080C                     	;# 
   693  080C                     	;# 
   694  080D                     	;# 
   695  080E                     	;# 
   696  080E                     	;# 
   697  080F                     	;# 
   698  0810                     	;# 
   699  0810                     	;# 
   700  0811                     	;# 
   701  0812                     	;# 
   702  0812                     	;# 
   703  0813                     	;# 
   704  0814                     	;# 
   705  0815                     	;# 
   706  0816                     	;# 
   707  0817                     	;# 
   708  0818                     	;# 
   709  0819                     	;# 
   710  081A                     	;# 
   711  081A                     	;# 
   712  081B                     	;# 
   713  081C                     	;# 
   714  081C                     	;# 
   715  081D                     	;# 
   716  088C                     	;# 
   717  088D                     	;# 
   718  088E                     	;# 
   719  088F                     	;# 
   720  088F                     	;# 
   721  0890                     	;# 
   722  0891                     	;# 
   723  0892                     	;# 
   724  0893                     	;# 
   725  0893                     	;# 
   726  0894                     	;# 
   727  0895                     	;# 
   728  0896                     	;# 
   729  0897                     	;# 
   730  0897                     	;# 
   731  0898                     	;# 
   732  0899                     	;# 
   733  0D8C                     	;# 
   734  0D8C                     	;# 
   735  0D8D                     	;# 
   736  0D8E                     	;# 
   737  0D8F                     	;# 
   738  0D8F                     	;# 
   739  0D90                     	;# 
   740  0D91                     	;# 
   741  0D92                     	;# 
   742  0D92                     	;# 
   743  0D93                     	;# 
   744  0D94                     	;# 
   745  0D95                     	;# 
   746  0D95                     	;# 
   747  0D96                     	;# 
   748  0D97                     	;# 
   749  0D98                     	;# 
   750  0D99                     	;# 
   751  0D9A                     	;# 
   752  0D9B                     	;# 
   753  0D9C                     	;# 
   754  0D9D                     	;# 
   755  0D9E                     	;# 
   756  0D9E                     	;# 
   757  0D9F                     	;# 
   758  0DA0                     	;# 
   759  0DA1                     	;# 
   760  0DA1                     	;# 
   761  0DA2                     	;# 
   762  0DA3                     	;# 
   763  0DA4                     	;# 
   764  0DA4                     	;# 
   765  0DA5                     	;# 
   766  0DA6                     	;# 
   767  0DA7                     	;# 
   768  0DA7                     	;# 
   769  0DA8                     	;# 
   770  0DA9                     	;# 
   771  0DAA                     	;# 
   772  0DAB                     	;# 
   773  0DAC                     	;# 
   774  0DAD                     	;# 
   775  0DAE                     	;# 
   776  0DAF                     	;# 
   777  0E0F                     	;# 
   778  0E10                     	;# 
   779  0E11                     	;# 
   780  0E12                     	;# 
   781  0E13                     	;# 
   782  0E14                     	;# 
   783  0E15                     	;# 
   784  0E16                     	;# 
   785  0E17                     	;# 
   786  0E18                     	;# 
   787  0E19                     	;# 
   788  0E1A                     	;# 
   789  0E1B                     	;# 
   790  0E1C                     	;# 
   791  0E1D                     	;# 
   792  0E1E                     	;# 
   793  0E1F                     	;# 
   794  0E20                     	;# 
   795  0E21                     	;# 
   796  0E22                     	;# 
   797  0E23                     	;# 
   798  0E24                     	;# 
   799  0E25                     	;# 
   800  0E26                     	;# 
   801  0E27                     	;# 
   802  0E28                     	;# 
   803  0E29                     	;# 
   804  0E2A                     	;# 
   805  0E2B                     	;# 
   806  0E2C                     	;# 
   807  0E2D                     	;# 
   808  0E2E                     	;# 
   809  0E90                     	;# 
   810  0E91                     	;# 
   811  0E92                     	;# 
   812  0E94                     	;# 
   813  0E95                     	;# 
   814  0E9C                     	;# 
   815  0E9D                     	;# 
   816  0E9E                     	;# 
   817  0E9F                     	;# 
   818  0EA0                     	;# 
   819  0EA1                     	;# 
   820  0EA2                     	;# 
   821  0EA3                     	;# 
   822  0EA4                     	;# 
   823  0EA5                     	;# 
   824  0EA6                     	;# 
   825  0EA7                     	;# 
   826  0F0F                     	;# 
   827  0F10                     	;# 
   828  0F11                     	;# 
   829  0F12                     	;# 
   830  0F13                     	;# 
   831  0F14                     	;# 
   832  0F15                     	;# 
   833  0F16                     	;# 
   834  0F17                     	;# 
   835  0F18                     	;# 
   836  0F19                     	;# 
   837  0F1A                     	;# 
   838  0F1B                     	;# 
   839  0F1C                     	;# 
   840  0F1D                     	;# 
   841  0F1E                     	;# 
   842  0F1F                     	;# 
   843  0F20                     	;# 
   844  0F21                     	;# 
   845  0F22                     	;# 
   846  0F23                     	;# 
   847  0FE4                     	;# 
   848  0FE5                     	;# 
   849  0FE6                     	;# 
   850  0FE7                     	;# 
   851  0FE8                     	;# 
   852  0FE9                     	;# 
   853  0FEA                     	;# 
   854  0FEB                     	;# 
   855  0FED                     	;# 
   856  0FEE                     	;# 
   857  0FEF                     	;# 
   858  0000                     	;# 
   859  0001                     	;# 
   860  0002                     	;# 
   861  0003                     	;# 
   862  0004                     	;# 
   863  0005                     	;# 
   864  0006                     	;# 
   865  0007                     	;# 
   866  0008                     	;# 
   867  0009                     	;# 
   868  000A                     	;# 
   869  000B                     	;# 
   870  000C                     	;# 
   871  000D                     	;# 
   872  000E                     	;# 
   873  0010                     	;# 
   874  0011                     	;# 
   875  0012                     	;# 
   876  0013                     	;# 
   877  0014                     	;# 
   878  0015                     	;# 
   879  0016                     	;# 
   880  0016                     	;# 
   881  0017                     	;# 
   882  0018                     	;# 
   883  0019                     	;# 
   884  001A                     	;# 
   885  001A                     	;# 
   886  001B                     	;# 
   887  001B                     	;# 
   888  001C                     	;# 
   889  001D                     	;# 
   890  001E                     	;# 
   891  001F                     	;# 
   892  008C                     	;# 
   893  008D                     	;# 
   894  008E                     	;# 
   895  0090                     	;# 
   896  0091                     	;# 
   897  0092                     	;# 
   898  0093                     	;# 
   899  0094                     	;# 
   900  0095                     	;# 
   901  0096                     	;# 
   902  0098                     	;# 
   903  0099                     	;# 
   904  009A                     	;# 
   905  009B                     	;# 
   906  009B                     	;# 
   907  009C                     	;# 
   908  009D                     	;# 
   909  009E                     	;# 
   910  009F                     	;# 
   911  010C                     	;# 
   912  010D                     	;# 
   913  010E                     	;# 
   914  0111                     	;# 
   915  0112                     	;# 
   916  0113                     	;# 
   917  0114                     	;# 
   918  0115                     	;# 
   919  0116                     	;# 
   920  0117                     	;# 
   921  0118                     	;# 
   922  0119                     	;# 
   923  011C                     	;# 
   924  018C                     	;# 
   925  018D                     	;# 
   926  018E                     	;# 
   927  0191                     	;# 
   928  0191                     	;# 
   929  0192                     	;# 
   930  0193                     	;# 
   931  0193                     	;# 
   932  0194                     	;# 
   933  0195                     	;# 
   934  0196                     	;# 
   935  0199                     	;# 
   936  0199                     	;# 
   937  0199                     	;# 
   938  019A                     	;# 
   939  019A                     	;# 
   940  019A                     	;# 
   941  019B                     	;# 
   942  019B                     	;# 
   943  019B                     	;# 
   944  019B                     	;# 
   945  019B                     	;# 
   946  019C                     	;# 
   947  019C                     	;# 
   948  019C                     	;# 
   949  019D                     	;# 
   950  019D                     	;# 
   951  019D                     	;# 
   952  019E                     	;# 
   953  019E                     	;# 
   954  019E                     	;# 
   955  019F                     	;# 
   956  019F                     	;# 
   957  019F                     	;# 
   958  019F                     	;# 
   959  019F                     	;# 
   960  020C                     	;# 
   961  020D                     	;# 
   962  020E                     	;# 
   963  0211                     	;# 
   964  0211                     	;# 
   965  0212                     	;# 
   966  0212                     	;# 
   967  0213                     	;# 
   968  0213                     	;# 
   969  0214                     	;# 
   970  0214                     	;# 
   971  0215                     	;# 
   972  0215                     	;# 
   973  0215                     	;# 
   974  0215                     	;# 
   975  0216                     	;# 
   976  0216                     	;# 
   977  0217                     	;# 
   978  0217                     	;# 
   979  028C                     	;# 
   980  028D                     	;# 
   981  028E                     	;# 
   982  0291                     	;# 
   983  0291                     	;# 
   984  0292                     	;# 
   985  0293                     	;# 
   986  0294                     	;# 
   987  0298                     	;# 
   988  0298                     	;# 
   989  0299                     	;# 
   990  029A                     	;# 
   991  029B                     	;# 
   992  029E                     	;# 
   993  030C                     	;# 
   994  030D                     	;# 
   995  030E                     	;# 
   996  038C                     	;# 
   997  038D                     	;# 
   998  038E                     	;# 
   999  0391                     	;# 
  1000  0392                     	;# 
  1001  0393                     	;# 
  1002  0394                     	;# 
  1003  0395                     	;# 
  1004  0396                     	;# 
  1005  0397                     	;# 
  1006  0398                     	;# 
  1007  0399                     	;# 
  1008  040E                     	;# 
  1009  0413                     	;# 
  1010  0413                     	;# 
  1011  0414                     	;# 
  1012  0414                     	;# 
  1013  0415                     	;# 
  1014  0416                     	;# 
  1015  0417                     	;# 
  1016  0418                     	;# 
  1017  041A                     	;# 
  1018  041A                     	;# 
  1019  041B                     	;# 
  1020  041B                     	;# 
  1021  041C                     	;# 
  1022  041D                     	;# 
  1023  041E                     	;# 
  1024  041F                     	;# 
  1025  0493                     	;# 
  1026  0494                     	;# 
  1027  0495                     	;# 
  1028  0496                     	;# 
  1029  049A                     	;# 
  1030  049B                     	;# 
  1031  049C                     	;# 
  1032  049D                     	;# 
  1033  058C                     	;# 
  1034  058C                     	;# 
  1035  058D                     	;# 
  1036  058E                     	;# 
  1037  058E                     	;# 
  1038  058F                     	;# 
  1039  0590                     	;# 
  1040  0590                     	;# 
  1041  0591                     	;# 
  1042  0592                     	;# 
  1043  0592                     	;# 
  1044  0593                     	;# 
  1045  0594                     	;# 
  1046  0594                     	;# 
  1047  0595                     	;# 
  1048  0596                     	;# 
  1049  0596                     	;# 
  1050  0597                     	;# 
  1051  0598                     	;# 
  1052  0599                     	;# 
  1053  059A                     	;# 
  1054  059B                     	;# 
  1055  059B                     	;# 
  1056  059C                     	;# 
  1057  059D                     	;# 
  1058  060C                     	;# 
  1059  060C                     	;# 
  1060  060D                     	;# 
  1061  060E                     	;# 
  1062  060F                     	;# 
  1063  060F                     	;# 
  1064  0610                     	;# 
  1065  0611                     	;# 
  1066  0612                     	;# 
  1067  0613                     	;# 
  1068  0614                     	;# 
  1069  0617                     	;# 
  1070  0618                     	;# 
  1071  0619                     	;# 
  1072  061A                     	;# 
  1073  061B                     	;# 
  1074  061C                     	;# 
  1075  0691                     	;# 
  1076  0692                     	;# 
  1077  0693                     	;# 
  1078  0694                     	;# 
  1079  0695                     	;# 
  1080  0696                     	;# 
  1081  0697                     	;# 
  1082  0699                     	;# 
  1083  069A                     	;# 
  1084  0711                     	;# 
  1085  0712                     	;# 
  1086  0713                     	;# 
  1087  0714                     	;# 
  1088  0715                     	;# 
  1089  0718                     	;# 
  1090  0718                     	;# 
  1091  0719                     	;# 
  1092  071A                     	;# 
  1093  071A                     	;# 
  1094  071B                     	;# 
  1095  071C                     	;# 
  1096  071D                     	;# 
  1097  0791                     	;# 
  1098  0791                     	;# 
  1099  0792                     	;# 
  1100  0793                     	;# 
  1101  0793                     	;# 
  1102  0794                     	;# 
  1103  0795                     	;# 
  1104  0795                     	;# 
  1105  0796                     	;# 
  1106  0797                     	;# 
  1107  0797                     	;# 
  1108  0798                     	;# 
  1109  0799                     	;# 
  1110  079A                     	;# 
  1111  080C                     	;# 
  1112  080C                     	;# 
  1113  080D                     	;# 
  1114  080E                     	;# 
  1115  080E                     	;# 
  1116  080F                     	;# 
  1117  0810                     	;# 
  1118  0810                     	;# 
  1119  0811                     	;# 
  1120  0812                     	;# 
  1121  0812                     	;# 
  1122  0813                     	;# 
  1123  0814                     	;# 
  1124  0815                     	;# 
  1125  0816                     	;# 
  1126  0817                     	;# 
  1127  0818                     	;# 
  1128  0819                     	;# 
  1129  081A                     	;# 
  1130  081A                     	;# 
  1131  081B                     	;# 
  1132  081C                     	;# 
  1133  081C                     	;# 
  1134  081D                     	;# 
  1135  088C                     	;# 
  1136  088D                     	;# 
  1137  088E                     	;# 
  1138  088F                     	;# 
  1139  088F                     	;# 
  1140  0890                     	;# 
  1141  0891                     	;# 
  1142  0892                     	;# 
  1143  0893                     	;# 
  1144  0893                     	;# 
  1145  0894                     	;# 
  1146  0895                     	;# 
  1147  0896                     	;# 
  1148  0897                     	;# 
  1149  0897                     	;# 
  1150  0898                     	;# 
  1151  0899                     	;# 
  1152  0D8C                     	;# 
  1153  0D8C                     	;# 
  1154  0D8D                     	;# 
  1155  0D8E                     	;# 
  1156  0D8F                     	;# 
  1157  0D8F                     	;# 
  1158  0D90                     	;# 
  1159  0D91                     	;# 
  1160  0D92                     	;# 
  1161  0D92                     	;# 
  1162  0D93                     	;# 
  1163  0D94                     	;# 
  1164  0D95                     	;# 
  1165  0D95                     	;# 
  1166  0D96                     	;# 
  1167  0D97                     	;# 
  1168  0D98                     	;# 
  1169  0D99                     	;# 
  1170  0D9A                     	;# 
  1171  0D9B                     	;# 
  1172  0D9C                     	;# 
  1173  0D9D                     	;# 
  1174  0D9E                     	;# 
  1175  0D9E                     	;# 
  1176  0D9F                     	;# 
  1177  0DA0                     	;# 
  1178  0DA1                     	;# 
  1179  0DA1                     	;# 
  1180  0DA2                     	;# 
  1181  0DA3                     	;# 
  1182  0DA4                     	;# 
  1183  0DA4                     	;# 
  1184  0DA5                     	;# 
  1185  0DA6                     	;# 
  1186  0DA7                     	;# 
  1187  0DA7                     	;# 
  1188  0DA8                     	;# 
  1189  0DA9                     	;# 
  1190  0DAA                     	;# 
  1191  0DAB                     	;# 
  1192  0DAC                     	;# 
  1193  0DAD                     	;# 
  1194  0DAE                     	;# 
  1195  0DAF                     	;# 
  1196  0E0F                     	;# 
  1197  0E10                     	;# 
  1198  0E11                     	;# 
  1199  0E12                     	;# 
  1200  0E13                     	;# 
  1201  0E14                     	;# 
  1202  0E15                     	;# 
  1203  0E16                     	;# 
  1204  0E17                     	;# 
  1205  0E18                     	;# 
  1206  0E19                     	;# 
  1207  0E1A                     	;# 
  1208  0E1B                     	;# 
  1209  0E1C                     	;# 
  1210  0E1D                     	;# 
  1211  0E1E                     	;# 
  1212  0E1F                     	;# 
  1213  0E20                     	;# 
  1214  0E21                     	;# 
  1215  0E22                     	;# 
  1216  0E23                     	;# 
  1217  0E24                     	;# 
  1218  0E25                     	;# 
  1219  0E26                     	;# 
  1220  0E27                     	;# 
  1221  0E28                     	;# 
  1222  0E29                     	;# 
  1223  0E2A                     	;# 
  1224  0E2B                     	;# 
  1225  0E2C                     	;# 
  1226  0E2D                     	;# 
  1227  0E2E                     	;# 
  1228  0E90                     	;# 
  1229  0E91                     	;# 
  1230  0E92                     	;# 
  1231  0E94                     	;# 
  1232  0E95                     	;# 
  1233  0E9C                     	;# 
  1234  0E9D                     	;# 
  1235  0E9E                     	;# 
  1236  0E9F                     	;# 
  1237  0EA0                     	;# 
  1238  0EA1                     	;# 
  1239  0EA2                     	;# 
  1240  0EA3                     	;# 
  1241  0EA4                     	;# 
  1242  0EA5                     	;# 
  1243  0EA6                     	;# 
  1244  0EA7                     	;# 
  1245  0F0F                     	;# 
  1246  0F10                     	;# 
  1247  0F11                     	;# 
  1248  0F12                     	;# 
  1249  0F13                     	;# 
  1250  0F14                     	;# 
  1251  0F15                     	;# 
  1252  0F16                     	;# 
  1253  0F17                     	;# 
  1254  0F18                     	;# 
  1255  0F19                     	;# 
  1256  0F1A                     	;# 
  1257  0F1B                     	;# 
  1258  0F1C                     	;# 
  1259  0F1D                     	;# 
  1260  0F1E                     	;# 
  1261  0F1F                     	;# 
  1262  0F20                     	;# 
  1263  0F21                     	;# 
  1264  0F22                     	;# 
  1265  0F23                     	;# 
  1266  0FE4                     	;# 
  1267  0FE5                     	;# 
  1268  0FE6                     	;# 
  1269  0FE7                     	;# 
  1270  0FE8                     	;# 
  1271  0FE9                     	;# 
  1272  0FEA                     	;# 
  1273  0FEB                     	;# 
  1274  0FED                     	;# 
  1275  0FEE                     	;# 
  1276  0FEF                     	;# 
  1277  0000                     	;# 
  1278  0001                     	;# 
  1279  0002                     	;# 
  1280  0003                     	;# 
  1281  0004                     	;# 
  1282  0005                     	;# 
  1283  0006                     	;# 
  1284  0007                     	;# 
  1285  0008                     	;# 
  1286  0009                     	;# 
  1287  000A                     	;# 
  1288  000B                     	;# 
  1289  000C                     	;# 
  1290  000D                     	;# 
  1291  000E                     	;# 
  1292  0010                     	;# 
  1293  0011                     	;# 
  1294  0012                     	;# 
  1295  0013                     	;# 
  1296  0014                     	;# 
  1297  0015                     	;# 
  1298  0016                     	;# 
  1299  0016                     	;# 
  1300  0017                     	;# 
  1301  0018                     	;# 
  1302  0019                     	;# 
  1303  001A                     	;# 
  1304  001A                     	;# 
  1305  001B                     	;# 
  1306  001B                     	;# 
  1307  001C                     	;# 
  1308  001D                     	;# 
  1309  001E                     	;# 
  1310  001F                     	;# 
  1311  008C                     	;# 
  1312  008D                     	;# 
  1313  008E                     	;# 
  1314  0090                     	;# 
  1315  0091                     	;# 
  1316  0092                     	;# 
  1317  0093                     	;# 
  1318  0094                     	;# 
  1319  0095                     	;# 
  1320  0096                     	;# 
  1321  0098                     	;# 
  1322  0099                     	;# 
  1323  009A                     	;# 
  1324  009B                     	;# 
  1325  009B                     	;# 
  1326  009C                     	;# 
  1327  009D                     	;# 
  1328  009E                     	;# 
  1329  009F                     	;# 
  1330  010C                     	;# 
  1331  010D                     	;# 
  1332  010E                     	;# 
  1333  0111                     	;# 
  1334  0112                     	;# 
  1335  0113                     	;# 
  1336  0114                     	;# 
  1337  0115                     	;# 
  1338  0116                     	;# 
  1339  0117                     	;# 
  1340  0118                     	;# 
  1341  0119                     	;# 
  1342  011C                     	;# 
  1343  018C                     	;# 
  1344  018D                     	;# 
  1345  018E                     	;# 
  1346  0191                     	;# 
  1347  0191                     	;# 
  1348  0192                     	;# 
  1349  0193                     	;# 
  1350  0193                     	;# 
  1351  0194                     	;# 
  1352  0195                     	;# 
  1353  0196                     	;# 
  1354  0199                     	;# 
  1355  0199                     	;# 
  1356  0199                     	;# 
  1357  019A                     	;# 
  1358  019A                     	;# 
  1359  019A                     	;# 
  1360  019B                     	;# 
  1361  019B                     	;# 
  1362  019B                     	;# 
  1363  019B                     	;# 
  1364  019B                     	;# 
  1365  019C                     	;# 
  1366  019C                     	;# 
  1367  019C                     	;# 
  1368  019D                     	;# 
  1369  019D                     	;# 
  1370  019D                     	;# 
  1371  019E                     	;# 
  1372  019E                     	;# 
  1373  019E                     	;# 
  1374  019F                     	;# 
  1375  019F                     	;# 
  1376  019F                     	;# 
  1377  019F                     	;# 
  1378  019F                     	;# 
  1379  020C                     	;# 
  1380  020D                     	;# 
  1381  020E                     	;# 
  1382  0211                     	;# 
  1383  0211                     	;# 
  1384  0212                     	;# 
  1385  0212                     	;# 
  1386  0213                     	;# 
  1387  0213                     	;# 
  1388  0214                     	;# 
  1389  0214                     	;# 
  1390  0215                     	;# 
  1391  0215                     	;# 
  1392  0215                     	;# 
  1393  0215                     	;# 
  1394  0216                     	;# 
  1395  0216                     	;# 
  1396  0217                     	;# 
  1397  0217                     	;# 
  1398  028C                     	;# 
  1399  028D                     	;# 
  1400  028E                     	;# 
  1401  0291                     	;# 
  1402  0291                     	;# 
  1403  0292                     	;# 
  1404  0293                     	;# 
  1405  0294                     	;# 
  1406  0298                     	;# 
  1407  0298                     	;# 
  1408  0299                     	;# 
  1409  029A                     	;# 
  1410  029B                     	;# 
  1411  029E                     	;# 
  1412  030C                     	;# 
  1413  030D                     	;# 
  1414  030E                     	;# 
  1415  038C                     	;# 
  1416  038D                     	;# 
  1417  038E                     	;# 
  1418  0391                     	;# 
  1419  0392                     	;# 
  1420  0393                     	;# 
  1421  0394                     	;# 
  1422  0395                     	;# 
  1423  0396                     	;# 
  1424  0397                     	;# 
  1425  0398                     	;# 
  1426  0399                     	;# 
  1427  040E                     	;# 
  1428  0413                     	;# 
  1429  0413                     	;# 
  1430  0414                     	;# 
  1431  0414                     	;# 
  1432  0415                     	;# 
  1433  0416                     	;# 
  1434  0417                     	;# 
  1435  0418                     	;# 
  1436  041A                     	;# 
  1437  041A                     	;# 
  1438  041B                     	;# 
  1439  041B                     	;# 
  1440  041C                     	;# 
  1441  041D                     	;# 
  1442  041E                     	;# 
  1443  041F                     	;# 
  1444  0493                     	;# 
  1445  0494                     	;# 
  1446  0495                     	;# 
  1447  0496                     	;# 
  1448  049A                     	;# 
  1449  049B                     	;# 
  1450  049C                     	;# 
  1451  049D                     	;# 
  1452  058C                     	;# 
  1453  058C                     	;# 
  1454  058D                     	;# 
  1455  058E                     	;# 
  1456  058E                     	;# 
  1457  058F                     	;# 
  1458  0590                     	;# 
  1459  0590                     	;# 
  1460  0591                     	;# 
  1461  0592                     	;# 
  1462  0592                     	;# 
  1463  0593                     	;# 
  1464  0594                     	;# 
  1465  0594                     	;# 
  1466  0595                     	;# 
  1467  0596                     	;# 
  1468  0596                     	;# 
  1469  0597                     	;# 
  1470  0598                     	;# 
  1471  0599                     	;# 
  1472  059A                     	;# 
  1473  059B                     	;# 
  1474  059B                     	;# 
  1475  059C                     	;# 
  1476  059D                     	;# 
  1477  060C                     	;# 
  1478  060C                     	;# 
  1479  060D                     	;# 
  1480  060E                     	;# 
  1481  060F                     	;# 
  1482  060F                     	;# 
  1483  0610                     	;# 
  1484  0611                     	;# 
  1485  0612                     	;# 
  1486  0613                     	;# 
  1487  0614                     	;# 
  1488  0617                     	;# 
  1489  0618                     	;# 
  1490  0619                     	;# 
  1491  061A                     	;# 
  1492  061B                     	;# 
  1493  061C                     	;# 
  1494  0691                     	;# 
  1495  0692                     	;# 
  1496  0693                     	;# 
  1497  0694                     	;# 
  1498  0695                     	;# 
  1499  0696                     	;# 
  1500  0697                     	;# 
  1501  0699                     	;# 
  1502  069A                     	;# 
  1503  0711                     	;# 
  1504  0712                     	;# 
  1505  0713                     	;# 
  1506  0714                     	;# 
  1507  0715                     	;# 
  1508  0718                     	;# 
  1509  0718                     	;# 
  1510  0719                     	;# 
  1511  071A                     	;# 
  1512  071A                     	;# 
  1513  071B                     	;# 
  1514  071C                     	;# 
  1515  071D                     	;# 
  1516  0791                     	;# 
  1517  0791                     	;# 
  1518  0792                     	;# 
  1519  0793                     	;# 
  1520  0793                     	;# 
  1521  0794                     	;# 
  1522  0795                     	;# 
  1523  0795                     	;# 
  1524  0796                     	;# 
  1525  0797                     	;# 
  1526  0797                     	;# 
  1527  0798                     	;# 
  1528  0799                     	;# 
  1529  079A                     	;# 
  1530  080C                     	;# 
  1531  080C                     	;# 
  1532  080D                     	;# 
  1533  080E                     	;# 
  1534  080E                     	;# 
  1535  080F                     	;# 
  1536  0810                     	;# 
  1537  0810                     	;# 
  1538  0811                     	;# 
  1539  0812                     	;# 
  1540  0812                     	;# 
  1541  0813                     	;# 
  1542  0814                     	;# 
  1543  0815                     	;# 
  1544  0816                     	;# 
  1545  0817                     	;# 
  1546  0818                     	;# 
  1547  0819                     	;# 
  1548  081A                     	;# 
  1549  081A                     	;# 
  1550  081B                     	;# 
  1551  081C                     	;# 
  1552  081C                     	;# 
  1553  081D                     	;# 
  1554  088C                     	;# 
  1555  088D                     	;# 
  1556  088E                     	;# 
  1557  088F                     	;# 
  1558  088F                     	;# 
  1559  0890                     	;# 
  1560  0891                     	;# 
  1561  0892                     	;# 
  1562  0893                     	;# 
  1563  0893                     	;# 
  1564  0894                     	;# 
  1565  0895                     	;# 
  1566  0896                     	;# 
  1567  0897                     	;# 
  1568  0897                     	;# 
  1569  0898                     	;# 
  1570  0899                     	;# 
  1571  0D8C                     	;# 
  1572  0D8C                     	;# 
  1573  0D8D                     	;# 
  1574  0D8E                     	;# 
  1575  0D8F                     	;# 
  1576  0D8F                     	;# 
  1577  0D90                     	;# 
  1578  0D91                     	;# 
  1579  0D92                     	;# 
  1580  0D92                     	;# 
  1581  0D93                     	;# 
  1582  0D94                     	;# 
  1583  0D95                     	;# 
  1584  0D95                     	;# 
  1585  0D96                     	;# 
  1586  0D97                     	;# 
  1587  0D98                     	;# 
  1588  0D99                     	;# 
  1589  0D9A                     	;# 
  1590  0D9B                     	;# 
  1591  0D9C                     	;# 
  1592  0D9D                     	;# 
  1593  0D9E                     	;# 
  1594  0D9E                     	;# 
  1595  0D9F                     	;# 
  1596  0DA0                     	;# 
  1597  0DA1                     	;# 
  1598  0DA1                     	;# 
  1599  0DA2                     	;# 
  1600  0DA3                     	;# 
  1601  0DA4                     	;# 
  1602  0DA4                     	;# 
  1603  0DA5                     	;# 
  1604  0DA6                     	;# 
  1605  0DA7                     	;# 
  1606  0DA7                     	;# 
  1607  0DA8                     	;# 
  1608  0DA9                     	;# 
  1609  0DAA                     	;# 
  1610  0DAB                     	;# 
  1611  0DAC                     	;# 
  1612  0DAD                     	;# 
  1613  0DAE                     	;# 
  1614  0DAF                     	;# 
  1615  0E0F                     	;# 
  1616  0E10                     	;# 
  1617  0E11                     	;# 
  1618  0E12                     	;# 
  1619  0E13                     	;# 
  1620  0E14                     	;# 
  1621  0E15                     	;# 
  1622  0E16                     	;# 
  1623  0E17                     	;# 
  1624  0E18                     	;# 
  1625  0E19                     	;# 
  1626  0E1A                     	;# 
  1627  0E1B                     	;# 
  1628  0E1C                     	;# 
  1629  0E1D                     	;# 
  1630  0E1E                     	;# 
  1631  0E1F                     	;# 
  1632  0E20                     	;# 
  1633  0E21                     	;# 
  1634  0E22                     	;# 
  1635  0E23                     	;# 
  1636  0E24                     	;# 
  1637  0E25                     	;# 
  1638  0E26                     	;# 
  1639  0E27                     	;# 
  1640  0E28                     	;# 
  1641  0E29                     	;# 
  1642  0E2A                     	;# 
  1643  0E2B                     	;# 
  1644  0E2C                     	;# 
  1645  0E2D                     	;# 
  1646  0E2E                     	;# 
  1647  0E90                     	;# 
  1648  0E91                     	;# 
  1649  0E92                     	;# 
  1650  0E94                     	;# 
  1651  0E95                     	;# 
  1652  0E9C                     	;# 
  1653  0E9D                     	;# 
  1654  0E9E                     	;# 
  1655  0E9F                     	;# 
  1656  0EA0                     	;# 
  1657  0EA1                     	;# 
  1658  0EA2                     	;# 
  1659  0EA3                     	;# 
  1660  0EA4                     	;# 
  1661  0EA5                     	;# 
  1662  0EA6                     	;# 
  1663  0EA7                     	;# 
  1664  0F0F                     	;# 
  1665  0F10                     	;# 
  1666  0F11                     	;# 
  1667  0F12                     	;# 
  1668  0F13                     	;# 
  1669  0F14                     	;# 
  1670  0F15                     	;# 
  1671  0F16                     	;# 
  1672  0F17                     	;# 
  1673  0F18                     	;# 
  1674  0F19                     	;# 
  1675  0F1A                     	;# 
  1676  0F1B                     	;# 
  1677  0F1C                     	;# 
  1678  0F1D                     	;# 
  1679  0F1E                     	;# 
  1680  0F1F                     	;# 
  1681  0F20                     	;# 
  1682  0F21                     	;# 
  1683  0F22                     	;# 
  1684  0F23                     	;# 
  1685  0FE4                     	;# 
  1686  0FE5                     	;# 
  1687  0FE6                     	;# 
  1688  0FE7                     	;# 
  1689  0FE8                     	;# 
  1690  0FE9                     	;# 
  1691  0FEA                     	;# 
  1692  0FEB                     	;# 
  1693  0FED                     	;# 
  1694  0FEE                     	;# 
  1695  0FEF                     	;# 
  1696                           
  1697                           	psect	stringtext
  1698  0800                     __pstringtext:	
  1699  0800                     _DATA:	
  1700  0800  3400               	retlw	0
  1701  0801  3480               	retlw	128
  1702  0802  3440               	retlw	64
  1703  0803  34C0               	retlw	192
  1704  0804  3420               	retlw	32
  1705  0805  34A0               	retlw	160
  1706  0806  3460               	retlw	96
  1707  0807  34E0               	retlw	224
  1708  0808  3410               	retlw	16
  1709  0809  3490               	retlw	144
  1710  080A  3450               	retlw	80
  1711  080B  34D0               	retlw	208
  1712  080C  3430               	retlw	48
  1713  080D  34B0               	retlw	176
  1714  080E  3470               	retlw	112
  1715  080F  34F0               	retlw	240
  1716  0810  3408               	retlw	8
  1717  0811  3488               	retlw	136
  1718  0812  3448               	retlw	72
  1719  0813  34C8               	retlw	200
  1720  0814  3428               	retlw	40
  1721  0815  34A8               	retlw	168
  1722  0816  3468               	retlw	104
  1723  0817  34E8               	retlw	232
  1724  0818  3418               	retlw	24
  1725  0819  3498               	retlw	152
  1726  081A  3458               	retlw	88
  1727  081B  34D8               	retlw	216
  1728  081C  3438               	retlw	56
  1729  081D  34B8               	retlw	184
  1730  081E  3478               	retlw	120
  1731  081F  34F8               	retlw	248
  1732  0820  3404               	retlw	4
  1733  0821  3484               	retlw	132
  1734  0822  3444               	retlw	68
  1735  0823  34C4               	retlw	196
  1736  0824  3424               	retlw	36
  1737  0825  34A4               	retlw	164
  1738  0826  3464               	retlw	100
  1739  0827  34E4               	retlw	228
  1740  0828  3414               	retlw	20
  1741  0829  3494               	retlw	148
  1742  082A  3454               	retlw	84
  1743  082B  34D4               	retlw	212
  1744  082C  3434               	retlw	52
  1745  082D  34B4               	retlw	180
  1746  082E  3474               	retlw	116
  1747  082F  34F4               	retlw	244
  1748  0830  340C               	retlw	12
  1749  0831  348C               	retlw	140
  1750  0832  344C               	retlw	76
  1751  0833  34CC               	retlw	204
  1752  0834  342C               	retlw	44
  1753  0835  34AC               	retlw	172
  1754  0836  346C               	retlw	108
  1755  0837  34EC               	retlw	236
  1756  0838  341C               	retlw	28
  1757  0839  349C               	retlw	156
  1758  083A  345C               	retlw	92
  1759  083B  34DC               	retlw	220
  1760  083C  343C               	retlw	60
  1761  083D  34BC               	retlw	188
  1762  083E  347C               	retlw	124
  1763  083F  34FC               	retlw	252
  1764  0840  3406               	retlw	6
  1765  0841                     __end_of_DATA:	
  1766  0841                     _PARITY:	
  1767  0841  3401               	retlw	1
  1768  0842  3400               	retlw	0
  1769  0843  3400               	retlw	0
  1770  0844  3401               	retlw	1
  1771  0845  3400               	retlw	0
  1772  0846  3401               	retlw	1
  1773  0847  3401               	retlw	1
  1774  0848  3400               	retlw	0
  1775  0849  3400               	retlw	0
  1776  084A  3401               	retlw	1
  1777  084B  3401               	retlw	1
  1778  084C  3400               	retlw	0
  1779  084D  3401               	retlw	1
  1780  084E  3400               	retlw	0
  1781  084F  3400               	retlw	0
  1782  0850  3401               	retlw	1
  1783  0851  3400               	retlw	0
  1784  0852  3401               	retlw	1
  1785  0853  3401               	retlw	1
  1786  0854  3400               	retlw	0
  1787  0855  3401               	retlw	1
  1788  0856  3400               	retlw	0
  1789  0857  3400               	retlw	0
  1790  0858  3401               	retlw	1
  1791  0859  3401               	retlw	1
  1792  085A  3400               	retlw	0
  1793  085B  3400               	retlw	0
  1794  085C  3401               	retlw	1
  1795  085D  3400               	retlw	0
  1796  085E  3401               	retlw	1
  1797  085F  3401               	retlw	1
  1798  0860  3400               	retlw	0
  1799  0861  3400               	retlw	0
  1800  0862  3401               	retlw	1
  1801  0863  3401               	retlw	1
  1802  0864  3400               	retlw	0
  1803  0865  3401               	retlw	1
  1804  0866  3400               	retlw	0
  1805  0867  3400               	retlw	0
  1806  0868  3401               	retlw	1
  1807  0869  3401               	retlw	1
  1808  086A  3400               	retlw	0
  1809  086B  3400               	retlw	0
  1810  086C  3401               	retlw	1
  1811  086D  3400               	retlw	0
  1812  086E  3401               	retlw	1
  1813  086F  3401               	retlw	1
  1814  0870  3400               	retlw	0
  1815  0871  3401               	retlw	1
  1816  0872  3400               	retlw	0
  1817  0873  3400               	retlw	0
  1818  0874  3401               	retlw	1
  1819  0875  3400               	retlw	0
  1820  0876  3401               	retlw	1
  1821  0877  3401               	retlw	1
  1822  0878  3400               	retlw	0
  1823  0879  3400               	retlw	0
  1824  087A  3401               	retlw	1
  1825  087B  3401               	retlw	1
  1826  087C  3400               	retlw	0
  1827  087D  3401               	retlw	1
  1828  087E  3400               	retlw	0
  1829  087F  3400               	retlw	0
  1830  0880  3401               	retlw	1
  1831  0881  3401               	retlw	1
  1832  0882                     __end_of_PARITY:	
  1833  0882                     _ACTIVEBAND:	
  1834  0882  3400               	retlw	0
  1835  0883  3400               	retlw	0
  1836  0884  3400               	retlw	0
  1837  0885  3400               	retlw	0
  1838  0886  3400               	retlw	0
  1839  0887  3401               	retlw	1
  1840  0888  3400               	retlw	0
  1841  0889  3400               	retlw	0
  1842  088A  3401               	retlw	1
  1843  088B  3400               	retlw	0
  1844  088C  3400               	retlw	0
  1845  088D  3400               	retlw	0
  1846  088E  3401               	retlw	1
  1847  088F  3401               	retlw	1
  1848  0890  3400               	retlw	0
  1849  0891  3400               	retlw	0
  1850  0892  3400               	retlw	0
  1851  0893  3400               	retlw	0
  1852  0894  3400               	retlw	0
  1853  0895  3400               	retlw	0
  1854  0896  3401               	retlw	1
  1855  0897  3400               	retlw	0
  1856  0898  3400               	retlw	0
  1857  0899  3400               	retlw	0
  1858  089A  3400               	retlw	0
  1859  089B  3400               	retlw	0
  1860  089C  3401               	retlw	1
  1861  089D  3400               	retlw	0
  1862  089E  3400               	retlw	0
  1863  089F  3401               	retlw	1
  1864  08A0  3400               	retlw	0
  1865  08A1  3400               	retlw	0
  1866  08A2  3400               	retlw	0
  1867  08A3  3400               	retlw	0
  1868  08A4  3400               	retlw	0
  1869  08A5  3400               	retlw	0
  1870  08A6  3400               	retlw	0
  1871  08A7  3400               	retlw	0
  1872  08A8  3400               	retlw	0
  1873  08A9  3400               	retlw	0
  1874  08AA  3400               	retlw	0
  1875  08AB  3400               	retlw	0
  1876  08AC  3400               	retlw	0
  1877  08AD  3400               	retlw	0
  1878  08AE  3400               	retlw	0
  1879  08AF  3400               	retlw	0
  1880  08B0  3400               	retlw	0
  1881  08B1  3400               	retlw	0
  1882  08B2  3400               	retlw	0
  1883  08B3  3400               	retlw	0
  1884  08B4  3400               	retlw	0
  1885  08B5  3400               	retlw	0
  1886  08B6  3400               	retlw	0
  1887  08B7  3400               	retlw	0
  1888  08B8  3400               	retlw	0
  1889  08B9  3400               	retlw	0
  1890  08BA  3400               	retlw	0
  1891  08BB  3400               	retlw	0
  1892  08BC  3400               	retlw	0
  1893  08BD  3400               	retlw	0
  1894  08BE  3400               	retlw	0
  1895  08BF  3400               	retlw	0
  1896  08C0  3400               	retlw	0
  1897  08C1  3400               	retlw	0
  1898  08C2                     __end_of_ACTIVEBAND:	
  1899  08C2                     _DacOutput:	
  1900  08C2  342B               	retlw	43
  1901  08C3  3448               	retlw	72
  1902  08C4  3456               	retlw	86
  1903  08C5  3464               	retlw	100
  1904  08C6                     __end_of_DacOutput:	
  1905  08C6                     _REGADD:	
  1906  08C6  3407               	retlw	7
  1907  08C7  3410               	retlw	16
  1908  08C8                     __end_of_REGADD:	
  1909  08C8                     _SLAVEADD:	
  1910  08C8  3406               	retlw	6
  1911  08C9  340E               	retlw	14
  1912  08CA                     __end_of_SLAVEADD:	
  1913  000E                     _PORTC	set	14
  1914  0095                     _OPTION_REGbits	set	149
  1915  0099                     _OSCCON	set	153
  1916  009A                     _OSCSTAT	set	154
  1917  0098                     _OSCTUNE	set	152
  1918  008C                     _TRISA	set	140
  1919  008D                     _TRISB	set	141
  1920  008E                     _TRISC	set	142
  1921  0118                     _DAC1CON0	set	280
  1922  0119                     _DAC1CON1	set	281
  1923  010C                     _LATA	set	268
  1924  010D                     _LATB	set	269
  1925  010E                     _LATC	set	270
  1926  0861                     _LATA1	set	2145
  1927  0862                     _LATA2	set	2146
  1928  0864                     _LATA4	set	2148
  1929  086C                     _LATB4	set	2156
  1930  086D                     _LATB5	set	2157
  1931  086E                     _LATB6	set	2158
  1932  086F                     _LATB7	set	2159
  1933  018C                     _ANSELA	set	396
  1934  018D                     _ANSELB	set	397
  1935  018E                     _ANSELC	set	398
  1936  020D                     _WPUB	set	525
  1937  020E                     _WPUC	set	526
  1938                           
  1939                           ; #config settings
  1940  0000                     
  1941                           	psect	cinit
  1942  07F6                     start_initialization:	
  1943  07F6                     __initialization:	
  1944                           
  1945                           ; Clear objects allocated to COMMON
  1946  07F6  01FC               	clrf	__pbssCOMMON& (0+127)
  1947  07F7  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
  1948                           
  1949                           ; Clear objects allocated to BANK0
  1950  07F8  01A0               	clrf	__pbssBANK0& (0+127)
  1951  07F9  01A1               	clrf	(__pbssBANK0+1)& (0+127)
  1952  07FA  01A2               	clrf	(__pbssBANK0+2)& (0+127)
  1953  07FB  01A3               	clrf	(__pbssBANK0+3)& (0+127)
  1954  07FC  01A4               	clrf	(__pbssBANK0+4)& (0+127)
  1955  07FD                     end_of_initialization:	
  1956                           ;End of C runtime variable initialization code
  1957                           
  1958  07FD                     __end_of__initialization:	
  1959  07FD  0020               	movlb	0
  1960  07FE  3185  2DC8         	ljmp	_main	;jump to C main() function
  1961                           
  1962                           	psect	bssCOMMON
  1963  007C                     __pbssCOMMON:	
  1964  007C                     _Byte2:	
  1965  007C                     	ds	1
  1966  007D                     _Byte3:	
  1967  007D                     	ds	1
  1968                           
  1969                           	psect	bssBANK0
  1970  0020                     __pbssBANK0:	
  1971  0020                     _Byte1:	
  1972  0020                     	ds	1
  1973  0021                     _parity1:	
  1974  0021                     	ds	1
  1975  0022                     _parity2:	
  1976  0022                     	ds	1
  1977  0023                     _parity3:	
  1978  0023                     	ds	1
  1979  0024                     _parity4:	
  1980  0024                     	ds	1
  1981                           
  1982                           	psect	cstackCOMMON
  1983  0070                     __pcstackCOMMON:	
  1984  0070                     ?_OSCILLATOR_Initialize:	
  1985  0070                     ??_OSCILLATOR_Initialize:	
  1986                           ; 0 bytes @ 0x0
  1987                           
  1988  0070                     ?_DAC1_Initialize:	
  1989                           ; 0 bytes @ 0x0
  1990                           
  1991  0070                     ??_DAC1_Initialize:	
  1992                           ; 0 bytes @ 0x0
  1993                           
  1994  0070                     ?_DAC1_SetOutput:	
  1995                           ; 0 bytes @ 0x0
  1996                           
  1997  0070                     ??_DAC1_SetOutput:	
  1998                           ; 0 bytes @ 0x0
  1999                           
  2000  0070                     ?_PIN_MANAGER_Initialize:	
  2001                           ; 0 bytes @ 0x0
  2002                           
  2003  0070                     ??_PIN_MANAGER_Initialize:	
  2004                           ; 0 bytes @ 0x0
  2005                           
  2006  0070                     ?_SYSTEM_Initialize:	
  2007                           ; 0 bytes @ 0x0
  2008                           
  2009  0070                     ??_SYSTEM_Initialize:	
  2010                           ; 0 bytes @ 0x0
  2011                           
  2012  0070                     ?_shiftRegister:	
  2013                           ; 0 bytes @ 0x0
  2014                           
  2015  0070                     ?_ConfigureShiftRegister:	
  2016                           ; 0 bytes @ 0x0
  2017                           
  2018  0070                     ??_ConfigureShiftRegister:	
  2019                           ; 0 bytes @ 0x0
  2020                           
  2021  0070                     ?_main:	
  2022                           ; 0 bytes @ 0x0
  2023                           
  2024  0070                     DAC1_SetOutput@inputData:	
  2025                           ; 0 bytes @ 0x0
  2026                           
  2027  0070                     shiftRegister@Dummy2:	
  2028                           ; 1 bytes @ 0x0
  2029                           
  2030                           
  2031                           ; 1 bytes @ 0x0
  2032  0070                     	ds	1
  2033  0071                     shiftRegister@y:	
  2034  0071                     ConfigureShiftRegister@i:	
  2035                           ; 1 bytes @ 0x1
  2036                           
  2037                           
  2038                           ; 1 bytes @ 0x1
  2039  0071                     	ds	1
  2040  0072                     ??_shiftRegister:	
  2041  0072                     ConfigureShiftRegister@ReverseReg:	
  2042                           ; 0 bytes @ 0x2
  2043                           
  2044                           
  2045                           ; 1 bytes @ 0x2
  2046  0072                     	ds	1
  2047  0073                     shiftRegister@m:	
  2048                           
  2049                           ; 1 bytes @ 0x3
  2050  0073                     	ds	1
  2051  0074                     shiftRegister@Dummy1:	
  2052                           
  2053                           ; 1 bytes @ 0x4
  2054  0074                     	ds	1
  2055  0075                     ?_MIPI:	
  2056  0075                     MIPI@b:	
  2057                           ; 0 bytes @ 0x5
  2058                           
  2059                           
  2060                           ; 1 bytes @ 0x5
  2061  0075                     	ds	1
  2062  0076                     MIPI@c:	
  2063                           
  2064                           ; 1 bytes @ 0x6
  2065  0076                     	ds	1
  2066  0077                     MIPI@d:	
  2067                           
  2068                           ; 1 bytes @ 0x7
  2069  0077                     	ds	1
  2070  0078                     ??_MIPI:	
  2071                           
  2072                           ; 0 bytes @ 0x8
  2073  0078                     	ds	2
  2074  007A                     MIPI@a:	
  2075                           
  2076                           ; 1 bytes @ 0xA
  2077  007A                     	ds	1
  2078  007B                     MIPI@i:	
  2079                           
  2080                           ; 1 bytes @ 0xB
  2081  007B                     	ds	1
  2082                           
  2083                           	psect	cstackBANK0
  2084  0025                     __pcstackBANK0:	
  2085  0025                     ??_main:	
  2086                           
  2087                           ; 0 bytes @ 0x0
  2088  0025                     	ds	3
  2089                           
  2090                           	psect	maintext
  2091  05C8                     __pmaintext:	
  2092 ;;
  2093 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2094 ;;
  2095 ;; *************** function _main *****************
  2096 ;; Defined at:
  2097 ;;		line 318 in file "main.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;		None
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;		None
  2102 ;; Return value:  Size  Location     Type
  2103 ;;		None               void
  2104 ;; Registers used:
  2105 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2106 ;; Tracked objects:
  2107 ;;		On entry : B1F/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2111 ;;      Params:         0       0       0       0       0       0       0       0
  2112 ;;      Locals:         0       0       0       0       0       0       0       0
  2113 ;;      Temps:          0       3       0       0       0       0       0       0
  2114 ;;      Totals:         0       3       0       0       0       0       0       0
  2115 ;;Total ram usage:        3 bytes
  2116 ;; Hardware stack levels required when called:    2
  2117 ;; This function calls:
  2118 ;;		_ConfigureShiftRegister
  2119 ;;		_DAC1_Initialize
  2120 ;;		_DAC1_SetOutput
  2121 ;;		_MIPI
  2122 ;;		_PIN_MANAGER_Initialize
  2123 ;;		_SYSTEM_Initialize
  2124 ;; This function is called by:
  2125 ;;		Startup code after reset
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129                           
  2130                           ;psect for function _main
  2131  05C8                     _main:	
  2132                           
  2133                           ;main.c: 320: SYSTEM_Initialize();
  2134                           
  2135                           ;incstack = 0
  2136                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2137  05C8  3185  251C  3185   	fcall	_SYSTEM_Initialize
  2138                           
  2139                           ;main.c: 321: DAC1_Initialize();
  2140  05CB  3185  2511  3185   	fcall	_DAC1_Initialize
  2141                           
  2142                           ;main.c: 322: PIN_MANAGER_Initialize();
  2143  05CE  3185  2525  3185   	fcall	_PIN_MANAGER_Initialize
  2144                           
  2145                           ;main.c: 324: DAC1_SetOutput(0);
  2146  05D1  3000               	movlw	0
  2147  05D2  3185  250C  3185   	fcall	_DAC1_SetOutput
  2148                           
  2149                           ;main.c: 327: do { LATA1 = 0; } while(0);
  2150  05D5  0022               	movlb	2	; select bank2
  2151  05D6  108C               	bcf	12,1	;volatile
  2152                           
  2153                           ;main.c: 328: do { LATA4 = 0; } while(0);
  2154  05D7  120C               	bcf	12,4	;volatile
  2155                           
  2156                           ;main.c: 329: do { LATA2 = 0; } while(0);
  2157  05D8  110C               	bcf	12,2	;volatile
  2158                           
  2159                           ;main.c: 330: do { LATB4 = 0; } while(0);
  2160  05D9  120D               	bcf	13,4	;volatile
  2161  05DA                     l1021:	
  2162                           ;main.c: 332: while ((PORTC & 0xC0) != 0xC0) {
  2163                           
  2164                           ;main.c: 331: while (1) {
  2165                           
  2166  05DA  30C0               	movlw	192
  2167  05DB  0020               	movlb	0	; select bank0
  2168  05DC  050E               	andwf	14,w	;volatile
  2169  05DD  00A5               	movwf	??_main
  2170  05DE  30C0               	movlw	192
  2171  05DF  0625               	xorwf	??_main,w
  2172  05E0  1D03               	btfss	3,2
  2173  05E1  2DDA               	goto	l1021
  2174                           
  2175                           ;main.c: 333: }
  2176                           ;main.c: 334: Byte1 = PORTC;
  2177  05E2  080E               	movf	14,w	;volatile
  2178  05E3  00A5               	movwf	??_main
  2179  05E4  0825               	movf	??_main,w
  2180  05E5  00A0               	movwf	_Byte1
  2181  05E6                     l1025:	
  2182                           ;main.c: 335: while ((PORTC & 0xC0) != 0x40) {
  2183                           
  2184  05E6  30C0               	movlw	192
  2185  05E7  050E               	andwf	14,w	;volatile
  2186  05E8  00A5               	movwf	??_main
  2187  05E9  3040               	movlw	64
  2188  05EA  0625               	xorwf	??_main,w
  2189  05EB  1D03               	btfss	3,2
  2190  05EC  2DE6               	goto	l1025
  2191                           
  2192                           ;main.c: 336: }
  2193                           ;main.c: 337: Byte2 = PORTC & 0x3F;
  2194  05ED  080E               	movf	14,w	;volatile
  2195  05EE  393F               	andlw	63
  2196  05EF  00A5               	movwf	??_main
  2197  05F0  0825               	movf	??_main,w
  2198  05F1  00FC               	movwf	_Byte2
  2199  05F2                     l1029:	
  2200                           ;main.c: 338: while ((PORTC & 0xC0) != 0x80) {
  2201                           
  2202  05F2  30C0               	movlw	192
  2203  05F3  050E               	andwf	14,w	;volatile
  2204  05F4  00A5               	movwf	??_main
  2205  05F5  3080               	movlw	128
  2206  05F6  0625               	xorwf	??_main,w
  2207  05F7  1D03               	btfss	3,2
  2208  05F8  2DF2               	goto	l1029
  2209                           
  2210                           ;main.c: 339: }
  2211                           ;main.c: 340: Byte3 = PORTC & 0x3F;
  2212  05F9  080E               	movf	14,w	;volatile
  2213  05FA  393F               	andlw	63
  2214  05FB  00A5               	movwf	??_main
  2215  05FC  0825               	movf	??_main,w
  2216  05FD  00FD               	movwf	_Byte3
  2217                           
  2218                           ;main.c: 341: if (((Byte1 & 0x10) == 0x10) && ((Byte1 & 0x0C) != 0x00))
  2219  05FE  1E20               	btfss	_Byte1,4
  2220  05FF  2E0E               	goto	l1039
  2221  0600  0820               	movf	_Byte1,w
  2222  0601  390C               	andlw	12
  2223  0602  1903               	btfsc	3,2
  2224  0603  2E0E               	goto	l1039
  2225                           
  2226                           ;main.c: 342: DAC1_SetOutput(DacOutput[(Byte1 & 0x03)]);
  2227  0604  0820               	movf	_Byte1,w
  2228  0605  3903               	andlw	3
  2229  0606  3EC2               	addlw	low (_DacOutput| (0+32768))
  2230  0607  0084               	movwf	4
  2231  0608  3088               	movlw	high (_DacOutput| (0+32768))
  2232  0609  1803               	skipnc
  2233  060A  3E01               	addlw	1
  2234  060B  0085               	movwf	5
  2235  060C  0800               	movf	0,w	;code access
  2236  060D  2E0F               	goto	L1
  2237  060E                     l1039:	
  2238                           
  2239                           ;main.c: 343: else
  2240                           ;main.c: 344: DAC1_SetOutput(0);
  2241  060E  3000               	movlw	0
  2242  060F                     L1:	
  2243  060F  3185  250C  3185   	fcall	_DAC1_SetOutput
  2244                           
  2245                           ;main.c: 346: if ((Byte1 & 0x3C) == 0x20) {
  2246  0612  303C               	movlw	60
  2247  0613  0020               	movlb	0	; select bank0
  2248  0614  0520               	andwf	_Byte1,w
  2249  0615  00A5               	movwf	??_main
  2250  0616  3020               	movlw	32
  2251  0617  0625               	xorwf	??_main,w
  2252  0618  1D03               	btfss	3,2
  2253  0619  2E1E               	goto	l1043
  2254                           
  2255                           ;main.c: 347: do { LATA2 = 0; } while(0);
  2256  061A  0022               	movlb	2	; select bank2
  2257  061B  110C               	bcf	12,2	;volatile
  2258                           
  2259                           ;main.c: 348: do { LATB4 = 1; } while(0);
  2260  061C  160D               	bsf	13,4	;volatile
  2261                           
  2262                           ;main.c: 349: } else {
  2263  061D  2E44               	goto	l1051
  2264  061E                     l1043:	
  2265                           
  2266                           ;main.c: 350: if (((Byte1 & 0x30) != 0x00) && ((Byte1 & 0x0C) != 0x00)) {
  2267  061E  0020               	movlb	0	; select bank0
  2268  061F  0820               	movf	_Byte1,w
  2269  0620  3930               	andlw	48
  2270  0621  1903               	btfsc	3,2
  2271  0622  2E41               	goto	l227
  2272  0623  0820               	movf	_Byte1,w
  2273  0624  390C               	andlw	12
  2274  0625  1903               	btfsc	3,2
  2275  0626  2E41               	goto	l227
  2276                           
  2277                           ;main.c: 351: do { LATB4 = 1; } while(0);
  2278  0627  0022               	movlb	2	; select bank2
  2279  0628  160D               	bsf	13,4	;volatile
  2280                           
  2281                           ;main.c: 352: if (ACTIVEBAND[Byte2] || ACTIVEBAND[Byte3])
  2282  0629  087C               	movf	_Byte2,w
  2283  062A  3E82               	addlw	low (_ACTIVEBAND| (0+32768))
  2284  062B  0084               	movwf	4
  2285  062C  3088               	movlw	high (_ACTIVEBAND| (0+32768))
  2286  062D  1803               	skipnc
  2287  062E  3E01               	addlw	1
  2288  062F  0085               	movwf	5
  2289  0630  0012               	moviw fsr0++
  2290  0631  1D03               	btfss	3,2
  2291  0632  2E3D               	goto	l221
  2292  0633  087D               	movf	_Byte3,w
  2293  0634  3E82               	addlw	low (_ACTIVEBAND| (0+32768))
  2294  0635  0084               	movwf	4
  2295  0636  3088               	movlw	high (_ACTIVEBAND| (0+32768))
  2296  0637  1803               	skipnc
  2297  0638  3E01               	addlw	1
  2298  0639  0085               	movwf	5
  2299  063A  0012               	moviw fsr0++
  2300  063B  1903               	btfsc	3,2
  2301  063C  2E3F               	goto	l224
  2302  063D                     l221:	
  2303                           ;main.c: 353: do { LATA2 = 1; } while(0);
  2304                           
  2305  063D  150C               	bsf	12,2	;volatile
  2306  063E  2E44               	goto	l1051
  2307  063F                     l224:	
  2308                           ;main.c: 354: else
  2309                           ;main.c: 355: do { LATA2 = 0; } while(0);
  2310                           
  2311  063F  110C               	bcf	12,2	;volatile
  2312                           
  2313                           ;main.c: 363: } else {
  2314  0640  2E44               	goto	l1051
  2315  0641                     l227:	
  2316                           ;main.c: 364: do { LATA2 = 0; } while(0);
  2317                           
  2318  0641  0022               	movlb	2	; select bank2
  2319  0642  110C               	bcf	12,2	;volatile
  2320                           
  2321                           ;main.c: 365: do { LATB4 = 0; } while(0);
  2322  0643  120D               	bcf	13,4	;volatile
  2323  0644                     l1051:	
  2324                           
  2325                           ;main.c: 366: }
  2326                           ;main.c: 367: }
  2327                           ;main.c: 391: if (Byte2 == 2 && Byte3 == 0)
  2328  0644  3002               	movlw	2
  2329  0645  067C               	xorwf	_Byte2,w
  2330  0646  1D03               	btfss	3,2
  2331  0647  2E56               	goto	l1057
  2332  0648  087D               	movf	_Byte3,w
  2333  0649  1D03               	btfss	3,2
  2334  064A  2E56               	goto	l1057
  2335                           
  2336                           ;main.c: 392: MIPI(7,7,15,15);
  2337  064B  3007               	movlw	7
  2338  064C  0020               	movlb	0	; select bank0
  2339  064D  00A5               	movwf	??_main
  2340  064E  0825               	movf	??_main,w
  2341  064F  00F5               	movwf	MIPI@b
  2342  0650  300F               	movlw	15
  2343  0651  00A6               	movwf	??_main+1
  2344  0652  0826               	movf	??_main+1,w
  2345  0653  00F6               	movwf	MIPI@c
  2346  0654  300F               	movlw	15
  2347  0655  2E68               	goto	L3
  2348  0656                     l1057:	
  2349                           
  2350                           ;main.c: 393: else if (Byte2 == 2 && Byte3 == 5)
  2351  0656  3002               	movlw	2
  2352  0657  067C               	xorwf	_Byte2,w
  2353  0658  1D03               	btfss	3,2
  2354  0659  2E6C               	goto	l1063
  2355  065A  3005               	movlw	5
  2356  065B  067D               	xorwf	_Byte3,w
  2357  065C  1D03               	btfss	3,2
  2358  065D  2E6C               	goto	l1063
  2359                           
  2360                           ;main.c: 394: MIPI(7,7,9,9);
  2361  065E  3007               	movlw	7
  2362  065F  0020               	movlb	0	; select bank0
  2363  0660  00A5               	movwf	??_main
  2364  0661  0825               	movf	??_main,w
  2365  0662  00F5               	movwf	MIPI@b
  2366  0663  3009               	movlw	9
  2367  0664  00A6               	movwf	??_main+1
  2368  0665  0826               	movf	??_main+1,w
  2369  0666  00F6               	movwf	MIPI@c
  2370  0667  3009               	movlw	9
  2371  0668                     L3:	
  2372  0668  00A7               	movwf	??_main+2
  2373  0669  0827               	movf	??_main+2,w
  2374  066A  00F7               	movwf	MIPI@d
  2375  066B  2E8F               	goto	L4
  2376  066C                     l1063:	
  2377                           
  2378                           ;main.c: 395: else if (Byte2 == 5 && Byte3 == 0)
  2379  066C  3005               	movlw	5
  2380  066D  067C               	xorwf	_Byte2,w
  2381  066E  1D03               	btfss	3,2
  2382  066F  2E7E               	goto	l1069
  2383  0670  087D               	movf	_Byte3,w
  2384  0671  1D03               	btfss	3,2
  2385  0672  2E7E               	goto	l1069
  2386                           
  2387                           ;main.c: 396: MIPI(11,11,1,1);
  2388  0673  300B               	movlw	11
  2389  0674  0020               	movlb	0	; select bank0
  2390  0675  00A5               	movwf	??_main
  2391  0676  0825               	movf	??_main,w
  2392  0677  00F5               	movwf	MIPI@b
  2393  0678  01F6               	clrf	MIPI@c
  2394  0679  0AF6               	incf	MIPI@c,f
  2395  067A  01F7               	clrf	MIPI@d
  2396  067B  0AF7               	incf	MIPI@d,f
  2397  067C  300B               	movlw	11
  2398  067D  2EC5               	goto	L2
  2399  067E                     l1069:	
  2400                           
  2401                           ;main.c: 397: else if (Byte2 == 4 && Byte3 == 5)
  2402  067E  3004               	movlw	4
  2403  067F  067C               	xorwf	_Byte2,w
  2404  0680  1D03               	btfss	3,2
  2405  0681  2E91               	goto	l1075
  2406  0682  3005               	movlw	5
  2407  0683  067D               	xorwf	_Byte3,w
  2408  0684  1D03               	btfss	3,2
  2409  0685  2E91               	goto	l1075
  2410                           
  2411                           ;main.c: 398: MIPI(7,7,1,1);
  2412  0686  3007               	movlw	7
  2413  0687  0020               	movlb	0	; select bank0
  2414  0688  00A5               	movwf	??_main
  2415  0689  0825               	movf	??_main,w
  2416  068A  00F5               	movwf	MIPI@b
  2417  068B  01F6               	clrf	MIPI@c
  2418  068C  0AF6               	incf	MIPI@c,f
  2419  068D  01F7               	clrf	MIPI@d
  2420  068E  0AF7               	incf	MIPI@d,f
  2421  068F                     L4:	
  2422  068F  3007               	movlw	7
  2423  0690  2EC5               	goto	L2
  2424  0691                     l1075:	
  2425                           
  2426                           ;main.c: 399: else if (Byte2 == 12 && Byte3 == 0)
  2427  0691  300C               	movlw	12
  2428  0692  067C               	xorwf	_Byte2,w
  2429  0693  1D03               	btfss	3,2
  2430  0694  2EA1               	goto	l1081
  2431  0695  087D               	movf	_Byte3,w
  2432  0696  1D03               	btfss	3,2
  2433  0697  2EA1               	goto	l1081
  2434                           
  2435                           ;main.c: 400: MIPI(18,18,0,0);
  2436  0698  3012               	movlw	18
  2437  0699  0020               	movlb	0	; select bank0
  2438  069A  00A5               	movwf	??_main
  2439  069B  0825               	movf	??_main,w
  2440  069C  00F5               	movwf	MIPI@b
  2441  069D  01F6               	clrf	MIPI@c
  2442  069E  01F7               	clrf	MIPI@d
  2443  069F  3012               	movlw	18
  2444  06A0  2EC5               	goto	L2
  2445  06A1                     l1081:	
  2446                           
  2447                           ;main.c: 401: else if (Byte2 == 29 && Byte3 == 0)
  2448  06A1  301D               	movlw	29
  2449  06A2  067C               	xorwf	_Byte2,w
  2450  06A3  1D03               	btfss	3,2
  2451  06A4  2EB1               	goto	l1087
  2452  06A5  087D               	movf	_Byte3,w
  2453  06A6  1D03               	btfss	3,2
  2454  06A7  2EB1               	goto	l1087
  2455                           
  2456                           ;main.c: 402: MIPI(16,16,0,0);
  2457  06A8  3010               	movlw	16
  2458  06A9  0020               	movlb	0	; select bank0
  2459  06AA  00A5               	movwf	??_main
  2460  06AB  0825               	movf	??_main,w
  2461  06AC  00F5               	movwf	MIPI@b
  2462  06AD  01F6               	clrf	MIPI@c
  2463  06AE  01F7               	clrf	MIPI@d
  2464  06AF  3010               	movlw	16
  2465  06B0  2EC5               	goto	L2
  2466  06B1                     l1087:	
  2467                           
  2468                           ;main.c: 403: else if (Byte2 == 13 && Byte3 == 0)
  2469  06B1  300D               	movlw	13
  2470  06B2  067C               	xorwf	_Byte2,w
  2471  06B3  1D03               	btfss	3,2
  2472  06B4  2EC1               	goto	l1093
  2473  06B5  087D               	movf	_Byte3,w
  2474  06B6  1D03               	btfss	3,2
  2475  06B7  2EC1               	goto	l1093
  2476                           
  2477                           ;main.c: 404: MIPI(13,13,0,0);
  2478  06B8  300D               	movlw	13
  2479  06B9  0020               	movlb	0	; select bank0
  2480  06BA  00A5               	movwf	??_main
  2481  06BB  0825               	movf	??_main,w
  2482  06BC  00F5               	movwf	MIPI@b
  2483  06BD  01F6               	clrf	MIPI@c
  2484  06BE  01F7               	clrf	MIPI@d
  2485  06BF  300D               	movlw	13
  2486  06C0  2EC5               	goto	L2
  2487  06C1                     l1093:	
  2488                           
  2489                           ;main.c: 405: else MIPI(0,0,0,0);
  2490  06C1  01F5               	clrf	MIPI@b
  2491  06C2  01F6               	clrf	MIPI@c
  2492  06C3  01F7               	clrf	MIPI@d
  2493  06C4  3000               	movlw	0
  2494  06C5                     L2:	
  2495  06C5  3186  26D0  3185   	fcall	_MIPI
  2496                           
  2497                           ;main.c: 486: do { LATA1 = 1; } while(0);
  2498  06C8  0022               	movlb	2	; select bank2
  2499  06C9  148C               	bsf	12,1	;volatile
  2500                           
  2501                           ;main.c: 487: ConfigureShiftRegister();
  2502  06CA  3185  2567  3185   	fcall	_ConfigureShiftRegister
  2503                           
  2504                           ;main.c: 488: do { LATA1 = 0; } while(0);
  2505  06CD  0022               	movlb	2	; select bank2
  2506  06CE  108C               	bcf	12,1	;volatile
  2507  06CF  2DDA               	goto	l1021
  2508  06D0                     __end_of_main:	
  2509                           
  2510                           	psect	text1
  2511  051C                     __ptext1:	
  2512 ;; *************** function _SYSTEM_Initialize *****************
  2513 ;; Defined at:
  2514 ;;		line 75 in file "mcc_generated_files/mcc.c"
  2515 ;; Parameters:    Size  Location     Type
  2516 ;;		None
  2517 ;; Auto vars:     Size  Location     Type
  2518 ;;		None
  2519 ;; Return value:  Size  Location     Type
  2520 ;;		None               void
  2521 ;; Registers used:
  2522 ;;		wreg, status,2, status,0, pclath, cstack
  2523 ;; Tracked objects:
  2524 ;;		On entry : 0/0
  2525 ;;		On exit  : 0/0
  2526 ;;		Unchanged: 0/0
  2527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2528 ;;      Params:         0       0       0       0       0       0       0       0
  2529 ;;      Locals:         0       0       0       0       0       0       0       0
  2530 ;;      Temps:          0       0       0       0       0       0       0       0
  2531 ;;      Totals:         0       0       0       0       0       0       0       0
  2532 ;;Total ram usage:        0 bytes
  2533 ;; Hardware stack levels used:    1
  2534 ;; Hardware stack levels required when called:    1
  2535 ;; This function calls:
  2536 ;;		_DAC1_Initialize
  2537 ;;		_OSCILLATOR_Initialize
  2538 ;;		_PIN_MANAGER_Initialize
  2539 ;; This function is called by:
  2540 ;;		_main
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           
  2545                           ;psect for function _SYSTEM_Initialize
  2546  051C                     _SYSTEM_Initialize:	
  2547                           
  2548                           ;mcc.c: 76: OSCILLATOR_Initialize();
  2549                           
  2550                           ;incstack = 0
  2551                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2552  051C  3185  2516  3185   	fcall	_OSCILLATOR_Initialize
  2553                           
  2554                           ;mcc.c: 77: PIN_MANAGER_Initialize();
  2555  051F  3185  2525  3185   	fcall	_PIN_MANAGER_Initialize
  2556                           
  2557                           ;mcc.c: 78: DAC1_Initialize();
  2558  0522  3185  2511         	fcall	_DAC1_Initialize
  2559  0524  0008               	return
  2560  0525                     __end_of_SYSTEM_Initialize:	
  2561                           
  2562                           	psect	text2
  2563  0525                     __ptext2:	
  2564 ;; *************** function _PIN_MANAGER_Initialize *****************
  2565 ;; Defined at:
  2566 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  2567 ;; Parameters:    Size  Location     Type
  2568 ;;		None
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;		None
  2571 ;; Return value:  Size  Location     Type
  2572 ;;		None               void
  2573 ;; Registers used:
  2574 ;;		wreg, status,2
  2575 ;; Tracked objects:
  2576 ;;		On entry : 0/0
  2577 ;;		On exit  : 0/0
  2578 ;;		Unchanged: 0/0
  2579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2580 ;;      Params:         0       0       0       0       0       0       0       0
  2581 ;;      Locals:         0       0       0       0       0       0       0       0
  2582 ;;      Temps:          0       0       0       0       0       0       0       0
  2583 ;;      Totals:         0       0       0       0       0       0       0       0
  2584 ;;Total ram usage:        0 bytes
  2585 ;; Hardware stack levels used:    1
  2586 ;; This function calls:
  2587 ;;		Nothing
  2588 ;; This function is called by:
  2589 ;;		_SYSTEM_Initialize
  2590 ;;		_main
  2591 ;; This function uses a non-reentrant model
  2592 ;;
  2593                           
  2594                           
  2595                           ;psect for function _PIN_MANAGER_Initialize
  2596  0525                     _PIN_MANAGER_Initialize:	
  2597                           
  2598                           ;pin_manager.c: 51: LATA = 0x00;
  2599                           
  2600                           ;incstack = 0
  2601                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2602  0525  0022               	movlb	2	; select bank2
  2603  0526  018C               	clrf	12	;volatile
  2604                           
  2605                           ;pin_manager.c: 52: TRISA = 0x28;
  2606  0527  3028               	movlw	40
  2607  0528  0021               	movlb	1	; select bank1
  2608  0529  008C               	movwf	12	;volatile
  2609                           
  2610                           ;pin_manager.c: 53: ANSELA = 0x01;
  2611  052A  3001               	movlw	1
  2612  052B  0023               	movlb	3	; select bank3
  2613  052C  008C               	movwf	12	;volatile
  2614                           
  2615                           ;pin_manager.c: 55: LATB = 0x00;
  2616  052D  0022               	movlb	2	; select bank2
  2617  052E  018D               	clrf	13	;volatile
  2618                           
  2619                           ;pin_manager.c: 56: TRISB = 0x00;
  2620  052F  0021               	movlb	1	; select bank1
  2621  0530  018D               	clrf	13	;volatile
  2622                           
  2623                           ;pin_manager.c: 57: ANSELB = 0x00;
  2624  0531  0023               	movlb	3	; select bank3
  2625  0532  018D               	clrf	13	;volatile
  2626                           
  2627                           ;pin_manager.c: 58: WPUB = 0x00;
  2628  0533  0024               	movlb	4	; select bank4
  2629  0534  018D               	clrf	13	;volatile
  2630                           
  2631                           ;pin_manager.c: 60: LATC = 0x00;
  2632  0535  0022               	movlb	2	; select bank2
  2633  0536  018E               	clrf	14	;volatile
  2634                           
  2635                           ;pin_manager.c: 61: TRISC = 0xFF;
  2636  0537  30FF               	movlw	255
  2637  0538  0021               	movlb	1	; select bank1
  2638  0539  008E               	movwf	14	;volatile
  2639                           
  2640                           ;pin_manager.c: 62: ANSELC = 0x00;
  2641  053A  0023               	movlb	3	; select bank3
  2642  053B  018E               	clrf	14	;volatile
  2643                           
  2644                           ;pin_manager.c: 63: WPUC = 0x00;
  2645  053C  0024               	movlb	4	; select bank4
  2646  053D  018E               	clrf	14	;volatile
  2647                           
  2648                           ;pin_manager.c: 65: OPTION_REGbits.nWPUEN = 0x01;
  2649  053E  0021               	movlb	1	; select bank1
  2650  053F  1795               	bsf	21,7	;volatile
  2651  0540  0008               	return
  2652  0541                     __end_of_PIN_MANAGER_Initialize:	
  2653                           
  2654                           	psect	text3
  2655  0516                     __ptext3:	
  2656 ;; *************** function _OSCILLATOR_Initialize *****************
  2657 ;; Defined at:
  2658 ;;		line 81 in file "mcc_generated_files/mcc.c"
  2659 ;; Parameters:    Size  Location     Type
  2660 ;;		None
  2661 ;; Auto vars:     Size  Location     Type
  2662 ;;		None
  2663 ;; Return value:  Size  Location     Type
  2664 ;;		None               void
  2665 ;; Registers used:
  2666 ;;		wreg, status,2
  2667 ;; Tracked objects:
  2668 ;;		On entry : 0/0
  2669 ;;		On exit  : 0/0
  2670 ;;		Unchanged: 0/0
  2671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2672 ;;      Params:         0       0       0       0       0       0       0       0
  2673 ;;      Locals:         0       0       0       0       0       0       0       0
  2674 ;;      Temps:          0       0       0       0       0       0       0       0
  2675 ;;      Totals:         0       0       0       0       0       0       0       0
  2676 ;;Total ram usage:        0 bytes
  2677 ;; Hardware stack levels used:    1
  2678 ;; This function calls:
  2679 ;;		Nothing
  2680 ;; This function is called by:
  2681 ;;		_SYSTEM_Initialize
  2682 ;; This function uses a non-reentrant model
  2683 ;;
  2684                           
  2685                           
  2686                           ;psect for function _OSCILLATOR_Initialize
  2687  0516                     _OSCILLATOR_Initialize:	
  2688                           
  2689                           ;mcc.c: 83: OSCCON = 0x7A;
  2690                           
  2691                           ;incstack = 0
  2692                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2693  0516  307A               	movlw	122
  2694  0517  0021               	movlb	1	; select bank1
  2695  0518  0099               	movwf	25	;volatile
  2696                           
  2697                           ;mcc.c: 85: OSCSTAT = 0x00;
  2698  0519  019A               	clrf	26	;volatile
  2699                           
  2700                           ;mcc.c: 87: OSCTUNE = 0x00;
  2701  051A  0198               	clrf	24	;volatile
  2702  051B  0008               	return
  2703  051C                     __end_of_OSCILLATOR_Initialize:	
  2704                           
  2705                           	psect	text4
  2706  0511                     __ptext4:	
  2707 ;; *************** function _DAC1_Initialize *****************
  2708 ;; Defined at:
  2709 ;;		line 58 in file "mcc_generated_files/dac1.c"
  2710 ;; Parameters:    Size  Location     Type
  2711 ;;		None
  2712 ;; Auto vars:     Size  Location     Type
  2713 ;;		None
  2714 ;; Return value:  Size  Location     Type
  2715 ;;		None               void
  2716 ;; Registers used:
  2717 ;;		wreg, status,2
  2718 ;; Tracked objects:
  2719 ;;		On entry : 0/0
  2720 ;;		On exit  : 0/0
  2721 ;;		Unchanged: 0/0
  2722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2723 ;;      Params:         0       0       0       0       0       0       0       0
  2724 ;;      Locals:         0       0       0       0       0       0       0       0
  2725 ;;      Temps:          0       0       0       0       0       0       0       0
  2726 ;;      Totals:         0       0       0       0       0       0       0       0
  2727 ;;Total ram usage:        0 bytes
  2728 ;; Hardware stack levels used:    1
  2729 ;; This function calls:
  2730 ;;		Nothing
  2731 ;; This function is called by:
  2732 ;;		_SYSTEM_Initialize
  2733 ;;		_main
  2734 ;; This function uses a non-reentrant model
  2735 ;;
  2736                           
  2737                           
  2738                           ;psect for function _DAC1_Initialize
  2739  0511                     _DAC1_Initialize:	
  2740                           
  2741                           ;dac1.c: 60: DAC1CON0 = 0xA0;
  2742                           
  2743                           ;incstack = 0
  2744                           ; Regs used in _DAC1_Initialize: [wreg+status,2]
  2745  0511  30A0               	movlw	160
  2746  0512  0022               	movlb	2	; select bank2
  2747  0513  0098               	movwf	24	;volatile
  2748                           
  2749                           ;dac1.c: 62: DAC1CON1 = 0x00;
  2750  0514  0199               	clrf	25	;volatile
  2751  0515  0008               	return
  2752  0516                     __end_of_DAC1_Initialize:	
  2753                           
  2754                           	psect	text5
  2755  06D0                     __ptext5:	
  2756 ;; *************** function _MIPI *****************
  2757 ;; Defined at:
  2758 ;;		line 167 in file "main.c"
  2759 ;; Parameters:    Size  Location     Type
  2760 ;;  a               1    wreg     unsigned char 
  2761 ;;  b               1    5[COMMON] unsigned char 
  2762 ;;  c               1    6[COMMON] unsigned char 
  2763 ;;  d               1    7[COMMON] unsigned char 
  2764 ;; Auto vars:     Size  Location     Type
  2765 ;;  a               1   10[COMMON] unsigned char 
  2766 ;;  i               1   11[COMMON] unsigned char 
  2767 ;; Return value:  Size  Location     Type
  2768 ;;		None               void
  2769 ;; Registers used:
  2770 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2771 ;; Tracked objects:
  2772 ;;		On entry : 0/0
  2773 ;;		On exit  : 0/0
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2776 ;;      Params:         3       0       0       0       0       0       0       0
  2777 ;;      Locals:         2       0       0       0       0       0       0       0
  2778 ;;      Temps:          2       0       0       0       0       0       0       0
  2779 ;;      Totals:         7       0       0       0       0       0       0       0
  2780 ;;Total ram usage:        7 bytes
  2781 ;; Hardware stack levels used:    1
  2782 ;; Hardware stack levels required when called:    1
  2783 ;; This function calls:
  2784 ;;		_shiftRegister
  2785 ;; This function is called by:
  2786 ;;		_main
  2787 ;; This function uses a non-reentrant model
  2788 ;;
  2789                           
  2790                           
  2791                           ;psect for function _MIPI
  2792  06D0                     _MIPI:	
  2793                           
  2794                           ;incstack = 0
  2795                           ; Regs used in _MIPI: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2796                           ;MIPI@a stored from wreg
  2797  06D0  00FA               	movwf	MIPI@a
  2798                           
  2799                           ;main.c: 172: for (uint8_t i=0; i<2; i++){
  2800  06D1  01FB               	clrf	MIPI@i
  2801  06D2                     L8:	
  2802  06D2  3002               	movlw	2
  2803  06D3  027B               	subwf	MIPI@i,w
  2804  06D4  1803               	btfsc	3,0
  2805  06D5  0008               	return
  2806                           
  2807                           ;main.c: 173: do { LATB7 = 1; } while(0);
  2808  06D6  0022               	movlb	2	; select bank2
  2809  06D7  178D               	bsf	13,7	;volatile
  2810                           
  2811                           ;main.c: 174: do { LATB5 = 1; } while(0);
  2812  06D8  168D               	bsf	13,5	;volatile
  2813  06D9  0000               	nop	;# 
  2814                           
  2815                           ;main.c: 176: do { LATB7 = 0; } while(0);
  2816  06DA  0022               	movlb	2	; select bank2
  2817  06DB  138D               	bcf	13,7	;volatile
  2818                           
  2819                           ;main.c: 177: do { LATB5 = 0; } while(0);
  2820  06DC  128D               	bcf	13,5	;volatile
  2821                           
  2822                           ;main.c: 178: shiftRegister (SLAVEADD[i],SLAVEADD[i],4);
  2823  06DD  087B               	movf	MIPI@i,w
  2824  06DE  3EC8               	addlw	low (_SLAVEADD| (0+32768))
  2825  06DF  0084               	movwf	4
  2826  06E0  3088               	movlw	high (_SLAVEADD| (0+32768))
  2827  06E1  1803               	skipnc
  2828  06E2  3E01               	addlw	1
  2829  06E3  0085               	movwf	5
  2830  06E4  0800               	movf	0,w	;code access
  2831  06E5  00F8               	movwf	??_MIPI
  2832  06E6  0878               	movf	??_MIPI,w
  2833  06E7  00F0               	movwf	shiftRegister@Dummy2
  2834  06E8  3004               	movlw	4
  2835  06E9  00F9               	movwf	??_MIPI+1
  2836  06EA  0879               	movf	??_MIPI+1,w
  2837  06EB  00F1               	movwf	shiftRegister@y
  2838  06EC  087B               	movf	MIPI@i,w
  2839  06ED  3EC8               	addlw	low (_SLAVEADD| (0+32768))
  2840  06EE  0084               	movwf	4
  2841  06EF  3088               	movlw	high (_SLAVEADD| (0+32768))
  2842  06F0  1803               	skipnc
  2843  06F1  3E01               	addlw	1
  2844  06F2  0085               	movwf	5
  2845  06F3  0800               	movf	0,w	;code access
  2846  06F4  3185  2541  3186   	fcall	_shiftRegister
  2847                           
  2848                           ;main.c: 179: shiftRegister (0x02,0x02,3);
  2849  06F7  3002               	movlw	2
  2850  06F8  00F8               	movwf	??_MIPI
  2851  06F9  0878               	movf	??_MIPI,w
  2852  06FA  00F0               	movwf	shiftRegister@Dummy2
  2853  06FB  3003               	movlw	3
  2854  06FC  00F9               	movwf	??_MIPI+1
  2855  06FD  0879               	movf	??_MIPI+1,w
  2856  06FE  00F1               	movwf	shiftRegister@y
  2857  06FF  3002               	movlw	2
  2858  0700  3185  2541  3186   	fcall	_shiftRegister
  2859                           
  2860                           ;main.c: 180: shiftRegister (REGADD[0],REGADD[0],5);
  2861  0703  30C6               	movlw	low (_REGADD| (0+32768))
  2862  0704  0084               	movwf	4
  2863  0705  3088               	movlw	high (_REGADD| (0+32768))
  2864  0706  0085               	movwf	5
  2865  0707  0800               	movf	0,w	;code access
  2866  0708  00F8               	movwf	??_MIPI
  2867  0709  0878               	movf	??_MIPI,w
  2868  070A  00F0               	movwf	shiftRegister@Dummy2
  2869  070B  3005               	movlw	5
  2870  070C  00F9               	movwf	??_MIPI+1
  2871  070D  0879               	movf	??_MIPI+1,w
  2872  070E  00F1               	movwf	shiftRegister@y
  2873  070F  30C6               	movlw	low (_REGADD| (0+32768))
  2874  0710  0084               	movwf	4
  2875  0711  3088               	movlw	high (_REGADD| (0+32768))
  2876  0712  0085               	movwf	5
  2877  0713  0800               	movf	0,w	;code access
  2878  0714  3185  2541  3186   	fcall	_shiftRegister
  2879                           
  2880                           ;main.c: 181: if (i==0)
  2881  0717  087B               	movf	MIPI@i,w
  2882  0718  1D03               	btfss	3,2
  2883  0719  2F20               	goto	l931
  2884                           
  2885                           ;main.c: 182: shiftRegister (0x01,0x01,1);
  2886  071A  01F0               	clrf	shiftRegister@Dummy2
  2887  071B  0AF0               	incf	shiftRegister@Dummy2,f
  2888  071C  01F1               	clrf	shiftRegister@y
  2889  071D  0AF1               	incf	shiftRegister@y,f
  2890  071E  3001               	movlw	1
  2891  071F  2F24               	goto	L5
  2892  0720                     l931:	
  2893                           
  2894                           ;main.c: 183: else
  2895                           ;main.c: 184: shiftRegister (0x00,0x00,1);
  2896  0720  01F0               	clrf	shiftRegister@Dummy2
  2897  0721  01F1               	clrf	shiftRegister@y
  2898  0722  0AF1               	incf	shiftRegister@y,f
  2899  0723  3000               	movlw	0
  2900  0724                     L5:	
  2901  0724  3185  2541  3186   	fcall	_shiftRegister
  2902                           
  2903                           ;main.c: 185: shiftRegister (0x00,0x00,8);
  2904  0727  01F0               	clrf	shiftRegister@Dummy2
  2905  0728  3008               	movlw	8
  2906  0729  00F8               	movwf	??_MIPI
  2907  072A  0878               	movf	??_MIPI,w
  2908  072B  00F1               	movwf	shiftRegister@y
  2909  072C  3000               	movlw	0
  2910  072D  3185  2541  3186   	fcall	_shiftRegister
  2911                           
  2912                           ;main.c: 186: shiftRegister (0x01,0x01,2);
  2913  0730  01F0               	clrf	shiftRegister@Dummy2
  2914  0731  0AF0               	incf	shiftRegister@Dummy2,f
  2915  0732  3002               	movlw	2
  2916  0733  00F8               	movwf	??_MIPI
  2917  0734  0878               	movf	??_MIPI,w
  2918  0735  00F1               	movwf	shiftRegister@y
  2919  0736  3001               	movlw	1
  2920  0737  3185  2541  3186   	fcall	_shiftRegister
  2921  073A  0000               	nop	;# 
  2922  073B  0000               	nop	;# 
  2923                           
  2924                           ;main.c: 190: do { LATB7 = 1; } while(0);
  2925  073C  0022               	movlb	2	; select bank2
  2926  073D  178D               	bsf	13,7	;volatile
  2927                           
  2928                           ;main.c: 191: do { LATB5 = 1; } while(0);
  2929  073E  168D               	bsf	13,5	;volatile
  2930  073F  0000               	nop	;# 
  2931                           
  2932                           ;main.c: 193: do { LATB7 = 0; } while(0);
  2933  0740  0022               	movlb	2	; select bank2
  2934  0741  138D               	bcf	13,7	;volatile
  2935                           
  2936                           ;main.c: 194: do { LATB5 = 0; } while(0);
  2937  0742  128D               	bcf	13,5	;volatile
  2938                           
  2939                           ;main.c: 195: shiftRegister (SLAVEADD[i],SLAVEADD[i],4);
  2940  0743  087B               	movf	MIPI@i,w
  2941  0744  3EC8               	addlw	low (_SLAVEADD| (0+32768))
  2942  0745  0084               	movwf	4
  2943  0746  3088               	movlw	high (_SLAVEADD| (0+32768))
  2944  0747  1803               	skipnc
  2945  0748  3E01               	addlw	1
  2946  0749  0085               	movwf	5
  2947  074A  0800               	movf	0,w	;code access
  2948  074B  00F8               	movwf	??_MIPI
  2949  074C  0878               	movf	??_MIPI,w
  2950  074D  00F0               	movwf	shiftRegister@Dummy2
  2951  074E  3004               	movlw	4
  2952  074F  00F9               	movwf	??_MIPI+1
  2953  0750  0879               	movf	??_MIPI+1,w
  2954  0751  00F1               	movwf	shiftRegister@y
  2955  0752  087B               	movf	MIPI@i,w
  2956  0753  3EC8               	addlw	low (_SLAVEADD| (0+32768))
  2957  0754  0084               	movwf	4
  2958  0755  3088               	movlw	high (_SLAVEADD| (0+32768))
  2959  0756  1803               	skipnc
  2960  0757  3E01               	addlw	1
  2961  0758  0085               	movwf	5
  2962  0759  0800               	movf	0,w	;code access
  2963  075A  3185  2541  3186   	fcall	_shiftRegister
  2964                           
  2965                           ;main.c: 196: shiftRegister (0x02,0x02,3);
  2966  075D  3002               	movlw	2
  2967  075E  00F8               	movwf	??_MIPI
  2968  075F  0878               	movf	??_MIPI,w
  2969  0760  00F0               	movwf	shiftRegister@Dummy2
  2970  0761  3003               	movlw	3
  2971  0762  00F9               	movwf	??_MIPI+1
  2972  0763  0879               	movf	??_MIPI+1,w
  2973  0764  00F1               	movwf	shiftRegister@y
  2974  0765  3002               	movlw	2
  2975  0766  3185  2541  3186   	fcall	_shiftRegister
  2976                           
  2977                           ;main.c: 197: shiftRegister (REGADD[1],REGADD[1],5);
  2978  0769  30C7               	movlw	low ((_REGADD+1)| (0+32768))
  2979  076A  0084               	movwf	4
  2980  076B  3088               	movlw	high ((_REGADD+1)| (0+32768))
  2981  076C  0085               	movwf	5
  2982  076D  0800               	movf	0,w	;code access
  2983  076E  00F8               	movwf	??_MIPI
  2984  076F  0878               	movf	??_MIPI,w
  2985  0770  00F0               	movwf	shiftRegister@Dummy2
  2986  0771  3005               	movlw	5
  2987  0772  00F9               	movwf	??_MIPI+1
  2988  0773  0879               	movf	??_MIPI+1,w
  2989  0774  00F1               	movwf	shiftRegister@y
  2990  0775  30C7               	movlw	low ((_REGADD+1)| (0+32768))
  2991  0776  0084               	movwf	4
  2992  0777  3088               	movlw	high ((_REGADD+1)| (0+32768))
  2993  0778  0085               	movwf	5
  2994  0779  0800               	movf	0,w	;code access
  2995  077A  3185  2541  3186   	fcall	_shiftRegister
  2996                           
  2997                           ;main.c: 198: if (i==0)
  2998  077D  087B               	movf	MIPI@i,w
  2999  077E  1D03               	btfss	3,2
  3000  077F  2F86               	goto	l949
  3001                           
  3002                           ;main.c: 199: shiftRegister (0x01,0x01,1);
  3003  0780  01F0               	clrf	shiftRegister@Dummy2
  3004  0781  0AF0               	incf	shiftRegister@Dummy2,f
  3005  0782  01F1               	clrf	shiftRegister@y
  3006  0783  0AF1               	incf	shiftRegister@y,f
  3007  0784  3001               	movlw	1
  3008  0785  2F8A               	goto	L7
  3009  0786                     l949:	
  3010                           
  3011                           ;main.c: 200: else
  3012                           ;main.c: 201: shiftRegister (0x00,0x00,1);
  3013  0786  01F0               	clrf	shiftRegister@Dummy2
  3014  0787  01F1               	clrf	shiftRegister@y
  3015  0788  0AF1               	incf	shiftRegister@y,f
  3016  0789  3000               	movlw	0
  3017  078A                     L7:	
  3018  078A  3185  2541  3186   	fcall	_shiftRegister
  3019                           
  3020                           ;main.c: 202: if (i==0){
  3021  078D  087B               	movf	MIPI@i,w
  3022  078E  1D03               	btfss	3,2
  3023  078F  2FBB               	goto	l955
  3024                           
  3025                           ;main.c: 203: shiftRegister (DATA[a],DATA[c],8);
  3026  0790  0876               	movf	MIPI@c,w
  3027  0791  3E00               	addlw	low (_DATA| (0+32768))
  3028  0792  0084               	movwf	4
  3029  0793  3088               	movlw	high (_DATA| (0+32768))
  3030  0794  1803               	skipnc
  3031  0795  3E01               	addlw	1
  3032  0796  0085               	movwf	5
  3033  0797  0800               	movf	0,w	;code access
  3034  0798  00F8               	movwf	??_MIPI
  3035  0799  0878               	movf	??_MIPI,w
  3036  079A  00F0               	movwf	shiftRegister@Dummy2
  3037  079B  3008               	movlw	8
  3038  079C  00F9               	movwf	??_MIPI+1
  3039  079D  0879               	movf	??_MIPI+1,w
  3040  079E  00F1               	movwf	shiftRegister@y
  3041  079F  087A               	movf	MIPI@a,w
  3042  07A0  3E00               	addlw	low (_DATA| (0+32768))
  3043  07A1  0084               	movwf	4
  3044  07A2  3088               	movlw	high (_DATA| (0+32768))
  3045  07A3  1803               	skipnc
  3046  07A4  3E01               	addlw	1
  3047  07A5  0085               	movwf	5
  3048  07A6  0800               	movf	0,w	;code access
  3049  07A7  3185  2541  3186   	fcall	_shiftRegister
  3050                           
  3051                           ;main.c: 205: shiftRegister (PARITY[a],PARITY[c],2);
  3052  07AA  0876               	movf	MIPI@c,w
  3053  07AB  3E41               	addlw	low (_PARITY| (0+32768))
  3054  07AC  0084               	movwf	4
  3055  07AD  3088               	movlw	high (_PARITY| (0+32768))
  3056  07AE  1803               	skipnc
  3057  07AF  3E01               	addlw	1
  3058  07B0  0085               	movwf	5
  3059  07B1  0800               	movf	0,w	;code access
  3060  07B2  00F8               	movwf	??_MIPI
  3061  07B3  0878               	movf	??_MIPI,w
  3062  07B4  00F0               	movwf	shiftRegister@Dummy2
  3063  07B5  3002               	movlw	2
  3064  07B6  00F9               	movwf	??_MIPI+1
  3065  07B7  0879               	movf	??_MIPI+1,w
  3066  07B8  00F1               	movwf	shiftRegister@y
  3067  07B9  087A               	movf	MIPI@a,w
  3068  07BA  2FE5               	goto	L6
  3069  07BB                     l955:	
  3070                           ;main.c: 206: }else{
  3071                           
  3072                           
  3073                           ;main.c: 207: shiftRegister (DATA[b],DATA[d],8);
  3074  07BB  0877               	movf	MIPI@d,w
  3075  07BC  3E00               	addlw	low (_DATA| (0+32768))
  3076  07BD  0084               	movwf	4
  3077  07BE  3088               	movlw	high (_DATA| (0+32768))
  3078  07BF  1803               	skipnc
  3079  07C0  3E01               	addlw	1
  3080  07C1  0085               	movwf	5
  3081  07C2  0800               	movf	0,w	;code access
  3082  07C3  00F8               	movwf	??_MIPI
  3083  07C4  0878               	movf	??_MIPI,w
  3084  07C5  00F0               	movwf	shiftRegister@Dummy2
  3085  07C6  3008               	movlw	8
  3086  07C7  00F9               	movwf	??_MIPI+1
  3087  07C8  0879               	movf	??_MIPI+1,w
  3088  07C9  00F1               	movwf	shiftRegister@y
  3089  07CA  0875               	movf	MIPI@b,w
  3090  07CB  3E00               	addlw	low (_DATA| (0+32768))
  3091  07CC  0084               	movwf	4
  3092  07CD  3088               	movlw	high (_DATA| (0+32768))
  3093  07CE  1803               	skipnc
  3094  07CF  3E01               	addlw	1
  3095  07D0  0085               	movwf	5
  3096  07D1  0800               	movf	0,w	;code access
  3097  07D2  3185  2541  3186   	fcall	_shiftRegister
  3098                           
  3099                           ;main.c: 209: shiftRegister (PARITY[b],PARITY[d],2);
  3100  07D5  0877               	movf	MIPI@d,w
  3101  07D6  3E41               	addlw	low (_PARITY| (0+32768))
  3102  07D7  0084               	movwf	4
  3103  07D8  3088               	movlw	high (_PARITY| (0+32768))
  3104  07D9  1803               	skipnc
  3105  07DA  3E01               	addlw	1
  3106  07DB  0085               	movwf	5
  3107  07DC  0800               	movf	0,w	;code access
  3108  07DD  00F8               	movwf	??_MIPI
  3109  07DE  0878               	movf	??_MIPI,w
  3110  07DF  00F0               	movwf	shiftRegister@Dummy2
  3111  07E0  3002               	movlw	2
  3112  07E1  00F9               	movwf	??_MIPI+1
  3113  07E2  0879               	movf	??_MIPI+1,w
  3114  07E3  00F1               	movwf	shiftRegister@y
  3115  07E4  0875               	movf	MIPI@b,w
  3116  07E5                     L6:	
  3117  07E5  3E41               	addlw	low (_PARITY| (0+32768))
  3118  07E6  0084               	movwf	4
  3119  07E7  3088               	movlw	high (_PARITY| (0+32768))
  3120  07E8  1803               	skipnc
  3121  07E9  3E01               	addlw	1
  3122  07EA  0085               	movwf	5
  3123  07EB  0800               	movf	0,w	;code access
  3124  07EC  3185  2541  3186   	fcall	_shiftRegister
  3125  07EF  0000               	nop	;# 
  3126  07F0  0000               	nop	;# 
  3127  07F1  3001               	movlw	1
  3128  07F2  00F8               	movwf	??_MIPI
  3129  07F3  0878               	movf	??_MIPI,w
  3130  07F4  07FB               	addwf	MIPI@i,f
  3131  07F5  2ED2               	goto	L8
  3132  07F6                     __end_of_MIPI:	
  3133                           
  3134                           	psect	text6
  3135  0541                     __ptext6:	
  3136 ;; *************** function _shiftRegister *****************
  3137 ;; Defined at:
  3138 ;;		line 144 in file "main.c"
  3139 ;; Parameters:    Size  Location     Type
  3140 ;;  Dummy1          1    wreg     unsigned char 
  3141 ;;  Dummy2          1    0[COMMON] unsigned char 
  3142 ;;  y               1    1[COMMON] unsigned char 
  3143 ;; Auto vars:     Size  Location     Type
  3144 ;;  Dummy1          1    4[COMMON] unsigned char 
  3145 ;;  m               1    3[COMMON] unsigned char 
  3146 ;; Return value:  Size  Location     Type
  3147 ;;		None               void
  3148 ;; Registers used:
  3149 ;;		wreg, status,2, status,0
  3150 ;; Tracked objects:
  3151 ;;		On entry : 0/0
  3152 ;;		On exit  : 0/0
  3153 ;;		Unchanged: 0/0
  3154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3155 ;;      Params:         2       0       0       0       0       0       0       0
  3156 ;;      Locals:         2       0       0       0       0       0       0       0
  3157 ;;      Temps:          1       0       0       0       0       0       0       0
  3158 ;;      Totals:         5       0       0       0       0       0       0       0
  3159 ;;Total ram usage:        5 bytes
  3160 ;; Hardware stack levels used:    1
  3161 ;; This function calls:
  3162 ;;		Nothing
  3163 ;; This function is called by:
  3164 ;;		_MIPI
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168                           
  3169                           ;psect for function _shiftRegister
  3170  0541                     _shiftRegister:	
  3171                           
  3172                           ;incstack = 0
  3173                           ; Regs used in _shiftRegister: [wreg+status,2+status,0]
  3174                           ;shiftRegister@Dummy1 stored from wreg
  3175  0541  00F4               	movwf	shiftRegister@Dummy1
  3176                           
  3177                           ;main.c: 145: for (uint8_t m=0; m<y; m++){
  3178  0542  01F3               	clrf	shiftRegister@m
  3179  0543                     l909:	
  3180  0543  0871               	movf	shiftRegister@y,w
  3181  0544  0273               	subwf	shiftRegister@m,w
  3182  0545  1803               	btfsc	3,0
  3183  0546  0008               	return
  3184                           
  3185                           ;main.c: 146: do { LATB6 = 1; } while(0);
  3186  0547  0022               	movlb	2	; select bank2
  3187  0548  170D               	bsf	13,6	;volatile
  3188                           
  3189                           ;main.c: 147: LATB7 = Dummy1 & 0x01;
  3190  0549  1C74               	btfss	shiftRegister@Dummy1,0
  3191  054A  2D4E               	goto	u550
  3192  054B  0022               	movlb	2	; select bank2
  3193  054C  178D               	bsf	13,7	;volatile
  3194  054D  2D50               	goto	l899
  3195  054E                     u550:	
  3196  054E  0022               	movlb	2	; select bank2
  3197  054F  138D               	bcf	13,7	;volatile
  3198  0550                     l899:	
  3199                           
  3200                           ;main.c: 148: LATB5 = Dummy2 & 0x01;
  3201  0550  1C70               	btfss	shiftRegister@Dummy2,0
  3202  0551  2D55               	goto	u570
  3203  0552  0022               	movlb	2	; select bank2
  3204  0553  168D               	bsf	13,5	;volatile
  3205  0554  2D57               	goto	u584
  3206  0555                     u570:	
  3207  0555  0022               	movlb	2	; select bank2
  3208  0556  128D               	bcf	13,5	;volatile
  3209  0557                     u584:	
  3210  0557  0000               	nop	;# 
  3211                           
  3212                           ;main.c: 150: do { LATB6 = 0; } while(0);
  3213  0558  0022               	movlb	2	; select bank2
  3214  0559  130D               	bcf	13,6	;volatile
  3215                           
  3216                           ;main.c: 151: Dummy1 = Dummy1 >> 1;
  3217  055A  3674               	lsrf	shiftRegister@Dummy1,w
  3218  055B  00F2               	movwf	??_shiftRegister
  3219  055C  0872               	movf	??_shiftRegister,w
  3220  055D  00F4               	movwf	shiftRegister@Dummy1
  3221                           
  3222                           ;main.c: 152: Dummy2 = Dummy2 >> 1;
  3223  055E  3670               	lsrf	shiftRegister@Dummy2,w
  3224  055F  00F2               	movwf	??_shiftRegister
  3225  0560  0872               	movf	??_shiftRegister,w
  3226  0561  00F0               	movwf	shiftRegister@Dummy2
  3227  0562  3001               	movlw	1
  3228  0563  00F2               	movwf	??_shiftRegister
  3229  0564  0872               	movf	??_shiftRegister,w
  3230  0565  07F3               	addwf	shiftRegister@m,f
  3231  0566  2D43               	goto	l909
  3232  0567                     __end_of_shiftRegister:	
  3233                           
  3234                           	psect	text7
  3235  050C                     __ptext7:	
  3236 ;; *************** function _DAC1_SetOutput *****************
  3237 ;; Defined at:
  3238 ;;		line 65 in file "mcc_generated_files/dac1.c"
  3239 ;; Parameters:    Size  Location     Type
  3240 ;;  inputData       1    wreg     unsigned char 
  3241 ;; Auto vars:     Size  Location     Type
  3242 ;;  inputData       1    0[COMMON] unsigned char 
  3243 ;; Return value:  Size  Location     Type
  3244 ;;		None               void
  3245 ;; Registers used:
  3246 ;;		wreg
  3247 ;; Tracked objects:
  3248 ;;		On entry : 0/0
  3249 ;;		On exit  : 0/0
  3250 ;;		Unchanged: 0/0
  3251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3252 ;;      Params:         0       0       0       0       0       0       0       0
  3253 ;;      Locals:         1       0       0       0       0       0       0       0
  3254 ;;      Temps:          0       0       0       0       0       0       0       0
  3255 ;;      Totals:         1       0       0       0       0       0       0       0
  3256 ;;Total ram usage:        1 bytes
  3257 ;; Hardware stack levels used:    1
  3258 ;; This function calls:
  3259 ;;		Nothing
  3260 ;; This function is called by:
  3261 ;;		_main
  3262 ;; This function uses a non-reentrant model
  3263 ;;
  3264                           
  3265                           
  3266                           ;psect for function _DAC1_SetOutput
  3267  050C                     _DAC1_SetOutput:	
  3268                           
  3269                           ;incstack = 0
  3270                           ; Regs used in _DAC1_SetOutput: [wreg]
  3271                           ;DAC1_SetOutput@inputData stored from wreg
  3272  050C  00F0               	movwf	DAC1_SetOutput@inputData
  3273                           
  3274                           ;dac1.c: 66: DAC1CON1 = inputData;
  3275  050D  0870               	movf	DAC1_SetOutput@inputData,w
  3276  050E  0022               	movlb	2	; select bank2
  3277  050F  0099               	movwf	25	;volatile
  3278  0510  0008               	return
  3279  0511                     __end_of_DAC1_SetOutput:	
  3280                           
  3281                           	psect	text8
  3282  0567                     __ptext8:	
  3283 ;; *************** function _ConfigureShiftRegister *****************
  3284 ;; Defined at:
  3285 ;;		line 216 in file "main.c"
  3286 ;; Parameters:    Size  Location     Type
  3287 ;;		None
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;  ReverseReg      1    2[COMMON] unsigned char 
  3290 ;;  i               1    1[COMMON] unsigned char 
  3291 ;; Return value:  Size  Location     Type
  3292 ;;		None               void
  3293 ;; Registers used:
  3294 ;;		wreg, status,2, status,0
  3295 ;; Tracked objects:
  3296 ;;		On entry : 0/0
  3297 ;;		On exit  : 0/0
  3298 ;;		Unchanged: 0/0
  3299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3300 ;;      Params:         0       0       0       0       0       0       0       0
  3301 ;;      Locals:         2       0       0       0       0       0       0       0
  3302 ;;      Temps:          1       0       0       0       0       0       0       0
  3303 ;;      Totals:         3       0       0       0       0       0       0       0
  3304 ;;Total ram usage:        3 bytes
  3305 ;; Hardware stack levels used:    1
  3306 ;; This function calls:
  3307 ;;		Nothing
  3308 ;; This function is called by:
  3309 ;;		_main
  3310 ;; This function uses a non-reentrant model
  3311 ;;
  3312                           
  3313                           
  3314                           ;psect for function _ConfigureShiftRegister
  3315  0567                     _ConfigureShiftRegister:	
  3316                           
  3317                           ;main.c: 217: uint8_t ReverseReg, i;
  3318                           ;main.c: 227: if ((Byte1 & 0xF4) == 0xD4){
  3319                           
  3320                           ;incstack = 0
  3321                           ; Regs used in _ConfigureShiftRegister: [wreg+status,2+status,0]
  3322  0567  30F4               	movlw	244
  3323  0568  0020               	movlb	0	; select bank0
  3324  0569  0520               	andwf	_Byte1,w
  3325  056A  00F0               	movwf	??_ConfigureShiftRegister
  3326  056B  30D4               	movlw	212
  3327  056C  0670               	xorwf	??_ConfigureShiftRegister,w
  3328  056D  1D03               	btfss	3,2
  3329  056E  2D9C               	goto	l993
  3330                           
  3331                           ;main.c: 228: if ((Byte2 == 2 && Byte3 == 0) || (Byte2 == 5 && Byte3 == 0) || (Byte2 == 
      +                          2 && Byte3 == 5) || (Byte2 = 4 & Byte3 == 5))
  3332  056F  3002               	movlw	2
  3333  0570  067C               	xorwf	_Byte2,w
  3334  0571  1903               	btfsc	3,2
  3335  0572  087D               	movf	_Byte3,w
  3336  0573  1903               	btfsc	3,2
  3337  0574  2D85               	goto	l977
  3338  0575  3005               	movlw	5
  3339  0576  067C               	xorwf	_Byte2,w
  3340  0577  1903               	btfsc	3,2
  3341  0578  087D               	movf	_Byte3,w
  3342  0579  1903               	btfsc	3,2
  3343  057A  2D85               	goto	l977
  3344  057B  3002               	movlw	2
  3345  057C  067C               	xorwf	_Byte2,w
  3346  057D  1D03               	btfss	3,2
  3347  057E  2D83               	goto	l975
  3348  057F  3005               	movlw	5
  3349  0580  067D               	xorwf	_Byte3,w
  3350  0581  1903               	btfsc	3,2
  3351  0582  2D85               	goto	l977
  3352  0583                     l975:	
  3353  0583  01FC               	clrf	_Byte2
  3354  0584  2D87               	goto	l979
  3355  0585                     l977:	
  3356                           
  3357                           ;main.c: 229: ReverseReg = 0x30;
  3358  0585  3030               	movlw	48
  3359  0586  2D9D               	goto	L10
  3360  0587                     l979:	
  3361                           
  3362                           ;main.c: 230: else if ((Byte2 == 12 & Byte3 == 0) || (Byte2 == 13 && Byte3 == 0) || (Byt
      +                          e2 == 29 && Byte3 ==0))
  3363  0587  300C               	movlw	12
  3364  0588  067C               	xorwf	_Byte2,w
  3365  0589  1903               	btfsc	3,2
  3366  058A  087D               	movf	_Byte3,w
  3367  058B  1903               	btfsc	3,2
  3368  058C  2D9A               	goto	l991
  3369  058D  300D               	movlw	13
  3370  058E  067C               	xorwf	_Byte2,w
  3371  058F  1903               	btfsc	3,2
  3372  0590  087D               	movf	_Byte3,w
  3373  0591  1903               	btfsc	3,2
  3374  0592  2D9A               	goto	l991
  3375  0593  301D               	movlw	29
  3376  0594  067C               	xorwf	_Byte2,w
  3377  0595  1D03               	btfss	3,2
  3378  0596  2DA0               	goto	l995
  3379  0597  087D               	movf	_Byte3,w
  3380  0598  1D03               	btfss	3,2
  3381  0599  2DA0               	goto	l995
  3382  059A                     l991:	
  3383                           
  3384                           ;main.c: 231: ReverseReg = 0x10;
  3385  059A  3010               	movlw	16
  3386  059B  2D9D               	goto	L10
  3387  059C                     l993:	
  3388                           ;main.c: 232: }
  3389                           
  3390                           
  3391                           ;main.c: 235: else
  3392                           ;main.c: 236: ReverseReg = 0x90;
  3393  059C  3090               	movlw	144
  3394  059D                     L10:	
  3395  059D  00F0               	movwf	??_ConfigureShiftRegister
  3396  059E  0870               	movf	??_ConfigureShiftRegister,w
  3397  059F  00F2               	movwf	ConfigureShiftRegister@ReverseReg
  3398  05A0                     l995:	
  3399                           
  3400                           ;main.c: 297: LATA4 = 0;
  3401  05A0  0022               	movlb	2	; select bank2
  3402  05A1  120C               	bcf	12,4	;volatile
  3403                           
  3404                           ;main.c: 298: do { LATB6 = 1; } while(0);
  3405  05A2  170D               	bsf	13,6	;volatile
  3406  05A3  0000               	nop	;# 
  3407                           
  3408                           ;main.c: 300: do { LATB6 = 0; } while(0);
  3409  05A4  0022               	movlb	2	; select bank2
  3410  05A5  130D               	bcf	13,6	;volatile
  3411                           
  3412                           ;main.c: 302: for (i=0; i<8; i++) {
  3413  05A6  01F1               	clrf	ConfigureShiftRegister@i
  3414  05A7  3008               	movlw	8
  3415  05A8  0271               	subwf	ConfigureShiftRegister@i,w
  3416  05A9  1803               	btfsc	3,0
  3417  05AA  2DC2               	goto	l177
  3418  05AB                     l176:	
  3419                           
  3420                           ;main.c: 303: LATA4 = ReverseReg & 0x01;
  3421  05AB  1C72               	btfss	ConfigureShiftRegister@ReverseReg,0
  3422  05AC  2DB0               	goto	u790
  3423  05AD  0022               	movlb	2	; select bank2
  3424  05AE  160C               	bsf	12,4	;volatile
  3425  05AF  2DB2               	goto	l178
  3426  05B0                     u790:	
  3427  05B0  0022               	movlb	2	; select bank2
  3428  05B1  120C               	bcf	12,4	;volatile
  3429  05B2                     l178:	
  3430                           ;main.c: 304: do { LATB6 = 1; } while(0);
  3431                           
  3432  05B2  170D               	bsf	13,6	;volatile
  3433  05B3  0000               	nop	;# 
  3434                           
  3435                           ;main.c: 306: do { LATB6 = 0; } while(0);
  3436  05B4  0022               	movlb	2	; select bank2
  3437  05B5  130D               	bcf	13,6	;volatile
  3438                           
  3439                           ;main.c: 307: ReverseReg = ReverseReg >> 1;
  3440  05B6  3672               	lsrf	ConfigureShiftRegister@ReverseReg,w
  3441  05B7  00F0               	movwf	??_ConfigureShiftRegister
  3442  05B8  0870               	movf	??_ConfigureShiftRegister,w
  3443  05B9  00F2               	movwf	ConfigureShiftRegister@ReverseReg
  3444  05BA  3001               	movlw	1
  3445  05BB  00F0               	movwf	??_ConfigureShiftRegister
  3446  05BC  0870               	movf	??_ConfigureShiftRegister,w
  3447  05BD  07F1               	addwf	ConfigureShiftRegister@i,f
  3448  05BE  3008               	movlw	8
  3449  05BF  0271               	subwf	ConfigureShiftRegister@i,w
  3450  05C0  1C03               	skipc
  3451  05C1  2DAB               	goto	l176
  3452  05C2                     l177:	
  3453                           
  3454                           ;main.c: 308: }
  3455                           ;main.c: 311: LATA4 = 0;
  3456  05C2  120C               	bcf	12,4	;volatile
  3457                           
  3458                           ;main.c: 312: do { LATB6 = 1; } while(0);
  3459  05C3  170D               	bsf	13,6	;volatile
  3460  05C4  0000               	nop	;# 
  3461                           
  3462                           ;main.c: 314: do { LATB6 = 0; } while(0);
  3463  05C5  0022               	movlb	2	; select bank2
  3464  05C6  130D               	bcf	13,6	;volatile
  3465  05C7  0008               	return
  3466  05C8                     __end_of_ConfigureShiftRegister:	
  3467  007E                     btemp	set	126	;btemp
  3468  007E                     wtemp	set	126
  3469  007E                     wtemp0	set	126
  3470  0080                     wtemp1	set	128
  3471  0082                     wtemp2	set	130
  3472  0084                     wtemp3	set	132
  3473  0086                     wtemp4	set	134
  3474  0088                     wtemp5	set	136
  3475  007F                     wtemp6	set	127
  3476  007E                     ttemp	set	126
  3477  007E                     ttemp0	set	126
  3478  0081                     ttemp1	set	129
  3479  0084                     ttemp2	set	132
  3480  0087                     ttemp3	set	135
  3481  007F                     ttemp4	set	127
  3482  007E                     ltemp	set	126
  3483  007E                     ltemp0	set	126
  3484  0082                     ltemp1	set	130
  3485  0086                     ltemp2	set	134
  3486  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    202
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80      3       8
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_MIPI
    _MIPI->_shiftRegister

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3596
                                              0 BANK0      3     3      0
             _ConfigureShiftRegister
                    _DAC1_Initialize
                     _DAC1_SetOutput
                               _MIPI
             _PIN_MANAGER_Initialize
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _DAC1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DAC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MIPI                                                 7     4      3    3480
                                              5 COMMON     7     4      3
                      _shiftRegister
 ---------------------------------------------------------------------------------
 (2) _shiftRegister                                        5     3      2    1832
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _DAC1_SetOutput                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureShiftRegister                               3     3      0      94
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureShiftRegister
   _DAC1_Initialize
   _DAC1_SetOutput
   _MIPI
     _shiftRegister
   _PIN_MANAGER_Initialize
   _SYSTEM_Initialize
     _DAC1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      16       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      3       8       6       10.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      16      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Mon Feb 15 11:15:37 2016

                     __CFG_CP$OFF 0000                       __CFG_LVP$ON 0000                   _DAC1_Initialize 0511  
                             l221 063D                               l224 063F                               l227 0641  
                             l176 05AB                               l177 05C2                               l178 05B2  
                             l931 0720                               l909 0543                               l955 07BB  
                             l949 0786                               l991 059A                               l975 0583  
                             l977 0585                               l993 059C                               l995 05A0  
                             l979 0587                               l899 0550                               u550 054E  
                             u570 0555                               u584 0557                               u790 05B0  
  __end_of_ConfigureShiftRegister 05C8                      __CFG_BORV$LO 0000                    _DAC1_SetOutput 050C  
                    __CFG_ZCD$OFF 0000                              l1021 05DA                              l1025 05E6  
                            l1051 0644                              l1043 061E                              l1029 05F2  
                            l1063 066C                              l1039 060E                              l1081 06A1  
                            l1057 0656                              l1075 0691                              l1093 06C1  
                            l1069 067E                              l1087 06B1                              _DATA 0800  
                            _LATA 010C                              _LATB 010D                              _LATC 010E  
                            _MIPI 06D0                              _WPUB 020D                              _WPUC 020E  
                    __CFG_WRT$OFF 0000                              _main 05C8                              fsr0h 0005  
                            fsr0l 0004                              indf0 0000                              btemp 007E  
                            ltemp 007E                              start 0002                              ttemp 007E  
                            wtemp 007E                             ?_MIPI 0075                             MIPI@a 007A  
                           MIPI@b 0075                             MIPI@c 0076                             MIPI@d 0077  
                           MIPI@i 007B    __size_of_OSCILLATOR_Initialize 0006     __end_of_OSCILLATOR_Initialize 051C  
                           ?_main 0070                     __CFG_WDTE$OFF 0000                             _LATA1 0861  
                           _LATA2 0862                             _LATA4 0864                             _LATB4 086C  
                           _LATB5 086D                             _LATB6 086E                             _LATB7 086F  
          __end_of_DAC1_SetOutput 0511                             _PORTC 000E                             _TRISA 008C  
                           _TRISB 008D                             _TRISC 008E                  __end_of_SLAVEADD 08CA  
                           _Byte1 0020                             _Byte2 007C                             _Byte3 007D  
                   __CFG_PWRTE$ON 0000                    __CFG_BOREN$OFF 0000                             ltemp0 007E  
                           ltemp1 0082                             ltemp2 0086                             ltemp3 0080  
                           ttemp0 007E                             ttemp1 0081                             ttemp2 0084  
                           ttemp3 0087                             ttemp4 007F                             status 0003  
                           wtemp0 007E                             wtemp1 0080                             wtemp2 0082  
                           wtemp3 0084                             wtemp4 0086                             wtemp5 0088  
                           wtemp6 007F                      __end_of_DATA 0841                      __end_of_MIPI 07F6  
                  __CFG_MCLRE$OFF 0000                   __initialization 07F6                      __end_of_main 06D0  
         __end_of_DAC1_Initialize 0516                            ??_MIPI 0078                    __CFG_LPBOR$OFF 0000  
                          ??_main 0025                   ?_DAC1_SetOutput 0070                    __CFG_PLLEN$OFF 0000  
                          _ANSELA 018C                            _ANSELB 018D                            _ANSELC 018E  
                          _REGADD 08C6                            _PARITY 0841                            _OSCCON 0099  
         DAC1_SetOutput@inputData 0070                    __CFG_STVREN$ON 0000                __end_of_ACTIVEBAND 08C2  
               __end_of_DacOutput 08C6             __end_of_shiftRegister 0567                 _SYSTEM_Initialize 051C  
         __end_of__initialization 07FD                ?_SYSTEM_Initialize 0070                    __pcstackCOMMON 0070  
             ??_SYSTEM_Initialize 0070                  ?_DAC1_Initialize 0070                    _OPTION_REGbits 0095  
       __end_of_SYSTEM_Initialize 0525                        __pbssBANK0 0020                    shiftRegister@m 0073  
                  shiftRegister@y 0071                        __pmaintext 05C8                   __CFG_PPS1WAY$ON 0000  
                 __CFG_WDTCCS$SWC 0000                           _OSCSTAT 009A                           _OSCTUNE 0098  
             shiftRegister@Dummy1 0074               shiftRegister@Dummy2 0070                  ??_DAC1_SetOutput 0070  
         ConfigureShiftRegister@i 0071                           __ptext1 051C                           __ptext2 0525  
                         __ptext3 0516                           __ptext4 0511                           __ptext5 06D0  
                         __ptext6 0541                           __ptext7 050C                           __ptext8 0567  
           _OSCILLATOR_Initialize 0516                           _parity1 0021                           _parity2 0022  
                         _parity3 0023                           _parity4 0024          ??_PIN_MANAGER_Initialize 0070  
      __size_of_SYSTEM_Initialize 0009              end_of_initialization 07FD                      __pstringtext 0800  
        ??_ConfigureShiftRegister 0070                  __CFG_FOSC$INTOSC 0000                         _DacOutput 08C2  
                  __end_of_REGADD 08C8                    __end_of_PARITY 0882            ?_OSCILLATOR_Initialize 0070  
             start_initialization 07F6   __size_of_PIN_MANAGER_Initialize 001C            __size_of_shiftRegister 0026  
 __size_of_ConfigureShiftRegister 0061          __size_of_DAC1_Initialize 0005                       __pbssCOMMON 007C  
                       ___latbits 0001                     __pcstackBANK0 0025            _PIN_MANAGER_Initialize 0525  
                        _DAC1CON0 0118                          _DAC1CON1 0119                     _shiftRegister 0541  
          _ConfigureShiftRegister 0567                          _SLAVEADD 08C8              __CFG_WDTCPS$WDTCPS1F 0000  
                  ?_shiftRegister 0070                 ??_DAC1_Initialize 0070                        _ACTIVEBAND 0882  
         ??_OSCILLATOR_Initialize 0070           __size_of_DAC1_SetOutput 0005                     __size_of_MIPI 0126  
                   __size_of_main 0108              __CFG_WDTCWS$WDTCWSSW 0000  ConfigureShiftRegister@ReverseReg 0072  
                 ??_shiftRegister 0072           ?_PIN_MANAGER_Initialize 0070                 __CFG_CLKOUTEN$OFF 0000  
         ?_ConfigureShiftRegister 0070    __end_of_PIN_MANAGER_Initialize 0541  
