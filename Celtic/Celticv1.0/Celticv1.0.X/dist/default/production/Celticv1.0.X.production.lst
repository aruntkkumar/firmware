

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Wed Dec 23 12:35:30 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16LF1618
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	dabs	1,0x7E,2
    21  0000                     	;# 
    22  0001                     	;# 
    23  0002                     	;# 
    24  0003                     	;# 
    25  0004                     	;# 
    26  0005                     	;# 
    27  0006                     	;# 
    28  0007                     	;# 
    29  0008                     	;# 
    30  0009                     	;# 
    31  000A                     	;# 
    32  000B                     	;# 
    33  000C                     	;# 
    34  000D                     	;# 
    35  000E                     	;# 
    36  0010                     	;# 
    37  0011                     	;# 
    38  0012                     	;# 
    39  0013                     	;# 
    40  0014                     	;# 
    41  0015                     	;# 
    42  0016                     	;# 
    43  0016                     	;# 
    44  0017                     	;# 
    45  0018                     	;# 
    46  0019                     	;# 
    47  001A                     	;# 
    48  001A                     	;# 
    49  001B                     	;# 
    50  001B                     	;# 
    51  001C                     	;# 
    52  001D                     	;# 
    53  001E                     	;# 
    54  001F                     	;# 
    55  008C                     	;# 
    56  008D                     	;# 
    57  008E                     	;# 
    58  0090                     	;# 
    59  0091                     	;# 
    60  0092                     	;# 
    61  0093                     	;# 
    62  0094                     	;# 
    63  0095                     	;# 
    64  0096                     	;# 
    65  0098                     	;# 
    66  0099                     	;# 
    67  009A                     	;# 
    68  009B                     	;# 
    69  009B                     	;# 
    70  009C                     	;# 
    71  009D                     	;# 
    72  009E                     	;# 
    73  009F                     	;# 
    74  010C                     	;# 
    75  010D                     	;# 
    76  010E                     	;# 
    77  0111                     	;# 
    78  0112                     	;# 
    79  0113                     	;# 
    80  0114                     	;# 
    81  0115                     	;# 
    82  0116                     	;# 
    83  0117                     	;# 
    84  0118                     	;# 
    85  0119                     	;# 
    86  011C                     	;# 
    87  018C                     	;# 
    88  018D                     	;# 
    89  018E                     	;# 
    90  0191                     	;# 
    91  0191                     	;# 
    92  0192                     	;# 
    93  0193                     	;# 
    94  0193                     	;# 
    95  0194                     	;# 
    96  0195                     	;# 
    97  0196                     	;# 
    98  0199                     	;# 
    99  0199                     	;# 
   100  0199                     	;# 
   101  019A                     	;# 
   102  019A                     	;# 
   103  019A                     	;# 
   104  019B                     	;# 
   105  019B                     	;# 
   106  019B                     	;# 
   107  019B                     	;# 
   108  019B                     	;# 
   109  019C                     	;# 
   110  019C                     	;# 
   111  019C                     	;# 
   112  019D                     	;# 
   113  019D                     	;# 
   114  019D                     	;# 
   115  019E                     	;# 
   116  019E                     	;# 
   117  019E                     	;# 
   118  019F                     	;# 
   119  019F                     	;# 
   120  019F                     	;# 
   121  019F                     	;# 
   122  019F                     	;# 
   123  020C                     	;# 
   124  020D                     	;# 
   125  020E                     	;# 
   126  0211                     	;# 
   127  0211                     	;# 
   128  0212                     	;# 
   129  0212                     	;# 
   130  0213                     	;# 
   131  0213                     	;# 
   132  0214                     	;# 
   133  0214                     	;# 
   134  0215                     	;# 
   135  0215                     	;# 
   136  0215                     	;# 
   137  0215                     	;# 
   138  0216                     	;# 
   139  0216                     	;# 
   140  0217                     	;# 
   141  0217                     	;# 
   142  028C                     	;# 
   143  028D                     	;# 
   144  028E                     	;# 
   145  0291                     	;# 
   146  0291                     	;# 
   147  0292                     	;# 
   148  0293                     	;# 
   149  0294                     	;# 
   150  0298                     	;# 
   151  0298                     	;# 
   152  0299                     	;# 
   153  029A                     	;# 
   154  029B                     	;# 
   155  029E                     	;# 
   156  030C                     	;# 
   157  030D                     	;# 
   158  030E                     	;# 
   159  038C                     	;# 
   160  038D                     	;# 
   161  038E                     	;# 
   162  0391                     	;# 
   163  0392                     	;# 
   164  0393                     	;# 
   165  0394                     	;# 
   166  0395                     	;# 
   167  0396                     	;# 
   168  0397                     	;# 
   169  0398                     	;# 
   170  0399                     	;# 
   171  040E                     	;# 
   172  0413                     	;# 
   173  0413                     	;# 
   174  0414                     	;# 
   175  0414                     	;# 
   176  0415                     	;# 
   177  0416                     	;# 
   178  0417                     	;# 
   179  0418                     	;# 
   180  041A                     	;# 
   181  041A                     	;# 
   182  041B                     	;# 
   183  041B                     	;# 
   184  041C                     	;# 
   185  041D                     	;# 
   186  041E                     	;# 
   187  041F                     	;# 
   188  0493                     	;# 
   189  0494                     	;# 
   190  0495                     	;# 
   191  0496                     	;# 
   192  049A                     	;# 
   193  049B                     	;# 
   194  049C                     	;# 
   195  049D                     	;# 
   196  058C                     	;# 
   197  058C                     	;# 
   198  058D                     	;# 
   199  058E                     	;# 
   200  058E                     	;# 
   201  058F                     	;# 
   202  0590                     	;# 
   203  0590                     	;# 
   204  0591                     	;# 
   205  0592                     	;# 
   206  0592                     	;# 
   207  0593                     	;# 
   208  0594                     	;# 
   209  0594                     	;# 
   210  0595                     	;# 
   211  0596                     	;# 
   212  0596                     	;# 
   213  0597                     	;# 
   214  0598                     	;# 
   215  0599                     	;# 
   216  059A                     	;# 
   217  059B                     	;# 
   218  059B                     	;# 
   219  059C                     	;# 
   220  059D                     	;# 
   221  060C                     	;# 
   222  060C                     	;# 
   223  060D                     	;# 
   224  060E                     	;# 
   225  060F                     	;# 
   226  060F                     	;# 
   227  0610                     	;# 
   228  0611                     	;# 
   229  0612                     	;# 
   230  0613                     	;# 
   231  0614                     	;# 
   232  0617                     	;# 
   233  0618                     	;# 
   234  0619                     	;# 
   235  061A                     	;# 
   236  061B                     	;# 
   237  061C                     	;# 
   238  0691                     	;# 
   239  0692                     	;# 
   240  0693                     	;# 
   241  0694                     	;# 
   242  0695                     	;# 
   243  0696                     	;# 
   244  0697                     	;# 
   245  0699                     	;# 
   246  069A                     	;# 
   247  0711                     	;# 
   248  0712                     	;# 
   249  0713                     	;# 
   250  0714                     	;# 
   251  0715                     	;# 
   252  0718                     	;# 
   253  0718                     	;# 
   254  0719                     	;# 
   255  071A                     	;# 
   256  071A                     	;# 
   257  071B                     	;# 
   258  071C                     	;# 
   259  071D                     	;# 
   260  0791                     	;# 
   261  0791                     	;# 
   262  0792                     	;# 
   263  0793                     	;# 
   264  0793                     	;# 
   265  0794                     	;# 
   266  0795                     	;# 
   267  0795                     	;# 
   268  0796                     	;# 
   269  0797                     	;# 
   270  0797                     	;# 
   271  0798                     	;# 
   272  0799                     	;# 
   273  079A                     	;# 
   274  080C                     	;# 
   275  080C                     	;# 
   276  080D                     	;# 
   277  080E                     	;# 
   278  080E                     	;# 
   279  080F                     	;# 
   280  0810                     	;# 
   281  0810                     	;# 
   282  0811                     	;# 
   283  0812                     	;# 
   284  0812                     	;# 
   285  0813                     	;# 
   286  0814                     	;# 
   287  0815                     	;# 
   288  0816                     	;# 
   289  0817                     	;# 
   290  0818                     	;# 
   291  0819                     	;# 
   292  081A                     	;# 
   293  081A                     	;# 
   294  081B                     	;# 
   295  081C                     	;# 
   296  081C                     	;# 
   297  081D                     	;# 
   298  088C                     	;# 
   299  088D                     	;# 
   300  088E                     	;# 
   301  088F                     	;# 
   302  088F                     	;# 
   303  0890                     	;# 
   304  0891                     	;# 
   305  0892                     	;# 
   306  0893                     	;# 
   307  0893                     	;# 
   308  0894                     	;# 
   309  0895                     	;# 
   310  0896                     	;# 
   311  0897                     	;# 
   312  0897                     	;# 
   313  0898                     	;# 
   314  0899                     	;# 
   315  0D8C                     	;# 
   316  0D8C                     	;# 
   317  0D8D                     	;# 
   318  0D8E                     	;# 
   319  0D8F                     	;# 
   320  0D8F                     	;# 
   321  0D90                     	;# 
   322  0D91                     	;# 
   323  0D92                     	;# 
   324  0D92                     	;# 
   325  0D93                     	;# 
   326  0D94                     	;# 
   327  0D95                     	;# 
   328  0D95                     	;# 
   329  0D96                     	;# 
   330  0D97                     	;# 
   331  0D98                     	;# 
   332  0D99                     	;# 
   333  0D9A                     	;# 
   334  0D9B                     	;# 
   335  0D9C                     	;# 
   336  0D9D                     	;# 
   337  0D9E                     	;# 
   338  0D9E                     	;# 
   339  0D9F                     	;# 
   340  0DA0                     	;# 
   341  0DA1                     	;# 
   342  0DA1                     	;# 
   343  0DA2                     	;# 
   344  0DA3                     	;# 
   345  0DA4                     	;# 
   346  0DA4                     	;# 
   347  0DA5                     	;# 
   348  0DA6                     	;# 
   349  0DA7                     	;# 
   350  0DA7                     	;# 
   351  0DA8                     	;# 
   352  0DA9                     	;# 
   353  0DAA                     	;# 
   354  0DAB                     	;# 
   355  0DAC                     	;# 
   356  0DAD                     	;# 
   357  0DAE                     	;# 
   358  0DAF                     	;# 
   359  0E0F                     	;# 
   360  0E10                     	;# 
   361  0E11                     	;# 
   362  0E12                     	;# 
   363  0E13                     	;# 
   364  0E14                     	;# 
   365  0E15                     	;# 
   366  0E16                     	;# 
   367  0E17                     	;# 
   368  0E18                     	;# 
   369  0E19                     	;# 
   370  0E1A                     	;# 
   371  0E1B                     	;# 
   372  0E1C                     	;# 
   373  0E1D                     	;# 
   374  0E1E                     	;# 
   375  0E1F                     	;# 
   376  0E20                     	;# 
   377  0E21                     	;# 
   378  0E22                     	;# 
   379  0E23                     	;# 
   380  0E24                     	;# 
   381  0E25                     	;# 
   382  0E26                     	;# 
   383  0E27                     	;# 
   384  0E28                     	;# 
   385  0E29                     	;# 
   386  0E2A                     	;# 
   387  0E2B                     	;# 
   388  0E2C                     	;# 
   389  0E2D                     	;# 
   390  0E2E                     	;# 
   391  0E90                     	;# 
   392  0E91                     	;# 
   393  0E92                     	;# 
   394  0E94                     	;# 
   395  0E95                     	;# 
   396  0E9C                     	;# 
   397  0E9D                     	;# 
   398  0E9E                     	;# 
   399  0E9F                     	;# 
   400  0EA0                     	;# 
   401  0EA1                     	;# 
   402  0EA2                     	;# 
   403  0EA3                     	;# 
   404  0EA4                     	;# 
   405  0EA5                     	;# 
   406  0EA6                     	;# 
   407  0EA7                     	;# 
   408  0F0F                     	;# 
   409  0F10                     	;# 
   410  0F11                     	;# 
   411  0F12                     	;# 
   412  0F13                     	;# 
   413  0F14                     	;# 
   414  0F15                     	;# 
   415  0F16                     	;# 
   416  0F17                     	;# 
   417  0F18                     	;# 
   418  0F19                     	;# 
   419  0F1A                     	;# 
   420  0F1B                     	;# 
   421  0F1C                     	;# 
   422  0F1D                     	;# 
   423  0F1E                     	;# 
   424  0F1F                     	;# 
   425  0F20                     	;# 
   426  0F21                     	;# 
   427  0F22                     	;# 
   428  0F23                     	;# 
   429  0FE4                     	;# 
   430  0FE5                     	;# 
   431  0FE6                     	;# 
   432  0FE7                     	;# 
   433  0FE8                     	;# 
   434  0FE9                     	;# 
   435  0FEA                     	;# 
   436  0FEB                     	;# 
   437  0FED                     	;# 
   438  0FEE                     	;# 
   439  0FEF                     	;# 
   440  0000                     	;# 
   441  0001                     	;# 
   442  0002                     	;# 
   443  0003                     	;# 
   444  0004                     	;# 
   445  0005                     	;# 
   446  0006                     	;# 
   447  0007                     	;# 
   448  0008                     	;# 
   449  0009                     	;# 
   450  000A                     	;# 
   451  000B                     	;# 
   452  000C                     	;# 
   453  000D                     	;# 
   454  000E                     	;# 
   455  0010                     	;# 
   456  0011                     	;# 
   457  0012                     	;# 
   458  0013                     	;# 
   459  0014                     	;# 
   460  0015                     	;# 
   461  0016                     	;# 
   462  0016                     	;# 
   463  0017                     	;# 
   464  0018                     	;# 
   465  0019                     	;# 
   466  001A                     	;# 
   467  001A                     	;# 
   468  001B                     	;# 
   469  001B                     	;# 
   470  001C                     	;# 
   471  001D                     	;# 
   472  001E                     	;# 
   473  001F                     	;# 
   474  008C                     	;# 
   475  008D                     	;# 
   476  008E                     	;# 
   477  0090                     	;# 
   478  0091                     	;# 
   479  0092                     	;# 
   480  0093                     	;# 
   481  0094                     	;# 
   482  0095                     	;# 
   483  0096                     	;# 
   484  0098                     	;# 
   485  0099                     	;# 
   486  009A                     	;# 
   487  009B                     	;# 
   488  009B                     	;# 
   489  009C                     	;# 
   490  009D                     	;# 
   491  009E                     	;# 
   492  009F                     	;# 
   493  010C                     	;# 
   494  010D                     	;# 
   495  010E                     	;# 
   496  0111                     	;# 
   497  0112                     	;# 
   498  0113                     	;# 
   499  0114                     	;# 
   500  0115                     	;# 
   501  0116                     	;# 
   502  0117                     	;# 
   503  0118                     	;# 
   504  0119                     	;# 
   505  011C                     	;# 
   506  018C                     	;# 
   507  018D                     	;# 
   508  018E                     	;# 
   509  0191                     	;# 
   510  0191                     	;# 
   511  0192                     	;# 
   512  0193                     	;# 
   513  0193                     	;# 
   514  0194                     	;# 
   515  0195                     	;# 
   516  0196                     	;# 
   517  0199                     	;# 
   518  0199                     	;# 
   519  0199                     	;# 
   520  019A                     	;# 
   521  019A                     	;# 
   522  019A                     	;# 
   523  019B                     	;# 
   524  019B                     	;# 
   525  019B                     	;# 
   526  019B                     	;# 
   527  019B                     	;# 
   528  019C                     	;# 
   529  019C                     	;# 
   530  019C                     	;# 
   531  019D                     	;# 
   532  019D                     	;# 
   533  019D                     	;# 
   534  019E                     	;# 
   535  019E                     	;# 
   536  019E                     	;# 
   537  019F                     	;# 
   538  019F                     	;# 
   539  019F                     	;# 
   540  019F                     	;# 
   541  019F                     	;# 
   542  020C                     	;# 
   543  020D                     	;# 
   544  020E                     	;# 
   545  0211                     	;# 
   546  0211                     	;# 
   547  0212                     	;# 
   548  0212                     	;# 
   549  0213                     	;# 
   550  0213                     	;# 
   551  0214                     	;# 
   552  0214                     	;# 
   553  0215                     	;# 
   554  0215                     	;# 
   555  0215                     	;# 
   556  0215                     	;# 
   557  0216                     	;# 
   558  0216                     	;# 
   559  0217                     	;# 
   560  0217                     	;# 
   561  028C                     	;# 
   562  028D                     	;# 
   563  028E                     	;# 
   564  0291                     	;# 
   565  0291                     	;# 
   566  0292                     	;# 
   567  0293                     	;# 
   568  0294                     	;# 
   569  0298                     	;# 
   570  0298                     	;# 
   571  0299                     	;# 
   572  029A                     	;# 
   573  029B                     	;# 
   574  029E                     	;# 
   575  030C                     	;# 
   576  030D                     	;# 
   577  030E                     	;# 
   578  038C                     	;# 
   579  038D                     	;# 
   580  038E                     	;# 
   581  0391                     	;# 
   582  0392                     	;# 
   583  0393                     	;# 
   584  0394                     	;# 
   585  0395                     	;# 
   586  0396                     	;# 
   587  0397                     	;# 
   588  0398                     	;# 
   589  0399                     	;# 
   590  040E                     	;# 
   591  0413                     	;# 
   592  0413                     	;# 
   593  0414                     	;# 
   594  0414                     	;# 
   595  0415                     	;# 
   596  0416                     	;# 
   597  0417                     	;# 
   598  0418                     	;# 
   599  041A                     	;# 
   600  041A                     	;# 
   601  041B                     	;# 
   602  041B                     	;# 
   603  041C                     	;# 
   604  041D                     	;# 
   605  041E                     	;# 
   606  041F                     	;# 
   607  0493                     	;# 
   608  0494                     	;# 
   609  0495                     	;# 
   610  0496                     	;# 
   611  049A                     	;# 
   612  049B                     	;# 
   613  049C                     	;# 
   614  049D                     	;# 
   615  058C                     	;# 
   616  058C                     	;# 
   617  058D                     	;# 
   618  058E                     	;# 
   619  058E                     	;# 
   620  058F                     	;# 
   621  0590                     	;# 
   622  0590                     	;# 
   623  0591                     	;# 
   624  0592                     	;# 
   625  0592                     	;# 
   626  0593                     	;# 
   627  0594                     	;# 
   628  0594                     	;# 
   629  0595                     	;# 
   630  0596                     	;# 
   631  0596                     	;# 
   632  0597                     	;# 
   633  0598                     	;# 
   634  0599                     	;# 
   635  059A                     	;# 
   636  059B                     	;# 
   637  059B                     	;# 
   638  059C                     	;# 
   639  059D                     	;# 
   640  060C                     	;# 
   641  060C                     	;# 
   642  060D                     	;# 
   643  060E                     	;# 
   644  060F                     	;# 
   645  060F                     	;# 
   646  0610                     	;# 
   647  0611                     	;# 
   648  0612                     	;# 
   649  0613                     	;# 
   650  0614                     	;# 
   651  0617                     	;# 
   652  0618                     	;# 
   653  0619                     	;# 
   654  061A                     	;# 
   655  061B                     	;# 
   656  061C                     	;# 
   657  0691                     	;# 
   658  0692                     	;# 
   659  0693                     	;# 
   660  0694                     	;# 
   661  0695                     	;# 
   662  0696                     	;# 
   663  0697                     	;# 
   664  0699                     	;# 
   665  069A                     	;# 
   666  0711                     	;# 
   667  0712                     	;# 
   668  0713                     	;# 
   669  0714                     	;# 
   670  0715                     	;# 
   671  0718                     	;# 
   672  0718                     	;# 
   673  0719                     	;# 
   674  071A                     	;# 
   675  071A                     	;# 
   676  071B                     	;# 
   677  071C                     	;# 
   678  071D                     	;# 
   679  0791                     	;# 
   680  0791                     	;# 
   681  0792                     	;# 
   682  0793                     	;# 
   683  0793                     	;# 
   684  0794                     	;# 
   685  0795                     	;# 
   686  0795                     	;# 
   687  0796                     	;# 
   688  0797                     	;# 
   689  0797                     	;# 
   690  0798                     	;# 
   691  0799                     	;# 
   692  079A                     	;# 
   693  080C                     	;# 
   694  080C                     	;# 
   695  080D                     	;# 
   696  080E                     	;# 
   697  080E                     	;# 
   698  080F                     	;# 
   699  0810                     	;# 
   700  0810                     	;# 
   701  0811                     	;# 
   702  0812                     	;# 
   703  0812                     	;# 
   704  0813                     	;# 
   705  0814                     	;# 
   706  0815                     	;# 
   707  0816                     	;# 
   708  0817                     	;# 
   709  0818                     	;# 
   710  0819                     	;# 
   711  081A                     	;# 
   712  081A                     	;# 
   713  081B                     	;# 
   714  081C                     	;# 
   715  081C                     	;# 
   716  081D                     	;# 
   717  088C                     	;# 
   718  088D                     	;# 
   719  088E                     	;# 
   720  088F                     	;# 
   721  088F                     	;# 
   722  0890                     	;# 
   723  0891                     	;# 
   724  0892                     	;# 
   725  0893                     	;# 
   726  0893                     	;# 
   727  0894                     	;# 
   728  0895                     	;# 
   729  0896                     	;# 
   730  0897                     	;# 
   731  0897                     	;# 
   732  0898                     	;# 
   733  0899                     	;# 
   734  0D8C                     	;# 
   735  0D8C                     	;# 
   736  0D8D                     	;# 
   737  0D8E                     	;# 
   738  0D8F                     	;# 
   739  0D8F                     	;# 
   740  0D90                     	;# 
   741  0D91                     	;# 
   742  0D92                     	;# 
   743  0D92                     	;# 
   744  0D93                     	;# 
   745  0D94                     	;# 
   746  0D95                     	;# 
   747  0D95                     	;# 
   748  0D96                     	;# 
   749  0D97                     	;# 
   750  0D98                     	;# 
   751  0D99                     	;# 
   752  0D9A                     	;# 
   753  0D9B                     	;# 
   754  0D9C                     	;# 
   755  0D9D                     	;# 
   756  0D9E                     	;# 
   757  0D9E                     	;# 
   758  0D9F                     	;# 
   759  0DA0                     	;# 
   760  0DA1                     	;# 
   761  0DA1                     	;# 
   762  0DA2                     	;# 
   763  0DA3                     	;# 
   764  0DA4                     	;# 
   765  0DA4                     	;# 
   766  0DA5                     	;# 
   767  0DA6                     	;# 
   768  0DA7                     	;# 
   769  0DA7                     	;# 
   770  0DA8                     	;# 
   771  0DA9                     	;# 
   772  0DAA                     	;# 
   773  0DAB                     	;# 
   774  0DAC                     	;# 
   775  0DAD                     	;# 
   776  0DAE                     	;# 
   777  0DAF                     	;# 
   778  0E0F                     	;# 
   779  0E10                     	;# 
   780  0E11                     	;# 
   781  0E12                     	;# 
   782  0E13                     	;# 
   783  0E14                     	;# 
   784  0E15                     	;# 
   785  0E16                     	;# 
   786  0E17                     	;# 
   787  0E18                     	;# 
   788  0E19                     	;# 
   789  0E1A                     	;# 
   790  0E1B                     	;# 
   791  0E1C                     	;# 
   792  0E1D                     	;# 
   793  0E1E                     	;# 
   794  0E1F                     	;# 
   795  0E20                     	;# 
   796  0E21                     	;# 
   797  0E22                     	;# 
   798  0E23                     	;# 
   799  0E24                     	;# 
   800  0E25                     	;# 
   801  0E26                     	;# 
   802  0E27                     	;# 
   803  0E28                     	;# 
   804  0E29                     	;# 
   805  0E2A                     	;# 
   806  0E2B                     	;# 
   807  0E2C                     	;# 
   808  0E2D                     	;# 
   809  0E2E                     	;# 
   810  0E90                     	;# 
   811  0E91                     	;# 
   812  0E92                     	;# 
   813  0E94                     	;# 
   814  0E95                     	;# 
   815  0E9C                     	;# 
   816  0E9D                     	;# 
   817  0E9E                     	;# 
   818  0E9F                     	;# 
   819  0EA0                     	;# 
   820  0EA1                     	;# 
   821  0EA2                     	;# 
   822  0EA3                     	;# 
   823  0EA4                     	;# 
   824  0EA5                     	;# 
   825  0EA6                     	;# 
   826  0EA7                     	;# 
   827  0F0F                     	;# 
   828  0F10                     	;# 
   829  0F11                     	;# 
   830  0F12                     	;# 
   831  0F13                     	;# 
   832  0F14                     	;# 
   833  0F15                     	;# 
   834  0F16                     	;# 
   835  0F17                     	;# 
   836  0F18                     	;# 
   837  0F19                     	;# 
   838  0F1A                     	;# 
   839  0F1B                     	;# 
   840  0F1C                     	;# 
   841  0F1D                     	;# 
   842  0F1E                     	;# 
   843  0F1F                     	;# 
   844  0F20                     	;# 
   845  0F21                     	;# 
   846  0F22                     	;# 
   847  0F23                     	;# 
   848  0FE4                     	;# 
   849  0FE5                     	;# 
   850  0FE6                     	;# 
   851  0FE7                     	;# 
   852  0FE8                     	;# 
   853  0FE9                     	;# 
   854  0FEA                     	;# 
   855  0FEB                     	;# 
   856  0FED                     	;# 
   857  0FEE                     	;# 
   858  0FEF                     	;# 
   859  0000                     	;# 
   860  0001                     	;# 
   861  0002                     	;# 
   862  0003                     	;# 
   863  0004                     	;# 
   864  0005                     	;# 
   865  0006                     	;# 
   866  0007                     	;# 
   867  0008                     	;# 
   868  0009                     	;# 
   869  000A                     	;# 
   870  000B                     	;# 
   871  000C                     	;# 
   872  000D                     	;# 
   873  000E                     	;# 
   874  0010                     	;# 
   875  0011                     	;# 
   876  0012                     	;# 
   877  0013                     	;# 
   878  0014                     	;# 
   879  0015                     	;# 
   880  0016                     	;# 
   881  0016                     	;# 
   882  0017                     	;# 
   883  0018                     	;# 
   884  0019                     	;# 
   885  001A                     	;# 
   886  001A                     	;# 
   887  001B                     	;# 
   888  001B                     	;# 
   889  001C                     	;# 
   890  001D                     	;# 
   891  001E                     	;# 
   892  001F                     	;# 
   893  008C                     	;# 
   894  008D                     	;# 
   895  008E                     	;# 
   896  0090                     	;# 
   897  0091                     	;# 
   898  0092                     	;# 
   899  0093                     	;# 
   900  0094                     	;# 
   901  0095                     	;# 
   902  0096                     	;# 
   903  0098                     	;# 
   904  0099                     	;# 
   905  009A                     	;# 
   906  009B                     	;# 
   907  009B                     	;# 
   908  009C                     	;# 
   909  009D                     	;# 
   910  009E                     	;# 
   911  009F                     	;# 
   912  010C                     	;# 
   913  010D                     	;# 
   914  010E                     	;# 
   915  0111                     	;# 
   916  0112                     	;# 
   917  0113                     	;# 
   918  0114                     	;# 
   919  0115                     	;# 
   920  0116                     	;# 
   921  0117                     	;# 
   922  0118                     	;# 
   923  0119                     	;# 
   924  011C                     	;# 
   925  018C                     	;# 
   926  018D                     	;# 
   927  018E                     	;# 
   928  0191                     	;# 
   929  0191                     	;# 
   930  0192                     	;# 
   931  0193                     	;# 
   932  0193                     	;# 
   933  0194                     	;# 
   934  0195                     	;# 
   935  0196                     	;# 
   936  0199                     	;# 
   937  0199                     	;# 
   938  0199                     	;# 
   939  019A                     	;# 
   940  019A                     	;# 
   941  019A                     	;# 
   942  019B                     	;# 
   943  019B                     	;# 
   944  019B                     	;# 
   945  019B                     	;# 
   946  019B                     	;# 
   947  019C                     	;# 
   948  019C                     	;# 
   949  019C                     	;# 
   950  019D                     	;# 
   951  019D                     	;# 
   952  019D                     	;# 
   953  019E                     	;# 
   954  019E                     	;# 
   955  019E                     	;# 
   956  019F                     	;# 
   957  019F                     	;# 
   958  019F                     	;# 
   959  019F                     	;# 
   960  019F                     	;# 
   961  020C                     	;# 
   962  020D                     	;# 
   963  020E                     	;# 
   964  0211                     	;# 
   965  0211                     	;# 
   966  0212                     	;# 
   967  0212                     	;# 
   968  0213                     	;# 
   969  0213                     	;# 
   970  0214                     	;# 
   971  0214                     	;# 
   972  0215                     	;# 
   973  0215                     	;# 
   974  0215                     	;# 
   975  0215                     	;# 
   976  0216                     	;# 
   977  0216                     	;# 
   978  0217                     	;# 
   979  0217                     	;# 
   980  028C                     	;# 
   981  028D                     	;# 
   982  028E                     	;# 
   983  0291                     	;# 
   984  0291                     	;# 
   985  0292                     	;# 
   986  0293                     	;# 
   987  0294                     	;# 
   988  0298                     	;# 
   989  0298                     	;# 
   990  0299                     	;# 
   991  029A                     	;# 
   992  029B                     	;# 
   993  029E                     	;# 
   994  030C                     	;# 
   995  030D                     	;# 
   996  030E                     	;# 
   997  038C                     	;# 
   998  038D                     	;# 
   999  038E                     	;# 
  1000  0391                     	;# 
  1001  0392                     	;# 
  1002  0393                     	;# 
  1003  0394                     	;# 
  1004  0395                     	;# 
  1005  0396                     	;# 
  1006  0397                     	;# 
  1007  0398                     	;# 
  1008  0399                     	;# 
  1009  040E                     	;# 
  1010  0413                     	;# 
  1011  0413                     	;# 
  1012  0414                     	;# 
  1013  0414                     	;# 
  1014  0415                     	;# 
  1015  0416                     	;# 
  1016  0417                     	;# 
  1017  0418                     	;# 
  1018  041A                     	;# 
  1019  041A                     	;# 
  1020  041B                     	;# 
  1021  041B                     	;# 
  1022  041C                     	;# 
  1023  041D                     	;# 
  1024  041E                     	;# 
  1025  041F                     	;# 
  1026  0493                     	;# 
  1027  0494                     	;# 
  1028  0495                     	;# 
  1029  0496                     	;# 
  1030  049A                     	;# 
  1031  049B                     	;# 
  1032  049C                     	;# 
  1033  049D                     	;# 
  1034  058C                     	;# 
  1035  058C                     	;# 
  1036  058D                     	;# 
  1037  058E                     	;# 
  1038  058E                     	;# 
  1039  058F                     	;# 
  1040  0590                     	;# 
  1041  0590                     	;# 
  1042  0591                     	;# 
  1043  0592                     	;# 
  1044  0592                     	;# 
  1045  0593                     	;# 
  1046  0594                     	;# 
  1047  0594                     	;# 
  1048  0595                     	;# 
  1049  0596                     	;# 
  1050  0596                     	;# 
  1051  0597                     	;# 
  1052  0598                     	;# 
  1053  0599                     	;# 
  1054  059A                     	;# 
  1055  059B                     	;# 
  1056  059B                     	;# 
  1057  059C                     	;# 
  1058  059D                     	;# 
  1059  060C                     	;# 
  1060  060C                     	;# 
  1061  060D                     	;# 
  1062  060E                     	;# 
  1063  060F                     	;# 
  1064  060F                     	;# 
  1065  0610                     	;# 
  1066  0611                     	;# 
  1067  0612                     	;# 
  1068  0613                     	;# 
  1069  0614                     	;# 
  1070  0617                     	;# 
  1071  0618                     	;# 
  1072  0619                     	;# 
  1073  061A                     	;# 
  1074  061B                     	;# 
  1075  061C                     	;# 
  1076  0691                     	;# 
  1077  0692                     	;# 
  1078  0693                     	;# 
  1079  0694                     	;# 
  1080  0695                     	;# 
  1081  0696                     	;# 
  1082  0697                     	;# 
  1083  0699                     	;# 
  1084  069A                     	;# 
  1085  0711                     	;# 
  1086  0712                     	;# 
  1087  0713                     	;# 
  1088  0714                     	;# 
  1089  0715                     	;# 
  1090  0718                     	;# 
  1091  0718                     	;# 
  1092  0719                     	;# 
  1093  071A                     	;# 
  1094  071A                     	;# 
  1095  071B                     	;# 
  1096  071C                     	;# 
  1097  071D                     	;# 
  1098  0791                     	;# 
  1099  0791                     	;# 
  1100  0792                     	;# 
  1101  0793                     	;# 
  1102  0793                     	;# 
  1103  0794                     	;# 
  1104  0795                     	;# 
  1105  0795                     	;# 
  1106  0796                     	;# 
  1107  0797                     	;# 
  1108  0797                     	;# 
  1109  0798                     	;# 
  1110  0799                     	;# 
  1111  079A                     	;# 
  1112  080C                     	;# 
  1113  080C                     	;# 
  1114  080D                     	;# 
  1115  080E                     	;# 
  1116  080E                     	;# 
  1117  080F                     	;# 
  1118  0810                     	;# 
  1119  0810                     	;# 
  1120  0811                     	;# 
  1121  0812                     	;# 
  1122  0812                     	;# 
  1123  0813                     	;# 
  1124  0814                     	;# 
  1125  0815                     	;# 
  1126  0816                     	;# 
  1127  0817                     	;# 
  1128  0818                     	;# 
  1129  0819                     	;# 
  1130  081A                     	;# 
  1131  081A                     	;# 
  1132  081B                     	;# 
  1133  081C                     	;# 
  1134  081C                     	;# 
  1135  081D                     	;# 
  1136  088C                     	;# 
  1137  088D                     	;# 
  1138  088E                     	;# 
  1139  088F                     	;# 
  1140  088F                     	;# 
  1141  0890                     	;# 
  1142  0891                     	;# 
  1143  0892                     	;# 
  1144  0893                     	;# 
  1145  0893                     	;# 
  1146  0894                     	;# 
  1147  0895                     	;# 
  1148  0896                     	;# 
  1149  0897                     	;# 
  1150  0897                     	;# 
  1151  0898                     	;# 
  1152  0899                     	;# 
  1153  0D8C                     	;# 
  1154  0D8C                     	;# 
  1155  0D8D                     	;# 
  1156  0D8E                     	;# 
  1157  0D8F                     	;# 
  1158  0D8F                     	;# 
  1159  0D90                     	;# 
  1160  0D91                     	;# 
  1161  0D92                     	;# 
  1162  0D92                     	;# 
  1163  0D93                     	;# 
  1164  0D94                     	;# 
  1165  0D95                     	;# 
  1166  0D95                     	;# 
  1167  0D96                     	;# 
  1168  0D97                     	;# 
  1169  0D98                     	;# 
  1170  0D99                     	;# 
  1171  0D9A                     	;# 
  1172  0D9B                     	;# 
  1173  0D9C                     	;# 
  1174  0D9D                     	;# 
  1175  0D9E                     	;# 
  1176  0D9E                     	;# 
  1177  0D9F                     	;# 
  1178  0DA0                     	;# 
  1179  0DA1                     	;# 
  1180  0DA1                     	;# 
  1181  0DA2                     	;# 
  1182  0DA3                     	;# 
  1183  0DA4                     	;# 
  1184  0DA4                     	;# 
  1185  0DA5                     	;# 
  1186  0DA6                     	;# 
  1187  0DA7                     	;# 
  1188  0DA7                     	;# 
  1189  0DA8                     	;# 
  1190  0DA9                     	;# 
  1191  0DAA                     	;# 
  1192  0DAB                     	;# 
  1193  0DAC                     	;# 
  1194  0DAD                     	;# 
  1195  0DAE                     	;# 
  1196  0DAF                     	;# 
  1197  0E0F                     	;# 
  1198  0E10                     	;# 
  1199  0E11                     	;# 
  1200  0E12                     	;# 
  1201  0E13                     	;# 
  1202  0E14                     	;# 
  1203  0E15                     	;# 
  1204  0E16                     	;# 
  1205  0E17                     	;# 
  1206  0E18                     	;# 
  1207  0E19                     	;# 
  1208  0E1A                     	;# 
  1209  0E1B                     	;# 
  1210  0E1C                     	;# 
  1211  0E1D                     	;# 
  1212  0E1E                     	;# 
  1213  0E1F                     	;# 
  1214  0E20                     	;# 
  1215  0E21                     	;# 
  1216  0E22                     	;# 
  1217  0E23                     	;# 
  1218  0E24                     	;# 
  1219  0E25                     	;# 
  1220  0E26                     	;# 
  1221  0E27                     	;# 
  1222  0E28                     	;# 
  1223  0E29                     	;# 
  1224  0E2A                     	;# 
  1225  0E2B                     	;# 
  1226  0E2C                     	;# 
  1227  0E2D                     	;# 
  1228  0E2E                     	;# 
  1229  0E90                     	;# 
  1230  0E91                     	;# 
  1231  0E92                     	;# 
  1232  0E94                     	;# 
  1233  0E95                     	;# 
  1234  0E9C                     	;# 
  1235  0E9D                     	;# 
  1236  0E9E                     	;# 
  1237  0E9F                     	;# 
  1238  0EA0                     	;# 
  1239  0EA1                     	;# 
  1240  0EA2                     	;# 
  1241  0EA3                     	;# 
  1242  0EA4                     	;# 
  1243  0EA5                     	;# 
  1244  0EA6                     	;# 
  1245  0EA7                     	;# 
  1246  0F0F                     	;# 
  1247  0F10                     	;# 
  1248  0F11                     	;# 
  1249  0F12                     	;# 
  1250  0F13                     	;# 
  1251  0F14                     	;# 
  1252  0F15                     	;# 
  1253  0F16                     	;# 
  1254  0F17                     	;# 
  1255  0F18                     	;# 
  1256  0F19                     	;# 
  1257  0F1A                     	;# 
  1258  0F1B                     	;# 
  1259  0F1C                     	;# 
  1260  0F1D                     	;# 
  1261  0F1E                     	;# 
  1262  0F1F                     	;# 
  1263  0F20                     	;# 
  1264  0F21                     	;# 
  1265  0F22                     	;# 
  1266  0F23                     	;# 
  1267  0FE4                     	;# 
  1268  0FE5                     	;# 
  1269  0FE6                     	;# 
  1270  0FE7                     	;# 
  1271  0FE8                     	;# 
  1272  0FE9                     	;# 
  1273  0FEA                     	;# 
  1274  0FEB                     	;# 
  1275  0FED                     	;# 
  1276  0FEE                     	;# 
  1277  0FEF                     	;# 
  1278  0000                     	;# 
  1279  0001                     	;# 
  1280  0002                     	;# 
  1281  0003                     	;# 
  1282  0004                     	;# 
  1283  0005                     	;# 
  1284  0006                     	;# 
  1285  0007                     	;# 
  1286  0008                     	;# 
  1287  0009                     	;# 
  1288  000A                     	;# 
  1289  000B                     	;# 
  1290  000C                     	;# 
  1291  000D                     	;# 
  1292  000E                     	;# 
  1293  0010                     	;# 
  1294  0011                     	;# 
  1295  0012                     	;# 
  1296  0013                     	;# 
  1297  0014                     	;# 
  1298  0015                     	;# 
  1299  0016                     	;# 
  1300  0016                     	;# 
  1301  0017                     	;# 
  1302  0018                     	;# 
  1303  0019                     	;# 
  1304  001A                     	;# 
  1305  001A                     	;# 
  1306  001B                     	;# 
  1307  001B                     	;# 
  1308  001C                     	;# 
  1309  001D                     	;# 
  1310  001E                     	;# 
  1311  001F                     	;# 
  1312  008C                     	;# 
  1313  008D                     	;# 
  1314  008E                     	;# 
  1315  0090                     	;# 
  1316  0091                     	;# 
  1317  0092                     	;# 
  1318  0093                     	;# 
  1319  0094                     	;# 
  1320  0095                     	;# 
  1321  0096                     	;# 
  1322  0098                     	;# 
  1323  0099                     	;# 
  1324  009A                     	;# 
  1325  009B                     	;# 
  1326  009B                     	;# 
  1327  009C                     	;# 
  1328  009D                     	;# 
  1329  009E                     	;# 
  1330  009F                     	;# 
  1331  010C                     	;# 
  1332  010D                     	;# 
  1333  010E                     	;# 
  1334  0111                     	;# 
  1335  0112                     	;# 
  1336  0113                     	;# 
  1337  0114                     	;# 
  1338  0115                     	;# 
  1339  0116                     	;# 
  1340  0117                     	;# 
  1341  0118                     	;# 
  1342  0119                     	;# 
  1343  011C                     	;# 
  1344  018C                     	;# 
  1345  018D                     	;# 
  1346  018E                     	;# 
  1347  0191                     	;# 
  1348  0191                     	;# 
  1349  0192                     	;# 
  1350  0193                     	;# 
  1351  0193                     	;# 
  1352  0194                     	;# 
  1353  0195                     	;# 
  1354  0196                     	;# 
  1355  0199                     	;# 
  1356  0199                     	;# 
  1357  0199                     	;# 
  1358  019A                     	;# 
  1359  019A                     	;# 
  1360  019A                     	;# 
  1361  019B                     	;# 
  1362  019B                     	;# 
  1363  019B                     	;# 
  1364  019B                     	;# 
  1365  019B                     	;# 
  1366  019C                     	;# 
  1367  019C                     	;# 
  1368  019C                     	;# 
  1369  019D                     	;# 
  1370  019D                     	;# 
  1371  019D                     	;# 
  1372  019E                     	;# 
  1373  019E                     	;# 
  1374  019E                     	;# 
  1375  019F                     	;# 
  1376  019F                     	;# 
  1377  019F                     	;# 
  1378  019F                     	;# 
  1379  019F                     	;# 
  1380  020C                     	;# 
  1381  020D                     	;# 
  1382  020E                     	;# 
  1383  0211                     	;# 
  1384  0211                     	;# 
  1385  0212                     	;# 
  1386  0212                     	;# 
  1387  0213                     	;# 
  1388  0213                     	;# 
  1389  0214                     	;# 
  1390  0214                     	;# 
  1391  0215                     	;# 
  1392  0215                     	;# 
  1393  0215                     	;# 
  1394  0215                     	;# 
  1395  0216                     	;# 
  1396  0216                     	;# 
  1397  0217                     	;# 
  1398  0217                     	;# 
  1399  028C                     	;# 
  1400  028D                     	;# 
  1401  028E                     	;# 
  1402  0291                     	;# 
  1403  0291                     	;# 
  1404  0292                     	;# 
  1405  0293                     	;# 
  1406  0294                     	;# 
  1407  0298                     	;# 
  1408  0298                     	;# 
  1409  0299                     	;# 
  1410  029A                     	;# 
  1411  029B                     	;# 
  1412  029E                     	;# 
  1413  030C                     	;# 
  1414  030D                     	;# 
  1415  030E                     	;# 
  1416  038C                     	;# 
  1417  038D                     	;# 
  1418  038E                     	;# 
  1419  0391                     	;# 
  1420  0392                     	;# 
  1421  0393                     	;# 
  1422  0394                     	;# 
  1423  0395                     	;# 
  1424  0396                     	;# 
  1425  0397                     	;# 
  1426  0398                     	;# 
  1427  0399                     	;# 
  1428  040E                     	;# 
  1429  0413                     	;# 
  1430  0413                     	;# 
  1431  0414                     	;# 
  1432  0414                     	;# 
  1433  0415                     	;# 
  1434  0416                     	;# 
  1435  0417                     	;# 
  1436  0418                     	;# 
  1437  041A                     	;# 
  1438  041A                     	;# 
  1439  041B                     	;# 
  1440  041B                     	;# 
  1441  041C                     	;# 
  1442  041D                     	;# 
  1443  041E                     	;# 
  1444  041F                     	;# 
  1445  0493                     	;# 
  1446  0494                     	;# 
  1447  0495                     	;# 
  1448  0496                     	;# 
  1449  049A                     	;# 
  1450  049B                     	;# 
  1451  049C                     	;# 
  1452  049D                     	;# 
  1453  058C                     	;# 
  1454  058C                     	;# 
  1455  058D                     	;# 
  1456  058E                     	;# 
  1457  058E                     	;# 
  1458  058F                     	;# 
  1459  0590                     	;# 
  1460  0590                     	;# 
  1461  0591                     	;# 
  1462  0592                     	;# 
  1463  0592                     	;# 
  1464  0593                     	;# 
  1465  0594                     	;# 
  1466  0594                     	;# 
  1467  0595                     	;# 
  1468  0596                     	;# 
  1469  0596                     	;# 
  1470  0597                     	;# 
  1471  0598                     	;# 
  1472  0599                     	;# 
  1473  059A                     	;# 
  1474  059B                     	;# 
  1475  059B                     	;# 
  1476  059C                     	;# 
  1477  059D                     	;# 
  1478  060C                     	;# 
  1479  060C                     	;# 
  1480  060D                     	;# 
  1481  060E                     	;# 
  1482  060F                     	;# 
  1483  060F                     	;# 
  1484  0610                     	;# 
  1485  0611                     	;# 
  1486  0612                     	;# 
  1487  0613                     	;# 
  1488  0614                     	;# 
  1489  0617                     	;# 
  1490  0618                     	;# 
  1491  0619                     	;# 
  1492  061A                     	;# 
  1493  061B                     	;# 
  1494  061C                     	;# 
  1495  0691                     	;# 
  1496  0692                     	;# 
  1497  0693                     	;# 
  1498  0694                     	;# 
  1499  0695                     	;# 
  1500  0696                     	;# 
  1501  0697                     	;# 
  1502  0699                     	;# 
  1503  069A                     	;# 
  1504  0711                     	;# 
  1505  0712                     	;# 
  1506  0713                     	;# 
  1507  0714                     	;# 
  1508  0715                     	;# 
  1509  0718                     	;# 
  1510  0718                     	;# 
  1511  0719                     	;# 
  1512  071A                     	;# 
  1513  071A                     	;# 
  1514  071B                     	;# 
  1515  071C                     	;# 
  1516  071D                     	;# 
  1517  0791                     	;# 
  1518  0791                     	;# 
  1519  0792                     	;# 
  1520  0793                     	;# 
  1521  0793                     	;# 
  1522  0794                     	;# 
  1523  0795                     	;# 
  1524  0795                     	;# 
  1525  0796                     	;# 
  1526  0797                     	;# 
  1527  0797                     	;# 
  1528  0798                     	;# 
  1529  0799                     	;# 
  1530  079A                     	;# 
  1531  080C                     	;# 
  1532  080C                     	;# 
  1533  080D                     	;# 
  1534  080E                     	;# 
  1535  080E                     	;# 
  1536  080F                     	;# 
  1537  0810                     	;# 
  1538  0810                     	;# 
  1539  0811                     	;# 
  1540  0812                     	;# 
  1541  0812                     	;# 
  1542  0813                     	;# 
  1543  0814                     	;# 
  1544  0815                     	;# 
  1545  0816                     	;# 
  1546  0817                     	;# 
  1547  0818                     	;# 
  1548  0819                     	;# 
  1549  081A                     	;# 
  1550  081A                     	;# 
  1551  081B                     	;# 
  1552  081C                     	;# 
  1553  081C                     	;# 
  1554  081D                     	;# 
  1555  088C                     	;# 
  1556  088D                     	;# 
  1557  088E                     	;# 
  1558  088F                     	;# 
  1559  088F                     	;# 
  1560  0890                     	;# 
  1561  0891                     	;# 
  1562  0892                     	;# 
  1563  0893                     	;# 
  1564  0893                     	;# 
  1565  0894                     	;# 
  1566  0895                     	;# 
  1567  0896                     	;# 
  1568  0897                     	;# 
  1569  0897                     	;# 
  1570  0898                     	;# 
  1571  0899                     	;# 
  1572  0D8C                     	;# 
  1573  0D8C                     	;# 
  1574  0D8D                     	;# 
  1575  0D8E                     	;# 
  1576  0D8F                     	;# 
  1577  0D8F                     	;# 
  1578  0D90                     	;# 
  1579  0D91                     	;# 
  1580  0D92                     	;# 
  1581  0D92                     	;# 
  1582  0D93                     	;# 
  1583  0D94                     	;# 
  1584  0D95                     	;# 
  1585  0D95                     	;# 
  1586  0D96                     	;# 
  1587  0D97                     	;# 
  1588  0D98                     	;# 
  1589  0D99                     	;# 
  1590  0D9A                     	;# 
  1591  0D9B                     	;# 
  1592  0D9C                     	;# 
  1593  0D9D                     	;# 
  1594  0D9E                     	;# 
  1595  0D9E                     	;# 
  1596  0D9F                     	;# 
  1597  0DA0                     	;# 
  1598  0DA1                     	;# 
  1599  0DA1                     	;# 
  1600  0DA2                     	;# 
  1601  0DA3                     	;# 
  1602  0DA4                     	;# 
  1603  0DA4                     	;# 
  1604  0DA5                     	;# 
  1605  0DA6                     	;# 
  1606  0DA7                     	;# 
  1607  0DA7                     	;# 
  1608  0DA8                     	;# 
  1609  0DA9                     	;# 
  1610  0DAA                     	;# 
  1611  0DAB                     	;# 
  1612  0DAC                     	;# 
  1613  0DAD                     	;# 
  1614  0DAE                     	;# 
  1615  0DAF                     	;# 
  1616  0E0F                     	;# 
  1617  0E10                     	;# 
  1618  0E11                     	;# 
  1619  0E12                     	;# 
  1620  0E13                     	;# 
  1621  0E14                     	;# 
  1622  0E15                     	;# 
  1623  0E16                     	;# 
  1624  0E17                     	;# 
  1625  0E18                     	;# 
  1626  0E19                     	;# 
  1627  0E1A                     	;# 
  1628  0E1B                     	;# 
  1629  0E1C                     	;# 
  1630  0E1D                     	;# 
  1631  0E1E                     	;# 
  1632  0E1F                     	;# 
  1633  0E20                     	;# 
  1634  0E21                     	;# 
  1635  0E22                     	;# 
  1636  0E23                     	;# 
  1637  0E24                     	;# 
  1638  0E25                     	;# 
  1639  0E26                     	;# 
  1640  0E27                     	;# 
  1641  0E28                     	;# 
  1642  0E29                     	;# 
  1643  0E2A                     	;# 
  1644  0E2B                     	;# 
  1645  0E2C                     	;# 
  1646  0E2D                     	;# 
  1647  0E2E                     	;# 
  1648  0E90                     	;# 
  1649  0E91                     	;# 
  1650  0E92                     	;# 
  1651  0E94                     	;# 
  1652  0E95                     	;# 
  1653  0E9C                     	;# 
  1654  0E9D                     	;# 
  1655  0E9E                     	;# 
  1656  0E9F                     	;# 
  1657  0EA0                     	;# 
  1658  0EA1                     	;# 
  1659  0EA2                     	;# 
  1660  0EA3                     	;# 
  1661  0EA4                     	;# 
  1662  0EA5                     	;# 
  1663  0EA6                     	;# 
  1664  0EA7                     	;# 
  1665  0F0F                     	;# 
  1666  0F10                     	;# 
  1667  0F11                     	;# 
  1668  0F12                     	;# 
  1669  0F13                     	;# 
  1670  0F14                     	;# 
  1671  0F15                     	;# 
  1672  0F16                     	;# 
  1673  0F17                     	;# 
  1674  0F18                     	;# 
  1675  0F19                     	;# 
  1676  0F1A                     	;# 
  1677  0F1B                     	;# 
  1678  0F1C                     	;# 
  1679  0F1D                     	;# 
  1680  0F1E                     	;# 
  1681  0F1F                     	;# 
  1682  0F20                     	;# 
  1683  0F21                     	;# 
  1684  0F22                     	;# 
  1685  0F23                     	;# 
  1686  0FE4                     	;# 
  1687  0FE5                     	;# 
  1688  0FE6                     	;# 
  1689  0FE7                     	;# 
  1690  0FE8                     	;# 
  1691  0FE9                     	;# 
  1692  0FEA                     	;# 
  1693  0FEB                     	;# 
  1694  0FED                     	;# 
  1695  0FEE                     	;# 
  1696  0FEF                     	;# 
  1697                           
  1698                           	psect	stringtext
  1699  0800                     __pstringtext:	
  1700  0800                     _DATA:	
  1701  0800  3400               	retlw	0
  1702  0801  3480               	retlw	128
  1703  0802  3440               	retlw	64
  1704  0803  34C0               	retlw	192
  1705  0804  3420               	retlw	32
  1706  0805  34A0               	retlw	160
  1707  0806  3460               	retlw	96
  1708  0807  34E0               	retlw	224
  1709  0808  3410               	retlw	16
  1710  0809  3490               	retlw	144
  1711  080A  3450               	retlw	80
  1712  080B  34D0               	retlw	208
  1713  080C  3430               	retlw	48
  1714  080D  34B0               	retlw	176
  1715  080E  3470               	retlw	112
  1716  080F  34F0               	retlw	240
  1717  0810  3408               	retlw	8
  1718  0811  3488               	retlw	136
  1719  0812  3448               	retlw	72
  1720  0813  34C8               	retlw	200
  1721  0814  3428               	retlw	40
  1722  0815  34A8               	retlw	168
  1723  0816  3468               	retlw	104
  1724  0817  34E8               	retlw	232
  1725  0818  3418               	retlw	24
  1726  0819  3498               	retlw	152
  1727  081A  3458               	retlw	88
  1728  081B  34D8               	retlw	216
  1729  081C  3438               	retlw	56
  1730  081D  34B8               	retlw	184
  1731  081E  3478               	retlw	120
  1732  081F  34F8               	retlw	248
  1733  0820  3404               	retlw	4
  1734  0821  3484               	retlw	132
  1735  0822  3444               	retlw	68
  1736  0823  34C4               	retlw	196
  1737  0824  3424               	retlw	36
  1738  0825  34A4               	retlw	164
  1739  0826  3464               	retlw	100
  1740  0827  34E4               	retlw	228
  1741  0828  3414               	retlw	20
  1742  0829  3494               	retlw	148
  1743  082A  3454               	retlw	84
  1744  082B  34D4               	retlw	212
  1745  082C  3434               	retlw	52
  1746  082D  34B4               	retlw	180
  1747  082E  3474               	retlw	116
  1748  082F  34F4               	retlw	244
  1749  0830  340C               	retlw	12
  1750  0831  348C               	retlw	140
  1751  0832  344C               	retlw	76
  1752  0833  34CC               	retlw	204
  1753  0834  342C               	retlw	44
  1754  0835  34AC               	retlw	172
  1755  0836  346C               	retlw	108
  1756  0837  34EC               	retlw	236
  1757  0838  341C               	retlw	28
  1758  0839  349C               	retlw	156
  1759  083A  345C               	retlw	92
  1760  083B  34DC               	retlw	220
  1761  083C  343C               	retlw	60
  1762  083D  34BC               	retlw	188
  1763  083E  347C               	retlw	124
  1764  083F  34FC               	retlw	252
  1765  0840  3406               	retlw	6
  1766  0841                     __end_of_DATA:	
  1767  0841                     _ACTIVEBAND:	
  1768  0841  3400               	retlw	0
  1769  0842  3400               	retlw	0
  1770  0843  3400               	retlw	0
  1771  0844  3400               	retlw	0
  1772  0845  3400               	retlw	0
  1773  0846  3401               	retlw	1
  1774  0847  3400               	retlw	0
  1775  0848  3400               	retlw	0
  1776  0849  3401               	retlw	1
  1777  084A  3400               	retlw	0
  1778  084B  3400               	retlw	0
  1779  084C  3400               	retlw	0
  1780  084D  3401               	retlw	1
  1781  084E  3401               	retlw	1
  1782  084F  3400               	retlw	0
  1783  0850  3400               	retlw	0
  1784  0851  3400               	retlw	0
  1785  0852  3400               	retlw	0
  1786  0853  3400               	retlw	0
  1787  0854  3400               	retlw	0
  1788  0855  3401               	retlw	1
  1789  0856  3400               	retlw	0
  1790  0857  3400               	retlw	0
  1791  0858  3400               	retlw	0
  1792  0859  3400               	retlw	0
  1793  085A  3400               	retlw	0
  1794  085B  3401               	retlw	1
  1795  085C  3400               	retlw	0
  1796  085D  3400               	retlw	0
  1797  085E  3401               	retlw	1
  1798  085F  3400               	retlw	0
  1799  0860  3400               	retlw	0
  1800  0861  3400               	retlw	0
  1801  0862  3400               	retlw	0
  1802  0863  3400               	retlw	0
  1803  0864  3400               	retlw	0
  1804  0865  3400               	retlw	0
  1805  0866  3400               	retlw	0
  1806  0867  3400               	retlw	0
  1807  0868  3400               	retlw	0
  1808  0869  3400               	retlw	0
  1809  086A  3400               	retlw	0
  1810  086B  3400               	retlw	0
  1811  086C  3400               	retlw	0
  1812  086D  3400               	retlw	0
  1813  086E  3400               	retlw	0
  1814  086F  3400               	retlw	0
  1815  0870  3400               	retlw	0
  1816  0871  3400               	retlw	0
  1817  0872  3400               	retlw	0
  1818  0873  3400               	retlw	0
  1819  0874  3400               	retlw	0
  1820  0875  3400               	retlw	0
  1821  0876  3400               	retlw	0
  1822  0877  3400               	retlw	0
  1823  0878  3400               	retlw	0
  1824  0879  3400               	retlw	0
  1825  087A  3400               	retlw	0
  1826  087B  3400               	retlw	0
  1827  087C  3400               	retlw	0
  1828  087D  3400               	retlw	0
  1829  087E  3400               	retlw	0
  1830  087F  3400               	retlw	0
  1831  0880  3400               	retlw	0
  1832  0881                     __end_of_ACTIVEBAND:	
  1833  0881                     _DacOutput:	
  1834  0881  342B               	retlw	43
  1835  0882  3448               	retlw	72
  1836  0883  3456               	retlw	86
  1837  0884  3464               	retlw	100
  1838  0885                     __end_of_DacOutput:	
  1839  0885                     _REGADD:	
  1840  0885  3407               	retlw	7
  1841  0886  3410               	retlw	16
  1842  0887                     __end_of_REGADD:	
  1843  0887                     _SLAVEADD:	
  1844  0887  3406               	retlw	6
  1845  0888  340E               	retlw	14
  1846  0889                     __end_of_SLAVEADD:	
  1847  000E                     _PORTC	set	14
  1848  0095                     _OPTION_REGbits	set	149
  1849  0099                     _OSCCON	set	153
  1850  009A                     _OSCSTAT	set	154
  1851  0098                     _OSCTUNE	set	152
  1852  008C                     _TRISA	set	140
  1853  008D                     _TRISB	set	141
  1854  008E                     _TRISC	set	142
  1855  0118                     _DAC1CON0	set	280
  1856  0119                     _DAC1CON1	set	281
  1857  010C                     _LATA	set	268
  1858  010D                     _LATB	set	269
  1859  010E                     _LATC	set	270
  1860  0861                     _LATA1	set	2145
  1861  0862                     _LATA2	set	2146
  1862  0864                     _LATA4	set	2148
  1863  086C                     _LATB4	set	2156
  1864  086D                     _LATB5	set	2157
  1865  086E                     _LATB6	set	2158
  1866  086F                     _LATB7	set	2159
  1867  018C                     _ANSELA	set	396
  1868  018D                     _ANSELB	set	397
  1869  018E                     _ANSELC	set	398
  1870  020D                     _WPUB	set	525
  1871  020E                     _WPUC	set	526
  1872                           
  1873                           ; #config settings
  1874  0000                     
  1875                           	psect	cinit
  1876  07F6                     start_initialization:	
  1877  07F6                     __initialization:	
  1878                           
  1879                           ; Clear objects allocated to COMMON
  1880  07F6  01FD               	clrf	__pbssCOMMON& (0+127)
  1881                           
  1882                           ; Clear objects allocated to BANK0
  1883  07F7  01A0               	clrf	__pbssBANK0& (0+127)
  1884  07F8  01A1               	clrf	(__pbssBANK0+1)& (0+127)
  1885  07F9  01A2               	clrf	(__pbssBANK0+2)& (0+127)
  1886  07FA  01A3               	clrf	(__pbssBANK0+3)& (0+127)
  1887  07FB  01A4               	clrf	(__pbssBANK0+4)& (0+127)
  1888  07FC  01A5               	clrf	(__pbssBANK0+5)& (0+127)
  1889  07FD                     end_of_initialization:	
  1890                           ;End of C runtime variable initialization code
  1891                           
  1892  07FD                     __end_of__initialization:	
  1893  07FD  0020               	movlb	0
  1894  07FE  3185  2DC7         	ljmp	_main	;jump to C main() function
  1895                           
  1896                           	psect	bssCOMMON
  1897  007D                     __pbssCOMMON:	
  1898  007D                     _Byte2:	
  1899  007D                     	ds	1
  1900                           
  1901                           	psect	bssBANK0
  1902  0020                     __pbssBANK0:	
  1903  0020                     _Byte1:	
  1904  0020                     	ds	1
  1905  0021                     _Byte3:	
  1906  0021                     	ds	1
  1907  0022                     _parity1:	
  1908  0022                     	ds	1
  1909  0023                     _parity2:	
  1910  0023                     	ds	1
  1911  0024                     _parity3:	
  1912  0024                     	ds	1
  1913  0025                     _parity4:	
  1914  0025                     	ds	1
  1915                           
  1916                           	psect	cstackCOMMON
  1917  0070                     __pcstackCOMMON:	
  1918  0070                     ?_OSCILLATOR_Initialize:	
  1919  0070                     ??_OSCILLATOR_Initialize:	
  1920                           ; 0 bytes @ 0x0
  1921                           
  1922  0070                     ?_DAC1_Initialize:	
  1923                           ; 0 bytes @ 0x0
  1924                           
  1925  0070                     ??_DAC1_Initialize:	
  1926                           ; 0 bytes @ 0x0
  1927                           
  1928  0070                     ?_DAC1_SetOutput:	
  1929                           ; 0 bytes @ 0x0
  1930                           
  1931  0070                     ??_DAC1_SetOutput:	
  1932                           ; 0 bytes @ 0x0
  1933                           
  1934  0070                     ?_PIN_MANAGER_Initialize:	
  1935                           ; 0 bytes @ 0x0
  1936                           
  1937  0070                     ??_PIN_MANAGER_Initialize:	
  1938                           ; 0 bytes @ 0x0
  1939                           
  1940  0070                     ?_SYSTEM_Initialize:	
  1941                           ; 0 bytes @ 0x0
  1942                           
  1943  0070                     ??_SYSTEM_Initialize:	
  1944                           ; 0 bytes @ 0x0
  1945                           
  1946  0070                     ?_shiftRegister:	
  1947                           ; 0 bytes @ 0x0
  1948                           
  1949  0070                     ??_paritycheck:	
  1950                           ; 0 bytes @ 0x0
  1951                           
  1952  0070                     ?_ConfigureShiftRegister:	
  1953                           ; 0 bytes @ 0x0
  1954                           
  1955  0070                     ??_ConfigureShiftRegister:	
  1956                           ; 0 bytes @ 0x0
  1957                           
  1958  0070                     ?_main:	
  1959                           ; 0 bytes @ 0x0
  1960                           
  1961  0070                     ?_paritycheck:	
  1962                           ; 0 bytes @ 0x0
  1963                           
  1964  0070                     DAC1_SetOutput@inputData:	
  1965                           ; 1 bytes @ 0x0
  1966                           
  1967  0070                     shiftRegister@Dummy2:	
  1968                           ; 1 bytes @ 0x0
  1969                           
  1970                           
  1971                           ; 1 bytes @ 0x0
  1972  0070                     	ds	1
  1973  0071                     shiftRegister@y:	
  1974  0071                     paritycheck@parity:	
  1975                           ; 1 bytes @ 0x1
  1976                           
  1977  0071                     ConfigureShiftRegister@i:	
  1978                           ; 1 bytes @ 0x1
  1979                           
  1980                           
  1981                           ; 1 bytes @ 0x1
  1982  0071                     	ds	1
  1983  0072                     ??_shiftRegister:	
  1984  0072                     paritycheck@Dummy:	
  1985                           ; 0 bytes @ 0x2
  1986                           
  1987  0072                     ConfigureShiftRegister@ReverseReg:	
  1988                           ; 1 bytes @ 0x2
  1989                           
  1990                           
  1991                           ; 1 bytes @ 0x2
  1992  0072                     	ds	1
  1993  0073                     shiftRegister@m:	
  1994                           
  1995                           ; 1 bytes @ 0x3
  1996  0073                     	ds	1
  1997  0074                     shiftRegister@Dummy1:	
  1998                           
  1999                           ; 1 bytes @ 0x4
  2000  0074                     	ds	1
  2001  0075                     ?_MIPI:	
  2002  0075                     MIPI@b:	
  2003                           ; 0 bytes @ 0x5
  2004                           
  2005                           
  2006                           ; 1 bytes @ 0x5
  2007  0075                     	ds	1
  2008  0076                     MIPI@c:	
  2009                           
  2010                           ; 1 bytes @ 0x6
  2011  0076                     	ds	1
  2012  0077                     MIPI@d:	
  2013                           
  2014                           ; 1 bytes @ 0x7
  2015  0077                     	ds	1
  2016  0078                     ??_MIPI:	
  2017                           
  2018                           ; 0 bytes @ 0x8
  2019  0078                     	ds	2
  2020  007A                     MIPI@a:	
  2021                           
  2022                           ; 1 bytes @ 0xA
  2023  007A                     	ds	1
  2024  007B                     MIPI@j:	
  2025                           
  2026                           ; 1 bytes @ 0xB
  2027  007B                     	ds	1
  2028  007C                     MIPI@i:	
  2029                           
  2030                           ; 1 bytes @ 0xC
  2031  007C                     	ds	1
  2032                           
  2033                           	psect	cstackBANK0
  2034  0026                     __pcstackBANK0:	
  2035  0026                     ??_main:	
  2036                           
  2037                           ; 0 bytes @ 0x0
  2038  0026                     	ds	3
  2039                           
  2040                           	psect	maintext
  2041  05C7                     __pmaintext:	
  2042 ;;
  2043 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2044 ;;
  2045 ;; *************** function _main *****************
  2046 ;; Defined at:
  2047 ;;		line 284 in file "main.c"
  2048 ;; Parameters:    Size  Location     Type
  2049 ;;		None
  2050 ;; Auto vars:     Size  Location     Type
  2051 ;;		None
  2052 ;; Return value:  Size  Location     Type
  2053 ;;		None               void
  2054 ;; Registers used:
  2055 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2056 ;; Tracked objects:
  2057 ;;		On entry : B1F/0
  2058 ;;		On exit  : 0/0
  2059 ;;		Unchanged: 0/0
  2060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2061 ;;      Params:         0       0       0       0       0       0       0       0
  2062 ;;      Locals:         0       0       0       0       0       0       0       0
  2063 ;;      Temps:          0       3       0       0       0       0       0       0
  2064 ;;      Totals:         0       3       0       0       0       0       0       0
  2065 ;;Total ram usage:        3 bytes
  2066 ;; Hardware stack levels required when called:    2
  2067 ;; This function calls:
  2068 ;;		_ConfigureShiftRegister
  2069 ;;		_DAC1_Initialize
  2070 ;;		_DAC1_SetOutput
  2071 ;;		_MIPI
  2072 ;;		_PIN_MANAGER_Initialize
  2073 ;;		_SYSTEM_Initialize
  2074 ;; This function is called by:
  2075 ;;		Startup code after reset
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           
  2079                           
  2080                           ;psect for function _main
  2081  05C7                     _main:	
  2082                           
  2083                           ;main.c: 286: SYSTEM_Initialize();
  2084                           
  2085                           ;incstack = 0
  2086                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2087  05C7  3183  232A  3185   	fcall	_SYSTEM_Initialize
  2088                           
  2089                           ;main.c: 287: DAC1_Initialize();
  2090  05CA  3183  231F  3185   	fcall	_DAC1_Initialize
  2091                           
  2092                           ;main.c: 288: PIN_MANAGER_Initialize();
  2093  05CD  3183  234F  3185   	fcall	_PIN_MANAGER_Initialize
  2094                           
  2095                           ;main.c: 290: DAC1_SetOutput(0);
  2096  05D0  3000               	movlw	0
  2097  05D1  3183  231A  3185   	fcall	_DAC1_SetOutput
  2098                           
  2099                           ;main.c: 293: do { LATA1 = 0; } while(0);
  2100  05D4  0022               	movlb	2	; select bank2
  2101  05D5  108C               	bcf	12,1	;volatile
  2102                           
  2103                           ;main.c: 294: do { LATA4 = 0; } while(0);
  2104  05D6  120C               	bcf	12,4	;volatile
  2105                           
  2106                           ;main.c: 295: do { LATA2 = 0; } while(0);
  2107  05D7  110C               	bcf	12,2	;volatile
  2108                           
  2109                           ;main.c: 296: do { LATB4 = 0; } while(0);
  2110  05D8  120D               	bcf	13,4	;volatile
  2111  05D9                     l1384:	
  2112                           ;main.c: 298: while ((PORTC & 0xC0) != 0xC0) {
  2113                           
  2114                           ;main.c: 297: while (1) {
  2115                           
  2116  05D9  30C0               	movlw	192
  2117  05DA  0020               	movlb	0	; select bank0
  2118  05DB  050E               	andwf	14,w	;volatile
  2119  05DC  00A6               	movwf	??_main
  2120  05DD  30C0               	movlw	192
  2121  05DE  0626               	xorwf	??_main,w
  2122  05DF  1D03               	btfss	3,2
  2123  05E0  2DD9               	goto	l1384
  2124                           
  2125                           ;main.c: 299: }
  2126                           ;main.c: 300: Byte1 = PORTC;
  2127  05E1  080E               	movf	14,w	;volatile
  2128  05E2  00A6               	movwf	??_main
  2129  05E3  0826               	movf	??_main,w
  2130  05E4  00A0               	movwf	_Byte1
  2131  05E5                     l1388:	
  2132                           ;main.c: 301: while ((PORTC & 0xC0) != 0x40) {
  2133                           
  2134  05E5  30C0               	movlw	192
  2135  05E6  050E               	andwf	14,w	;volatile
  2136  05E7  00A6               	movwf	??_main
  2137  05E8  3040               	movlw	64
  2138  05E9  0626               	xorwf	??_main,w
  2139  05EA  1D03               	btfss	3,2
  2140  05EB  2DE5               	goto	l1388
  2141                           
  2142                           ;main.c: 302: }
  2143                           ;main.c: 303: Byte2 = PORTC & 0x3F;
  2144  05EC  080E               	movf	14,w	;volatile
  2145  05ED  393F               	andlw	63
  2146  05EE  00A6               	movwf	??_main
  2147  05EF  0826               	movf	??_main,w
  2148  05F0  00FD               	movwf	_Byte2
  2149  05F1                     l1392:	
  2150                           ;main.c: 304: while ((PORTC & 0xC0) != 0x80) {
  2151                           
  2152  05F1  30C0               	movlw	192
  2153  05F2  050E               	andwf	14,w	;volatile
  2154  05F3  00A6               	movwf	??_main
  2155  05F4  3080               	movlw	128
  2156  05F5  0626               	xorwf	??_main,w
  2157  05F6  1D03               	btfss	3,2
  2158  05F7  2DF1               	goto	l1392
  2159                           
  2160                           ;main.c: 305: }
  2161                           ;main.c: 306: Byte3 = PORTC & 0x3F;
  2162  05F8  080E               	movf	14,w	;volatile
  2163  05F9  393F               	andlw	63
  2164  05FA  00A6               	movwf	??_main
  2165  05FB  0826               	movf	??_main,w
  2166  05FC  00A1               	movwf	_Byte3
  2167                           
  2168                           ;main.c: 307: if (((Byte1 & 0x10) == 0x10) && ((Byte1 & 0x0C) != 0x00))
  2169  05FD  1E20               	btfss	_Byte1,4
  2170  05FE  2E0D               	goto	l1402
  2171  05FF  0820               	movf	_Byte1,w
  2172  0600  390C               	andlw	12
  2173  0601  1903               	btfsc	3,2
  2174  0602  2E0D               	goto	l1402
  2175                           
  2176                           ;main.c: 308: DAC1_SetOutput(DacOutput[(Byte1 & 0x03)]);
  2177  0603  0820               	movf	_Byte1,w
  2178  0604  3903               	andlw	3
  2179  0605  3E81               	addlw	low (_DacOutput| (0+32768))
  2180  0606  0084               	movwf	4
  2181  0607  3088               	movlw	high (_DacOutput| (0+32768))
  2182  0608  1803               	skipnc
  2183  0609  3E01               	addlw	1
  2184  060A  0085               	movwf	5
  2185  060B  0800               	movf	0,w	;code access
  2186  060C  2E0E               	goto	L1
  2187  060D                     l1402:	
  2188                           
  2189                           ;main.c: 309: else
  2190                           ;main.c: 310: DAC1_SetOutput(0);
  2191  060D  3000               	movlw	0
  2192  060E                     L1:	
  2193  060E  3183  231A  3185   	fcall	_DAC1_SetOutput
  2194                           
  2195                           ;main.c: 312: if ((Byte1 & 0x3C) == 0x20) {
  2196  0611  303C               	movlw	60
  2197  0612  0020               	movlb	0	; select bank0
  2198  0613  0520               	andwf	_Byte1,w
  2199  0614  00A6               	movwf	??_main
  2200  0615  3020               	movlw	32
  2201  0616  0626               	xorwf	??_main,w
  2202  0617  1D03               	btfss	3,2
  2203  0618  2E1D               	goto	l1406
  2204                           
  2205                           ;main.c: 313: do { LATA2 = 0; } while(0);
  2206  0619  0022               	movlb	2	; select bank2
  2207  061A  110C               	bcf	12,2	;volatile
  2208                           
  2209                           ;main.c: 314: do { LATB4 = 1; } while(0);
  2210  061B  160D               	bsf	13,4	;volatile
  2211                           
  2212                           ;main.c: 315: } else {
  2213  061C  2E46               	goto	l1414
  2214  061D                     l1406:	
  2215                           
  2216                           ;main.c: 316: if (((Byte1 & 0x30) != 0x00) && ((Byte1 & 0x0C) != 0x00)) {
  2217  061D  0020               	movlb	0	; select bank0
  2218  061E  0820               	movf	_Byte1,w
  2219  061F  3930               	andlw	48
  2220  0620  1903               	btfsc	3,2
  2221  0621  2E43               	goto	l260
  2222  0622  0820               	movf	_Byte1,w
  2223  0623  390C               	andlw	12
  2224  0624  1903               	btfsc	3,2
  2225  0625  2E43               	goto	l260
  2226                           
  2227                           ;main.c: 317: do { LATB4 = 1; } while(0);
  2228  0626  0022               	movlb	2	; select bank2
  2229  0627  160D               	bsf	13,4	;volatile
  2230                           
  2231                           ;main.c: 318: if (ACTIVEBAND[Byte2] || ACTIVEBAND[Byte3])
  2232  0628  087D               	movf	_Byte2,w
  2233  0629  3E41               	addlw	low (_ACTIVEBAND| (0+32768))
  2234  062A  0084               	movwf	4
  2235  062B  3088               	movlw	high (_ACTIVEBAND| (0+32768))
  2236  062C  1803               	skipnc
  2237  062D  3E01               	addlw	1
  2238  062E  0085               	movwf	5
  2239  062F  0012               	moviw fsr0++
  2240  0630  1D03               	btfss	3,2
  2241  0631  2E3D               	goto	l254
  2242  0632  0020               	movlb	0	; select bank0
  2243  0633  0821               	movf	_Byte3,w
  2244  0634  3E41               	addlw	low (_ACTIVEBAND| (0+32768))
  2245  0635  0084               	movwf	4
  2246  0636  3088               	movlw	high (_ACTIVEBAND| (0+32768))
  2247  0637  1803               	skipnc
  2248  0638  3E01               	addlw	1
  2249  0639  0085               	movwf	5
  2250  063A  0012               	moviw fsr0++
  2251  063B  1903               	btfsc	3,2
  2252  063C  2E40               	goto	l257
  2253  063D                     l254:	
  2254                           ;main.c: 319: do { LATA2 = 1; } while(0);
  2255                           
  2256  063D  0022               	movlb	2	; select bank2
  2257  063E  150C               	bsf	12,2	;volatile
  2258  063F  2E46               	goto	l1414
  2259  0640                     l257:	
  2260                           ;main.c: 320: else
  2261                           ;main.c: 321: do { LATA2 = 0; } while(0);
  2262                           
  2263  0640  0022               	movlb	2	; select bank2
  2264  0641  110C               	bcf	12,2	;volatile
  2265                           
  2266                           ;main.c: 329: } else {
  2267  0642  2E46               	goto	l1414
  2268  0643                     l260:	
  2269                           ;main.c: 330: do { LATA2 = 0; } while(0);
  2270                           
  2271  0643  0022               	movlb	2	; select bank2
  2272  0644  110C               	bcf	12,2	;volatile
  2273                           
  2274                           ;main.c: 331: do { LATB4 = 0; } while(0);
  2275  0645  120D               	bcf	13,4	;volatile
  2276  0646                     l1414:	
  2277                           
  2278                           ;main.c: 332: }
  2279                           ;main.c: 333: }
  2280                           ;main.c: 349: if (Byte2 == 5 && Byte3 == 0)
  2281  0646  3005               	movlw	5
  2282  0647  067D               	xorwf	_Byte2,w
  2283  0648  1D03               	btfss	3,2
  2284  0649  2E5C               	goto	l1420
  2285  064A  0020               	movlb	0	; select bank0
  2286  064B  0821               	movf	_Byte3,w
  2287  064C  1D03               	btfss	3,2
  2288  064D  2E5C               	goto	l1420
  2289                           
  2290                           ;main.c: 350: MIPI(63,63,63,63);
  2291  064E  303F               	movlw	63
  2292  064F  00A6               	movwf	??_main
  2293  0650  0826               	movf	??_main,w
  2294  0651  00F5               	movwf	MIPI@b
  2295  0652  303F               	movlw	63
  2296  0653  00A7               	movwf	??_main+1
  2297  0654  0827               	movf	??_main+1,w
  2298  0655  00F6               	movwf	MIPI@c
  2299  0656  303F               	movlw	63
  2300  0657  00A8               	movwf	??_main+2
  2301  0658  0828               	movf	??_main+2,w
  2302  0659  00F7               	movwf	MIPI@d
  2303  065A  303F               	movlw	63
  2304  065B  2FEB               	goto	L2
  2305  065C                     l1420:	
  2306                           
  2307                           ;main.c: 351: else if (Byte2 == 8 && Byte3 == 0)
  2308  065C  3008               	movlw	8
  2309  065D  067D               	xorwf	_Byte2,w
  2310  065E  1D03               	btfss	3,2
  2311  065F  2E6B               	goto	l1426
  2312  0660  0020               	movlb	0	; select bank0
  2313  0661  0821               	movf	_Byte3,w
  2314  0662  1D03               	btfss	3,2
  2315  0663  2E6B               	goto	l1426
  2316                           
  2317                           ;main.c: 352: MIPI(10,64,0,0);
  2318  0664  3040               	movlw	64
  2319  0665  00A6               	movwf	??_main
  2320  0666  0826               	movf	??_main,w
  2321  0667  00F5               	movwf	MIPI@b
  2322  0668  01F6               	clrf	MIPI@c
  2323  0669  01F7               	clrf	MIPI@d
  2324  066A  2F72               	goto	L3
  2325  066B                     l1426:	
  2326                           
  2327                           ;main.c: 353: else if (Byte2 == 12 && Byte3 == 0)
  2328  066B  300C               	movlw	12
  2329  066C  067D               	xorwf	_Byte2,w
  2330  066D  1D03               	btfss	3,2
  2331  066E  2E7D               	goto	l1432
  2332  066F  0020               	movlb	0	; select bank0
  2333  0670  0821               	movf	_Byte3,w
  2334  0671  1D03               	btfss	3,2
  2335  0672  2E7D               	goto	l1432
  2336                           
  2337                           ;main.c: 354: MIPI(0,0,10,64);
  2338  0673  01F5               	clrf	MIPI@b
  2339  0674  300A               	movlw	10
  2340  0675  00A6               	movwf	??_main
  2341  0676  0826               	movf	??_main,w
  2342  0677  00F6               	movwf	MIPI@c
  2343  0678  3040               	movlw	64
  2344  0679  00A7               	movwf	??_main+1
  2345  067A  0827               	movf	??_main+1,w
  2346  067B  00F7               	movwf	MIPI@d
  2347  067C  2FEA               	goto	L4
  2348  067D                     l1432:	
  2349                           
  2350                           ;main.c: 355: else if (Byte2 == 13 && Byte3 == 0)
  2351  067D  300D               	movlw	13
  2352  067E  067D               	xorwf	_Byte2,w
  2353  067F  1D03               	btfss	3,2
  2354  0680  2E8F               	goto	l1438
  2355  0681  0020               	movlb	0	; select bank0
  2356  0682  0821               	movf	_Byte3,w
  2357  0683  1D03               	btfss	3,2
  2358  0684  2E8F               	goto	l1438
  2359                           
  2360                           ;main.c: 356: MIPI(12,30,45,55);
  2361  0685  301E               	movlw	30
  2362  0686  00A6               	movwf	??_main
  2363  0687  0826               	movf	??_main,w
  2364  0688  00F5               	movwf	MIPI@b
  2365  0689  302D               	movlw	45
  2366  068A  00A7               	movwf	??_main+1
  2367  068B  0827               	movf	??_main+1,w
  2368  068C  00F6               	movwf	MIPI@c
  2369  068D  3037               	movlw	55
  2370  068E  2FB4               	goto	L5
  2371  068F                     l1438:	
  2372                           
  2373                           ;main.c: 357: else if (Byte2 == 20 && Byte3 == 0)
  2374  068F  3014               	movlw	20
  2375  0690  067D               	xorwf	_Byte2,w
  2376  0691  1D03               	btfss	3,2
  2377  0692  2EA5               	goto	l1444
  2378  0693  0020               	movlb	0	; select bank0
  2379  0694  0821               	movf	_Byte3,w
  2380  0695  1D03               	btfss	3,2
  2381  0696  2EA5               	goto	l1444
  2382                           
  2383                           ;main.c: 358: MIPI(21,21,21,21);
  2384  0697  3015               	movlw	21
  2385  0698  00A6               	movwf	??_main
  2386  0699  0826               	movf	??_main,w
  2387  069A  00F5               	movwf	MIPI@b
  2388  069B  3015               	movlw	21
  2389  069C  00A7               	movwf	??_main+1
  2390  069D  0827               	movf	??_main+1,w
  2391  069E  00F6               	movwf	MIPI@c
  2392  069F  3015               	movlw	21
  2393  06A0  00A8               	movwf	??_main+2
  2394  06A1  0828               	movf	??_main+2,w
  2395  06A2  00F7               	movwf	MIPI@d
  2396  06A3  3015               	movlw	21
  2397  06A4  2FEB               	goto	L2
  2398  06A5                     l1444:	
  2399                           
  2400                           ;main.c: 359: else if (Byte2 == 26 && Byte3 == 0)
  2401  06A5  301A               	movlw	26
  2402  06A6  067D               	xorwf	_Byte2,w
  2403  06A7  1D03               	btfss	3,2
  2404  06A8  2EB5               	goto	l1450
  2405  06A9  0020               	movlb	0	; select bank0
  2406  06AA  0821               	movf	_Byte3,w
  2407  06AB  1D03               	btfss	3,2
  2408  06AC  2EB5               	goto	l1450
  2409                           
  2410                           ;main.c: 360: MIPI(1,1,1,1);
  2411  06AD  01F5               	clrf	MIPI@b
  2412  06AE  0AF5               	incf	MIPI@b,f
  2413  06AF  01F6               	clrf	MIPI@c
  2414  06B0  0AF6               	incf	MIPI@c,f
  2415  06B1  01F7               	clrf	MIPI@d
  2416  06B2  0AF7               	incf	MIPI@d,f
  2417  06B3  3001               	movlw	1
  2418  06B4  2FEB               	goto	L2
  2419  06B5                     l1450:	
  2420                           
  2421                           ;main.c: 361: else if (Byte2 == 29 && Byte3 == 0)
  2422  06B5  301D               	movlw	29
  2423  06B6  067D               	xorwf	_Byte2,w
  2424  06B7  1D03               	btfss	3,2
  2425  06B8  2ECA               	goto	l1456
  2426  06B9  0020               	movlb	0	; select bank0
  2427  06BA  0821               	movf	_Byte3,w
  2428  06BB  1D03               	btfss	3,2
  2429  06BC  2ECA               	goto	l1456
  2430                           
  2431                           ;main.c: 362: MIPI(5,10,15,20);
  2432  06BD  300A               	movlw	10
  2433  06BE  00A6               	movwf	??_main
  2434  06BF  0826               	movf	??_main,w
  2435  06C0  00F5               	movwf	MIPI@b
  2436  06C1  300F               	movlw	15
  2437  06C2  00A7               	movwf	??_main+1
  2438  06C3  0827               	movf	??_main+1,w
  2439  06C4  00F6               	movwf	MIPI@c
  2440  06C5  3014               	movlw	20
  2441  06C6  00A8               	movwf	??_main+2
  2442  06C7  0828               	movf	??_main+2,w
  2443  06C8  00F7               	movwf	MIPI@d
  2444  06C9  2F1A               	goto	L6
  2445  06CA                     l1456:	
  2446                           
  2447                           ;main.c: 363: else if (Byte2 == 1 && Byte3 == 8)
  2448  06CA  037D               	decf	_Byte2,w
  2449  06CB  1D03               	btfss	3,2
  2450  06CC  2EE0               	goto	l1462
  2451  06CD  3008               	movlw	8
  2452  06CE  0020               	movlb	0	; select bank0
  2453  06CF  0621               	xorwf	_Byte3,w
  2454  06D0  1D03               	btfss	3,2
  2455  06D1  2EE0               	goto	l1462
  2456                           
  2457                           ;main.c: 364: MIPI(15,18,21,36);
  2458  06D2  3012               	movlw	18
  2459  06D3  00A6               	movwf	??_main
  2460  06D4  0826               	movf	??_main,w
  2461  06D5  00F5               	movwf	MIPI@b
  2462  06D6  3015               	movlw	21
  2463  06D7  00A7               	movwf	??_main+1
  2464  06D8  0827               	movf	??_main+1,w
  2465  06D9  00F6               	movwf	MIPI@c
  2466  06DA  3024               	movlw	36
  2467  06DB  00A8               	movwf	??_main+2
  2468  06DC  0828               	movf	??_main+2,w
  2469  06DD  00F7               	movwf	MIPI@d
  2470  06DE  300F               	movlw	15
  2471  06DF  2FEB               	goto	L2
  2472  06E0                     l1462:	
  2473                           
  2474                           ;main.c: 365: else if (Byte2 == 2 && Byte3 == 5)
  2475  06E0  3002               	movlw	2
  2476  06E1  067D               	xorwf	_Byte2,w
  2477  06E2  1D03               	btfss	3,2
  2478  06E3  2EF3               	goto	l1468
  2479  06E4  3005               	movlw	5
  2480  06E5  0020               	movlb	0	; select bank0
  2481  06E6  0621               	xorwf	_Byte3,w
  2482  06E7  1D03               	btfss	3,2
  2483  06E8  2EF3               	goto	l1468
  2484                           
  2485                           ;main.c: 366: MIPI(20,20,20,20);
  2486  06E9  3014               	movlw	20
  2487  06EA  00A6               	movwf	??_main
  2488  06EB  0826               	movf	??_main,w
  2489  06EC  00F5               	movwf	MIPI@b
  2490  06ED  3014               	movlw	20
  2491  06EE  00A7               	movwf	??_main+1
  2492  06EF  0827               	movf	??_main+1,w
  2493  06F0  00F6               	movwf	MIPI@c
  2494  06F1  3014               	movlw	20
  2495  06F2  2F86               	goto	L7
  2496  06F3                     l1468:	
  2497                           
  2498                           ;main.c: 367: else if (Byte2 == 2 && Byte3 == 12)
  2499  06F3  3002               	movlw	2
  2500  06F4  067D               	xorwf	_Byte2,w
  2501  06F5  1D03               	btfss	3,2
  2502  06F6  2F08               	goto	l1474
  2503  06F7  300C               	movlw	12
  2504  06F8  0020               	movlb	0	; select bank0
  2505  06F9  0621               	xorwf	_Byte3,w
  2506  06FA  1D03               	btfss	3,2
  2507  06FB  2F08               	goto	l1474
  2508                           
  2509                           ;main.c: 368: MIPI(46,1,15,64);
  2510  06FC  01F5               	clrf	MIPI@b
  2511  06FD  0AF5               	incf	MIPI@b,f
  2512  06FE  300F               	movlw	15
  2513  06FF  00A6               	movwf	??_main
  2514  0700  0826               	movf	??_main,w
  2515  0701  00F6               	movwf	MIPI@c
  2516  0702  3040               	movlw	64
  2517  0703  00A7               	movwf	??_main+1
  2518  0704  0827               	movf	??_main+1,w
  2519  0705  00F7               	movwf	MIPI@d
  2520  0706  302E               	movlw	46
  2521  0707  2FEB               	goto	L2
  2522  0708                     l1474:	
  2523                           
  2524                           ;main.c: 369: else if (Byte2 == 2 && Byte3 == 13)
  2525  0708  3002               	movlw	2
  2526  0709  067D               	xorwf	_Byte2,w
  2527  070A  1D03               	btfss	3,2
  2528  070B  2F1C               	goto	l1480
  2529  070C  300D               	movlw	13
  2530  070D  0020               	movlb	0	; select bank0
  2531  070E  0621               	xorwf	_Byte3,w
  2532  070F  1D03               	btfss	3,2
  2533  0710  2F1C               	goto	l1480
  2534                           
  2535                           ;main.c: 370: MIPI(5,20,55,0);
  2536  0711  3014               	movlw	20
  2537  0712  00A6               	movwf	??_main
  2538  0713  0826               	movf	??_main,w
  2539  0714  00F5               	movwf	MIPI@b
  2540  0715  3037               	movlw	55
  2541  0716  00A7               	movwf	??_main+1
  2542  0717  0827               	movf	??_main+1,w
  2543  0718  00F6               	movwf	MIPI@c
  2544  0719  01F7               	clrf	MIPI@d
  2545  071A                     L6:	
  2546  071A  3005               	movlw	5
  2547  071B  2FEB               	goto	L2
  2548  071C                     l1480:	
  2549                           
  2550                           ;main.c: 371: else if (Byte2 == 2 && Byte3 == 29)
  2551  071C  3002               	movlw	2
  2552  071D  067D               	xorwf	_Byte2,w
  2553  071E  1D03               	btfss	3,2
  2554  071F  2F33               	goto	l1486
  2555  0720  301D               	movlw	29
  2556  0721  0020               	movlb	0	; select bank0
  2557  0722  0621               	xorwf	_Byte3,w
  2558  0723  1D03               	btfss	3,2
  2559  0724  2F33               	goto	l1486
  2560                           
  2561                           ;main.c: 372: MIPI(7,9,35,60);
  2562  0725  3009               	movlw	9
  2563  0726  00A6               	movwf	??_main
  2564  0727  0826               	movf	??_main,w
  2565  0728  00F5               	movwf	MIPI@b
  2566  0729  3023               	movlw	35
  2567  072A  00A7               	movwf	??_main+1
  2568  072B  0827               	movf	??_main+1,w
  2569  072C  00F6               	movwf	MIPI@c
  2570  072D  303C               	movlw	60
  2571  072E  00A8               	movwf	??_main+2
  2572  072F  0828               	movf	??_main+2,w
  2573  0730  00F7               	movwf	MIPI@d
  2574  0731  3007               	movlw	7
  2575  0732  2FEB               	goto	L2
  2576  0733                     l1486:	
  2577                           
  2578                           ;main.c: 373: else if (Byte2 == 3 && Byte3 == 20)
  2579  0733  3003               	movlw	3
  2580  0734  067D               	xorwf	_Byte2,w
  2581  0735  1D03               	btfss	3,2
  2582  0736  2F46               	goto	l1492
  2583  0737  3014               	movlw	20
  2584  0738  0020               	movlb	0	; select bank0
  2585  0739  0621               	xorwf	_Byte3,w
  2586  073A  1D03               	btfss	3,2
  2587  073B  2F46               	goto	l1492
  2588                           
  2589                           ;main.c: 374: MIPI(44,55,33,11);
  2590  073C  3037               	movlw	55
  2591  073D  00A6               	movwf	??_main
  2592  073E  0826               	movf	??_main,w
  2593  073F  00F5               	movwf	MIPI@b
  2594  0740  3021               	movlw	33
  2595  0741  00A7               	movwf	??_main+1
  2596  0742  0827               	movf	??_main+1,w
  2597  0743  00F6               	movwf	MIPI@c
  2598  0744  300B               	movlw	11
  2599  0745  2FE2               	goto	L8
  2600  0746                     l1492:	
  2601                           
  2602                           ;main.c: 375: else if (Byte2 == 4 && Byte3 == 5)
  2603  0746  3004               	movlw	4
  2604  0747  067D               	xorwf	_Byte2,w
  2605  0748  1D03               	btfss	3,2
  2606  0749  2F5D               	goto	l1498
  2607  074A  3005               	movlw	5
  2608  074B  0020               	movlb	0	; select bank0
  2609  074C  0621               	xorwf	_Byte3,w
  2610  074D  1D03               	btfss	3,2
  2611  074E  2F5D               	goto	l1498
  2612                           
  2613                           ;main.c: 376: MIPI(23,34,45,56);
  2614  074F  3022               	movlw	34
  2615  0750  00A6               	movwf	??_main
  2616  0751  0826               	movf	??_main,w
  2617  0752  00F5               	movwf	MIPI@b
  2618  0753  302D               	movlw	45
  2619  0754  00A7               	movwf	??_main+1
  2620  0755  0827               	movf	??_main+1,w
  2621  0756  00F6               	movwf	MIPI@c
  2622  0757  3038               	movlw	56
  2623  0758  00A8               	movwf	??_main+2
  2624  0759  0828               	movf	??_main+2,w
  2625  075A  00F7               	movwf	MIPI@d
  2626  075B  3017               	movlw	23
  2627  075C  2FEB               	goto	L2
  2628  075D                     l1498:	
  2629                           
  2630                           ;main.c: 377: else if (Byte2 == 4 && Byte3 == 12)
  2631  075D  3004               	movlw	4
  2632  075E  067D               	xorwf	_Byte2,w
  2633  075F  1D03               	btfss	3,2
  2634  0760  2F74               	goto	l1504
  2635  0761  300C               	movlw	12
  2636  0762  0020               	movlb	0	; select bank0
  2637  0763  0621               	xorwf	_Byte3,w
  2638  0764  1D03               	btfss	3,2
  2639  0765  2F74               	goto	l1504
  2640                           
  2641                           ;main.c: 378: MIPI(10,20,30,40);
  2642  0766  3014               	movlw	20
  2643  0767  00A6               	movwf	??_main
  2644  0768  0826               	movf	??_main,w
  2645  0769  00F5               	movwf	MIPI@b
  2646  076A  301E               	movlw	30
  2647  076B  00A7               	movwf	??_main+1
  2648  076C  0827               	movf	??_main+1,w
  2649  076D  00F6               	movwf	MIPI@c
  2650  076E  3028               	movlw	40
  2651  076F  00A8               	movwf	??_main+2
  2652  0770  0828               	movf	??_main+2,w
  2653  0771  00F7               	movwf	MIPI@d
  2654  0772                     L3:	
  2655  0772  300A               	movlw	10
  2656  0773  2FEB               	goto	L2
  2657  0774                     l1504:	
  2658                           
  2659                           ;main.c: 379: else if (Byte2 == 4 && Byte3 == 13)
  2660  0774  3004               	movlw	4
  2661  0775  067D               	xorwf	_Byte2,w
  2662  0776  1D03               	btfss	3,2
  2663  0777  2F8B               	goto	l1510
  2664  0778  300D               	movlw	13
  2665  0779  0020               	movlb	0	; select bank0
  2666  077A  0621               	xorwf	_Byte3,w
  2667  077B  1D03               	btfss	3,2
  2668  077C  2F8B               	goto	l1510
  2669                           
  2670                           ;main.c: 380: MIPI(20,30,40,50);
  2671  077D  301E               	movlw	30
  2672  077E  00A6               	movwf	??_main
  2673  077F  0826               	movf	??_main,w
  2674  0780  00F5               	movwf	MIPI@b
  2675  0781  3028               	movlw	40
  2676  0782  00A7               	movwf	??_main+1
  2677  0783  0827               	movf	??_main+1,w
  2678  0784  00F6               	movwf	MIPI@c
  2679  0785  3032               	movlw	50
  2680  0786                     L7:	
  2681  0786  00A8               	movwf	??_main+2
  2682  0787  0828               	movf	??_main+2,w
  2683  0788  00F7               	movwf	MIPI@d
  2684  0789  3014               	movlw	20
  2685  078A  2FEB               	goto	L2
  2686  078B                     l1510:	
  2687                           
  2688                           ;main.c: 381: else if (Byte2 == 4 && Byte3 == 29)
  2689  078B  3004               	movlw	4
  2690  078C  067D               	xorwf	_Byte2,w
  2691  078D  1D03               	btfss	3,2
  2692  078E  2FA2               	goto	l1516
  2693  078F  301D               	movlw	29
  2694  0790  0020               	movlb	0	; select bank0
  2695  0791  0621               	xorwf	_Byte3,w
  2696  0792  1D03               	btfss	3,2
  2697  0793  2FA2               	goto	l1516
  2698                           
  2699                           ;main.c: 382: MIPI(32,21,10,55);
  2700  0794  3015               	movlw	21
  2701  0795  00A6               	movwf	??_main
  2702  0796  0826               	movf	??_main,w
  2703  0797  00F5               	movwf	MIPI@b
  2704  0798  300A               	movlw	10
  2705  0799  00A7               	movwf	??_main+1
  2706  079A  0827               	movf	??_main+1,w
  2707  079B  00F6               	movwf	MIPI@c
  2708  079C  3037               	movlw	55
  2709  079D  00A8               	movwf	??_main+2
  2710  079E  0828               	movf	??_main+2,w
  2711  079F  00F7               	movwf	MIPI@d
  2712  07A0  3020               	movlw	32
  2713  07A1  2FEB               	goto	L2
  2714  07A2                     l1516:	
  2715                           
  2716                           ;main.c: 383: else if (Byte2 == 5 && Byte3 == 30)
  2717  07A2  3005               	movlw	5
  2718  07A3  067D               	xorwf	_Byte2,w
  2719  07A4  1D03               	btfss	3,2
  2720  07A5  2FB9               	goto	l1522
  2721  07A6  301E               	movlw	30
  2722  07A7  0020               	movlb	0	; select bank0
  2723  07A8  0621               	xorwf	_Byte3,w
  2724  07A9  1D03               	btfss	3,2
  2725  07AA  2FB9               	goto	l1522
  2726                           
  2727                           ;main.c: 384: MIPI(12,24,36,48);
  2728  07AB  3018               	movlw	24
  2729  07AC  00A6               	movwf	??_main
  2730  07AD  0826               	movf	??_main,w
  2731  07AE  00F5               	movwf	MIPI@b
  2732  07AF  3024               	movlw	36
  2733  07B0  00A7               	movwf	??_main+1
  2734  07B1  0827               	movf	??_main+1,w
  2735  07B2  00F6               	movwf	MIPI@c
  2736  07B3  3030               	movlw	48
  2737  07B4                     L5:	
  2738  07B4  00A8               	movwf	??_main+2
  2739  07B5  0828               	movf	??_main+2,w
  2740  07B6  00F7               	movwf	MIPI@d
  2741  07B7  300C               	movlw	12
  2742  07B8  2FEB               	goto	L2
  2743  07B9                     l1522:	
  2744                           
  2745                           ;main.c: 385: else if (Byte2 == 7 && Byte3 == 20)
  2746  07B9  3007               	movlw	7
  2747  07BA  067D               	xorwf	_Byte2,w
  2748  07BB  1D03               	btfss	3,2
  2749  07BC  2FD0               	goto	l1528
  2750  07BD  3014               	movlw	20
  2751  07BE  0020               	movlb	0	; select bank0
  2752  07BF  0621               	xorwf	_Byte3,w
  2753  07C0  1D03               	btfss	3,2
  2754  07C1  2FD0               	goto	l1528
  2755                           
  2756                           ;main.c: 386: MIPI(9,18,27,36);
  2757  07C2  3012               	movlw	18
  2758  07C3  00A6               	movwf	??_main
  2759  07C4  0826               	movf	??_main,w
  2760  07C5  00F5               	movwf	MIPI@b
  2761  07C6  301B               	movlw	27
  2762  07C7  00A7               	movwf	??_main+1
  2763  07C8  0827               	movf	??_main+1,w
  2764  07C9  00F6               	movwf	MIPI@c
  2765  07CA  3024               	movlw	36
  2766  07CB  00A8               	movwf	??_main+2
  2767  07CC  0828               	movf	??_main+2,w
  2768  07CD  00F7               	movwf	MIPI@d
  2769  07CE  3009               	movlw	9
  2770  07CF  2FEB               	goto	L2
  2771  07D0                     l1528:	
  2772                           
  2773                           ;main.c: 387: else if (Byte2 == 12 && Byte3 == 30)
  2774  07D0  300C               	movlw	12
  2775  07D1  067D               	xorwf	_Byte2,w
  2776  07D2  1D03               	btfss	3,2
  2777  07D3  2FE7               	goto	l1534
  2778  07D4  301E               	movlw	30
  2779  07D5  0020               	movlb	0	; select bank0
  2780  07D6  0621               	xorwf	_Byte3,w
  2781  07D7  1D03               	btfss	3,2
  2782  07D8  2FE7               	goto	l1534
  2783                           
  2784                           ;main.c: 388: MIPI(44,44,44,44);
  2785  07D9  302C               	movlw	44
  2786  07DA  00A6               	movwf	??_main
  2787  07DB  0826               	movf	??_main,w
  2788  07DC  00F5               	movwf	MIPI@b
  2789  07DD  302C               	movlw	44
  2790  07DE  00A7               	movwf	??_main+1
  2791  07DF  0827               	movf	??_main+1,w
  2792  07E0  00F6               	movwf	MIPI@c
  2793  07E1  302C               	movlw	44
  2794  07E2                     L8:	
  2795  07E2  00A8               	movwf	??_main+2
  2796  07E3  0828               	movf	??_main+2,w
  2797  07E4  00F7               	movwf	MIPI@d
  2798  07E5  302C               	movlw	44
  2799  07E6  2FEB               	goto	L2
  2800  07E7                     l1534:	
  2801                           
  2802                           ;main.c: 389: else
  2803                           ;main.c: 390: MIPI(0,0,0,0);
  2804  07E7  01F5               	clrf	MIPI@b
  2805  07E8  01F6               	clrf	MIPI@c
  2806  07E9  01F7               	clrf	MIPI@d
  2807  07EA                     L4:	
  2808  07EA  3000               	movlw	0
  2809  07EB                     L2:	
  2810  07EB  3183  2391  3185   	fcall	_MIPI
  2811                           
  2812                           ;main.c: 427: do { LATA1 = 1; } while(0);
  2813  07EE  0022               	movlb	2	; select bank2
  2814  07EF  148C               	bsf	12,1	;volatile
  2815                           
  2816                           ;main.c: 428: ConfigureShiftRegister();
  2817  07F0  3184  24A1  3185   	fcall	_ConfigureShiftRegister
  2818                           
  2819                           ;main.c: 429: do { LATA1 = 0; } while(0);
  2820  07F3  0022               	movlb	2	; select bank2
  2821  07F4  108C               	bcf	12,1	;volatile
  2822  07F5  2DD9               	goto	l1384
  2823  07F6                     __end_of_main:	
  2824                           
  2825                           	psect	text1
  2826  032A                     __ptext1:	
  2827 ;; *************** function _SYSTEM_Initialize *****************
  2828 ;; Defined at:
  2829 ;;		line 75 in file "mcc_generated_files/mcc.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;		None
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;		None
  2834 ;; Return value:  Size  Location     Type
  2835 ;;		None               void
  2836 ;; Registers used:
  2837 ;;		wreg, status,2, status,0, pclath, cstack
  2838 ;; Tracked objects:
  2839 ;;		On entry : 0/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2843 ;;      Params:         0       0       0       0       0       0       0       0
  2844 ;;      Locals:         0       0       0       0       0       0       0       0
  2845 ;;      Temps:          0       0       0       0       0       0       0       0
  2846 ;;      Totals:         0       0       0       0       0       0       0       0
  2847 ;;Total ram usage:        0 bytes
  2848 ;; Hardware stack levels used:    1
  2849 ;; Hardware stack levels required when called:    1
  2850 ;; This function calls:
  2851 ;;		_DAC1_Initialize
  2852 ;;		_OSCILLATOR_Initialize
  2853 ;;		_PIN_MANAGER_Initialize
  2854 ;; This function is called by:
  2855 ;;		_main
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859                           
  2860                           ;psect for function _SYSTEM_Initialize
  2861  032A                     _SYSTEM_Initialize:	
  2862                           
  2863                           ;mcc.c: 76: OSCILLATOR_Initialize();
  2864                           
  2865                           ;incstack = 0
  2866                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2867  032A  3183  2324  3183   	fcall	_OSCILLATOR_Initialize
  2868                           
  2869                           ;mcc.c: 77: PIN_MANAGER_Initialize();
  2870  032D  3183  234F  3183   	fcall	_PIN_MANAGER_Initialize
  2871                           
  2872                           ;mcc.c: 78: DAC1_Initialize();
  2873  0330  3183  231F         	fcall	_DAC1_Initialize
  2874  0332  0008               	return
  2875  0333                     __end_of_SYSTEM_Initialize:	
  2876                           
  2877                           	psect	text2
  2878  034F                     __ptext2:	
  2879 ;; *************** function _PIN_MANAGER_Initialize *****************
  2880 ;; Defined at:
  2881 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;		None
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;		None
  2886 ;; Return value:  Size  Location     Type
  2887 ;;		None               void
  2888 ;; Registers used:
  2889 ;;		wreg, status,2
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2895 ;;      Params:         0       0       0       0       0       0       0       0
  2896 ;;      Locals:         0       0       0       0       0       0       0       0
  2897 ;;      Temps:          0       0       0       0       0       0       0       0
  2898 ;;      Totals:         0       0       0       0       0       0       0       0
  2899 ;;Total ram usage:        0 bytes
  2900 ;; Hardware stack levels used:    1
  2901 ;; This function calls:
  2902 ;;		Nothing
  2903 ;; This function is called by:
  2904 ;;		_SYSTEM_Initialize
  2905 ;;		_main
  2906 ;; This function uses a non-reentrant model
  2907 ;;
  2908                           
  2909                           
  2910                           ;psect for function _PIN_MANAGER_Initialize
  2911  034F                     _PIN_MANAGER_Initialize:	
  2912                           
  2913                           ;pin_manager.c: 51: LATA = 0x00;
  2914                           
  2915                           ;incstack = 0
  2916                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2917  034F  0022               	movlb	2	; select bank2
  2918  0350  018C               	clrf	12	;volatile
  2919                           
  2920                           ;pin_manager.c: 52: TRISA = 0x28;
  2921  0351  3028               	movlw	40
  2922  0352  0021               	movlb	1	; select bank1
  2923  0353  008C               	movwf	12	;volatile
  2924                           
  2925                           ;pin_manager.c: 53: ANSELA = 0x01;
  2926  0354  3001               	movlw	1
  2927  0355  0023               	movlb	3	; select bank3
  2928  0356  008C               	movwf	12	;volatile
  2929                           
  2930                           ;pin_manager.c: 55: LATB = 0x00;
  2931  0357  0022               	movlb	2	; select bank2
  2932  0358  018D               	clrf	13	;volatile
  2933                           
  2934                           ;pin_manager.c: 56: TRISB = 0x00;
  2935  0359  0021               	movlb	1	; select bank1
  2936  035A  018D               	clrf	13	;volatile
  2937                           
  2938                           ;pin_manager.c: 57: ANSELB = 0x00;
  2939  035B  0023               	movlb	3	; select bank3
  2940  035C  018D               	clrf	13	;volatile
  2941                           
  2942                           ;pin_manager.c: 58: WPUB = 0x00;
  2943  035D  0024               	movlb	4	; select bank4
  2944  035E  018D               	clrf	13	;volatile
  2945                           
  2946                           ;pin_manager.c: 60: LATC = 0x00;
  2947  035F  0022               	movlb	2	; select bank2
  2948  0360  018E               	clrf	14	;volatile
  2949                           
  2950                           ;pin_manager.c: 61: TRISC = 0xFF;
  2951  0361  30FF               	movlw	255
  2952  0362  0021               	movlb	1	; select bank1
  2953  0363  008E               	movwf	14	;volatile
  2954                           
  2955                           ;pin_manager.c: 62: ANSELC = 0x00;
  2956  0364  0023               	movlb	3	; select bank3
  2957  0365  018E               	clrf	14	;volatile
  2958                           
  2959                           ;pin_manager.c: 63: WPUC = 0x00;
  2960  0366  0024               	movlb	4	; select bank4
  2961  0367  018E               	clrf	14	;volatile
  2962                           
  2963                           ;pin_manager.c: 65: OPTION_REGbits.nWPUEN = 0x01;
  2964  0368  0021               	movlb	1	; select bank1
  2965  0369  1795               	bsf	21,7	;volatile
  2966  036A  0008               	return
  2967  036B                     __end_of_PIN_MANAGER_Initialize:	
  2968                           
  2969                           	psect	text3
  2970  0324                     __ptext3:	
  2971 ;; *************** function _OSCILLATOR_Initialize *****************
  2972 ;; Defined at:
  2973 ;;		line 81 in file "mcc_generated_files/mcc.c"
  2974 ;; Parameters:    Size  Location     Type
  2975 ;;		None
  2976 ;; Auto vars:     Size  Location     Type
  2977 ;;		None
  2978 ;; Return value:  Size  Location     Type
  2979 ;;		None               void
  2980 ;; Registers used:
  2981 ;;		wreg, status,2
  2982 ;; Tracked objects:
  2983 ;;		On entry : 0/0
  2984 ;;		On exit  : 0/0
  2985 ;;		Unchanged: 0/0
  2986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2987 ;;      Params:         0       0       0       0       0       0       0       0
  2988 ;;      Locals:         0       0       0       0       0       0       0       0
  2989 ;;      Temps:          0       0       0       0       0       0       0       0
  2990 ;;      Totals:         0       0       0       0       0       0       0       0
  2991 ;;Total ram usage:        0 bytes
  2992 ;; Hardware stack levels used:    1
  2993 ;; This function calls:
  2994 ;;		Nothing
  2995 ;; This function is called by:
  2996 ;;		_SYSTEM_Initialize
  2997 ;; This function uses a non-reentrant model
  2998 ;;
  2999                           
  3000                           
  3001                           ;psect for function _OSCILLATOR_Initialize
  3002  0324                     _OSCILLATOR_Initialize:	
  3003                           
  3004                           ;mcc.c: 83: OSCCON = 0x7A;
  3005                           
  3006                           ;incstack = 0
  3007                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3008  0324  307A               	movlw	122
  3009  0325  0021               	movlb	1	; select bank1
  3010  0326  0099               	movwf	25	;volatile
  3011                           
  3012                           ;mcc.c: 85: OSCSTAT = 0x00;
  3013  0327  019A               	clrf	26	;volatile
  3014                           
  3015                           ;mcc.c: 87: OSCTUNE = 0x00;
  3016  0328  0198               	clrf	24	;volatile
  3017  0329  0008               	return
  3018  032A                     __end_of_OSCILLATOR_Initialize:	
  3019                           
  3020                           	psect	text4
  3021  031F                     __ptext4:	
  3022 ;; *************** function _DAC1_Initialize *****************
  3023 ;; Defined at:
  3024 ;;		line 58 in file "mcc_generated_files/dac1.c"
  3025 ;; Parameters:    Size  Location     Type
  3026 ;;		None
  3027 ;; Auto vars:     Size  Location     Type
  3028 ;;		None
  3029 ;; Return value:  Size  Location     Type
  3030 ;;		None               void
  3031 ;; Registers used:
  3032 ;;		wreg, status,2
  3033 ;; Tracked objects:
  3034 ;;		On entry : 0/0
  3035 ;;		On exit  : 0/0
  3036 ;;		Unchanged: 0/0
  3037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3038 ;;      Params:         0       0       0       0       0       0       0       0
  3039 ;;      Locals:         0       0       0       0       0       0       0       0
  3040 ;;      Temps:          0       0       0       0       0       0       0       0
  3041 ;;      Totals:         0       0       0       0       0       0       0       0
  3042 ;;Total ram usage:        0 bytes
  3043 ;; Hardware stack levels used:    1
  3044 ;; This function calls:
  3045 ;;		Nothing
  3046 ;; This function is called by:
  3047 ;;		_SYSTEM_Initialize
  3048 ;;		_main
  3049 ;; This function uses a non-reentrant model
  3050 ;;
  3051                           
  3052                           
  3053                           ;psect for function _DAC1_Initialize
  3054  031F                     _DAC1_Initialize:	
  3055                           
  3056                           ;dac1.c: 60: DAC1CON0 = 0xA0;
  3057                           
  3058                           ;incstack = 0
  3059                           ; Regs used in _DAC1_Initialize: [wreg+status,2]
  3060  031F  30A0               	movlw	160
  3061  0320  0022               	movlb	2	; select bank2
  3062  0321  0098               	movwf	24	;volatile
  3063                           
  3064                           ;dac1.c: 62: DAC1CON1 = 0x00;
  3065  0322  0199               	clrf	25	;volatile
  3066  0323  0008               	return
  3067  0324                     __end_of_DAC1_Initialize:	
  3068                           
  3069                           	psect	text5
  3070  0391                     __ptext5:	
  3071 ;; *************** function _MIPI *****************
  3072 ;; Defined at:
  3073 ;;		line 162 in file "main.c"
  3074 ;; Parameters:    Size  Location     Type
  3075 ;;  a               1    wreg     unsigned char 
  3076 ;;  b               1    5[COMMON] unsigned char 
  3077 ;;  c               1    6[COMMON] unsigned char 
  3078 ;;  d               1    7[COMMON] unsigned char 
  3079 ;; Auto vars:     Size  Location     Type
  3080 ;;  a               1   10[COMMON] unsigned char 
  3081 ;;  j               1   11[COMMON] unsigned char 
  3082 ;;  i               1   12[COMMON] unsigned char 
  3083 ;; Return value:  Size  Location     Type
  3084 ;;		None               void
  3085 ;; Registers used:
  3086 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3087 ;; Tracked objects:
  3088 ;;		On entry : 0/0
  3089 ;;		On exit  : 0/0
  3090 ;;		Unchanged: 0/0
  3091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3092 ;;      Params:         3       0       0       0       0       0       0       0
  3093 ;;      Locals:         3       0       0       0       0       0       0       0
  3094 ;;      Temps:          2       0       0       0       0       0       0       0
  3095 ;;      Totals:         8       0       0       0       0       0       0       0
  3096 ;;Total ram usage:        8 bytes
  3097 ;; Hardware stack levels used:    1
  3098 ;; Hardware stack levels required when called:    1
  3099 ;; This function calls:
  3100 ;;		_paritycheck
  3101 ;;		_shiftRegister
  3102 ;; This function is called by:
  3103 ;;		_main
  3104 ;; This function uses a non-reentrant model
  3105 ;;
  3106                           
  3107                           
  3108                           ;psect for function _MIPI
  3109  0391                     _MIPI:	
  3110                           
  3111                           ;incstack = 0
  3112                           ; Regs used in _MIPI: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3113                           ;MIPI@a stored from wreg
  3114  0391  00FA               	movwf	MIPI@a
  3115                           
  3116                           ;main.c: 163: parity1 = paritycheck(DATA[a]);
  3117  0392  087A               	movf	MIPI@a,w
  3118  0393  3E00               	addlw	low (_DATA| (0+32768))
  3119  0394  0084               	movwf	4
  3120  0395  3088               	movlw	high (_DATA| (0+32768))
  3121  0396  1803               	skipnc
  3122  0397  3E01               	addlw	1
  3123  0398  0085               	movwf	5
  3124  0399  0800               	movf	0,w	;code access
  3125  039A  3183  2333  3183   	fcall	_paritycheck
  3126  039D  00F8               	movwf	??_MIPI
  3127  039E  0878               	movf	??_MIPI,w
  3128  039F  0020               	movlb	0	; select bank0
  3129  03A0  00A2               	movwf	_parity1
  3130                           
  3131                           ;main.c: 164: parity2 = paritycheck(DATA[b]);
  3132  03A1  0875               	movf	MIPI@b,w
  3133  03A2  3E00               	addlw	low (_DATA| (0+32768))
  3134  03A3  0084               	movwf	4
  3135  03A4  3088               	movlw	high (_DATA| (0+32768))
  3136  03A5  1803               	skipnc
  3137  03A6  3E01               	addlw	1
  3138  03A7  0085               	movwf	5
  3139  03A8  0800               	movf	0,w	;code access
  3140  03A9  3183  2333  3183   	fcall	_paritycheck
  3141  03AC  00F8               	movwf	??_MIPI
  3142  03AD  0878               	movf	??_MIPI,w
  3143  03AE  0020               	movlb	0	; select bank0
  3144  03AF  00A3               	movwf	_parity2
  3145                           
  3146                           ;main.c: 165: parity3 = paritycheck(DATA[c]);
  3147  03B0  0876               	movf	MIPI@c,w
  3148  03B1  3E00               	addlw	low (_DATA| (0+32768))
  3149  03B2  0084               	movwf	4
  3150  03B3  3088               	movlw	high (_DATA| (0+32768))
  3151  03B4  1803               	skipnc
  3152  03B5  3E01               	addlw	1
  3153  03B6  0085               	movwf	5
  3154  03B7  0800               	movf	0,w	;code access
  3155  03B8  3183  2333  3183   	fcall	_paritycheck
  3156  03BB  00F8               	movwf	??_MIPI
  3157  03BC  0878               	movf	??_MIPI,w
  3158  03BD  0020               	movlb	0	; select bank0
  3159  03BE  00A4               	movwf	_parity3
  3160                           
  3161                           ;main.c: 166: parity4 = paritycheck(DATA[d]);
  3162  03BF  0877               	movf	MIPI@d,w
  3163  03C0  3E00               	addlw	low (_DATA| (0+32768))
  3164  03C1  0084               	movwf	4
  3165  03C2  3088               	movlw	high (_DATA| (0+32768))
  3166  03C3  1803               	skipnc
  3167  03C4  3E01               	addlw	1
  3168  03C5  0085               	movwf	5
  3169  03C6  0800               	movf	0,w	;code access
  3170  03C7  3183  2333  3183   	fcall	_paritycheck
  3171  03CA  00F8               	movwf	??_MIPI
  3172  03CB  0878               	movf	??_MIPI,w
  3173  03CC  0020               	movlb	0	; select bank0
  3174  03CD  00A5               	movwf	_parity4
  3175                           
  3176                           ;main.c: 167: for (uint8_t i=0; i<2; i++){
  3177  03CE  01FC               	clrf	MIPI@i
  3178  03CF                     L11:	
  3179  03CF  3002               	movlw	2
  3180  03D0  027C               	subwf	MIPI@i,w
  3181  03D1  1803               	btfsc	3,0
  3182  03D2  0008               	return
  3183                           
  3184                           ;main.c: 168: for (uint8_t j=0; j<2; j++){
  3185  03D3  01FB               	clrf	MIPI@j
  3186  03D4  3002               	movlw	2
  3187  03D5  027B               	subwf	MIPI@j,w
  3188  03D6  1803               	btfsc	3,0
  3189  03D7  2C9C               	goto	l1218
  3190  03D8                     l128:	
  3191                           ;main.c: 169: do { LATB7 = 1; } while(0);
  3192                           
  3193  03D8  0022               	movlb	2	; select bank2
  3194  03D9  178D               	bsf	13,7	;volatile
  3195                           
  3196                           ;main.c: 170: do { LATB5 = 1; } while(0);
  3197  03DA  168D               	bsf	13,5	;volatile
  3198  03DB  0000               	nop	;# 
  3199                           
  3200                           ;main.c: 172: do { LATB7 = 0; } while(0);
  3201  03DC  0022               	movlb	2	; select bank2
  3202  03DD  138D               	bcf	13,7	;volatile
  3203                           
  3204                           ;main.c: 173: do { LATB5 = 0; } while(0);
  3205  03DE  128D               	bcf	13,5	;volatile
  3206                           
  3207                           ;main.c: 174: shiftRegister (SLAVEADD[i],SLAVEADD[i],4);
  3208  03DF  087C               	movf	MIPI@i,w
  3209  03E0  3E87               	addlw	low (_SLAVEADD| (0+32768))
  3210  03E1  0084               	movwf	4
  3211  03E2  3088               	movlw	high (_SLAVEADD| (0+32768))
  3212  03E3  1803               	skipnc
  3213  03E4  3E01               	addlw	1
  3214  03E5  0085               	movwf	5
  3215  03E6  0800               	movf	0,w	;code access
  3216  03E7  00F8               	movwf	??_MIPI
  3217  03E8  0878               	movf	??_MIPI,w
  3218  03E9  00F0               	movwf	shiftRegister@Dummy2
  3219  03EA  3004               	movlw	4
  3220  03EB  00F9               	movwf	??_MIPI+1
  3221  03EC  0879               	movf	??_MIPI+1,w
  3222  03ED  00F1               	movwf	shiftRegister@y
  3223  03EE  087C               	movf	MIPI@i,w
  3224  03EF  3E87               	addlw	low (_SLAVEADD| (0+32768))
  3225  03F0  0084               	movwf	4
  3226  03F1  3088               	movlw	high (_SLAVEADD| (0+32768))
  3227  03F2  1803               	skipnc
  3228  03F3  3E01               	addlw	1
  3229  03F4  0085               	movwf	5
  3230  03F5  0800               	movf	0,w	;code access
  3231  03F6  3183  236B  3183   	fcall	_shiftRegister
  3232                           
  3233                           ;main.c: 175: shiftRegister (0x02,0x02,3);
  3234  03F9  3002               	movlw	2
  3235  03FA  00F8               	movwf	??_MIPI
  3236  03FB  0878               	movf	??_MIPI,w
  3237  03FC  00F0               	movwf	shiftRegister@Dummy2
  3238  03FD  3003               	movlw	3
  3239  03FE  00F9               	movwf	??_MIPI+1
  3240  03FF  0879               	movf	??_MIPI+1,w
  3241  0400  00F1               	movwf	shiftRegister@y
  3242  0401  3002               	movlw	2
  3243  0402  3183  236B  3183   	fcall	_shiftRegister
  3244                           
  3245                           ;main.c: 176: shiftRegister (REGADD[j],REGADD[j],5);
  3246  0405  087B               	movf	MIPI@j,w
  3247  0406  3E85               	addlw	low (_REGADD| (0+32768))
  3248  0407  0084               	movwf	4
  3249  0408  3088               	movlw	high (_REGADD| (0+32768))
  3250  0409  1803               	skipnc
  3251  040A  3E01               	addlw	1
  3252  040B  0085               	movwf	5
  3253  040C  0800               	movf	0,w	;code access
  3254  040D  00F8               	movwf	??_MIPI
  3255  040E  0878               	movf	??_MIPI,w
  3256  040F  00F0               	movwf	shiftRegister@Dummy2
  3257  0410  3005               	movlw	5
  3258  0411  00F9               	movwf	??_MIPI+1
  3259  0412  0879               	movf	??_MIPI+1,w
  3260  0413  00F1               	movwf	shiftRegister@y
  3261  0414  087B               	movf	MIPI@j,w
  3262  0415  3E85               	addlw	low (_REGADD| (0+32768))
  3263  0416  0084               	movwf	4
  3264  0417  3088               	movlw	high (_REGADD| (0+32768))
  3265  0418  1803               	skipnc
  3266  0419  3E01               	addlw	1
  3267  041A  0085               	movwf	5
  3268  041B  0800               	movf	0,w	;code access
  3269  041C  3183  236B  3183   	fcall	_shiftRegister
  3270                           
  3271                           ;main.c: 177: if (i==0)
  3272  041F  087C               	movf	MIPI@i,w
  3273  0420  1D03               	btfss	3,2
  3274  0421  2C28               	goto	l1198
  3275                           
  3276                           ;main.c: 178: shiftRegister (0x01,0x01,1);
  3277  0422  01F0               	clrf	shiftRegister@Dummy2
  3278  0423  0AF0               	incf	shiftRegister@Dummy2,f
  3279  0424  01F1               	clrf	shiftRegister@y
  3280  0425  0AF1               	incf	shiftRegister@y,f
  3281  0426  3001               	movlw	1
  3282  0427  2C2C               	goto	L9
  3283  0428                     l1198:	
  3284                           
  3285                           ;main.c: 179: else
  3286                           ;main.c: 180: shiftRegister (0x00,0x00,1);
  3287  0428  01F0               	clrf	shiftRegister@Dummy2
  3288  0429  01F1               	clrf	shiftRegister@y
  3289  042A  0AF1               	incf	shiftRegister@y,f
  3290  042B  3000               	movlw	0
  3291  042C                     L9:	
  3292  042C  3183  236B  3183   	fcall	_shiftRegister
  3293                           
  3294                           ;main.c: 181: if (j==0){
  3295  042F  087B               	movf	MIPI@j,w
  3296  0430  1D03               	btfss	3,2
  3297  0431  2C43               	goto	l1204
  3298                           
  3299                           ;main.c: 182: shiftRegister (0x00,0x00,8);
  3300  0432  01F0               	clrf	shiftRegister@Dummy2
  3301  0433  3008               	movlw	8
  3302  0434  00F8               	movwf	??_MIPI
  3303  0435  0878               	movf	??_MIPI,w
  3304  0436  00F1               	movwf	shiftRegister@y
  3305  0437  3000               	movlw	0
  3306  0438  3183  236B  3183   	fcall	_shiftRegister
  3307                           
  3308                           ;main.c: 183: shiftRegister (0x01,0x01,2);
  3309  043B  01F0               	clrf	shiftRegister@Dummy2
  3310  043C  0AF0               	incf	shiftRegister@Dummy2,f
  3311  043D  3002               	movlw	2
  3312  043E  00F8               	movwf	??_MIPI
  3313  043F  0878               	movf	??_MIPI,w
  3314  0440  00F1               	movwf	shiftRegister@y
  3315  0441  3001               	movlw	1
  3316  0442  2C8F               	goto	L10
  3317  0443                     l1204:	
  3318                           ;main.c: 184: }
  3319                           
  3320                           
  3321                           ;main.c: 185: else{
  3322                           ;main.c: 186: if (i==0){
  3323  0443  087C               	movf	MIPI@i,w
  3324  0444  1D03               	btfss	3,2
  3325  0445  2C6B               	goto	l1210
  3326                           
  3327                           ;main.c: 187: shiftRegister (DATA[a],DATA[c],8);
  3328  0446  0876               	movf	MIPI@c,w
  3329  0447  3E00               	addlw	low (_DATA| (0+32768))
  3330  0448  0084               	movwf	4
  3331  0449  3088               	movlw	high (_DATA| (0+32768))
  3332  044A  1803               	skipnc
  3333  044B  3E01               	addlw	1
  3334  044C  0085               	movwf	5
  3335  044D  0800               	movf	0,w	;code access
  3336  044E  00F8               	movwf	??_MIPI
  3337  044F  0878               	movf	??_MIPI,w
  3338  0450  00F0               	movwf	shiftRegister@Dummy2
  3339  0451  3008               	movlw	8
  3340  0452  00F9               	movwf	??_MIPI+1
  3341  0453  0879               	movf	??_MIPI+1,w
  3342  0454  00F1               	movwf	shiftRegister@y
  3343  0455  087A               	movf	MIPI@a,w
  3344  0456  3E00               	addlw	low (_DATA| (0+32768))
  3345  0457  0084               	movwf	4
  3346  0458  3088               	movlw	high (_DATA| (0+32768))
  3347  0459  1803               	skipnc
  3348  045A  3E01               	addlw	1
  3349  045B  0085               	movwf	5
  3350  045C  0800               	movf	0,w	;code access
  3351  045D  3183  236B  3183   	fcall	_shiftRegister
  3352                           
  3353                           ;main.c: 188: shiftRegister (parity1,parity3,2);
  3354  0460  0020               	movlb	0	; select bank0
  3355  0461  0824               	movf	_parity3,w
  3356  0462  00F8               	movwf	??_MIPI
  3357  0463  0878               	movf	??_MIPI,w
  3358  0464  00F0               	movwf	shiftRegister@Dummy2
  3359  0465  3002               	movlw	2
  3360  0466  00F9               	movwf	??_MIPI+1
  3361  0467  0879               	movf	??_MIPI+1,w
  3362  0468  00F1               	movwf	shiftRegister@y
  3363  0469  0822               	movf	_parity1,w
  3364  046A  2C8F               	goto	L10
  3365  046B                     l1210:	
  3366                           ;main.c: 189: }else{
  3367                           
  3368                           
  3369                           ;main.c: 190: shiftRegister (DATA[b],DATA[d],8);
  3370  046B  0877               	movf	MIPI@d,w
  3371  046C  3E00               	addlw	low (_DATA| (0+32768))
  3372  046D  0084               	movwf	4
  3373  046E  3088               	movlw	high (_DATA| (0+32768))
  3374  046F  1803               	skipnc
  3375  0470  3E01               	addlw	1
  3376  0471  0085               	movwf	5
  3377  0472  0800               	movf	0,w	;code access
  3378  0473  00F8               	movwf	??_MIPI
  3379  0474  0878               	movf	??_MIPI,w
  3380  0475  00F0               	movwf	shiftRegister@Dummy2
  3381  0476  3008               	movlw	8
  3382  0477  00F9               	movwf	??_MIPI+1
  3383  0478  0879               	movf	??_MIPI+1,w
  3384  0479  00F1               	movwf	shiftRegister@y
  3385  047A  0875               	movf	MIPI@b,w
  3386  047B  3E00               	addlw	low (_DATA| (0+32768))
  3387  047C  0084               	movwf	4
  3388  047D  3088               	movlw	high (_DATA| (0+32768))
  3389  047E  1803               	skipnc
  3390  047F  3E01               	addlw	1
  3391  0480  0085               	movwf	5
  3392  0481  0800               	movf	0,w	;code access
  3393  0482  3183  236B  3183   	fcall	_shiftRegister
  3394                           
  3395                           ;main.c: 191: shiftRegister (parity2,parity4,2);
  3396  0485  0020               	movlb	0	; select bank0
  3397  0486  0825               	movf	_parity4,w
  3398  0487  00F8               	movwf	??_MIPI
  3399  0488  0878               	movf	??_MIPI,w
  3400  0489  00F0               	movwf	shiftRegister@Dummy2
  3401  048A  3002               	movlw	2
  3402  048B  00F9               	movwf	??_MIPI+1
  3403  048C  0879               	movf	??_MIPI+1,w
  3404  048D  00F1               	movwf	shiftRegister@y
  3405  048E  0823               	movf	_parity2,w
  3406  048F                     L10:	
  3407  048F  3183  236B  3183   	fcall	_shiftRegister
  3408  0492  0000               	nop	;# 
  3409  0493  0000               	nop	;# 
  3410  0494  3001               	movlw	1
  3411  0495  00F8               	movwf	??_MIPI
  3412  0496  0878               	movf	??_MIPI,w
  3413  0497  07FB               	addwf	MIPI@j,f
  3414  0498  3002               	movlw	2
  3415  0499  027B               	subwf	MIPI@j,w
  3416  049A  1C03               	skipc
  3417  049B  2BD8               	goto	l128
  3418  049C                     l1218:	
  3419  049C  3001               	movlw	1
  3420  049D  00F8               	movwf	??_MIPI
  3421  049E  0878               	movf	??_MIPI,w
  3422  049F  07FC               	addwf	MIPI@i,f
  3423  04A0  2BCF               	goto	L11
  3424  04A1                     __end_of_MIPI:	
  3425                           
  3426                           	psect	text6
  3427  036B                     __ptext6:	
  3428 ;; *************** function _shiftRegister *****************
  3429 ;; Defined at:
  3430 ;;		line 139 in file "main.c"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;  Dummy1          1    wreg     unsigned char 
  3433 ;;  Dummy2          1    0[COMMON] unsigned char 
  3434 ;;  y               1    1[COMMON] unsigned char 
  3435 ;; Auto vars:     Size  Location     Type
  3436 ;;  Dummy1          1    4[COMMON] unsigned char 
  3437 ;;  m               1    3[COMMON] unsigned char 
  3438 ;; Return value:  Size  Location     Type
  3439 ;;		None               void
  3440 ;; Registers used:
  3441 ;;		wreg, status,2, status,0
  3442 ;; Tracked objects:
  3443 ;;		On entry : 0/0
  3444 ;;		On exit  : 0/0
  3445 ;;		Unchanged: 0/0
  3446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3447 ;;      Params:         2       0       0       0       0       0       0       0
  3448 ;;      Locals:         2       0       0       0       0       0       0       0
  3449 ;;      Temps:          1       0       0       0       0       0       0       0
  3450 ;;      Totals:         5       0       0       0       0       0       0       0
  3451 ;;Total ram usage:        5 bytes
  3452 ;; Hardware stack levels used:    1
  3453 ;; This function calls:
  3454 ;;		Nothing
  3455 ;; This function is called by:
  3456 ;;		_MIPI
  3457 ;; This function uses a non-reentrant model
  3458 ;;
  3459                           
  3460                           
  3461                           ;psect for function _shiftRegister
  3462  036B                     _shiftRegister:	
  3463                           
  3464                           ;incstack = 0
  3465                           ; Regs used in _shiftRegister: [wreg+status,2+status,0]
  3466                           ;shiftRegister@Dummy1 stored from wreg
  3467  036B  00F4               	movwf	shiftRegister@Dummy1
  3468                           
  3469                           ;main.c: 140: for (uint8_t m=0; m<y; m++){
  3470  036C  01F3               	clrf	shiftRegister@m
  3471  036D                     l1152:	
  3472  036D  0871               	movf	shiftRegister@y,w
  3473  036E  0273               	subwf	shiftRegister@m,w
  3474  036F  1803               	btfsc	3,0
  3475  0370  0008               	return
  3476                           
  3477                           ;main.c: 141: do { LATB6 = 1; } while(0);
  3478  0371  0022               	movlb	2	; select bank2
  3479  0372  170D               	bsf	13,6	;volatile
  3480                           
  3481                           ;main.c: 142: LATB7 = Dummy1 & 0x01;
  3482  0373  1C74               	btfss	shiftRegister@Dummy1,0
  3483  0374  2B78               	goto	u1230
  3484  0375  0022               	movlb	2	; select bank2
  3485  0376  178D               	bsf	13,7	;volatile
  3486  0377  2B7A               	goto	l1142
  3487  0378                     u1230:	
  3488  0378  0022               	movlb	2	; select bank2
  3489  0379  138D               	bcf	13,7	;volatile
  3490  037A                     l1142:	
  3491                           
  3492                           ;main.c: 143: LATB5 = Dummy2 & 0x01;
  3493  037A  1C70               	btfss	shiftRegister@Dummy2,0
  3494  037B  2B7F               	goto	u1250
  3495  037C  0022               	movlb	2	; select bank2
  3496  037D  168D               	bsf	13,5	;volatile
  3497  037E  2B81               	goto	u1264
  3498  037F                     u1250:	
  3499  037F  0022               	movlb	2	; select bank2
  3500  0380  128D               	bcf	13,5	;volatile
  3501  0381                     u1264:	
  3502  0381  0000               	nop	;# 
  3503                           
  3504                           ;main.c: 145: do { LATB6 = 0; } while(0);
  3505  0382  0022               	movlb	2	; select bank2
  3506  0383  130D               	bcf	13,6	;volatile
  3507                           
  3508                           ;main.c: 146: Dummy1 = Dummy1 >> 1;
  3509  0384  3674               	lsrf	shiftRegister@Dummy1,w
  3510  0385  00F2               	movwf	??_shiftRegister
  3511  0386  0872               	movf	??_shiftRegister,w
  3512  0387  00F4               	movwf	shiftRegister@Dummy1
  3513                           
  3514                           ;main.c: 147: Dummy2 = Dummy2 >> 1;
  3515  0388  3670               	lsrf	shiftRegister@Dummy2,w
  3516  0389  00F2               	movwf	??_shiftRegister
  3517  038A  0872               	movf	??_shiftRegister,w
  3518  038B  00F0               	movwf	shiftRegister@Dummy2
  3519  038C  3001               	movlw	1
  3520  038D  00F2               	movwf	??_shiftRegister
  3521  038E  0872               	movf	??_shiftRegister,w
  3522  038F  07F3               	addwf	shiftRegister@m,f
  3523  0390  2B6D               	goto	l1152
  3524  0391                     __end_of_shiftRegister:	
  3525                           
  3526                           	psect	text7
  3527  0333                     __ptext7:	
  3528 ;; *************** function _paritycheck *****************
  3529 ;; Defined at:
  3530 ;;		line 151 in file "main.c"
  3531 ;; Parameters:    Size  Location     Type
  3532 ;;  Dummy           1    wreg     unsigned char 
  3533 ;; Auto vars:     Size  Location     Type
  3534 ;;  Dummy           1    2[COMMON] unsigned char 
  3535 ;;  parity          1    1[COMMON] unsigned char 
  3536 ;; Return value:  Size  Location     Type
  3537 ;;                  1    wreg      unsigned char 
  3538 ;; Registers used:
  3539 ;;		wreg, status,2, status,0
  3540 ;; Tracked objects:
  3541 ;;		On entry : 0/0
  3542 ;;		On exit  : 0/0
  3543 ;;		Unchanged: 0/0
  3544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3545 ;;      Params:         0       0       0       0       0       0       0       0
  3546 ;;      Locals:         2       0       0       0       0       0       0       0
  3547 ;;      Temps:          1       0       0       0       0       0       0       0
  3548 ;;      Totals:         3       0       0       0       0       0       0       0
  3549 ;;Total ram usage:        3 bytes
  3550 ;; Hardware stack levels used:    1
  3551 ;; This function calls:
  3552 ;;		Nothing
  3553 ;; This function is called by:
  3554 ;;		_MIPI
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558                           
  3559                           ;psect for function _paritycheck
  3560  0333                     _paritycheck:	
  3561                           
  3562                           ;incstack = 0
  3563                           ; Regs used in _paritycheck: [wreg+status,2+status,0]
  3564                           ;paritycheck@Dummy stored from wreg
  3565  0333  00F2               	movwf	paritycheck@Dummy
  3566                           
  3567                           ;main.c: 152: bool parity = 0;
  3568  0334  01F1               	clrf	paritycheck@parity
  3569  0335                     l116:	
  3570                           ;main.c: 153: while (Dummy)
  3571                           
  3572  0335  0872               	movf	paritycheck@Dummy,w
  3573  0336  1903               	btfsc	3,2
  3574  0337  2B48               	goto	l1158
  3575                           
  3576                           ;main.c: 154: {
  3577                           ;main.c: 155: parity = !parity;
  3578  0338  0871               	movf	paritycheck@parity,w
  3579  0339  1D03               	btfss	3,2
  3580  033A  2B3D               	goto	u1280
  3581  033B  3001               	movlw	1
  3582  033C  2B3E               	goto	u1290
  3583  033D                     u1280:	
  3584  033D  3000               	movlw	0
  3585  033E                     u1290:	
  3586  033E  00F0               	movwf	??_paritycheck
  3587  033F  0870               	movf	??_paritycheck,w
  3588  0340  00F1               	movwf	paritycheck@parity
  3589                           
  3590                           ;main.c: 156: Dummy = Dummy & (Dummy - 1);
  3591  0341  0872               	movf	paritycheck@Dummy,w
  3592  0342  3EFF               	addlw	255
  3593  0343  0572               	andwf	paritycheck@Dummy,w
  3594  0344  00F0               	movwf	??_paritycheck
  3595  0345  0870               	movf	??_paritycheck,w
  3596  0346  00F2               	movwf	paritycheck@Dummy
  3597  0347  2B35               	goto	l116
  3598  0348                     l1158:	
  3599                           
  3600                           ;main.c: 157: }
  3601                           ;main.c: 158: if (parity) return 0;
  3602  0348  0871               	movf	paritycheck@parity,w
  3603  0349  1903               	btfsc	3,2
  3604  034A  2B4D               	goto	l1166
  3605  034B  3000               	movlw	0
  3606  034C  0008               	return
  3607  034D                     l1166:	
  3608                           
  3609                           ;main.c: 159: else return 1;
  3610  034D  3001               	movlw	1
  3611  034E  0008               	return
  3612  034F                     __end_of_paritycheck:	
  3613                           
  3614                           	psect	text8
  3615  031A                     __ptext8:	
  3616 ;; *************** function _DAC1_SetOutput *****************
  3617 ;; Defined at:
  3618 ;;		line 65 in file "mcc_generated_files/dac1.c"
  3619 ;; Parameters:    Size  Location     Type
  3620 ;;  inputData       1    wreg     unsigned char 
  3621 ;; Auto vars:     Size  Location     Type
  3622 ;;  inputData       1    0[COMMON] unsigned char 
  3623 ;; Return value:  Size  Location     Type
  3624 ;;		None               void
  3625 ;; Registers used:
  3626 ;;		wreg
  3627 ;; Tracked objects:
  3628 ;;		On entry : 0/0
  3629 ;;		On exit  : 0/0
  3630 ;;		Unchanged: 0/0
  3631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3632 ;;      Params:         0       0       0       0       0       0       0       0
  3633 ;;      Locals:         1       0       0       0       0       0       0       0
  3634 ;;      Temps:          0       0       0       0       0       0       0       0
  3635 ;;      Totals:         1       0       0       0       0       0       0       0
  3636 ;;Total ram usage:        1 bytes
  3637 ;; Hardware stack levels used:    1
  3638 ;; This function calls:
  3639 ;;		Nothing
  3640 ;; This function is called by:
  3641 ;;		_main
  3642 ;; This function uses a non-reentrant model
  3643 ;;
  3644                           
  3645                           
  3646                           ;psect for function _DAC1_SetOutput
  3647  031A                     _DAC1_SetOutput:	
  3648                           
  3649                           ;incstack = 0
  3650                           ; Regs used in _DAC1_SetOutput: [wreg]
  3651                           ;DAC1_SetOutput@inputData stored from wreg
  3652  031A  00F0               	movwf	DAC1_SetOutput@inputData
  3653                           
  3654                           ;dac1.c: 66: DAC1CON1 = inputData;
  3655  031B  0870               	movf	DAC1_SetOutput@inputData,w
  3656  031C  0022               	movlb	2	; select bank2
  3657  031D  0099               	movwf	25	;volatile
  3658  031E  0008               	return
  3659  031F                     __end_of_DAC1_SetOutput:	
  3660                           
  3661                           	psect	text9
  3662  04A1                     __ptext9:	
  3663 ;; *************** function _ConfigureShiftRegister *****************
  3664 ;; Defined at:
  3665 ;;		line 200 in file "main.c"
  3666 ;; Parameters:    Size  Location     Type
  3667 ;;		None
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;  ReverseReg      1    2[COMMON] unsigned char 
  3670 ;;  i               1    1[COMMON] unsigned char 
  3671 ;; Return value:  Size  Location     Type
  3672 ;;		None               void
  3673 ;; Registers used:
  3674 ;;		wreg, status,2, status,0
  3675 ;; Tracked objects:
  3676 ;;		On entry : 0/0
  3677 ;;		On exit  : 0/0
  3678 ;;		Unchanged: 0/0
  3679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3680 ;;      Params:         0       0       0       0       0       0       0       0
  3681 ;;      Locals:         2       0       0       0       0       0       0       0
  3682 ;;      Temps:          1       0       0       0       0       0       0       0
  3683 ;;      Totals:         3       0       0       0       0       0       0       0
  3684 ;;Total ram usage:        3 bytes
  3685 ;; Hardware stack levels used:    1
  3686 ;; This function calls:
  3687 ;;		Nothing
  3688 ;; This function is called by:
  3689 ;;		_main
  3690 ;; This function uses a non-reentrant model
  3691 ;;
  3692                           
  3693                           
  3694                           ;psect for function _ConfigureShiftRegister
  3695  04A1                     _ConfigureShiftRegister:	
  3696                           
  3697                           ;main.c: 201: uint8_t ReverseReg, i;
  3698                           ;main.c: 223: if ((Byte2 == 1 && Byte3 == 0) || (Byte2 == 2 && Byte3 == 0) || (Byte2 == 
      +                          12 && Byte3 == 0) || (Byte2 == 2 && Byte3 == 12) || (Byte2 == 2 && Byte3 == 13) || (Byte
      +                          2 == 2 && Byte3 == 29))
  3699                           
  3700                           ;incstack = 0
  3701                           ; Regs used in _ConfigureShiftRegister: [wreg+status,2+status,0]
  3702  04A1  037D               	decf	_Byte2,w
  3703  04A2  1D03               	btfss	3,2
  3704  04A3  2CA8               	goto	l1226
  3705  04A4  0020               	movlb	0	; select bank0
  3706  04A5  0821               	movf	_Byte3,w
  3707  04A6  1903               	btfsc	3,2
  3708  04A7  2CD3               	goto	l1246
  3709  04A8                     l1226:	
  3710  04A8  3002               	movlw	2
  3711  04A9  067D               	xorwf	_Byte2,w
  3712  04AA  1D03               	btfss	3,2
  3713  04AB  2CB0               	goto	l1230
  3714  04AC  0020               	movlb	0	; select bank0
  3715  04AD  0821               	movf	_Byte3,w
  3716  04AE  1903               	btfsc	3,2
  3717  04AF  2CD3               	goto	l1246
  3718  04B0                     l1230:	
  3719  04B0  300C               	movlw	12
  3720  04B1  067D               	xorwf	_Byte2,w
  3721  04B2  1D03               	btfss	3,2
  3722  04B3  2CB8               	goto	l1234
  3723  04B4  0020               	movlb	0	; select bank0
  3724  04B5  0821               	movf	_Byte3,w
  3725  04B6  1903               	btfsc	3,2
  3726  04B7  2CD3               	goto	l1246
  3727  04B8                     l1234:	
  3728  04B8  3002               	movlw	2
  3729  04B9  067D               	xorwf	_Byte2,w
  3730  04BA  1D03               	btfss	3,2
  3731  04BB  2CC1               	goto	l1238
  3732  04BC  300C               	movlw	12
  3733  04BD  0020               	movlb	0	; select bank0
  3734  04BE  0621               	xorwf	_Byte3,w
  3735  04BF  1903               	btfsc	3,2
  3736  04C0  2CD3               	goto	l1246
  3737  04C1                     l1238:	
  3738  04C1  3002               	movlw	2
  3739  04C2  067D               	xorwf	_Byte2,w
  3740  04C3  1D03               	btfss	3,2
  3741  04C4  2CCA               	goto	l1242
  3742  04C5  300D               	movlw	13
  3743  04C6  0020               	movlb	0	; select bank0
  3744  04C7  0621               	xorwf	_Byte3,w
  3745  04C8  1903               	btfsc	3,2
  3746  04C9  2CD3               	goto	l1246
  3747  04CA                     l1242:	
  3748  04CA  3002               	movlw	2
  3749  04CB  067D               	xorwf	_Byte2,w
  3750  04CC  1D03               	btfss	3,2
  3751  04CD  2CD5               	goto	l1248
  3752  04CE  301D               	movlw	29
  3753  04CF  0020               	movlb	0	; select bank0
  3754  04D0  0621               	xorwf	_Byte3,w
  3755  04D1  1D03               	btfss	3,2
  3756  04D2  2CD5               	goto	l1248
  3757  04D3                     l1246:	
  3758                           
  3759                           ;main.c: 224: ReverseReg = 0x00;
  3760  04D3  01F2               	clrf	ConfigureShiftRegister@ReverseReg
  3761  04D4  2D9F               	goto	l1358
  3762  04D5                     l1248:	
  3763                           
  3764                           ;main.c: 225: else if ((Byte2 == 5 && Byte3 == 0) || (Byte2 == 8 && Byte3 == 0) || (Byte
      +                          2 == 29 && Byte3 == 0))
  3765  04D5  3005               	movlw	5
  3766  04D6  067D               	xorwf	_Byte2,w
  3767  04D7  1D03               	btfss	3,2
  3768  04D8  2CDD               	goto	l1252
  3769  04D9  0020               	movlb	0	; select bank0
  3770  04DA  0821               	movf	_Byte3,w
  3771  04DB  1903               	btfsc	3,2
  3772  04DC  2CED               	goto	l1260
  3773  04DD                     l1252:	
  3774  04DD  3008               	movlw	8
  3775  04DE  067D               	xorwf	_Byte2,w
  3776  04DF  1D03               	btfss	3,2
  3777  04E0  2CE5               	goto	l1256
  3778  04E1  0020               	movlb	0	; select bank0
  3779  04E2  0821               	movf	_Byte3,w
  3780  04E3  1903               	btfsc	3,2
  3781  04E4  2CED               	goto	l1260
  3782  04E5                     l1256:	
  3783  04E5  301D               	movlw	29
  3784  04E6  067D               	xorwf	_Byte2,w
  3785  04E7  1D03               	btfss	3,2
  3786  04E8  2CEF               	goto	l1262
  3787  04E9  0020               	movlb	0	; select bank0
  3788  04EA  0821               	movf	_Byte3,w
  3789  04EB  1D03               	btfss	3,2
  3790  04EC  2CEF               	goto	l1262
  3791  04ED                     l1260:	
  3792                           
  3793                           ;main.c: 226: ReverseReg = 0x20;
  3794  04ED  3020               	movlw	32
  3795  04EE  2D9C               	goto	L25
  3796  04EF                     l1262:	
  3797                           
  3798                           ;main.c: 227: else if ((Byte2 == 3 && Byte3 == 0) || (Byte2 == 13 && Byte3 == 0) || (Byt
      +                          e2 == 20 && Byte3 == 0) || (Byte2 == 25 && Byte3 == 0))
  3799  04EF  3003               	movlw	3
  3800  04F0  067D               	xorwf	_Byte2,w
  3801  04F1  1D03               	btfss	3,2
  3802  04F2  2CF7               	goto	l1266
  3803  04F3  0020               	movlb	0	; select bank0
  3804  04F4  0821               	movf	_Byte3,w
  3805  04F5  1903               	btfsc	3,2
  3806  04F6  2D0F               	goto	l1278
  3807  04F7                     l1266:	
  3808  04F7  300D               	movlw	13
  3809  04F8  067D               	xorwf	_Byte2,w
  3810  04F9  1D03               	btfss	3,2
  3811  04FA  2CFF               	goto	l1270
  3812  04FB  0020               	movlb	0	; select bank0
  3813  04FC  0821               	movf	_Byte3,w
  3814  04FD  1903               	btfsc	3,2
  3815  04FE  2D0F               	goto	l1278
  3816  04FF                     l1270:	
  3817  04FF  3014               	movlw	20
  3818  0500  067D               	xorwf	_Byte2,w
  3819  0501  1D03               	btfss	3,2
  3820  0502  2D07               	goto	l1274
  3821  0503  0020               	movlb	0	; select bank0
  3822  0504  0821               	movf	_Byte3,w
  3823  0505  1903               	btfsc	3,2
  3824  0506  2D0F               	goto	l1278
  3825  0507                     l1274:	
  3826  0507  3019               	movlw	25
  3827  0508  067D               	xorwf	_Byte2,w
  3828  0509  1D03               	btfss	3,2
  3829  050A  2D11               	goto	l1280
  3830  050B  0020               	movlb	0	; select bank0
  3831  050C  0821               	movf	_Byte3,w
  3832  050D  1D03               	btfss	3,2
  3833  050E  2D11               	goto	l1280
  3834  050F                     l1278:	
  3835                           
  3836                           ;main.c: 228: ReverseReg = 0x10;
  3837  050F  3010               	movlw	16
  3838  0510  2D9C               	goto	L25
  3839  0511                     l1280:	
  3840                           
  3841                           ;main.c: 232: else if ((Byte2 == 30 && Byte3 == 0) || (Byte2 == 41 && Byte3 == 41))
  3842  0511  301E               	movlw	30
  3843  0512  067D               	xorwf	_Byte2,w
  3844  0513  1D03               	btfss	3,2
  3845  0514  2D19               	goto	l1284
  3846  0515  0020               	movlb	0	; select bank0
  3847  0516  0821               	movf	_Byte3,w
  3848  0517  1903               	btfsc	3,2
  3849  0518  2D22               	goto	l1288
  3850  0519                     l1284:	
  3851  0519  3029               	movlw	41
  3852  051A  067D               	xorwf	_Byte2,w
  3853  051B  1D03               	btfss	3,2
  3854  051C  2D24               	goto	l1290
  3855  051D  3029               	movlw	41
  3856  051E  0020               	movlb	0	; select bank0
  3857  051F  0621               	xorwf	_Byte3,w
  3858  0520  1D03               	btfss	3,2
  3859  0521  2D24               	goto	l1290
  3860  0522                     l1288:	
  3861                           
  3862                           ;main.c: 233: ReverseReg = 0x80;
  3863  0522  3080               	movlw	128
  3864  0523  2D9C               	goto	L25
  3865  0524                     l1290:	
  3866                           
  3867                           ;main.c: 234: else if ((Byte2 == 7 && Byte3 == 0))
  3868  0524  3007               	movlw	7
  3869  0525  067D               	xorwf	_Byte2,w
  3870  0526  1D03               	btfss	3,2
  3871  0527  2D2E               	goto	l1296
  3872  0528  0020               	movlb	0	; select bank0
  3873  0529  0821               	movf	_Byte3,w
  3874  052A  1D03               	btfss	3,2
  3875  052B  2D2E               	goto	l1296
  3876                           
  3877                           ;main.c: 235: ReverseReg = 0xA0;
  3878  052C  30A0               	movlw	160
  3879  052D  2D9C               	goto	L25
  3880  052E                     l1296:	
  3881                           
  3882                           ;main.c: 236: else if ((Byte2 == 41 && Byte3 == 0))
  3883  052E  3029               	movlw	41
  3884  052F  067D               	xorwf	_Byte2,w
  3885  0530  1D03               	btfss	3,2
  3886  0531  2D38               	goto	l1302
  3887  0532  0020               	movlb	0	; select bank0
  3888  0533  0821               	movf	_Byte3,w
  3889  0534  1D03               	btfss	3,2
  3890  0535  2D38               	goto	l1302
  3891                           
  3892                           ;main.c: 237: ReverseReg = 0x90;
  3893  0536  3090               	movlw	144
  3894  0537  2D9C               	goto	L25
  3895  0538                     l1302:	
  3896                           
  3897                           ;main.c: 238: else if ((Byte2 == 12 && Byte3 == 30))
  3898  0538  300C               	movlw	12
  3899  0539  067D               	xorwf	_Byte2,w
  3900  053A  1D03               	btfss	3,2
  3901  053B  2D43               	goto	l1308
  3902  053C  301E               	movlw	30
  3903  053D  0020               	movlb	0	; select bank0
  3904  053E  0621               	xorwf	_Byte3,w
  3905  053F  1D03               	btfss	3,2
  3906  0540  2D43               	goto	l1308
  3907                           
  3908                           ;main.c: 239: ReverseReg = 0xB0;
  3909  0541  30B0               	movlw	176
  3910  0542  2D9C               	goto	L25
  3911  0543                     l1308:	
  3912                           
  3913                           ;main.c: 241: else if ((Byte2 == 3 && Byte3 == 7))
  3914  0543  3003               	movlw	3
  3915  0544  067D               	xorwf	_Byte2,w
  3916  0545  1D03               	btfss	3,2
  3917  0546  2D4E               	goto	l1314
  3918  0547  3007               	movlw	7
  3919  0548  0020               	movlb	0	; select bank0
  3920  0549  0621               	xorwf	_Byte3,w
  3921  054A  1D03               	btfss	3,2
  3922  054B  2D4E               	goto	l1314
  3923                           
  3924                           ;main.c: 242: ReverseReg = 0x40;
  3925  054C  3040               	movlw	64
  3926  054D  2D9C               	goto	L25
  3927  054E                     l1314:	
  3928                           
  3929                           ;main.c: 243: else if ((Byte2 == 3 && Byte3 == 20))
  3930  054E  3003               	movlw	3
  3931  054F  067D               	xorwf	_Byte2,w
  3932  0550  1D03               	btfss	3,2
  3933  0551  2D59               	goto	l1320
  3934  0552  3014               	movlw	20
  3935  0553  0020               	movlb	0	; select bank0
  3936  0554  0621               	xorwf	_Byte3,w
  3937  0555  1D03               	btfss	3,2
  3938  0556  2D59               	goto	l1320
  3939                           
  3940                           ;main.c: 244: ReverseReg = 0x60;
  3941  0557  3060               	movlw	96
  3942  0558  2D9C               	goto	L25
  3943  0559                     l1320:	
  3944                           
  3945                           ;main.c: 245: else if ((Byte2 == 4 && Byte3 == 5))
  3946  0559  3004               	movlw	4
  3947  055A  067D               	xorwf	_Byte2,w
  3948  055B  1D03               	btfss	3,2
  3949  055C  2D64               	goto	l1326
  3950  055D  3005               	movlw	5
  3951  055E  0020               	movlb	0	; select bank0
  3952  055F  0621               	xorwf	_Byte3,w
  3953  0560  1D03               	btfss	3,2
  3954  0561  2D64               	goto	l1326
  3955                           
  3956                           ;main.c: 246: ReverseReg = 0x50;
  3957  0562  3050               	movlw	80
  3958  0563  2D9C               	goto	L25
  3959  0564                     l1326:	
  3960                           
  3961                           ;main.c: 247: else if ((Byte2 == 4 && Byte3 == 12))
  3962  0564  3004               	movlw	4
  3963  0565  067D               	xorwf	_Byte2,w
  3964  0566  1D03               	btfss	3,2
  3965  0567  2D6F               	goto	l1332
  3966  0568  300C               	movlw	12
  3967  0569  0020               	movlb	0	; select bank0
  3968  056A  0621               	xorwf	_Byte3,w
  3969  056B  1D03               	btfss	3,2
  3970  056C  2D6F               	goto	l1332
  3971                           
  3972                           ;main.c: 248: ReverseReg = 0x70;
  3973  056D  3070               	movlw	112
  3974  056E  2D9C               	goto	L25
  3975  056F                     l1332:	
  3976                           
  3977                           ;main.c: 250: else if ((Byte2 == 4 && Byte3 == 13))
  3978  056F  3004               	movlw	4
  3979  0570  067D               	xorwf	_Byte2,w
  3980  0571  1D03               	btfss	3,2
  3981  0572  2D7A               	goto	l1338
  3982  0573  300D               	movlw	13
  3983  0574  0020               	movlb	0	; select bank0
  3984  0575  0621               	xorwf	_Byte3,w
  3985  0576  1D03               	btfss	3,2
  3986  0577  2D7A               	goto	l1338
  3987                           
  3988                           ;main.c: 251: ReverseReg = 0xC0;
  3989  0578  30C0               	movlw	192
  3990  0579  2D9C               	goto	L25
  3991  057A                     l1338:	
  3992                           
  3993                           ;main.c: 252: else if ((Byte2 == 4 && Byte3 == 29))
  3994  057A  3004               	movlw	4
  3995  057B  067D               	xorwf	_Byte2,w
  3996  057C  1D03               	btfss	3,2
  3997  057D  2D85               	goto	l1344
  3998  057E  301D               	movlw	29
  3999  057F  0020               	movlb	0	; select bank0
  4000  0580  0621               	xorwf	_Byte3,w
  4001  0581  1D03               	btfss	3,2
  4002  0582  2D85               	goto	l1344
  4003                           
  4004                           ;main.c: 253: ReverseReg = 0xE0;
  4005  0583  30E0               	movlw	224
  4006  0584  2D9C               	goto	L25
  4007  0585                     l1344:	
  4008                           
  4009                           ;main.c: 254: else if ((Byte2 == 5 && Byte3 == 30))
  4010  0585  3005               	movlw	5
  4011  0586  067D               	xorwf	_Byte2,w
  4012  0587  1D03               	btfss	3,2
  4013  0588  2D90               	goto	l1350
  4014  0589  301E               	movlw	30
  4015  058A  0020               	movlb	0	; select bank0
  4016  058B  0621               	xorwf	_Byte3,w
  4017  058C  1D03               	btfss	3,2
  4018  058D  2D90               	goto	l1350
  4019                           
  4020                           ;main.c: 255: ReverseReg = 0xD0;
  4021  058E  30D0               	movlw	208
  4022  058F  2D9C               	goto	L25
  4023  0590                     l1350:	
  4024                           
  4025                           ;main.c: 256: else if ((Byte2 == 7 && Byte3 == 20))
  4026  0590  3007               	movlw	7
  4027  0591  067D               	xorwf	_Byte2,w
  4028  0592  1D03               	btfss	3,2
  4029  0593  2D9B               	goto	l1356
  4030  0594  3014               	movlw	20
  4031  0595  0020               	movlb	0	; select bank0
  4032  0596  0621               	xorwf	_Byte3,w
  4033  0597  1D03               	btfss	3,2
  4034  0598  2D9B               	goto	l1356
  4035                           
  4036                           ;main.c: 257: ReverseReg = 0xF0;
  4037  0599  30F0               	movlw	240
  4038  059A  2D9C               	goto	L25
  4039  059B                     l1356:	
  4040                           
  4041                           ;main.c: 259: else
  4042                           ;main.c: 260: ReverseReg = 0x30;
  4043  059B  3030               	movlw	48
  4044  059C                     L25:	
  4045  059C  00F0               	movwf	??_ConfigureShiftRegister
  4046  059D  0870               	movf	??_ConfigureShiftRegister,w
  4047  059E  00F2               	movwf	ConfigureShiftRegister@ReverseReg
  4048  059F                     l1358:	
  4049                           
  4050                           ;main.c: 263: LATA4 = 0;
  4051  059F  0022               	movlb	2	; select bank2
  4052  05A0  120C               	bcf	12,4	;volatile
  4053                           
  4054                           ;main.c: 264: do { LATB6 = 1; } while(0);
  4055  05A1  170D               	bsf	13,6	;volatile
  4056  05A2  0000               	nop	;# 
  4057                           
  4058                           ;main.c: 266: do { LATB6 = 0; } while(0);
  4059  05A3  0022               	movlb	2	; select bank2
  4060  05A4  130D               	bcf	13,6	;volatile
  4061                           
  4062                           ;main.c: 268: for (i=0; i<8; i++) {
  4063  05A5  01F1               	clrf	ConfigureShiftRegister@i
  4064  05A6  3008               	movlw	8
  4065  05A7  0271               	subwf	ConfigureShiftRegister@i,w
  4066  05A8  1803               	btfsc	3,0
  4067  05A9  2DC1               	goto	l210
  4068  05AA                     l209:	
  4069                           
  4070                           ;main.c: 269: LATA4 = ReverseReg & 0x01;
  4071  05AA  1C72               	btfss	ConfigureShiftRegister@ReverseReg,0
  4072  05AB  2DAF               	goto	u1920
  4073  05AC  0022               	movlb	2	; select bank2
  4074  05AD  160C               	bsf	12,4	;volatile
  4075  05AE  2DB1               	goto	l211
  4076  05AF                     u1920:	
  4077  05AF  0022               	movlb	2	; select bank2
  4078  05B0  120C               	bcf	12,4	;volatile
  4079  05B1                     l211:	
  4080                           ;main.c: 270: do { LATB6 = 1; } while(0);
  4081                           
  4082  05B1  170D               	bsf	13,6	;volatile
  4083  05B2  0000               	nop	;# 
  4084                           
  4085                           ;main.c: 272: do { LATB6 = 0; } while(0);
  4086  05B3  0022               	movlb	2	; select bank2
  4087  05B4  130D               	bcf	13,6	;volatile
  4088                           
  4089                           ;main.c: 273: ReverseReg = ReverseReg >> 1;
  4090  05B5  3672               	lsrf	ConfigureShiftRegister@ReverseReg,w
  4091  05B6  00F0               	movwf	??_ConfigureShiftRegister
  4092  05B7  0870               	movf	??_ConfigureShiftRegister,w
  4093  05B8  00F2               	movwf	ConfigureShiftRegister@ReverseReg
  4094  05B9  3001               	movlw	1
  4095  05BA  00F0               	movwf	??_ConfigureShiftRegister
  4096  05BB  0870               	movf	??_ConfigureShiftRegister,w
  4097  05BC  07F1               	addwf	ConfigureShiftRegister@i,f
  4098  05BD  3008               	movlw	8
  4099  05BE  0271               	subwf	ConfigureShiftRegister@i,w
  4100  05BF  1C03               	skipc
  4101  05C0  2DAA               	goto	l209
  4102  05C1                     l210:	
  4103                           
  4104                           ;main.c: 274: }
  4105                           ;main.c: 277: LATA4 = 0;
  4106  05C1  120C               	bcf	12,4	;volatile
  4107                           
  4108                           ;main.c: 278: do { LATB6 = 1; } while(0);
  4109  05C2  170D               	bsf	13,6	;volatile
  4110  05C3  0000               	nop	;# 
  4111                           
  4112                           ;main.c: 280: do { LATB6 = 0; } while(0);
  4113  05C4  0022               	movlb	2	; select bank2
  4114  05C5  130D               	bcf	13,6	;volatile
  4115  05C6  0008               	return
  4116  05C7                     __end_of_ConfigureShiftRegister:	
  4117  007E                     btemp	set	126	;btemp
  4118  007E                     wtemp	set	126
  4119  007E                     wtemp0	set	126
  4120  0080                     wtemp1	set	128
  4121  0082                     wtemp2	set	130
  4122  0084                     wtemp3	set	132
  4123  0086                     wtemp4	set	134
  4124  0088                     wtemp5	set	136
  4125  007F                     wtemp6	set	127
  4126  007E                     ttemp	set	126
  4127  007E                     ttemp0	set	126
  4128  0081                     ttemp1	set	129
  4129  0084                     ttemp2	set	132
  4130  0087                     ttemp3	set	135
  4131  007F                     ttemp4	set	127
  4132  007E                     ltemp	set	126
  4133  007E                     ltemp0	set	126
  4134  0082                     ltemp1	set	130
  4135  0086                     ltemp2	set	134
  4136  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    137
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80      3       9
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_MIPI
    _MIPI->_shiftRegister

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    4455
                                              0 BANK0      3     3      0
             _ConfigureShiftRegister
                    _DAC1_Initialize
                     _DAC1_SetOutput
                               _MIPI
             _PIN_MANAGER_Initialize
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _DAC1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DAC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MIPI                                                 8     5      3    4326
                                              5 COMMON     8     5      3
                        _paritycheck
                      _shiftRegister
 ---------------------------------------------------------------------------------
 (2) _shiftRegister                                        5     3      2    1082
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) _paritycheck                                          3     3      0     113
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _DAC1_SetOutput                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureShiftRegister                               3     3      0     107
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureShiftRegister
   _DAC1_Initialize
   _DAC1_SetOutput
   _MIPI
     _paritycheck
     _shiftRegister
   _PIN_MANAGER_Initialize
   _SYSTEM_Initialize
     _DAC1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      17       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      3       9       6       11.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      17      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed Dec 23 12:35:30 2015

                     __CFG_CP$OFF 0000                       __CFG_LVP$ON 0000                   _DAC1_Initialize 031F  
                             l210 05C1                               l211 05B1                               l116 0335  
                             l128 03D8                               l209 05AA                               l260 0643  
                             l254 063D                               l257 0640    __end_of_ConfigureShiftRegister 05C7  
                    __CFG_BORV$LO 0000                    _DAC1_SetOutput 031A                      __CFG_ZCD$OFF 0000  
                            l1210 046B                              l1204 0443                              l1302 0538  
                            l1230 04B0                              l1142 037A                              l1320 0559  
                            l1152 036D                              l1314 054E                              l1242 04CA  
                            l1234 04B8                              l1226 04A8                              l1218 049C  
                            l1402 060D                              l1332 056F                              l1308 0543  
                            l1260 04ED                              l1252 04DD                              l1420 065C  
                            l1350 0590                              l1326 0564                              l1270 04FF  
                            l1262 04EF                              l1238 04C1                              l1246 04D3  
                            l1166 034D                              l1158 0348                              l1510 078B  
                            l1414 0646                              l1406 061D                              l1344 0585  
                            l1280 0511                              l1256 04E5                              l1248 04D5  
                            l1504 0774                              l1432 067D                              l1338 057A  
                            l1290 0524                              l1274 0507                              l1266 04F7  
                            l1522 07B9                              l1450 06B5                              l1426 066B  
                            l1356 059B                              l1284 0519                              l1516 07A2  
                            l1444 06A5                              l1278 050F                              l1358 059F  
                            l1198 0428                              l1534 07E7                              l1462 06E0  
                            l1438 068F                              l1296 052E                              l1288 0522  
                            l1528 07D0                              l1480 071C                              l1456 06CA  
                            l1392 05F1                              l1384 05D9                              l1474 0708  
                            l1492 0746                              l1468 06F3                              l1388 05E5  
                            l1486 0733                              l1498 075D                              _DATA 0800  
                            u1230 0378                              u1250 037F                              _LATA 010C  
                            _LATB 010D                              _LATC 010E                              u1280 033D  
                            u1264 0381                              u1290 033E                              u1920 05AF  
                            _MIPI 0391                              _WPUB 020D                              _WPUC 020E  
                    __CFG_WRT$OFF 0000                              _main 05C7                              fsr0h 0005  
                            fsr0l 0004                              indf0 0000                              btemp 007E  
                            ltemp 007E                              start 0002                              ttemp 007E  
                            wtemp 007E                             ?_MIPI 0075                             MIPI@a 007A  
                           MIPI@b 0075                             MIPI@c 0076                             MIPI@d 0077  
                           MIPI@i 007C                             MIPI@j 007B    __size_of_OSCILLATOR_Initialize 0006  
   __end_of_OSCILLATOR_Initialize 032A                             ?_main 0070                     __CFG_WDTE$OFF 0000  
                           _LATA1 0861                             _LATA2 0862                             _LATA4 0864  
                           _LATB4 086C                             _LATB5 086D                             _LATB6 086E  
                           _LATB7 086F            __end_of_DAC1_SetOutput 031F                             _PORTC 000E  
                           _TRISA 008C                             _TRISB 008D                             _TRISC 008E  
                __end_of_SLAVEADD 0889                             _Byte1 0020                             _Byte2 007D  
                           _Byte3 0021                     __CFG_PWRTE$ON 0000                    __CFG_BOREN$OFF 0000  
                           ltemp0 007E                             ltemp1 0082                             ltemp2 0086  
                           ltemp3 0080                             ttemp0 007E                             ttemp1 0081  
                           ttemp2 0084                             ttemp3 0087                             ttemp4 007F  
                           status 0003                             wtemp0 007E                             wtemp1 0080  
                           wtemp2 0082                             wtemp3 0084                             wtemp4 0086  
                           wtemp5 0088                             wtemp6 007F                      __end_of_DATA 0841  
                    __end_of_MIPI 04A1                    __CFG_MCLRE$OFF 0000                   __initialization 07F6  
                    __end_of_main 07F6           __end_of_DAC1_Initialize 0324                      ?_paritycheck 0070  
                          ??_MIPI 0078                    __CFG_LPBOR$OFF 0000                            ??_main 0026  
                 ?_DAC1_SetOutput 0070                    __CFG_PLLEN$OFF 0000                            _ANSELA 018C  
                          _ANSELB 018D                            _ANSELC 018E                            _REGADD 0885  
                          _OSCCON 0099           DAC1_SetOutput@inputData 0070                    __CFG_STVREN$ON 0000  
              __end_of_ACTIVEBAND 0881                 __end_of_DacOutput 0885             __end_of_shiftRegister 0391  
               _SYSTEM_Initialize 032A           __end_of__initialization 07FD                ?_SYSTEM_Initialize 0070  
                  __pcstackCOMMON 0070               ??_SYSTEM_Initialize 0070                  ?_DAC1_Initialize 0070  
                  _OPTION_REGbits 0095         __end_of_SYSTEM_Initialize 0333                        __pbssBANK0 0020  
                paritycheck@Dummy 0072                    shiftRegister@m 0073                    shiftRegister@y 0071  
                      __pmaintext 05C7                   __CFG_PPS1WAY$ON 0000              __size_of_paritycheck 001C  
                 __CFG_WDTCCS$SWC 0000                           _OSCSTAT 009A                           _OSCTUNE 0098  
             shiftRegister@Dummy1 0074               shiftRegister@Dummy2 0070                  ??_DAC1_SetOutput 0070  
         ConfigureShiftRegister@i 0071                           __ptext1 032A                           __ptext2 034F  
                         __ptext3 0324                           __ptext4 031F                           __ptext5 0391  
                         __ptext6 036B                           __ptext7 0333                           __ptext8 031A  
                         __ptext9 04A1             _OSCILLATOR_Initialize 0324                           _parity1 0022  
                         _parity2 0023                           _parity3 0024                           _parity4 0025  
        ??_PIN_MANAGER_Initialize 0070        __size_of_SYSTEM_Initialize 0009              end_of_initialization 07FD  
                    __pstringtext 0800          ??_ConfigureShiftRegister 0070                  __CFG_FOSC$INTOSC 0000  
                       _DacOutput 0881                    __end_of_REGADD 0887            ?_OSCILLATOR_Initialize 0070  
             start_initialization 07F6   __size_of_PIN_MANAGER_Initialize 001C            __size_of_shiftRegister 0026  
 __size_of_ConfigureShiftRegister 0126          __size_of_DAC1_Initialize 0005                       __pbssCOMMON 007D  
                       ___latbits 0001                     __pcstackBANK0 0026                 paritycheck@parity 0071  
          _PIN_MANAGER_Initialize 034F                     ??_paritycheck 0070                          _DAC1CON0 0118  
                        _DAC1CON1 0119                     _shiftRegister 036B            _ConfigureShiftRegister 04A1  
                        _SLAVEADD 0887              __CFG_WDTCPS$WDTCPS1F 0000                    ?_shiftRegister 0070  
             __end_of_paritycheck 034F                 ??_DAC1_Initialize 0070                        _ACTIVEBAND 0841  
         ??_OSCILLATOR_Initialize 0070           __size_of_DAC1_SetOutput 0005                     __size_of_MIPI 0110  
                   __size_of_main 022F              __CFG_WDTCWS$WDTCWSSW 0000  ConfigureShiftRegister@ReverseReg 0072  
                     _paritycheck 0333                   ??_shiftRegister 0072           ?_PIN_MANAGER_Initialize 0070  
               __CFG_CLKOUTEN$OFF 0000           ?_ConfigureShiftRegister 0070    __end_of_PIN_MANAGER_Initialize 036B  
