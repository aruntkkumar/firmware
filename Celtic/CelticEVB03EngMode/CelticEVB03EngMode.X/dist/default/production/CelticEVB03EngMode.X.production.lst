

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Wed Apr 06 12:32:34 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18LF23K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    20  0000                     
    21                           	psect	smallconst
    22  000200                     __psmallconst:
    23                           	opt stack 0
    24  000200  00                 	db	0
    25  000201                     _DATA:
    26                           	opt stack 0
    27  000201  00                 	db	0
    28  000202  80                 	db	128
    29  000203  40                 	db	64
    30  000204  C0                 	db	192
    31  000205  20                 	db	32
    32  000206  A0                 	db	160
    33  000207  60                 	db	96
    34  000208  E0                 	db	224
    35  000209  10                 	db	16
    36  00020A  90                 	db	144
    37  00020B  50                 	db	80
    38  00020C  D0                 	db	208
    39  00020D  30                 	db	48
    40  00020E  B0                 	db	176
    41  00020F  70                 	db	112
    42  000210  F0                 	db	240
    43  000211  08                 	db	8
    44  000212  88                 	db	136
    45  000213  48                 	db	72
    46  000214  C8                 	db	200
    47  000215  28                 	db	40
    48  000216  A8                 	db	168
    49  000217  68                 	db	104
    50  000218  E8                 	db	232
    51  000219  18                 	db	24
    52  00021A  98                 	db	152
    53  00021B  58                 	db	88
    54  00021C  D8                 	db	216
    55  00021D  38                 	db	56
    56  00021E  B8                 	db	184
    57  00021F  78                 	db	120
    58  000220  F8                 	db	248
    59  000221  04                 	db	4
    60  000222  84                 	db	132
    61  000223  44                 	db	68
    62  000224  C4                 	db	196
    63  000225  24                 	db	36
    64  000226  A4                 	db	164
    65  000227  64                 	db	100
    66  000228  E4                 	db	228
    67  000229  14                 	db	20
    68  00022A  94                 	db	148
    69  00022B  54                 	db	84
    70  00022C  D4                 	db	212
    71  00022D  34                 	db	52
    72  00022E  B4                 	db	180
    73  00022F  74                 	db	116
    74  000230  F4                 	db	244
    75  000231  0C                 	db	12
    76  000232  8C                 	db	140
    77  000233  4C                 	db	76
    78  000234  CC                 	db	204
    79  000235  2C                 	db	44
    80  000236  AC                 	db	172
    81  000237  6C                 	db	108
    82  000238  EC                 	db	236
    83  000239  1C                 	db	28
    84  00023A  9C                 	db	156
    85  00023B  5C                 	db	92
    86  00023C  DC                 	db	220
    87  00023D  3C                 	db	60
    88  00023E  BC                 	db	188
    89  00023F  7C                 	db	124
    90  000240  FC                 	db	252
    91  000241  06                 	db	6
    92  000242                     __end_of_DATA:
    93                           	opt stack 0
    94  000242                     _PARITY:
    95                           	opt stack 0
    96  000242  01                 	db	1
    97  000243  00                 	db	0
    98  000244  00                 	db	0
    99  000245  01                 	db	1
   100  000246  00                 	db	0
   101  000247  01                 	db	1
   102  000248  01                 	db	1
   103  000249  00                 	db	0
   104  00024A  00                 	db	0
   105  00024B  01                 	db	1
   106  00024C  01                 	db	1
   107  00024D  00                 	db	0
   108  00024E  01                 	db	1
   109  00024F  00                 	db	0
   110  000250  00                 	db	0
   111  000251  01                 	db	1
   112  000252  00                 	db	0
   113  000253  01                 	db	1
   114  000254  01                 	db	1
   115  000255  00                 	db	0
   116  000256  01                 	db	1
   117  000257  00                 	db	0
   118  000258  00                 	db	0
   119  000259  01                 	db	1
   120  00025A  01                 	db	1
   121  00025B  00                 	db	0
   122  00025C  00                 	db	0
   123  00025D  01                 	db	1
   124  00025E  00                 	db	0
   125  00025F  01                 	db	1
   126  000260  01                 	db	1
   127  000261  00                 	db	0
   128  000262  00                 	db	0
   129  000263  01                 	db	1
   130  000264  01                 	db	1
   131  000265  00                 	db	0
   132  000266  01                 	db	1
   133  000267  00                 	db	0
   134  000268  00                 	db	0
   135  000269  01                 	db	1
   136  00026A  01                 	db	1
   137  00026B  00                 	db	0
   138  00026C  00                 	db	0
   139  00026D  01                 	db	1
   140  00026E  00                 	db	0
   141  00026F  01                 	db	1
   142  000270  01                 	db	1
   143  000271  00                 	db	0
   144  000272  01                 	db	1
   145  000273  00                 	db	0
   146  000274  00                 	db	0
   147  000275  01                 	db	1
   148  000276  00                 	db	0
   149  000277  01                 	db	1
   150  000278  01                 	db	1
   151  000279  00                 	db	0
   152  00027A  00                 	db	0
   153  00027B  01                 	db	1
   154  00027C  01                 	db	1
   155  00027D  00                 	db	0
   156  00027E  01                 	db	1
   157  00027F  00                 	db	0
   158  000280  00                 	db	0
   159  000281  01                 	db	1
   160  000282  01                 	db	1
   161  000283                     __end_of_PARITY:
   162                           	opt stack 0
   163  000283                     _ACTIVEBAND:
   164                           	opt stack 0
   165  000283  00                 	db	0
   166  000284  00                 	db	0
   167  000285  00                 	db	0
   168  000286  00                 	db	0
   169  000287  00                 	db	0
   170  000288  01                 	db	1
   171  000289  00                 	db	0
   172  00028A  00                 	db	0
   173  00028B  01                 	db	1
   174  00028C  00                 	db	0
   175  00028D  00                 	db	0
   176  00028E  00                 	db	0
   177  00028F  01                 	db	1
   178  000290  01                 	db	1
   179  000291  00                 	db	0
   180  000292  00                 	db	0
   181  000293  00                 	db	0
   182  000294  00                 	db	0
   183  000295  00                 	db	0
   184  000296  00                 	db	0
   185  000297  01                 	db	1
   186  000298  00                 	db	0
   187  000299  00                 	db	0
   188  00029A  00                 	db	0
   189  00029B  00                 	db	0
   190  00029C  00                 	db	0
   191  00029D  01                 	db	1
   192  00029E  00                 	db	0
   193  00029F  00                 	db	0
   194  0002A0  01                 	db	1
   195  0002A1  00                 	db	0
   196  0002A2  00                 	db	0
   197  0002A3  00                 	db	0
   198  0002A4  00                 	db	0
   199  0002A5  00                 	db	0
   200  0002A6  00                 	db	0
   201  0002A7  00                 	db	0
   202  0002A8  00                 	db	0
   203  0002A9  00                 	db	0
   204  0002AA  00                 	db	0
   205  0002AB  00                 	db	0
   206  0002AC  00                 	db	0
   207  0002AD  00                 	db	0
   208  0002AE  00                 	db	0
   209  0002AF  00                 	db	0
   210  0002B0  00                 	db	0
   211  0002B1  00                 	db	0
   212  0002B2  00                 	db	0
   213  0002B3  00                 	db	0
   214  0002B4  00                 	db	0
   215  0002B5  00                 	db	0
   216  0002B6  00                 	db	0
   217  0002B7  00                 	db	0
   218  0002B8  00                 	db	0
   219  0002B9  00                 	db	0
   220  0002BA  00                 	db	0
   221  0002BB  00                 	db	0
   222  0002BC  00                 	db	0
   223  0002BD  00                 	db	0
   224  0002BE  00                 	db	0
   225  0002BF  00                 	db	0
   226  0002C0  00                 	db	0
   227  0002C1  00                 	db	0
   228  0002C2  00                 	db	0
   229  0002C3                     __end_of_ACTIVEBAND:
   230                           	opt stack 0
   231  0002C3                     _DacOutput:
   232                           	opt stack 0
   233  0002C3  2B                 	db	43
   234  0002C4  48                 	db	72
   235  0002C5  56                 	db	86
   236  0002C6  64                 	db	100
   237  0002C7                     __end_of_DacOutput:
   238                           	opt stack 0
   239  0002C7                     _REGADD:
   240                           	opt stack 0
   241  0002C7  07                 	db	7
   242  0002C8  10                 	db	16
   243  0002C9                     __end_of_REGADD:
   244                           	opt stack 0
   245  0002C9                     _SLAVEADD:
   246                           	opt stack 0
   247  0002C9  06                 	db	6
   248  0002CA  0E                 	db	14
   249  0002CB                     __end_of_SLAVEADD:
   250                           	opt stack 0
   251  0000                     _ANSELA	set	3896
   252  0000                     _ANSELB	set	3897
   253  0000                     _ANSELC	set	3898
   254  0000                     _DACCON1	set	3904
   255  0000                     _VREFCON1	set	3905
   256  0000                     _INTCON2bits	set	4081
   257  0000                     _INTCONbits	set	4082
   258  0000                     _LATA	set	3977
   259  0000                     _LATB	set	3978
   260  0000                     _LATC	set	3979
   261  0000                     _OSCCON	set	4051
   262  0000                     _OSCCON2	set	4050
   263  0000                     _OSCTUNE	set	3995
   264  0000                     _PORTC	set	3970
   265  0000                     _TRISA	set	3986
   266  0000                     _TRISB	set	3987
   267  0000                     _TRISC	set	3988
   268  0000                     _WPUB	set	3937
   269  0000                     _LATA0	set	31816
   270  0000                     _LATA1	set	31817
   271  0000                     _LATA3	set	31819
   272  0000                     _LATA4	set	31820
   273  0000                     _LATA5	set	31821
   274  0000                     _LATA6	set	31822
   275  0000                     _LATA7	set	31823
   276  0000                     _LATC0	set	31832
   277  0000                     _LATC1	set	31833
   278                           
   279                           ; #config settings
   280  0002CB  00                 	db	0	; dummy byte at the end
   281  0000                     
   282                           	psect	cinit
   283  000528                     __pcinit:
   284                           	opt stack 0
   285  000528                     start_initialization:
   286                           	opt stack 0
   287  000528                     __initialization:
   288                           	opt stack 0
   289                           
   290                           ; Clear objects allocated to COMRAM (8 bytes)
   291  000528  EE00  F001         	lfsr	0,__pbssCOMRAM
   292  00052C  0E08               	movlw	8
   293  00052E                     clear_0:
   294  00052E  6AEE               	clrf	postinc0,c
   295  000530  06E8               	decf	wreg,f,c
   296  000532  E1FD               	bnz	clear_0
   297  000534                     end_of_initialization:
   298                           	opt stack 0
   299  000534                     __end_of__initialization:
   300                           	opt stack 0
   301  000534  0E00               	movlw	low (__Lsmallconst shr (0+16))
   302  000536  6EF8               	movwf	tblptru,c
   303  000538  0E02               	movlw	high __Lsmallconst
   304  00053A  6EF7               	movwf	tblptrh,c
   305  00053C  0100               	movlb	0
   306  00053E  EF66  F001         	goto	_main	;jump to C main() function
   307                           tblptru	equ	0xFF8
   308                           tblptrh	equ	0xFF7
   309                           postinc0	equ	0xFEE
   310                           wreg	equ	0xFE8
   311                           
   312                           	psect	bssCOMRAM
   313  000001                     __pbssCOMRAM:
   314                           	opt stack 0
   315  000001                     _Byte1:
   316                           	opt stack 0
   317  000001                     	ds	1
   318  000002                     _Byte2:
   319                           	opt stack 0
   320  000002                     	ds	1
   321  000003                     _Byte3:
   322                           	opt stack 0
   323  000003                     	ds	1
   324  000004                     _Byte4:
   325                           	opt stack 0
   326  000004                     	ds	1
   327  000005                     _Byte5:
   328                           	opt stack 0
   329  000005                     	ds	1
   330  000006                     _Byte6:
   331                           	opt stack 0
   332  000006                     	ds	1
   333  000007                     _DAC_Step:
   334                           	opt stack 0
   335  000007                     	ds	1
   336  000008                     _Dummy:
   337                           	opt stack 0
   338  000008                     	ds	1
   339                           tblptru	equ	0xFF8
   340                           tblptrh	equ	0xFF7
   341                           postinc0	equ	0xFEE
   342                           wreg	equ	0xFE8
   343                           
   344                           	psect	cstackCOMRAM
   345  000009                     __pcstackCOMRAM:
   346                           	opt stack 0
   347  000009                     DAC_SetOutput@inputData:
   348                           	opt stack 0
   349  000009                     shiftRegister@Dummy2:
   350                           	opt stack 0
   351                           
   352                           ; 1 bytes @ 0x0
   353  000009                     	ds	1
   354  00000A                     shiftRegister@y:
   355                           	opt stack 0
   356                           
   357                           ; 1 bytes @ 0x1
   358  00000A                     	ds	1
   359  00000B                     shiftRegister@m:
   360                           	opt stack 0
   361                           
   362                           ; 1 bytes @ 0x2
   363  00000B                     	ds	1
   364  00000C                     shiftRegister@Dummy1:
   365                           	opt stack 0
   366                           
   367                           ; 1 bytes @ 0x3
   368  00000C                     	ds	1
   369  00000D                     MIPI@b:
   370                           	opt stack 0
   371                           
   372                           ; 1 bytes @ 0x4
   373  00000D                     	ds	1
   374  00000E                     MIPI@a:
   375                           	opt stack 0
   376                           
   377                           ; 1 bytes @ 0x5
   378  00000E                     	ds	1
   379  00000F                     tblptru	equ	0xFF8
   380                           tblptrh	equ	0xFF7
   381                           postinc0	equ	0xFEE
   382                           wreg	equ	0xFE8
   383                           
   384                           ; 0 bytes @ 0x6
   385 ;;
   386 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   387 ;;
   388 ;; *************** function _main *****************
   389 ;; Defined at:
   390 ;;		line 114 in file "main.c"
   391 ;; Parameters:    Size  Location     Type
   392 ;;		None
   393 ;; Auto vars:     Size  Location     Type
   394 ;;		None
   395 ;; Return value:  Size  Location     Type
   396 ;;		None               void
   397 ;; Registers used:
   398 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   399 ;; Tracked objects:
   400 ;;		On entry : 0/0
   401 ;;		On exit  : 0/0
   402 ;;		Unchanged: 0/0
   403 ;; Data sizes:     COMRAM   BANK0   BANK1
   404 ;;      Params:         0       0       0
   405 ;;      Locals:         0       0       0
   406 ;;      Temps:          0       0       0
   407 ;;      Totals:         0       0       0
   408 ;;Total ram usage:        0 bytes
   409 ;; Hardware stack levels required when called:    2
   410 ;; This function calls:
   411 ;;		_DAC_SetOutput
   412 ;;		_MIPI
   413 ;;		_SYSTEM_Initialize
   414 ;; This function is called by:
   415 ;;		Startup code after reset
   416 ;; This function uses a non-reentrant model
   417 ;;
   418                           
   419                           	psect	text0
   420  0002CC                     __ptext0:
   421                           	opt stack 0
   422  0002CC                     _main:
   423                           	opt stack 29
   424                           
   425                           ;main.c: 115: if (INTCONbits.RBIF)
   426                           
   427                           ;incstack = 0
   428  0002CC  B0F2               	btfsc	intcon,0,c	;volatile
   429  0002CE  D014               	goto	l954
   430  0002D0  D001               	goto	l938
   431                           
   432                           ;main.c: 116: goto reset;
   433  0002D2  D012               	goto	l954
   434  0002D4                     l938:
   435                           
   436                           ;main.c: 118: SYSTEM_Initialize();
   437  0002D4  ECA1  F002         	call	_SYSTEM_Initialize	;wreg free
   438                           
   439                           ;main.c: 147: DAC_SetOutput(0);
   440  0002D8  0E00               	movlw	0
   441  0002DA  ECBE  F002         	call	_DAC_SetOutput
   442  0002DE  D000               	goto	l942
   443  0002E0                     l942:
   444  0002E0  9089               	bcf	3977,0,c	;volatile
   445  0002E2  D000               	goto	l944
   446  0002E4                     l944:
   447  0002E4  9289               	bcf	3977,1,c	;volatile
   448  0002E6  D000               	goto	l946
   449  0002E8                     l946:
   450  0002E8  9C89               	bcf	3977,6,c	;volatile
   451  0002EA  D000               	goto	l948
   452  0002EC                     l948:
   453  0002EC  9E89               	bcf	3977,7,c	;volatile
   454  0002EE  D000               	goto	l950
   455  0002F0                     l950:
   456  0002F0  908B               	bcf	3979,0,c	;volatile
   457  0002F2  D000               	goto	l952
   458  0002F4                     l952:
   459  0002F4  928B               	bcf	3979,1,c	;volatile
   460                           
   461                           ;main.c: 157: while ((PORTC & 0xC0) != 0xC0) {
   462                           
   463                           ;main.c: 155: while (1) {
   464                           
   465                           ;main.c: 154: reset:
   466  0002F6  D000               	goto	l954
   467  0002F8                     l954:
   468  0002F8  5082               	movf	3970,w,c	;volatile
   469  0002FA  0BC0               	andlw	192
   470  0002FC  0AC0               	xorlw	192
   471  0002FE  A4D8               	btfss	status,2,c
   472  000300  D7FB               	goto	l954
   473                           
   474                           ;main.c: 158: }
   475                           ;main.c: 159: Byte1 = PORTC;
   476  000302  CF82 F001          	movff	3970,_Byte1	;volatile
   477                           
   478                           ;main.c: 161: while ((PORTC & 0xC0) != 0x80) {
   479  000306  D000               	goto	l956
   480  000308                     l956:
   481  000308  5082               	movf	3970,w,c	;volatile
   482  00030A  0BC0               	andlw	192
   483  00030C  0A80               	xorlw	128
   484  00030E  A4D8               	btfss	status,2,c
   485  000310  D7FB               	goto	l956
   486                           
   487                           ;main.c: 162: }
   488                           ;main.c: 163: Byte3 = PORTC & 0x3F;
   489  000312  5082               	movf	3970,w,c	;volatile
   490  000314  0B3F               	andlw	63
   491  000316  6E03               	movwf	_Byte3,c
   492                           
   493                           ;main.c: 165: while ((PORTC & 0xC0) != 0x40) {
   494  000318  D000               	goto	l960
   495  00031A                     l960:
   496  00031A  5082               	movf	3970,w,c	;volatile
   497  00031C  0BC0               	andlw	192
   498  00031E  0A40               	xorlw	64
   499  000320  A4D8               	btfss	status,2,c
   500  000322  D7FB               	goto	l960
   501                           
   502                           ;main.c: 166: }
   503                           ;main.c: 167: Byte4 = PORTC & 0x3F;
   504  000324  5082               	movf	3970,w,c	;volatile
   505  000326  0B3F               	andlw	63
   506  000328  6E04               	movwf	_Byte4,c
   507                           
   508                           ;main.c: 169: while ((PORTC & 0x80) != 0x80) {
   509  00032A  D000               	goto	l164
   510  00032C                     l164:
   511  00032C  AE82               	btfss	3970,7,c	;volatile
   512  00032E  D7FE               	goto	l164
   513                           
   514                           ;main.c: 170: }
   515                           ;main.c: 171: Byte5 = PORTC & 0x7F;
   516  000330  5082               	movf	3970,w,c	;volatile
   517  000332  0B7F               	andlw	127
   518  000334  6E05               	movwf	_Byte5,c
   519                           
   520                           ;main.c: 173: while ((PORTC & 0x80) != 0x00) {
   521  000336  D000               	goto	l167
   522  000338                     l167:
   523  000338  BE82               	btfsc	3970,7,c	;volatile
   524  00033A  D7FE               	goto	l167
   525                           
   526                           ;main.c: 174: }
   527                           ;main.c: 175: Byte6 = PORTC & 0x7F;
   528  00033C  5082               	movf	3970,w,c	;volatile
   529  00033E  0B7F               	andlw	127
   530  000340  6E06               	movwf	_Byte6,c
   531                           
   532                           ;main.c: 178: DAC_Step = ((Byte4 << 4) & 0xC0);
   533  000342  3804               	swapf	_Byte4,w,c
   534  000344  0BF0               	andlw	240
   535  000346  0BC0               	andlw	192
   536  000348  6E07               	movwf	_DAC_Step,c
   537                           
   538                           ;main.c: 179: DAC_Step = (DAC_Step | Byte3);
   539  00034A  5007               	movf	_DAC_Step,w,c
   540  00034C  1003               	iorwf	_Byte3,w,c
   541  00034E  6E07               	movwf	_DAC_Step,c
   542                           
   543                           ;main.c: 180: DAC_SetOutput(DAC_Step);
   544  000350  5007               	movf	_DAC_Step,w,c
   545  000352  ECBE  F002         	call	_DAC_SetOutput
   546                           
   547                           ;main.c: 183: if ((Byte4 & 0x02) == 0x02)
   548  000356  A204               	btfss	_Byte4,1,c
   549  000358  D002               	goto	l174
   550                           
   551                           ;main.c: 184: do { LATA0 = 1; } while(0);
   552  00035A  8089               	bsf	3977,0,c	;volatile
   553  00035C  D002               	goto	l173
   554  00035E                     l174:
   555  00035E  9089               	bcf	3977,0,c	;volatile
   556  000360  D000               	goto	l173
   557  000362                     l173:
   558                           
   559                           ;main.c: 187: if ((Byte4 & 0x01) == 0x01)
   560  000362  A004               	btfss	_Byte4,0,c
   561  000364  D002               	goto	l180
   562                           
   563                           ;main.c: 188: do { LATA1 = 1; } while(0);
   564  000366  8289               	bsf	3977,1,c	;volatile
   565  000368  D002               	goto	l972
   566  00036A                     l180:
   567  00036A  9289               	bcf	3977,1,c	;volatile
   568  00036C  D000               	goto	l972
   569  00036E                     l972:
   570                           
   571                           ;main.c: 193: MIPI(Byte5, Byte6);
   572  00036E  C006  F00D         	movff	_Byte6,MIPI@b
   573  000372  5005               	movf	_Byte5,w,c
   574  000374  EC05  F002         	call	_MIPI
   575                           
   576                           ;main.c: 197: Dummy = Byte1 & 0x38;
   577  000378  5001               	movf	_Byte1,w,c
   578  00037A  0B38               	andlw	56
   579  00037C  6E08               	movwf	_Dummy,c
   580                           
   581                           ;main.c: 198: if (Dummy == 0x00) {
   582  00037E  5008               	movf	_Dummy,w,c
   583  000380  A4D8               	btfss	status,2,c
   584  000382  D004               	goto	l978
   585                           
   586                           ;main.c: 199: do { LATA6 = 0; } while(0);
   587  000384  9C89               	bcf	3977,6,c	;volatile
   588  000386  D008               	goto	l191
   589                           
   590                           ;main.c: 200: do { LATA7 = 0; } while(0);
   591  000388  D007               	goto	l191
   592                           
   593                           ;main.c: 201: } else if (Dummy == 0x20) {
   594  00038A  D018               	goto	l984
   595  00038C                     l978:
   596  00038C  0E20               	movlw	32
   597  00038E  1808               	xorwf	_Dummy,w,c
   598  000390  A4D8               	btfss	status,2,c
   599  000392  D004               	goto	l980
   600                           
   601                           ;main.c: 202: do { LATA6 = 1; } while(0);
   602  000394  8C89               	bsf	3977,6,c	;volatile
   603  000396  D000               	goto	l191
   604  000398                     l191:
   605  000398  9E89               	bcf	3977,7,c	;volatile
   606                           
   607                           ;main.c: 204: } else if (Dummy == 0x10) {
   608  00039A  D010               	goto	l984
   609  00039C                     l980:
   610  00039C  0E10               	movlw	16
   611  00039E  1808               	xorwf	_Dummy,w,c
   612  0003A0  A4D8               	btfss	status,2,c
   613  0003A2  D004               	goto	l982
   614                           
   615                           ;main.c: 205: do { LATA6 = 0; } while(0);
   616  0003A4  9C89               	bcf	3977,6,c	;volatile
   617  0003A6  D008               	goto	l203
   618                           
   619                           ;main.c: 206: do { LATA7 = 1; } while(0);
   620  0003A8  D007               	goto	l203
   621                           
   622                           ;main.c: 207: } else if (Dummy == 0x30) {
   623  0003AA  D008               	goto	l984
   624  0003AC                     l982:
   625  0003AC  0E30               	movlw	48
   626  0003AE  1808               	xorwf	_Dummy,w,c
   627  0003B0  A4D8               	btfss	status,2,c
   628  0003B2  D004               	goto	l984
   629                           
   630                           ;main.c: 208: do { LATA6 = 1; } while(0);
   631  0003B4  8C89               	bsf	3977,6,c	;volatile
   632  0003B6  D000               	goto	l203
   633  0003B8                     l203:
   634  0003B8  8E89               	bsf	3977,7,c	;volatile
   635  0003BA  D000               	goto	l984
   636  0003BC                     l984:
   637                           
   638                           ;main.c: 210: }
   639                           ;main.c: 212: Dummy = Byte1 & 0x07;
   640  0003BC  5001               	movf	_Byte1,w,c
   641  0003BE  0B07               	andlw	7
   642  0003C0  6E08               	movwf	_Dummy,c
   643                           
   644                           ;main.c: 213: if (Dummy == 0x00) {
   645  0003C2  5008               	movf	_Dummy,w,c
   646  0003C4  A4D8               	btfss	status,2,c
   647  0003C6  D004               	goto	l988
   648                           
   649                           ;main.c: 214: do { LATC0 = 0; } while(0);
   650  0003C8  908B               	bcf	3979,0,c	;volatile
   651  0003CA  D008               	goto	l214
   652                           
   653                           ;main.c: 215: do { LATC1 = 0; } while(0);
   654  0003CC  D007               	goto	l214
   655                           
   656                           ;main.c: 216: } else if (Dummy == 0x04) {
   657  0003CE  D018               	goto	l210
   658  0003D0                     l988:
   659  0003D0  0E04               	movlw	4
   660  0003D2  1808               	xorwf	_Dummy,w,c
   661  0003D4  A4D8               	btfss	status,2,c
   662  0003D6  D004               	goto	l990
   663                           
   664                           ;main.c: 217: do { LATC0 = 1; } while(0);
   665  0003D8  808B               	bsf	3979,0,c	;volatile
   666  0003DA  D000               	goto	l214
   667  0003DC                     l214:
   668  0003DC  928B               	bcf	3979,1,c	;volatile
   669                           
   670                           ;main.c: 219: } else if (Dummy == 0x02) {
   671  0003DE  D010               	goto	l210
   672  0003E0                     l990:
   673  0003E0  0E02               	movlw	2
   674  0003E2  1808               	xorwf	_Dummy,w,c
   675  0003E4  A4D8               	btfss	status,2,c
   676  0003E6  D004               	goto	l992
   677                           
   678                           ;main.c: 220: do { LATC0 = 0; } while(0);
   679  0003E8  908B               	bcf	3979,0,c	;volatile
   680  0003EA  D008               	goto	l226
   681                           
   682                           ;main.c: 221: do { LATC1 = 1; } while(0);
   683  0003EC  D007               	goto	l226
   684                           
   685                           ;main.c: 222: } else if (Dummy == 0x06) {
   686  0003EE  D008               	goto	l210
   687  0003F0                     l992:
   688  0003F0  0E06               	movlw	6
   689  0003F2  1808               	xorwf	_Dummy,w,c
   690  0003F4  A4D8               	btfss	status,2,c
   691  0003F6  D004               	goto	l210
   692                           
   693                           ;main.c: 223: do { LATC0 = 1; } while(0);
   694  0003F8  808B               	bsf	3979,0,c	;volatile
   695  0003FA  D000               	goto	l226
   696  0003FC                     l226:
   697  0003FC  828B               	bsf	3979,1,c	;volatile
   698  0003FE  D000               	goto	l210
   699  000400                     l210:
   700                           
   701                           ;main.c: 225: }
   702                           ;main.c: 227: INTCONbits.RBIF = 0;
   703  000400  90F2               	bcf	intcon,0,c	;volatile
   704  000402  0003               	sleep		;# 
   705  000404  D779               	goto	l954
   706  000406  EF00  F000         	goto	start
   707  00040A                     __end_of_main:
   708                           	opt stack 0
   709                           tblptru	equ	0xFF8
   710                           tblptrh	equ	0xFF7
   711                           intcon	equ	0xFF2
   712                           postinc0	equ	0xFEE
   713                           wreg	equ	0xFE8
   714                           status	equ	0xFD8
   715                           
   716 ;; *************** function _SYSTEM_Initialize *****************
   717 ;; Defined at:
   718 ;;		line 106 in file "mcc_generated_files/mcc.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;		None
   721 ;; Auto vars:     Size  Location     Type
   722 ;;		None
   723 ;; Return value:  Size  Location     Type
   724 ;;		None               void
   725 ;; Registers used:
   726 ;;		wreg, status,2, cstack
   727 ;; Tracked objects:
   728 ;;		On entry : 0/0
   729 ;;		On exit  : 0/0
   730 ;;		Unchanged: 0/0
   731 ;; Data sizes:     COMRAM   BANK0   BANK1
   732 ;;      Params:         0       0       0
   733 ;;      Locals:         0       0       0
   734 ;;      Temps:          0       0       0
   735 ;;      Totals:         0       0       0
   736 ;;Total ram usage:        0 bytes
   737 ;; Hardware stack levels used:    1
   738 ;; Hardware stack levels required when called:    1
   739 ;; This function calls:
   740 ;;		_DAC_Initialize
   741 ;;		_INTERRUPT_ON_CHANGE_Initialize
   742 ;;		_OSCILLATOR_Initialize
   743 ;;		_PIN_MANAGER_Initialize
   744 ;; This function is called by:
   745 ;;		_main
   746 ;; This function uses a non-reentrant model
   747 ;;
   748                           
   749                           	psect	text1
   750  000542                     __ptext1:
   751                           	opt stack 0
   752  000542                     _SYSTEM_Initialize:
   753                           	opt stack 29
   754                           
   755                           ;mcc.c: 107: OSCILLATOR_Initialize();
   756                           
   757                           ;incstack = 0
   758  000542  ECAA  F002         	call	_OSCILLATOR_Initialize	;wreg free
   759                           
   760                           ;mcc.c: 108: PIN_MANAGER_Initialize();
   761  000546  EC7C  F002         	call	_PIN_MANAGER_Initialize	;wreg free
   762                           
   763                           ;mcc.c: 109: DAC_Initialize();
   764  00054A  ECB1  F002         	call	_DAC_Initialize	;wreg free
   765                           
   766                           ;mcc.c: 110: INTERRUPT_ON_CHANGE_Initialize();
   767  00054E  ECB8  F002         	call	_INTERRUPT_ON_CHANGE_Initialize	;wreg free
   768  000552  0012               	return		;funcret
   769  000554                     __end_of_SYSTEM_Initialize:
   770                           	opt stack 0
   771                           tblptru	equ	0xFF8
   772                           tblptrh	equ	0xFF7
   773                           intcon	equ	0xFF2
   774                           postinc0	equ	0xFEE
   775                           wreg	equ	0xFE8
   776                           status	equ	0xFD8
   777                           
   778 ;; *************** function _PIN_MANAGER_Initialize *****************
   779 ;; Defined at:
   780 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
   781 ;; Parameters:    Size  Location     Type
   782 ;;		None
   783 ;; Auto vars:     Size  Location     Type
   784 ;;		None
   785 ;; Return value:  Size  Location     Type
   786 ;;		None               void
   787 ;; Registers used:
   788 ;;		wreg, status,2
   789 ;; Tracked objects:
   790 ;;		On entry : 0/0
   791 ;;		On exit  : 0/0
   792 ;;		Unchanged: 0/0
   793 ;; Data sizes:     COMRAM   BANK0   BANK1
   794 ;;      Params:         0       0       0
   795 ;;      Locals:         0       0       0
   796 ;;      Temps:          0       0       0
   797 ;;      Totals:         0       0       0
   798 ;;Total ram usage:        0 bytes
   799 ;; Hardware stack levels used:    1
   800 ;; This function calls:
   801 ;;		Nothing
   802 ;; This function is called by:
   803 ;;		_SYSTEM_Initialize
   804 ;; This function uses a non-reentrant model
   805 ;;
   806                           
   807                           	psect	text2
   808  0004F8                     __ptext2:
   809                           	opt stack 0
   810  0004F8                     _PIN_MANAGER_Initialize:
   811                           	opt stack 29
   812                           
   813                           ;pin_manager.c: 51: LATA = 0x00;
   814                           
   815                           ;incstack = 0
   816  0004F8  0E00               	movlw	0
   817  0004FA  6E89               	movwf	3977,c	;volatile
   818                           
   819                           ;pin_manager.c: 52: TRISA = 0x00;
   820  0004FC  0E00               	movlw	0
   821  0004FE  6E92               	movwf	3986,c	;volatile
   822                           
   823                           ;pin_manager.c: 53: ANSELA = 0x04;
   824  000500  0E04               	movlw	4
   825  000502  010F               	movlb	15	; () banked
   826  000504  6F38               	movwf	56,b	;volatile
   827                           
   828                           ;pin_manager.c: 55: LATB = 0x00;
   829  000506  0E00               	movlw	0
   830  000508  6E8A               	movwf	3978,c	;volatile
   831                           
   832                           ; BSR set to: 15
   833                           ;pin_manager.c: 56: TRISB = 0xFF;
   834  00050A  6893               	setf	3987,c	;volatile
   835                           
   836                           ;pin_manager.c: 57: ANSELB = 0x00;
   837  00050C  0E00               	movlw	0
   838  00050E  010F               	movlb	15	; () banked
   839  000510  6F39               	movwf	57,b	;volatile
   840                           
   841                           ;pin_manager.c: 58: WPUB = 0x00;
   842  000512  0E00               	movlw	0
   843  000514  6E61               	movwf	3937,c	;volatile
   844                           
   845                           ;pin_manager.c: 60: LATC = 0x00;
   846  000516  0E00               	movlw	0
   847  000518  6E8B               	movwf	3979,c	;volatile
   848                           
   849                           ;pin_manager.c: 61: TRISC = 0xFC;
   850  00051A  0EFC               	movlw	252
   851  00051C  6E94               	movwf	3988,c	;volatile
   852                           
   853                           ;pin_manager.c: 62: ANSELC = 0xFC;
   854  00051E  0EFC               	movlw	252
   855  000520  010F               	movlb	15	; () banked
   856  000522  6F3A               	movwf	58,b	;volatile
   857                           
   858                           ; BSR set to: 15
   859                           ;pin_manager.c: 64: INTCON2bits.nRBPU = 0x01;
   860  000524  8EF1               	bsf	intcon2,7,c	;volatile
   861                           
   862                           ; BSR set to: 15
   863  000526  0012               	return		;funcret
   864  000528                     __end_of_PIN_MANAGER_Initialize:
   865                           	opt stack 0
   866                           tblptru	equ	0xFF8
   867                           tblptrh	equ	0xFF7
   868                           intcon	equ	0xFF2
   869                           intcon2	equ	0xFF1
   870                           postinc0	equ	0xFEE
   871                           wreg	equ	0xFE8
   872                           status	equ	0xFD8
   873                           
   874 ;; *************** function _OSCILLATOR_Initialize *****************
   875 ;; Defined at:
   876 ;;		line 113 in file "mcc_generated_files/mcc.c"
   877 ;; Parameters:    Size  Location     Type
   878 ;;		None
   879 ;; Auto vars:     Size  Location     Type
   880 ;;		None
   881 ;; Return value:  Size  Location     Type
   882 ;;		None               void
   883 ;; Registers used:
   884 ;;		wreg, status,2
   885 ;; Tracked objects:
   886 ;;		On entry : 0/0
   887 ;;		On exit  : 0/0
   888 ;;		Unchanged: 0/0
   889 ;; Data sizes:     COMRAM   BANK0   BANK1
   890 ;;      Params:         0       0       0
   891 ;;      Locals:         0       0       0
   892 ;;      Temps:          0       0       0
   893 ;;      Totals:         0       0       0
   894 ;;Total ram usage:        0 bytes
   895 ;; Hardware stack levels used:    1
   896 ;; This function calls:
   897 ;;		Nothing
   898 ;; This function is called by:
   899 ;;		_SYSTEM_Initialize
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903                           	psect	text3
   904  000554                     __ptext3:
   905                           	opt stack 0
   906  000554                     _OSCILLATOR_Initialize:
   907                           	opt stack 29
   908                           
   909                           ;mcc.c: 115: OSCCON = 0x70;
   910                           
   911                           ; BSR set to: 15
   912                           ;incstack = 0
   913  000554  0E70               	movlw	112
   914  000556  6ED3               	movwf	4051,c	;volatile
   915                           
   916                           ;mcc.c: 117: OSCCON2 = 0x04;
   917  000558  0E04               	movlw	4
   918  00055A  6ED2               	movwf	4050,c	;volatile
   919                           
   920                           ;mcc.c: 119: OSCTUNE = 0x40;
   921  00055C  0E40               	movlw	64
   922  00055E  6E9B               	movwf	3995,c	;volatile
   923  000560  0012               	return		;funcret
   924  000562                     __end_of_OSCILLATOR_Initialize:
   925                           	opt stack 0
   926                           tblptru	equ	0xFF8
   927                           tblptrh	equ	0xFF7
   928                           intcon	equ	0xFF2
   929                           intcon2	equ	0xFF1
   930                           postinc0	equ	0xFEE
   931                           wreg	equ	0xFE8
   932                           status	equ	0xFD8
   933                           
   934 ;; *************** function _INTERRUPT_ON_CHANGE_Initialize *****************
   935 ;; Defined at:
   936 ;;		line 124 in file "mcc_generated_files/mcc.c"
   937 ;; Parameters:    Size  Location     Type
   938 ;;		None
   939 ;; Auto vars:     Size  Location     Type
   940 ;;		None
   941 ;; Return value:  Size  Location     Type
   942 ;;		None               void
   943 ;; Registers used:
   944 ;;		None
   945 ;; Tracked objects:
   946 ;;		On entry : 0/0
   947 ;;		On exit  : 0/0
   948 ;;		Unchanged: 0/0
   949 ;; Data sizes:     COMRAM   BANK0   BANK1
   950 ;;      Params:         0       0       0
   951 ;;      Locals:         0       0       0
   952 ;;      Temps:          0       0       0
   953 ;;      Totals:         0       0       0
   954 ;;Total ram usage:        0 bytes
   955 ;; Hardware stack levels used:    1
   956 ;; This function calls:
   957 ;;		Nothing
   958 ;; This function is called by:
   959 ;;		_SYSTEM_Initialize
   960 ;; This function uses a non-reentrant model
   961 ;;
   962                           
   963                           	psect	text4
   964  000570                     __ptext4:
   965                           	opt stack 0
   966  000570                     _INTERRUPT_ON_CHANGE_Initialize:
   967                           	opt stack 29
   968                           
   969                           ;mcc.c: 126: INTCONbits.GIE = 1;
   970                           
   971                           ;incstack = 0
   972  000570  8EF2               	bsf	intcon,7,c	;volatile
   973                           
   974                           ;mcc.c: 127: INTCONbits.PEIE = 1;
   975  000572  8CF2               	bsf	intcon,6,c	;volatile
   976                           
   977                           ;mcc.c: 128: INTCONbits.RBIE = 1;
   978  000574  86F2               	bsf	intcon,3,c	;volatile
   979                           
   980                           ;mcc.c: 129: INTCONbits.RBIF = 0;
   981  000576  90F2               	bcf	intcon,0,c	;volatile
   982                           
   983                           ;mcc.c: 130: INTCON2bits.RBIP = 0;
   984  000578  90F1               	bcf	intcon2,0,c	;volatile
   985  00057A  0012               	return		;funcret
   986  00057C                     __end_of_INTERRUPT_ON_CHANGE_Initialize:
   987                           	opt stack 0
   988                           tblptru	equ	0xFF8
   989                           tblptrh	equ	0xFF7
   990                           intcon	equ	0xFF2
   991                           intcon2	equ	0xFF1
   992                           postinc0	equ	0xFEE
   993                           wreg	equ	0xFE8
   994                           status	equ	0xFD8
   995                           
   996 ;; *************** function _DAC_Initialize *****************
   997 ;; Defined at:
   998 ;;		line 57 in file "mcc_generated_files/dac.c"
   999 ;; Parameters:    Size  Location     Type
  1000 ;;		None
  1001 ;; Auto vars:     Size  Location     Type
  1002 ;;		None
  1003 ;; Return value:  Size  Location     Type
  1004 ;;		None               void
  1005 ;; Registers used:
  1006 ;;		wreg, status,2
  1007 ;; Tracked objects:
  1008 ;;		On entry : 0/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMRAM   BANK0   BANK1
  1012 ;;      Params:         0       0       0
  1013 ;;      Locals:         0       0       0
  1014 ;;      Temps:          0       0       0
  1015 ;;      Totals:         0       0       0
  1016 ;;Total ram usage:        0 bytes
  1017 ;; Hardware stack levels used:    1
  1018 ;; This function calls:
  1019 ;;		Nothing
  1020 ;; This function is called by:
  1021 ;;		_SYSTEM_Initialize
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           	psect	text5
  1026  000562                     __ptext5:
  1027                           	opt stack 0
  1028  000562                     _DAC_Initialize:
  1029                           	opt stack 29
  1030                           
  1031                           ;dac.c: 59: VREFCON1 = 0xA0;
  1032                           
  1033                           ;incstack = 0
  1034  000562  0EA0               	movlw	160
  1035  000564  010F               	movlb	15	; () banked
  1036  000566  6F41               	movwf	65,b	;volatile
  1037                           
  1038                           ;dac.c: 61: DACCON1 = 0x00;
  1039  000568  0E00               	movlw	0
  1040  00056A  010F               	movlb	15	; () banked
  1041  00056C  6F40               	movwf	64,b	;volatile
  1042                           
  1043                           ; BSR set to: 15
  1044  00056E  0012               	return		;funcret
  1045  000570                     __end_of_DAC_Initialize:
  1046                           	opt stack 0
  1047                           tblptru	equ	0xFF8
  1048                           tblptrh	equ	0xFF7
  1049                           intcon	equ	0xFF2
  1050                           intcon2	equ	0xFF1
  1051                           postinc0	equ	0xFEE
  1052                           wreg	equ	0xFE8
  1053                           status	equ	0xFD8
  1054                           
  1055 ;; *************** function _MIPI *****************
  1056 ;; Defined at:
  1057 ;;		line 95 in file "main.c"
  1058 ;; Parameters:    Size  Location     Type
  1059 ;;  a               1    wreg     unsigned char 
  1060 ;;  b               1    4[COMRAM] unsigned char 
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;  a               1    5[COMRAM] unsigned char 
  1063 ;; Return value:  Size  Location     Type
  1064 ;;		None               void
  1065 ;; Registers used:
  1066 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1067 ;; Tracked objects:
  1068 ;;		On entry : 0/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMRAM   BANK0   BANK1
  1072 ;;      Params:         1       0       0
  1073 ;;      Locals:         1       0       0
  1074 ;;      Temps:          0       0       0
  1075 ;;      Totals:         2       0       0
  1076 ;;Total ram usage:        2 bytes
  1077 ;; Hardware stack levels used:    1
  1078 ;; Hardware stack levels required when called:    1
  1079 ;; This function calls:
  1080 ;;		_shiftRegister
  1081 ;; This function is called by:
  1082 ;;		_main
  1083 ;; This function uses a non-reentrant model
  1084 ;;
  1085                           
  1086                           	psect	text6
  1087  00040A                     __ptext6:
  1088                           	opt stack 0
  1089  00040A                     _MIPI:
  1090                           	opt stack 29
  1091                           
  1092                           ; BSR set to: 15
  1093                           ;incstack = 0
  1094                           ;MIPI@a stored from wreg
  1095  00040A  6E0E               	movwf	MIPI@a,c
  1096                           
  1097                           ;main.c: 96: do { LATA3 = 1; } while(0);
  1098  00040C  8689               	bsf	3977,3,c	;volatile
  1099  00040E  D000               	goto	l131
  1100  000410                     l131:
  1101  000410  8889               	bsf	3977,4,c	;volatile
  1102  000412  D000               	goto	l133
  1103  000414                     l133:
  1104  000414  9689               	bcf	3977,3,c	;volatile
  1105  000416  D000               	goto	l135
  1106  000418                     l135:
  1107  000418  9889               	bcf	3977,4,c	;volatile
  1108  00041A  D000               	goto	l924
  1109  00041C                     l924:
  1110                           
  1111                           ;main.c: 104: shiftRegister (SLAVEADD[0],SLAVEADD[0],4);
  1112  00041C  0EC9               	movlw	low _SLAVEADD
  1113  00041E  6EF6               	movwf	tblptrl,c
  1114  000420                     	if	0	;There is only one active tblptr byte
  1115  000420                     	endif
  1116  000420                     	if	0	;There are less than 3 active tblptr bytes
  1117  000420                     	endif
  1118  000420  0008               	tblrd		*
  1119  000422  CFF5 F009          	movff	tablat,shiftRegister@Dummy2
  1120  000426  0E04               	movlw	4
  1121  000428  6E0A               	movwf	shiftRegister@y,c
  1122  00042A  0EC9               	movlw	low _SLAVEADD
  1123  00042C  6EF6               	movwf	tblptrl,c
  1124  00042E                     	if	0	;There is only one active tblptr byte
  1125  00042E                     	endif
  1126  00042E                     	if	0	;There are less than 3 active tblptr bytes
  1127  00042E                     	endif
  1128  00042E  0008               	tblrd		*
  1129  000430  50F5               	movf	tablat,w,c
  1130  000432  EC5C  F002         	call	_shiftRegister
  1131                           
  1132                           ;main.c: 105: shiftRegister (0x82,0x82,8);
  1133  000436  0E82               	movlw	130
  1134  000438  6E09               	movwf	shiftRegister@Dummy2,c
  1135  00043A  0E08               	movlw	8
  1136  00043C  6E0A               	movwf	shiftRegister@y,c
  1137  00043E  0E82               	movlw	130
  1138  000440  EC5C  F002         	call	_shiftRegister
  1139                           
  1140                           ;main.c: 106: shiftRegister (0x01,0x01,1);
  1141  000444  0E01               	movlw	1
  1142  000446  6E09               	movwf	shiftRegister@Dummy2,c
  1143  000448  0E01               	movlw	1
  1144  00044A  6E0A               	movwf	shiftRegister@y,c
  1145  00044C  0E01               	movlw	1
  1146  00044E  EC5C  F002         	call	_shiftRegister
  1147                           
  1148                           ;main.c: 107: shiftRegister (DATA[a],DATA[b],8);
  1149  000452  500D               	movf	MIPI@b,w,c
  1150  000454  0D01               	mullw	1
  1151  000456  0E01               	movlw	low _DATA
  1152  000458  24F3               	addwf	prodl,w,c
  1153  00045A  6EF6               	movwf	tblptrl,c
  1154  00045C  0E02               	movlw	high _DATA
  1155  00045E  20F4               	addwfc	prodh,w,c
  1156  000460  6EF7               	movwf	tblptrh,c
  1157  000462                     	if	0	;There are less than 3 active tblptr bytes
  1158  000462                     	endif
  1159  000462  0008               	tblrd		*
  1160  000464  CFF5 F009          	movff	tablat,shiftRegister@Dummy2
  1161  000468  0E08               	movlw	8
  1162  00046A  6E0A               	movwf	shiftRegister@y,c
  1163  00046C  500E               	movf	MIPI@a,w,c
  1164  00046E  0D01               	mullw	1
  1165  000470  0E01               	movlw	low _DATA
  1166  000472  24F3               	addwf	prodl,w,c
  1167  000474  6EF6               	movwf	tblptrl,c
  1168  000476  0E02               	movlw	high _DATA
  1169  000478  20F4               	addwfc	prodh,w,c
  1170  00047A  6EF7               	movwf	tblptrh,c
  1171  00047C                     	if	0	;There are less than 3 active tblptr bytes
  1172  00047C                     	endif
  1173  00047C  0008               	tblrd		*
  1174  00047E  50F5               	movf	tablat,w,c
  1175  000480  EC5C  F002         	call	_shiftRegister
  1176                           
  1177                           ;main.c: 108: shiftRegister (PARITY[a],PARITY[b],2);
  1178  000484  500D               	movf	MIPI@b,w,c
  1179  000486  0D01               	mullw	1
  1180  000488  0E42               	movlw	low _PARITY
  1181  00048A  24F3               	addwf	prodl,w,c
  1182  00048C  6EF6               	movwf	tblptrl,c
  1183  00048E  0E02               	movlw	high _PARITY
  1184  000490  20F4               	addwfc	prodh,w,c
  1185  000492  6EF7               	movwf	tblptrh,c
  1186  000494                     	if	0	;There are less than 3 active tblptr bytes
  1187  000494                     	endif
  1188  000494  0008               	tblrd		*
  1189  000496  CFF5 F009          	movff	tablat,shiftRegister@Dummy2
  1190  00049A  0E02               	movlw	2
  1191  00049C  6E0A               	movwf	shiftRegister@y,c
  1192  00049E  500E               	movf	MIPI@a,w,c
  1193  0004A0  0D01               	mullw	1
  1194  0004A2  0E42               	movlw	low _PARITY
  1195  0004A4  24F3               	addwf	prodl,w,c
  1196  0004A6  6EF6               	movwf	tblptrl,c
  1197  0004A8  0E02               	movlw	high _PARITY
  1198  0004AA  20F4               	addwfc	prodh,w,c
  1199  0004AC  6EF7               	movwf	tblptrh,c
  1200  0004AE                     	if	0	;There are less than 3 active tblptr bytes
  1201  0004AE                     	endif
  1202  0004AE  0008               	tblrd		*
  1203  0004B0  50F5               	movf	tablat,w,c
  1204  0004B2  EC5C  F002         	call	_shiftRegister
  1205  0004B6  0012               	return		;funcret
  1206  0004B8                     __end_of_MIPI:
  1207                           	opt stack 0
  1208                           tblptru	equ	0xFF8
  1209                           tblptrh	equ	0xFF7
  1210                           tblptrl	equ	0xFF6
  1211                           tablat	equ	0xFF5
  1212                           prodh	equ	0xFF4
  1213                           prodl	equ	0xFF3
  1214                           intcon	equ	0xFF2
  1215                           intcon2	equ	0xFF1
  1216                           postinc0	equ	0xFEE
  1217                           wreg	equ	0xFE8
  1218                           status	equ	0xFD8
  1219                           
  1220 ;; *************** function _shiftRegister *****************
  1221 ;; Defined at:
  1222 ;;		line 80 in file "main.c"
  1223 ;; Parameters:    Size  Location     Type
  1224 ;;  Dummy1          1    wreg     unsigned char 
  1225 ;;  Dummy2          1    0[COMRAM] unsigned char 
  1226 ;;  y               1    1[COMRAM] unsigned char 
  1227 ;; Auto vars:     Size  Location     Type
  1228 ;;  Dummy1          1    3[COMRAM] unsigned char 
  1229 ;;  m               1    2[COMRAM] unsigned char 
  1230 ;; Return value:  Size  Location     Type
  1231 ;;		None               void
  1232 ;; Registers used:
  1233 ;;		wreg, status,2, status,0
  1234 ;; Tracked objects:
  1235 ;;		On entry : 0/0
  1236 ;;		On exit  : 0/0
  1237 ;;		Unchanged: 0/0
  1238 ;; Data sizes:     COMRAM   BANK0   BANK1
  1239 ;;      Params:         2       0       0
  1240 ;;      Locals:         2       0       0
  1241 ;;      Temps:          0       0       0
  1242 ;;      Totals:         4       0       0
  1243 ;;Total ram usage:        4 bytes
  1244 ;; Hardware stack levels used:    1
  1245 ;; This function calls:
  1246 ;;		Nothing
  1247 ;; This function is called by:
  1248 ;;		_MIPI
  1249 ;; This function uses a non-reentrant model
  1250 ;;
  1251                           
  1252                           	psect	text7
  1253  0004B8                     __ptext7:
  1254                           	opt stack 0
  1255  0004B8                     _shiftRegister:
  1256                           	opt stack 29
  1257                           
  1258                           ;incstack = 0
  1259                           ;shiftRegister@Dummy1 stored from wreg
  1260  0004B8  6E0C               	movwf	shiftRegister@Dummy1,c
  1261                           
  1262                           ;main.c: 81: for (uint8_t m=0; m<y; m++){
  1263  0004BA  0E00               	movlw	0
  1264  0004BC  6E0B               	movwf	shiftRegister@m,c
  1265  0004BE  D017               	goto	l922
  1266  0004C0                     l121:
  1267  0004C0  8A89               	bsf	3977,5,c	;volatile
  1268  0004C2  D000               	goto	l914
  1269  0004C4                     l914:
  1270                           
  1271                           ;main.c: 83: LATA3 = Dummy1 & 0x01;
  1272  0004C4  B00C               	btfsc	shiftRegister@Dummy1,0,c
  1273  0004C6  D002               	bra	u205
  1274  0004C8  9689               	bcf	3977,3,c	;volatile
  1275  0004CA  D001               	bra	u206
  1276  0004CC                     u205:
  1277  0004CC  8689               	bsf	3977,3,c	;volatile
  1278  0004CE                     u206:
  1279                           
  1280                           ;main.c: 84: LATA4 = Dummy2 & 0x01;
  1281  0004CE  B009               	btfsc	shiftRegister@Dummy2,0,c
  1282  0004D0  D002               	bra	u215
  1283  0004D2  9889               	bcf	3977,4,c	;volatile
  1284  0004D4  D001               	bra	u216
  1285  0004D6                     u215:
  1286  0004D6  8889               	bsf	3977,4,c	;volatile
  1287  0004D8                     u216:
  1288  0004D8  D000               	goto	l918
  1289  0004DA                     l918:
  1290  0004DA  9A89               	bcf	3977,5,c	;volatile
  1291  0004DC  D000               	goto	l920
  1292  0004DE                     l920:
  1293                           
  1294                           ;main.c: 88: Dummy1 = Dummy1 >> 1;
  1295  0004DE  90D8               	bcf	status,0,c
  1296  0004E0  300C               	rrcf	shiftRegister@Dummy1,w,c
  1297  0004E2  6E0C               	movwf	shiftRegister@Dummy1,c
  1298                           
  1299                           ;main.c: 89: Dummy2 = Dummy2 >> 1;
  1300  0004E4  90D8               	bcf	status,0,c
  1301  0004E6  3009               	rrcf	shiftRegister@Dummy2,w,c
  1302  0004E8  6E09               	movwf	shiftRegister@Dummy2,c
  1303  0004EA  2A0B               	incf	shiftRegister@m,f,c
  1304  0004EC  D000               	goto	l922
  1305  0004EE                     l922:
  1306  0004EE  500A               	movf	shiftRegister@y,w,c
  1307  0004F0  5C0B               	subwf	shiftRegister@m,w,c
  1308  0004F2  A0D8               	btfss	status,0,c
  1309  0004F4  D7E5               	goto	l121
  1310  0004F6  0012               	return		;funcret
  1311  0004F8                     __end_of_shiftRegister:
  1312                           	opt stack 0
  1313                           tblptru	equ	0xFF8
  1314                           tblptrh	equ	0xFF7
  1315                           tblptrl	equ	0xFF6
  1316                           tablat	equ	0xFF5
  1317                           prodh	equ	0xFF4
  1318                           prodl	equ	0xFF3
  1319                           intcon	equ	0xFF2
  1320                           intcon2	equ	0xFF1
  1321                           postinc0	equ	0xFEE
  1322                           wreg	equ	0xFE8
  1323                           status	equ	0xFD8
  1324                           
  1325 ;; *************** function _DAC_SetOutput *****************
  1326 ;; Defined at:
  1327 ;;		line 64 in file "mcc_generated_files/dac.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;  inputData       1    wreg     unsigned char 
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;  inputData       1    0[COMRAM] unsigned char 
  1332 ;; Return value:  Size  Location     Type
  1333 ;;		None               void
  1334 ;; Registers used:
  1335 ;;		wreg
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMRAM   BANK0   BANK1
  1341 ;;      Params:         0       0       0
  1342 ;;      Locals:         1       0       0
  1343 ;;      Temps:          0       0       0
  1344 ;;      Totals:         1       0       0
  1345 ;;Total ram usage:        1 bytes
  1346 ;; Hardware stack levels used:    1
  1347 ;; This function calls:
  1348 ;;		Nothing
  1349 ;; This function is called by:
  1350 ;;		_main
  1351 ;; This function uses a non-reentrant model
  1352 ;;
  1353                           
  1354                           	psect	text8
  1355  00057C                     __ptext8:
  1356                           	opt stack 0
  1357  00057C                     _DAC_SetOutput:
  1358                           	opt stack 30
  1359                           
  1360                           ;incstack = 0
  1361                           ;DAC_SetOutput@inputData stored from wreg
  1362  00057C  6E09               	movwf	DAC_SetOutput@inputData,c
  1363                           
  1364                           ;dac.c: 65: DACCON1 = inputData;
  1365  00057E  C009  FF40         	movff	DAC_SetOutput@inputData,3904	;volatile
  1366  000582  0012               	return		;funcret
  1367  000584                     __end_of_DAC_SetOutput:
  1368                           	opt stack 0
  1369                           tblptru	equ	0xFF8
  1370                           tblptrh	equ	0xFF7
  1371                           tblptrl	equ	0xFF6
  1372                           tablat	equ	0xFF5
  1373                           prodh	equ	0xFF4
  1374                           prodl	equ	0xFF3
  1375                           intcon	equ	0xFF2
  1376                           intcon2	equ	0xFF1
  1377                           postinc0	equ	0xFEE
  1378                           wreg	equ	0xFE8
  1379                           status	equ	0xFD8
  1380                           tblptru	equ	0xFF8
  1381                           tblptrh	equ	0xFF7
  1382                           tblptrl	equ	0xFF6
  1383                           tablat	equ	0xFF5
  1384                           prodh	equ	0xFF4
  1385                           prodl	equ	0xFF3
  1386                           intcon	equ	0xFF2
  1387                           intcon2	equ	0xFF1
  1388                           postinc0	equ	0xFEE
  1389                           wreg	equ	0xFE8
  1390                           status	equ	0xFD8
  1391                           
  1392                           	psect	rparam
  1393  0000                     tblptru	equ	0xFF8
  1394                           tblptrh	equ	0xFF7
  1395                           tblptrl	equ	0xFF6
  1396                           tablat	equ	0xFF5
  1397                           prodh	equ	0xFF4
  1398                           prodl	equ	0xFF3
  1399                           intcon	equ	0xFF2
  1400                           intcon2	equ	0xFF1
  1401                           postinc0	equ	0xFEE
  1402                           wreg	equ	0xFE8
  1403                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    202
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      6      14
    BANK0           160      0       0
    BANK1           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_MIPI
    _MIPI->_shiftRegister

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     712
                      _DAC_SetOutput
                               _MIPI
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _DAC_Initialize
     _INTERRUPT_ON_CHANGE_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_ON_CHANGE_Initialize                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DAC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MIPI                                                 2     1      1     697
                                              4 COMRAM     2     1      1
                      _shiftRegister
 ---------------------------------------------------------------------------------
 (2) _shiftRegister                                        4     2      2     566
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _DAC_SetOutput                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DAC_SetOutput
   _MIPI
     _shiftRegister
   _SYSTEM_Initialize
     _DAC_Initialize
     _INTERRUPT_ON_CHANGE_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      6       E       1       14.7%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       E       6        0.0%
DATA                 0      0       E       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed Apr 06 12:32:34 2016

                            __CFG_CP0$ON 000000                              __CFG_CP1$ON 000000  
                            __CFG_CPB$ON 000000                              __CFG_CPD$ON 000000  
                            __CFG_LVP$ON 000000                                      l121 04C0  
                                    l210 0400                                      l131 0410  
                                    l203 03B8                                      l133 0414  
                                    l214 03DC                                      l135 0418  
                                    l226 03FC                                      l180 036A  
                                    l164 032C                                      l173 0362  
                                    l174 035E                                      l191 0398  
                                    l167 0338                                      l920 04DE  
                                    l914 04C4                                      l922 04EE  
                                    l924 041C                                      l918 04DA  
                                    l950 02F0                                      l942 02E0  
                                    l960 031A                                      l952 02F4  
                                    l944 02E4                                      l946 02E8  
                                    l954 02F8                                      l938 02D4  
                                    l980 039C                                      l972 036E  
                                    l956 0308                                      l948 02EC  
                                    l990 03E0                                      l982 03AC  
                                    l992 03F0                                      l984 03BC  
                                    l978 038C                                      l988 03D0  
                                    u205 04CC                                      u206 04CE  
                                    u215 04D6                                      u216 04D8  
                                    wreg 000FE8                                     _DATA 0201  
                                   _LATA 000F89                                     _LATB 000F8A  
                                   _LATC 000F8B                                     _MIPI 040A  
                                   _WPUB 000F61                                     _main 02CC  
                          __CFG_BORV$190 000000                                     prodh 000FF4  
                                   prodl 000FF3                                     start 0000  
                          __CFG_IESO$OFF 000000                             ___param_bank 000010  
                                  ?_MIPI 000D                                    MIPI@a 000E  
                                  MIPI@b 000D           __size_of_OSCILLATOR_Initialize 000E  
          __end_of_OSCILLATOR_Initialize 0562                                    ?_main 0009  
                                  _LATA0 007C48                                    _LATA1 007C49  
                                  _LATA3 007C4B                                    _LATC0 007C58  
                                  _LATA4 007C4C                                    _LATC1 007C59  
                                  _LATA5 007C4D                                    _LATA6 007C4E  
                                  _LATA7 007C4F                           __CFG_DEBUG$OFF 000000  
                                  _PORTC 000F82                                    _TRISA 000F92  
                                  _TRISB 000F93                                    _TRISC 000F94  
                       __end_of_SLAVEADD 02CB                            __CFG_WRT0$OFF 000000  
                          __CFG_WRT1$OFF 000000                                    _Byte1 0001  
                                  _Byte2 0002                                    _Byte3 0003  
                                  _Byte4 0004                                    _Byte5 0005  
                                  _Byte6 0006                                    _Dummy 0008  
                         __CFG_EBTR0$OFF 000000                           __CFG_FCMEN$OFF 000000  
                         __CFG_EBTR1$OFF 000000                            __CFG_WRTB$OFF 000000  
                          __CFG_WRTC$OFF 000000                            __CFG_WRTD$OFF 000000  
                         __CFG_EBTRB$OFF 000000                       __CFG_MCLRE$EXTMCLR 000000  
                         __CFG_BOREN$OFF 000000                                    tablat 000FF5  
                                  status 000FD8                           __CFG_HFOFST$ON 000000  
                           __end_of_DATA 0242                             __end_of_MIPI 04B8  
                       ??_DAC_Initialize 0009                          __initialization 0528  
                           __end_of_main 040A                                   ??_MIPI 000E  
                                 ??_main 000F                            __activetblptr 000001  
                         __CFG_PLLCFG$ON 000000                                   _ANSELA 000F38  
                                 _ANSELB 000F39                                   _ANSELC 000F3A  
                         __CFG_WDTEN$OFF 000000                                   _REGADD 02C7  
                                 _PARITY 0242                                   _OSCCON 000FD3  
                         __CFG_XINST$OFF 000000                                   clear_0 052E  
                     __end_of_ACTIVEBAND 02C3                        __end_of_DacOutput 02C7  
                  __end_of_shiftRegister 04F8                             __mediumconst 0000  
                                 tblptrh 000FF7                                   tblptrl 000FF6  
                                 tblptru 000FF8                        _SYSTEM_Initialize 0542  
                             __accesstop 0060                  __end_of__initialization 0534  
                        __CFG_PBADEN$OFF 000000                       ?_SYSTEM_Initialize 0009  
                          ___rparam_used 000001                   DAC_SetOutput@inputData 0009  
                         __pcstackCOMRAM 0009                      ??_SYSTEM_Initialize 0009  
                 __size_of_DAC_SetOutput 0008                __end_of_SYSTEM_Initialize 0554  
                         shiftRegister@m 000B                           shiftRegister@y 000A  
                     __CFG_CCP2MX$PORTC1 000000                       __CFG_CCP3MX$PORTB5 000000  
                                _DACCON1 000F40                                  _OSCCON2 000FD2  
                                _OSCTUNE 000F9B                          __CFG_PWRTEN$OFF 000000  
                    shiftRegister@Dummy1 000C                      shiftRegister@Dummy2 0009  
                                __Hparam 0000                                  __Lparam 0000  
                          _DAC_SetOutput 057C                             __psmallconst 0200  
 __end_of_INTERRUPT_ON_CHANGE_Initialize 057C  __size_of_INTERRUPT_ON_CHANGE_Initialize 000C  
         _INTERRUPT_ON_CHANGE_Initialize 0570                          __CFG_STVREN$OFF 000000  
                                __pcinit 0528                                  __ramtop 0200  
                                __ptext0 02CC                                  __ptext1 0542  
                                __ptext2 04F8                                  __ptext3 0554  
                                __ptext4 0570                                  __ptext5 0562  
                                __ptext6 040A                                  __ptext7 04B8  
                                __ptext8 057C                    _OSCILLATOR_Initialize 0554  
               ??_PIN_MANAGER_Initialize 0009               __size_of_SYSTEM_Initialize 0012  
                   end_of_initialization 0534                           ?_DAC_SetOutput 0009  
                                postinc0 000FEE                                _DacOutput 02C3  
                         __end_of_REGADD 02C9                           __end_of_PARITY 0283  
                 ?_OSCILLATOR_Initialize 0009                  __size_of_DAC_Initialize 000E  
                    start_initialization 0528          __size_of_PIN_MANAGER_Initialize 0030  
                        ??_DAC_SetOutput 0009                   __size_of_shiftRegister 0040  
                            __pbssCOMRAM 0001                   _PIN_MANAGER_Initialize 04F8  
                       __CFG_PRICLKEN$ON 000000                              __smallconst 0200  
                          _shiftRegister 04B8                                 _DAC_Step 0007  
       ??_INTERRUPT_ON_CHANGE_Initialize 0009          ?_INTERRUPT_ON_CHANGE_Initialize 0009  
                               _SLAVEADD 02C9                         __CFG_WDTPS$32768 000000  
                               _VREFCON1 000F41                           _DAC_Initialize 0562  
                         ?_shiftRegister 0009                              _INTCON2bits 000FF1  
                             _ACTIVEBAND 0283                                 __Hrparam 0000  
                               __Lrparam 0000                             __Lsmallconst 0200  
                      __CFG_P2BMX$PORTB5 000000                  ??_OSCILLATOR_Initialize 0009  
                 __end_of_DAC_Initialize 0570                            __size_of_MIPI 00AE  
                          __size_of_main 013E                          ?_DAC_Initialize 0009  
                        ??_shiftRegister 000B                               _INTCONbits 000FF2  
                ?_PIN_MANAGER_Initialize 0009                    __end_of_DAC_SetOutput 0584  
                      __CFG_T3CMX$PORTC0 000000           __end_of_PIN_MANAGER_Initialize 0528  
                      __CFG_FOSC$INTIO67 000000  
