

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Dec 17 15:28:46 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16LF1618
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     	;# 
    20  0001                     	;# 
    21  0002                     	;# 
    22  0003                     	;# 
    23  0004                     	;# 
    24  0005                     	;# 
    25  0006                     	;# 
    26  0007                     	;# 
    27  0008                     	;# 
    28  0009                     	;# 
    29  000A                     	;# 
    30  000B                     	;# 
    31  000C                     	;# 
    32  000D                     	;# 
    33  000E                     	;# 
    34  0010                     	;# 
    35  0011                     	;# 
    36  0012                     	;# 
    37  0013                     	;# 
    38  0014                     	;# 
    39  0015                     	;# 
    40  0016                     	;# 
    41  0016                     	;# 
    42  0017                     	;# 
    43  0018                     	;# 
    44  0019                     	;# 
    45  001A                     	;# 
    46  001A                     	;# 
    47  001B                     	;# 
    48  001B                     	;# 
    49  001C                     	;# 
    50  001D                     	;# 
    51  001E                     	;# 
    52  001F                     	;# 
    53  008C                     	;# 
    54  008D                     	;# 
    55  008E                     	;# 
    56  0090                     	;# 
    57  0091                     	;# 
    58  0092                     	;# 
    59  0093                     	;# 
    60  0094                     	;# 
    61  0095                     	;# 
    62  0096                     	;# 
    63  0098                     	;# 
    64  0099                     	;# 
    65  009A                     	;# 
    66  009B                     	;# 
    67  009B                     	;# 
    68  009C                     	;# 
    69  009D                     	;# 
    70  009E                     	;# 
    71  009F                     	;# 
    72  010C                     	;# 
    73  010D                     	;# 
    74  010E                     	;# 
    75  0111                     	;# 
    76  0112                     	;# 
    77  0113                     	;# 
    78  0114                     	;# 
    79  0115                     	;# 
    80  0116                     	;# 
    81  0117                     	;# 
    82  0118                     	;# 
    83  0119                     	;# 
    84  011C                     	;# 
    85  018C                     	;# 
    86  018D                     	;# 
    87  018E                     	;# 
    88  0191                     	;# 
    89  0191                     	;# 
    90  0192                     	;# 
    91  0193                     	;# 
    92  0193                     	;# 
    93  0194                     	;# 
    94  0195                     	;# 
    95  0196                     	;# 
    96  0199                     	;# 
    97  0199                     	;# 
    98  0199                     	;# 
    99  019A                     	;# 
   100  019A                     	;# 
   101  019A                     	;# 
   102  019B                     	;# 
   103  019B                     	;# 
   104  019B                     	;# 
   105  019B                     	;# 
   106  019B                     	;# 
   107  019C                     	;# 
   108  019C                     	;# 
   109  019C                     	;# 
   110  019D                     	;# 
   111  019D                     	;# 
   112  019D                     	;# 
   113  019E                     	;# 
   114  019E                     	;# 
   115  019E                     	;# 
   116  019F                     	;# 
   117  019F                     	;# 
   118  019F                     	;# 
   119  019F                     	;# 
   120  019F                     	;# 
   121  020C                     	;# 
   122  020D                     	;# 
   123  020E                     	;# 
   124  0211                     	;# 
   125  0211                     	;# 
   126  0212                     	;# 
   127  0212                     	;# 
   128  0213                     	;# 
   129  0213                     	;# 
   130  0214                     	;# 
   131  0214                     	;# 
   132  0215                     	;# 
   133  0215                     	;# 
   134  0215                     	;# 
   135  0215                     	;# 
   136  0216                     	;# 
   137  0216                     	;# 
   138  0217                     	;# 
   139  0217                     	;# 
   140  028C                     	;# 
   141  028D                     	;# 
   142  028E                     	;# 
   143  0291                     	;# 
   144  0291                     	;# 
   145  0292                     	;# 
   146  0293                     	;# 
   147  0294                     	;# 
   148  0298                     	;# 
   149  0298                     	;# 
   150  0299                     	;# 
   151  029A                     	;# 
   152  029B                     	;# 
   153  029E                     	;# 
   154  030C                     	;# 
   155  030D                     	;# 
   156  030E                     	;# 
   157  038C                     	;# 
   158  038D                     	;# 
   159  038E                     	;# 
   160  0391                     	;# 
   161  0392                     	;# 
   162  0393                     	;# 
   163  0394                     	;# 
   164  0395                     	;# 
   165  0396                     	;# 
   166  0397                     	;# 
   167  0398                     	;# 
   168  0399                     	;# 
   169  040E                     	;# 
   170  0413                     	;# 
   171  0413                     	;# 
   172  0414                     	;# 
   173  0414                     	;# 
   174  0415                     	;# 
   175  0416                     	;# 
   176  0417                     	;# 
   177  0418                     	;# 
   178  041A                     	;# 
   179  041A                     	;# 
   180  041B                     	;# 
   181  041B                     	;# 
   182  041C                     	;# 
   183  041D                     	;# 
   184  041E                     	;# 
   185  041F                     	;# 
   186  0493                     	;# 
   187  0494                     	;# 
   188  0495                     	;# 
   189  0496                     	;# 
   190  049A                     	;# 
   191  049B                     	;# 
   192  049C                     	;# 
   193  049D                     	;# 
   194  058C                     	;# 
   195  058C                     	;# 
   196  058D                     	;# 
   197  058E                     	;# 
   198  058E                     	;# 
   199  058F                     	;# 
   200  0590                     	;# 
   201  0590                     	;# 
   202  0591                     	;# 
   203  0592                     	;# 
   204  0592                     	;# 
   205  0593                     	;# 
   206  0594                     	;# 
   207  0594                     	;# 
   208  0595                     	;# 
   209  0596                     	;# 
   210  0596                     	;# 
   211  0597                     	;# 
   212  0598                     	;# 
   213  0599                     	;# 
   214  059A                     	;# 
   215  059B                     	;# 
   216  059B                     	;# 
   217  059C                     	;# 
   218  059D                     	;# 
   219  060C                     	;# 
   220  060C                     	;# 
   221  060D                     	;# 
   222  060E                     	;# 
   223  060F                     	;# 
   224  060F                     	;# 
   225  0610                     	;# 
   226  0611                     	;# 
   227  0612                     	;# 
   228  0613                     	;# 
   229  0614                     	;# 
   230  0617                     	;# 
   231  0618                     	;# 
   232  0619                     	;# 
   233  061A                     	;# 
   234  061B                     	;# 
   235  061C                     	;# 
   236  0691                     	;# 
   237  0692                     	;# 
   238  0693                     	;# 
   239  0694                     	;# 
   240  0695                     	;# 
   241  0696                     	;# 
   242  0697                     	;# 
   243  0699                     	;# 
   244  069A                     	;# 
   245  0711                     	;# 
   246  0712                     	;# 
   247  0713                     	;# 
   248  0714                     	;# 
   249  0715                     	;# 
   250  0718                     	;# 
   251  0718                     	;# 
   252  0719                     	;# 
   253  071A                     	;# 
   254  071A                     	;# 
   255  071B                     	;# 
   256  071C                     	;# 
   257  071D                     	;# 
   258  0791                     	;# 
   259  0791                     	;# 
   260  0792                     	;# 
   261  0793                     	;# 
   262  0793                     	;# 
   263  0794                     	;# 
   264  0795                     	;# 
   265  0795                     	;# 
   266  0796                     	;# 
   267  0797                     	;# 
   268  0797                     	;# 
   269  0798                     	;# 
   270  0799                     	;# 
   271  079A                     	;# 
   272  080C                     	;# 
   273  080C                     	;# 
   274  080D                     	;# 
   275  080E                     	;# 
   276  080E                     	;# 
   277  080F                     	;# 
   278  0810                     	;# 
   279  0810                     	;# 
   280  0811                     	;# 
   281  0812                     	;# 
   282  0812                     	;# 
   283  0813                     	;# 
   284  0814                     	;# 
   285  0815                     	;# 
   286  0816                     	;# 
   287  0817                     	;# 
   288  0818                     	;# 
   289  0819                     	;# 
   290  081A                     	;# 
   291  081A                     	;# 
   292  081B                     	;# 
   293  081C                     	;# 
   294  081C                     	;# 
   295  081D                     	;# 
   296  088C                     	;# 
   297  088D                     	;# 
   298  088E                     	;# 
   299  088F                     	;# 
   300  088F                     	;# 
   301  0890                     	;# 
   302  0891                     	;# 
   303  0892                     	;# 
   304  0893                     	;# 
   305  0893                     	;# 
   306  0894                     	;# 
   307  0895                     	;# 
   308  0896                     	;# 
   309  0897                     	;# 
   310  0897                     	;# 
   311  0898                     	;# 
   312  0899                     	;# 
   313  0D8C                     	;# 
   314  0D8C                     	;# 
   315  0D8D                     	;# 
   316  0D8E                     	;# 
   317  0D8F                     	;# 
   318  0D8F                     	;# 
   319  0D90                     	;# 
   320  0D91                     	;# 
   321  0D92                     	;# 
   322  0D92                     	;# 
   323  0D93                     	;# 
   324  0D94                     	;# 
   325  0D95                     	;# 
   326  0D95                     	;# 
   327  0D96                     	;# 
   328  0D97                     	;# 
   329  0D98                     	;# 
   330  0D99                     	;# 
   331  0D9A                     	;# 
   332  0D9B                     	;# 
   333  0D9C                     	;# 
   334  0D9D                     	;# 
   335  0D9E                     	;# 
   336  0D9E                     	;# 
   337  0D9F                     	;# 
   338  0DA0                     	;# 
   339  0DA1                     	;# 
   340  0DA1                     	;# 
   341  0DA2                     	;# 
   342  0DA3                     	;# 
   343  0DA4                     	;# 
   344  0DA4                     	;# 
   345  0DA5                     	;# 
   346  0DA6                     	;# 
   347  0DA7                     	;# 
   348  0DA7                     	;# 
   349  0DA8                     	;# 
   350  0DA9                     	;# 
   351  0DAA                     	;# 
   352  0DAB                     	;# 
   353  0DAC                     	;# 
   354  0DAD                     	;# 
   355  0DAE                     	;# 
   356  0DAF                     	;# 
   357  0E0F                     	;# 
   358  0E10                     	;# 
   359  0E11                     	;# 
   360  0E12                     	;# 
   361  0E13                     	;# 
   362  0E14                     	;# 
   363  0E15                     	;# 
   364  0E16                     	;# 
   365  0E17                     	;# 
   366  0E18                     	;# 
   367  0E19                     	;# 
   368  0E1A                     	;# 
   369  0E1B                     	;# 
   370  0E1C                     	;# 
   371  0E1D                     	;# 
   372  0E1E                     	;# 
   373  0E1F                     	;# 
   374  0E20                     	;# 
   375  0E21                     	;# 
   376  0E22                     	;# 
   377  0E23                     	;# 
   378  0E24                     	;# 
   379  0E25                     	;# 
   380  0E26                     	;# 
   381  0E27                     	;# 
   382  0E28                     	;# 
   383  0E29                     	;# 
   384  0E2A                     	;# 
   385  0E2B                     	;# 
   386  0E2C                     	;# 
   387  0E2D                     	;# 
   388  0E2E                     	;# 
   389  0E90                     	;# 
   390  0E91                     	;# 
   391  0E92                     	;# 
   392  0E94                     	;# 
   393  0E95                     	;# 
   394  0E9C                     	;# 
   395  0E9D                     	;# 
   396  0E9E                     	;# 
   397  0E9F                     	;# 
   398  0EA0                     	;# 
   399  0EA1                     	;# 
   400  0EA2                     	;# 
   401  0EA3                     	;# 
   402  0EA4                     	;# 
   403  0EA5                     	;# 
   404  0EA6                     	;# 
   405  0EA7                     	;# 
   406  0F0F                     	;# 
   407  0F10                     	;# 
   408  0F11                     	;# 
   409  0F12                     	;# 
   410  0F13                     	;# 
   411  0F14                     	;# 
   412  0F15                     	;# 
   413  0F16                     	;# 
   414  0F17                     	;# 
   415  0F18                     	;# 
   416  0F19                     	;# 
   417  0F1A                     	;# 
   418  0F1B                     	;# 
   419  0F1C                     	;# 
   420  0F1D                     	;# 
   421  0F1E                     	;# 
   422  0F1F                     	;# 
   423  0F20                     	;# 
   424  0F21                     	;# 
   425  0F22                     	;# 
   426  0F23                     	;# 
   427  0FE4                     	;# 
   428  0FE5                     	;# 
   429  0FE6                     	;# 
   430  0FE7                     	;# 
   431  0FE8                     	;# 
   432  0FE9                     	;# 
   433  0FEA                     	;# 
   434  0FEB                     	;# 
   435  0FED                     	;# 
   436  0FEE                     	;# 
   437  0FEF                     	;# 
   438  0000                     	;# 
   439  0001                     	;# 
   440  0002                     	;# 
   441  0003                     	;# 
   442  0004                     	;# 
   443  0005                     	;# 
   444  0006                     	;# 
   445  0007                     	;# 
   446  0008                     	;# 
   447  0009                     	;# 
   448  000A                     	;# 
   449  000B                     	;# 
   450  000C                     	;# 
   451  000D                     	;# 
   452  000E                     	;# 
   453  0010                     	;# 
   454  0011                     	;# 
   455  0012                     	;# 
   456  0013                     	;# 
   457  0014                     	;# 
   458  0015                     	;# 
   459  0016                     	;# 
   460  0016                     	;# 
   461  0017                     	;# 
   462  0018                     	;# 
   463  0019                     	;# 
   464  001A                     	;# 
   465  001A                     	;# 
   466  001B                     	;# 
   467  001B                     	;# 
   468  001C                     	;# 
   469  001D                     	;# 
   470  001E                     	;# 
   471  001F                     	;# 
   472  008C                     	;# 
   473  008D                     	;# 
   474  008E                     	;# 
   475  0090                     	;# 
   476  0091                     	;# 
   477  0092                     	;# 
   478  0093                     	;# 
   479  0094                     	;# 
   480  0095                     	;# 
   481  0096                     	;# 
   482  0098                     	;# 
   483  0099                     	;# 
   484  009A                     	;# 
   485  009B                     	;# 
   486  009B                     	;# 
   487  009C                     	;# 
   488  009D                     	;# 
   489  009E                     	;# 
   490  009F                     	;# 
   491  010C                     	;# 
   492  010D                     	;# 
   493  010E                     	;# 
   494  0111                     	;# 
   495  0112                     	;# 
   496  0113                     	;# 
   497  0114                     	;# 
   498  0115                     	;# 
   499  0116                     	;# 
   500  0117                     	;# 
   501  0118                     	;# 
   502  0119                     	;# 
   503  011C                     	;# 
   504  018C                     	;# 
   505  018D                     	;# 
   506  018E                     	;# 
   507  0191                     	;# 
   508  0191                     	;# 
   509  0192                     	;# 
   510  0193                     	;# 
   511  0193                     	;# 
   512  0194                     	;# 
   513  0195                     	;# 
   514  0196                     	;# 
   515  0199                     	;# 
   516  0199                     	;# 
   517  0199                     	;# 
   518  019A                     	;# 
   519  019A                     	;# 
   520  019A                     	;# 
   521  019B                     	;# 
   522  019B                     	;# 
   523  019B                     	;# 
   524  019B                     	;# 
   525  019B                     	;# 
   526  019C                     	;# 
   527  019C                     	;# 
   528  019C                     	;# 
   529  019D                     	;# 
   530  019D                     	;# 
   531  019D                     	;# 
   532  019E                     	;# 
   533  019E                     	;# 
   534  019E                     	;# 
   535  019F                     	;# 
   536  019F                     	;# 
   537  019F                     	;# 
   538  019F                     	;# 
   539  019F                     	;# 
   540  020C                     	;# 
   541  020D                     	;# 
   542  020E                     	;# 
   543  0211                     	;# 
   544  0211                     	;# 
   545  0212                     	;# 
   546  0212                     	;# 
   547  0213                     	;# 
   548  0213                     	;# 
   549  0214                     	;# 
   550  0214                     	;# 
   551  0215                     	;# 
   552  0215                     	;# 
   553  0215                     	;# 
   554  0215                     	;# 
   555  0216                     	;# 
   556  0216                     	;# 
   557  0217                     	;# 
   558  0217                     	;# 
   559  028C                     	;# 
   560  028D                     	;# 
   561  028E                     	;# 
   562  0291                     	;# 
   563  0291                     	;# 
   564  0292                     	;# 
   565  0293                     	;# 
   566  0294                     	;# 
   567  0298                     	;# 
   568  0298                     	;# 
   569  0299                     	;# 
   570  029A                     	;# 
   571  029B                     	;# 
   572  029E                     	;# 
   573  030C                     	;# 
   574  030D                     	;# 
   575  030E                     	;# 
   576  038C                     	;# 
   577  038D                     	;# 
   578  038E                     	;# 
   579  0391                     	;# 
   580  0392                     	;# 
   581  0393                     	;# 
   582  0394                     	;# 
   583  0395                     	;# 
   584  0396                     	;# 
   585  0397                     	;# 
   586  0398                     	;# 
   587  0399                     	;# 
   588  040E                     	;# 
   589  0413                     	;# 
   590  0413                     	;# 
   591  0414                     	;# 
   592  0414                     	;# 
   593  0415                     	;# 
   594  0416                     	;# 
   595  0417                     	;# 
   596  0418                     	;# 
   597  041A                     	;# 
   598  041A                     	;# 
   599  041B                     	;# 
   600  041B                     	;# 
   601  041C                     	;# 
   602  041D                     	;# 
   603  041E                     	;# 
   604  041F                     	;# 
   605  0493                     	;# 
   606  0494                     	;# 
   607  0495                     	;# 
   608  0496                     	;# 
   609  049A                     	;# 
   610  049B                     	;# 
   611  049C                     	;# 
   612  049D                     	;# 
   613  058C                     	;# 
   614  058C                     	;# 
   615  058D                     	;# 
   616  058E                     	;# 
   617  058E                     	;# 
   618  058F                     	;# 
   619  0590                     	;# 
   620  0590                     	;# 
   621  0591                     	;# 
   622  0592                     	;# 
   623  0592                     	;# 
   624  0593                     	;# 
   625  0594                     	;# 
   626  0594                     	;# 
   627  0595                     	;# 
   628  0596                     	;# 
   629  0596                     	;# 
   630  0597                     	;# 
   631  0598                     	;# 
   632  0599                     	;# 
   633  059A                     	;# 
   634  059B                     	;# 
   635  059B                     	;# 
   636  059C                     	;# 
   637  059D                     	;# 
   638  060C                     	;# 
   639  060C                     	;# 
   640  060D                     	;# 
   641  060E                     	;# 
   642  060F                     	;# 
   643  060F                     	;# 
   644  0610                     	;# 
   645  0611                     	;# 
   646  0612                     	;# 
   647  0613                     	;# 
   648  0614                     	;# 
   649  0617                     	;# 
   650  0618                     	;# 
   651  0619                     	;# 
   652  061A                     	;# 
   653  061B                     	;# 
   654  061C                     	;# 
   655  0691                     	;# 
   656  0692                     	;# 
   657  0693                     	;# 
   658  0694                     	;# 
   659  0695                     	;# 
   660  0696                     	;# 
   661  0697                     	;# 
   662  0699                     	;# 
   663  069A                     	;# 
   664  0711                     	;# 
   665  0712                     	;# 
   666  0713                     	;# 
   667  0714                     	;# 
   668  0715                     	;# 
   669  0718                     	;# 
   670  0718                     	;# 
   671  0719                     	;# 
   672  071A                     	;# 
   673  071A                     	;# 
   674  071B                     	;# 
   675  071C                     	;# 
   676  071D                     	;# 
   677  0791                     	;# 
   678  0791                     	;# 
   679  0792                     	;# 
   680  0793                     	;# 
   681  0793                     	;# 
   682  0794                     	;# 
   683  0795                     	;# 
   684  0795                     	;# 
   685  0796                     	;# 
   686  0797                     	;# 
   687  0797                     	;# 
   688  0798                     	;# 
   689  0799                     	;# 
   690  079A                     	;# 
   691  080C                     	;# 
   692  080C                     	;# 
   693  080D                     	;# 
   694  080E                     	;# 
   695  080E                     	;# 
   696  080F                     	;# 
   697  0810                     	;# 
   698  0810                     	;# 
   699  0811                     	;# 
   700  0812                     	;# 
   701  0812                     	;# 
   702  0813                     	;# 
   703  0814                     	;# 
   704  0815                     	;# 
   705  0816                     	;# 
   706  0817                     	;# 
   707  0818                     	;# 
   708  0819                     	;# 
   709  081A                     	;# 
   710  081A                     	;# 
   711  081B                     	;# 
   712  081C                     	;# 
   713  081C                     	;# 
   714  081D                     	;# 
   715  088C                     	;# 
   716  088D                     	;# 
   717  088E                     	;# 
   718  088F                     	;# 
   719  088F                     	;# 
   720  0890                     	;# 
   721  0891                     	;# 
   722  0892                     	;# 
   723  0893                     	;# 
   724  0893                     	;# 
   725  0894                     	;# 
   726  0895                     	;# 
   727  0896                     	;# 
   728  0897                     	;# 
   729  0897                     	;# 
   730  0898                     	;# 
   731  0899                     	;# 
   732  0D8C                     	;# 
   733  0D8C                     	;# 
   734  0D8D                     	;# 
   735  0D8E                     	;# 
   736  0D8F                     	;# 
   737  0D8F                     	;# 
   738  0D90                     	;# 
   739  0D91                     	;# 
   740  0D92                     	;# 
   741  0D92                     	;# 
   742  0D93                     	;# 
   743  0D94                     	;# 
   744  0D95                     	;# 
   745  0D95                     	;# 
   746  0D96                     	;# 
   747  0D97                     	;# 
   748  0D98                     	;# 
   749  0D99                     	;# 
   750  0D9A                     	;# 
   751  0D9B                     	;# 
   752  0D9C                     	;# 
   753  0D9D                     	;# 
   754  0D9E                     	;# 
   755  0D9E                     	;# 
   756  0D9F                     	;# 
   757  0DA0                     	;# 
   758  0DA1                     	;# 
   759  0DA1                     	;# 
   760  0DA2                     	;# 
   761  0DA3                     	;# 
   762  0DA4                     	;# 
   763  0DA4                     	;# 
   764  0DA5                     	;# 
   765  0DA6                     	;# 
   766  0DA7                     	;# 
   767  0DA7                     	;# 
   768  0DA8                     	;# 
   769  0DA9                     	;# 
   770  0DAA                     	;# 
   771  0DAB                     	;# 
   772  0DAC                     	;# 
   773  0DAD                     	;# 
   774  0DAE                     	;# 
   775  0DAF                     	;# 
   776  0E0F                     	;# 
   777  0E10                     	;# 
   778  0E11                     	;# 
   779  0E12                     	;# 
   780  0E13                     	;# 
   781  0E14                     	;# 
   782  0E15                     	;# 
   783  0E16                     	;# 
   784  0E17                     	;# 
   785  0E18                     	;# 
   786  0E19                     	;# 
   787  0E1A                     	;# 
   788  0E1B                     	;# 
   789  0E1C                     	;# 
   790  0E1D                     	;# 
   791  0E1E                     	;# 
   792  0E1F                     	;# 
   793  0E20                     	;# 
   794  0E21                     	;# 
   795  0E22                     	;# 
   796  0E23                     	;# 
   797  0E24                     	;# 
   798  0E25                     	;# 
   799  0E26                     	;# 
   800  0E27                     	;# 
   801  0E28                     	;# 
   802  0E29                     	;# 
   803  0E2A                     	;# 
   804  0E2B                     	;# 
   805  0E2C                     	;# 
   806  0E2D                     	;# 
   807  0E2E                     	;# 
   808  0E90                     	;# 
   809  0E91                     	;# 
   810  0E92                     	;# 
   811  0E94                     	;# 
   812  0E95                     	;# 
   813  0E9C                     	;# 
   814  0E9D                     	;# 
   815  0E9E                     	;# 
   816  0E9F                     	;# 
   817  0EA0                     	;# 
   818  0EA1                     	;# 
   819  0EA2                     	;# 
   820  0EA3                     	;# 
   821  0EA4                     	;# 
   822  0EA5                     	;# 
   823  0EA6                     	;# 
   824  0EA7                     	;# 
   825  0F0F                     	;# 
   826  0F10                     	;# 
   827  0F11                     	;# 
   828  0F12                     	;# 
   829  0F13                     	;# 
   830  0F14                     	;# 
   831  0F15                     	;# 
   832  0F16                     	;# 
   833  0F17                     	;# 
   834  0F18                     	;# 
   835  0F19                     	;# 
   836  0F1A                     	;# 
   837  0F1B                     	;# 
   838  0F1C                     	;# 
   839  0F1D                     	;# 
   840  0F1E                     	;# 
   841  0F1F                     	;# 
   842  0F20                     	;# 
   843  0F21                     	;# 
   844  0F22                     	;# 
   845  0F23                     	;# 
   846  0FE4                     	;# 
   847  0FE5                     	;# 
   848  0FE6                     	;# 
   849  0FE7                     	;# 
   850  0FE8                     	;# 
   851  0FE9                     	;# 
   852  0FEA                     	;# 
   853  0FEB                     	;# 
   854  0FED                     	;# 
   855  0FEE                     	;# 
   856  0FEF                     	;# 
   857  0000                     	;# 
   858  0001                     	;# 
   859  0002                     	;# 
   860  0003                     	;# 
   861  0004                     	;# 
   862  0005                     	;# 
   863  0006                     	;# 
   864  0007                     	;# 
   865  0008                     	;# 
   866  0009                     	;# 
   867  000A                     	;# 
   868  000B                     	;# 
   869  000C                     	;# 
   870  000D                     	;# 
   871  000E                     	;# 
   872  0010                     	;# 
   873  0011                     	;# 
   874  0012                     	;# 
   875  0013                     	;# 
   876  0014                     	;# 
   877  0015                     	;# 
   878  0016                     	;# 
   879  0016                     	;# 
   880  0017                     	;# 
   881  0018                     	;# 
   882  0019                     	;# 
   883  001A                     	;# 
   884  001A                     	;# 
   885  001B                     	;# 
   886  001B                     	;# 
   887  001C                     	;# 
   888  001D                     	;# 
   889  001E                     	;# 
   890  001F                     	;# 
   891  008C                     	;# 
   892  008D                     	;# 
   893  008E                     	;# 
   894  0090                     	;# 
   895  0091                     	;# 
   896  0092                     	;# 
   897  0093                     	;# 
   898  0094                     	;# 
   899  0095                     	;# 
   900  0096                     	;# 
   901  0098                     	;# 
   902  0099                     	;# 
   903  009A                     	;# 
   904  009B                     	;# 
   905  009B                     	;# 
   906  009C                     	;# 
   907  009D                     	;# 
   908  009E                     	;# 
   909  009F                     	;# 
   910  010C                     	;# 
   911  010D                     	;# 
   912  010E                     	;# 
   913  0111                     	;# 
   914  0112                     	;# 
   915  0113                     	;# 
   916  0114                     	;# 
   917  0115                     	;# 
   918  0116                     	;# 
   919  0117                     	;# 
   920  0118                     	;# 
   921  0119                     	;# 
   922  011C                     	;# 
   923  018C                     	;# 
   924  018D                     	;# 
   925  018E                     	;# 
   926  0191                     	;# 
   927  0191                     	;# 
   928  0192                     	;# 
   929  0193                     	;# 
   930  0193                     	;# 
   931  0194                     	;# 
   932  0195                     	;# 
   933  0196                     	;# 
   934  0199                     	;# 
   935  0199                     	;# 
   936  0199                     	;# 
   937  019A                     	;# 
   938  019A                     	;# 
   939  019A                     	;# 
   940  019B                     	;# 
   941  019B                     	;# 
   942  019B                     	;# 
   943  019B                     	;# 
   944  019B                     	;# 
   945  019C                     	;# 
   946  019C                     	;# 
   947  019C                     	;# 
   948  019D                     	;# 
   949  019D                     	;# 
   950  019D                     	;# 
   951  019E                     	;# 
   952  019E                     	;# 
   953  019E                     	;# 
   954  019F                     	;# 
   955  019F                     	;# 
   956  019F                     	;# 
   957  019F                     	;# 
   958  019F                     	;# 
   959  020C                     	;# 
   960  020D                     	;# 
   961  020E                     	;# 
   962  0211                     	;# 
   963  0211                     	;# 
   964  0212                     	;# 
   965  0212                     	;# 
   966  0213                     	;# 
   967  0213                     	;# 
   968  0214                     	;# 
   969  0214                     	;# 
   970  0215                     	;# 
   971  0215                     	;# 
   972  0215                     	;# 
   973  0215                     	;# 
   974  0216                     	;# 
   975  0216                     	;# 
   976  0217                     	;# 
   977  0217                     	;# 
   978  028C                     	;# 
   979  028D                     	;# 
   980  028E                     	;# 
   981  0291                     	;# 
   982  0291                     	;# 
   983  0292                     	;# 
   984  0293                     	;# 
   985  0294                     	;# 
   986  0298                     	;# 
   987  0298                     	;# 
   988  0299                     	;# 
   989  029A                     	;# 
   990  029B                     	;# 
   991  029E                     	;# 
   992  030C                     	;# 
   993  030D                     	;# 
   994  030E                     	;# 
   995  038C                     	;# 
   996  038D                     	;# 
   997  038E                     	;# 
   998  0391                     	;# 
   999  0392                     	;# 
  1000  0393                     	;# 
  1001  0394                     	;# 
  1002  0395                     	;# 
  1003  0396                     	;# 
  1004  0397                     	;# 
  1005  0398                     	;# 
  1006  0399                     	;# 
  1007  040E                     	;# 
  1008  0413                     	;# 
  1009  0413                     	;# 
  1010  0414                     	;# 
  1011  0414                     	;# 
  1012  0415                     	;# 
  1013  0416                     	;# 
  1014  0417                     	;# 
  1015  0418                     	;# 
  1016  041A                     	;# 
  1017  041A                     	;# 
  1018  041B                     	;# 
  1019  041B                     	;# 
  1020  041C                     	;# 
  1021  041D                     	;# 
  1022  041E                     	;# 
  1023  041F                     	;# 
  1024  0493                     	;# 
  1025  0494                     	;# 
  1026  0495                     	;# 
  1027  0496                     	;# 
  1028  049A                     	;# 
  1029  049B                     	;# 
  1030  049C                     	;# 
  1031  049D                     	;# 
  1032  058C                     	;# 
  1033  058C                     	;# 
  1034  058D                     	;# 
  1035  058E                     	;# 
  1036  058E                     	;# 
  1037  058F                     	;# 
  1038  0590                     	;# 
  1039  0590                     	;# 
  1040  0591                     	;# 
  1041  0592                     	;# 
  1042  0592                     	;# 
  1043  0593                     	;# 
  1044  0594                     	;# 
  1045  0594                     	;# 
  1046  0595                     	;# 
  1047  0596                     	;# 
  1048  0596                     	;# 
  1049  0597                     	;# 
  1050  0598                     	;# 
  1051  0599                     	;# 
  1052  059A                     	;# 
  1053  059B                     	;# 
  1054  059B                     	;# 
  1055  059C                     	;# 
  1056  059D                     	;# 
  1057  060C                     	;# 
  1058  060C                     	;# 
  1059  060D                     	;# 
  1060  060E                     	;# 
  1061  060F                     	;# 
  1062  060F                     	;# 
  1063  0610                     	;# 
  1064  0611                     	;# 
  1065  0612                     	;# 
  1066  0613                     	;# 
  1067  0614                     	;# 
  1068  0617                     	;# 
  1069  0618                     	;# 
  1070  0619                     	;# 
  1071  061A                     	;# 
  1072  061B                     	;# 
  1073  061C                     	;# 
  1074  0691                     	;# 
  1075  0692                     	;# 
  1076  0693                     	;# 
  1077  0694                     	;# 
  1078  0695                     	;# 
  1079  0696                     	;# 
  1080  0697                     	;# 
  1081  0699                     	;# 
  1082  069A                     	;# 
  1083  0711                     	;# 
  1084  0712                     	;# 
  1085  0713                     	;# 
  1086  0714                     	;# 
  1087  0715                     	;# 
  1088  0718                     	;# 
  1089  0718                     	;# 
  1090  0719                     	;# 
  1091  071A                     	;# 
  1092  071A                     	;# 
  1093  071B                     	;# 
  1094  071C                     	;# 
  1095  071D                     	;# 
  1096  0791                     	;# 
  1097  0791                     	;# 
  1098  0792                     	;# 
  1099  0793                     	;# 
  1100  0793                     	;# 
  1101  0794                     	;# 
  1102  0795                     	;# 
  1103  0795                     	;# 
  1104  0796                     	;# 
  1105  0797                     	;# 
  1106  0797                     	;# 
  1107  0798                     	;# 
  1108  0799                     	;# 
  1109  079A                     	;# 
  1110  080C                     	;# 
  1111  080C                     	;# 
  1112  080D                     	;# 
  1113  080E                     	;# 
  1114  080E                     	;# 
  1115  080F                     	;# 
  1116  0810                     	;# 
  1117  0810                     	;# 
  1118  0811                     	;# 
  1119  0812                     	;# 
  1120  0812                     	;# 
  1121  0813                     	;# 
  1122  0814                     	;# 
  1123  0815                     	;# 
  1124  0816                     	;# 
  1125  0817                     	;# 
  1126  0818                     	;# 
  1127  0819                     	;# 
  1128  081A                     	;# 
  1129  081A                     	;# 
  1130  081B                     	;# 
  1131  081C                     	;# 
  1132  081C                     	;# 
  1133  081D                     	;# 
  1134  088C                     	;# 
  1135  088D                     	;# 
  1136  088E                     	;# 
  1137  088F                     	;# 
  1138  088F                     	;# 
  1139  0890                     	;# 
  1140  0891                     	;# 
  1141  0892                     	;# 
  1142  0893                     	;# 
  1143  0893                     	;# 
  1144  0894                     	;# 
  1145  0895                     	;# 
  1146  0896                     	;# 
  1147  0897                     	;# 
  1148  0897                     	;# 
  1149  0898                     	;# 
  1150  0899                     	;# 
  1151  0D8C                     	;# 
  1152  0D8C                     	;# 
  1153  0D8D                     	;# 
  1154  0D8E                     	;# 
  1155  0D8F                     	;# 
  1156  0D8F                     	;# 
  1157  0D90                     	;# 
  1158  0D91                     	;# 
  1159  0D92                     	;# 
  1160  0D92                     	;# 
  1161  0D93                     	;# 
  1162  0D94                     	;# 
  1163  0D95                     	;# 
  1164  0D95                     	;# 
  1165  0D96                     	;# 
  1166  0D97                     	;# 
  1167  0D98                     	;# 
  1168  0D99                     	;# 
  1169  0D9A                     	;# 
  1170  0D9B                     	;# 
  1171  0D9C                     	;# 
  1172  0D9D                     	;# 
  1173  0D9E                     	;# 
  1174  0D9E                     	;# 
  1175  0D9F                     	;# 
  1176  0DA0                     	;# 
  1177  0DA1                     	;# 
  1178  0DA1                     	;# 
  1179  0DA2                     	;# 
  1180  0DA3                     	;# 
  1181  0DA4                     	;# 
  1182  0DA4                     	;# 
  1183  0DA5                     	;# 
  1184  0DA6                     	;# 
  1185  0DA7                     	;# 
  1186  0DA7                     	;# 
  1187  0DA8                     	;# 
  1188  0DA9                     	;# 
  1189  0DAA                     	;# 
  1190  0DAB                     	;# 
  1191  0DAC                     	;# 
  1192  0DAD                     	;# 
  1193  0DAE                     	;# 
  1194  0DAF                     	;# 
  1195  0E0F                     	;# 
  1196  0E10                     	;# 
  1197  0E11                     	;# 
  1198  0E12                     	;# 
  1199  0E13                     	;# 
  1200  0E14                     	;# 
  1201  0E15                     	;# 
  1202  0E16                     	;# 
  1203  0E17                     	;# 
  1204  0E18                     	;# 
  1205  0E19                     	;# 
  1206  0E1A                     	;# 
  1207  0E1B                     	;# 
  1208  0E1C                     	;# 
  1209  0E1D                     	;# 
  1210  0E1E                     	;# 
  1211  0E1F                     	;# 
  1212  0E20                     	;# 
  1213  0E21                     	;# 
  1214  0E22                     	;# 
  1215  0E23                     	;# 
  1216  0E24                     	;# 
  1217  0E25                     	;# 
  1218  0E26                     	;# 
  1219  0E27                     	;# 
  1220  0E28                     	;# 
  1221  0E29                     	;# 
  1222  0E2A                     	;# 
  1223  0E2B                     	;# 
  1224  0E2C                     	;# 
  1225  0E2D                     	;# 
  1226  0E2E                     	;# 
  1227  0E90                     	;# 
  1228  0E91                     	;# 
  1229  0E92                     	;# 
  1230  0E94                     	;# 
  1231  0E95                     	;# 
  1232  0E9C                     	;# 
  1233  0E9D                     	;# 
  1234  0E9E                     	;# 
  1235  0E9F                     	;# 
  1236  0EA0                     	;# 
  1237  0EA1                     	;# 
  1238  0EA2                     	;# 
  1239  0EA3                     	;# 
  1240  0EA4                     	;# 
  1241  0EA5                     	;# 
  1242  0EA6                     	;# 
  1243  0EA7                     	;# 
  1244  0F0F                     	;# 
  1245  0F10                     	;# 
  1246  0F11                     	;# 
  1247  0F12                     	;# 
  1248  0F13                     	;# 
  1249  0F14                     	;# 
  1250  0F15                     	;# 
  1251  0F16                     	;# 
  1252  0F17                     	;# 
  1253  0F18                     	;# 
  1254  0F19                     	;# 
  1255  0F1A                     	;# 
  1256  0F1B                     	;# 
  1257  0F1C                     	;# 
  1258  0F1D                     	;# 
  1259  0F1E                     	;# 
  1260  0F1F                     	;# 
  1261  0F20                     	;# 
  1262  0F21                     	;# 
  1263  0F22                     	;# 
  1264  0F23                     	;# 
  1265  0FE4                     	;# 
  1266  0FE5                     	;# 
  1267  0FE6                     	;# 
  1268  0FE7                     	;# 
  1269  0FE8                     	;# 
  1270  0FE9                     	;# 
  1271  0FEA                     	;# 
  1272  0FEB                     	;# 
  1273  0FED                     	;# 
  1274  0FEE                     	;# 
  1275  0FEF                     	;# 
  1276  0000                     	;# 
  1277  0001                     	;# 
  1278  0002                     	;# 
  1279  0003                     	;# 
  1280  0004                     	;# 
  1281  0005                     	;# 
  1282  0006                     	;# 
  1283  0007                     	;# 
  1284  0008                     	;# 
  1285  0009                     	;# 
  1286  000A                     	;# 
  1287  000B                     	;# 
  1288  000C                     	;# 
  1289  000D                     	;# 
  1290  000E                     	;# 
  1291  0010                     	;# 
  1292  0011                     	;# 
  1293  0012                     	;# 
  1294  0013                     	;# 
  1295  0014                     	;# 
  1296  0015                     	;# 
  1297  0016                     	;# 
  1298  0016                     	;# 
  1299  0017                     	;# 
  1300  0018                     	;# 
  1301  0019                     	;# 
  1302  001A                     	;# 
  1303  001A                     	;# 
  1304  001B                     	;# 
  1305  001B                     	;# 
  1306  001C                     	;# 
  1307  001D                     	;# 
  1308  001E                     	;# 
  1309  001F                     	;# 
  1310  008C                     	;# 
  1311  008D                     	;# 
  1312  008E                     	;# 
  1313  0090                     	;# 
  1314  0091                     	;# 
  1315  0092                     	;# 
  1316  0093                     	;# 
  1317  0094                     	;# 
  1318  0095                     	;# 
  1319  0096                     	;# 
  1320  0098                     	;# 
  1321  0099                     	;# 
  1322  009A                     	;# 
  1323  009B                     	;# 
  1324  009B                     	;# 
  1325  009C                     	;# 
  1326  009D                     	;# 
  1327  009E                     	;# 
  1328  009F                     	;# 
  1329  010C                     	;# 
  1330  010D                     	;# 
  1331  010E                     	;# 
  1332  0111                     	;# 
  1333  0112                     	;# 
  1334  0113                     	;# 
  1335  0114                     	;# 
  1336  0115                     	;# 
  1337  0116                     	;# 
  1338  0117                     	;# 
  1339  0118                     	;# 
  1340  0119                     	;# 
  1341  011C                     	;# 
  1342  018C                     	;# 
  1343  018D                     	;# 
  1344  018E                     	;# 
  1345  0191                     	;# 
  1346  0191                     	;# 
  1347  0192                     	;# 
  1348  0193                     	;# 
  1349  0193                     	;# 
  1350  0194                     	;# 
  1351  0195                     	;# 
  1352  0196                     	;# 
  1353  0199                     	;# 
  1354  0199                     	;# 
  1355  0199                     	;# 
  1356  019A                     	;# 
  1357  019A                     	;# 
  1358  019A                     	;# 
  1359  019B                     	;# 
  1360  019B                     	;# 
  1361  019B                     	;# 
  1362  019B                     	;# 
  1363  019B                     	;# 
  1364  019C                     	;# 
  1365  019C                     	;# 
  1366  019C                     	;# 
  1367  019D                     	;# 
  1368  019D                     	;# 
  1369  019D                     	;# 
  1370  019E                     	;# 
  1371  019E                     	;# 
  1372  019E                     	;# 
  1373  019F                     	;# 
  1374  019F                     	;# 
  1375  019F                     	;# 
  1376  019F                     	;# 
  1377  019F                     	;# 
  1378  020C                     	;# 
  1379  020D                     	;# 
  1380  020E                     	;# 
  1381  0211                     	;# 
  1382  0211                     	;# 
  1383  0212                     	;# 
  1384  0212                     	;# 
  1385  0213                     	;# 
  1386  0213                     	;# 
  1387  0214                     	;# 
  1388  0214                     	;# 
  1389  0215                     	;# 
  1390  0215                     	;# 
  1391  0215                     	;# 
  1392  0215                     	;# 
  1393  0216                     	;# 
  1394  0216                     	;# 
  1395  0217                     	;# 
  1396  0217                     	;# 
  1397  028C                     	;# 
  1398  028D                     	;# 
  1399  028E                     	;# 
  1400  0291                     	;# 
  1401  0291                     	;# 
  1402  0292                     	;# 
  1403  0293                     	;# 
  1404  0294                     	;# 
  1405  0298                     	;# 
  1406  0298                     	;# 
  1407  0299                     	;# 
  1408  029A                     	;# 
  1409  029B                     	;# 
  1410  029E                     	;# 
  1411  030C                     	;# 
  1412  030D                     	;# 
  1413  030E                     	;# 
  1414  038C                     	;# 
  1415  038D                     	;# 
  1416  038E                     	;# 
  1417  0391                     	;# 
  1418  0392                     	;# 
  1419  0393                     	;# 
  1420  0394                     	;# 
  1421  0395                     	;# 
  1422  0396                     	;# 
  1423  0397                     	;# 
  1424  0398                     	;# 
  1425  0399                     	;# 
  1426  040E                     	;# 
  1427  0413                     	;# 
  1428  0413                     	;# 
  1429  0414                     	;# 
  1430  0414                     	;# 
  1431  0415                     	;# 
  1432  0416                     	;# 
  1433  0417                     	;# 
  1434  0418                     	;# 
  1435  041A                     	;# 
  1436  041A                     	;# 
  1437  041B                     	;# 
  1438  041B                     	;# 
  1439  041C                     	;# 
  1440  041D                     	;# 
  1441  041E                     	;# 
  1442  041F                     	;# 
  1443  0493                     	;# 
  1444  0494                     	;# 
  1445  0495                     	;# 
  1446  0496                     	;# 
  1447  049A                     	;# 
  1448  049B                     	;# 
  1449  049C                     	;# 
  1450  049D                     	;# 
  1451  058C                     	;# 
  1452  058C                     	;# 
  1453  058D                     	;# 
  1454  058E                     	;# 
  1455  058E                     	;# 
  1456  058F                     	;# 
  1457  0590                     	;# 
  1458  0590                     	;# 
  1459  0591                     	;# 
  1460  0592                     	;# 
  1461  0592                     	;# 
  1462  0593                     	;# 
  1463  0594                     	;# 
  1464  0594                     	;# 
  1465  0595                     	;# 
  1466  0596                     	;# 
  1467  0596                     	;# 
  1468  0597                     	;# 
  1469  0598                     	;# 
  1470  0599                     	;# 
  1471  059A                     	;# 
  1472  059B                     	;# 
  1473  059B                     	;# 
  1474  059C                     	;# 
  1475  059D                     	;# 
  1476  060C                     	;# 
  1477  060C                     	;# 
  1478  060D                     	;# 
  1479  060E                     	;# 
  1480  060F                     	;# 
  1481  060F                     	;# 
  1482  0610                     	;# 
  1483  0611                     	;# 
  1484  0612                     	;# 
  1485  0613                     	;# 
  1486  0614                     	;# 
  1487  0617                     	;# 
  1488  0618                     	;# 
  1489  0619                     	;# 
  1490  061A                     	;# 
  1491  061B                     	;# 
  1492  061C                     	;# 
  1493  0691                     	;# 
  1494  0692                     	;# 
  1495  0693                     	;# 
  1496  0694                     	;# 
  1497  0695                     	;# 
  1498  0696                     	;# 
  1499  0697                     	;# 
  1500  0699                     	;# 
  1501  069A                     	;# 
  1502  0711                     	;# 
  1503  0712                     	;# 
  1504  0713                     	;# 
  1505  0714                     	;# 
  1506  0715                     	;# 
  1507  0718                     	;# 
  1508  0718                     	;# 
  1509  0719                     	;# 
  1510  071A                     	;# 
  1511  071A                     	;# 
  1512  071B                     	;# 
  1513  071C                     	;# 
  1514  071D                     	;# 
  1515  0791                     	;# 
  1516  0791                     	;# 
  1517  0792                     	;# 
  1518  0793                     	;# 
  1519  0793                     	;# 
  1520  0794                     	;# 
  1521  0795                     	;# 
  1522  0795                     	;# 
  1523  0796                     	;# 
  1524  0797                     	;# 
  1525  0797                     	;# 
  1526  0798                     	;# 
  1527  0799                     	;# 
  1528  079A                     	;# 
  1529  080C                     	;# 
  1530  080C                     	;# 
  1531  080D                     	;# 
  1532  080E                     	;# 
  1533  080E                     	;# 
  1534  080F                     	;# 
  1535  0810                     	;# 
  1536  0810                     	;# 
  1537  0811                     	;# 
  1538  0812                     	;# 
  1539  0812                     	;# 
  1540  0813                     	;# 
  1541  0814                     	;# 
  1542  0815                     	;# 
  1543  0816                     	;# 
  1544  0817                     	;# 
  1545  0818                     	;# 
  1546  0819                     	;# 
  1547  081A                     	;# 
  1548  081A                     	;# 
  1549  081B                     	;# 
  1550  081C                     	;# 
  1551  081C                     	;# 
  1552  081D                     	;# 
  1553  088C                     	;# 
  1554  088D                     	;# 
  1555  088E                     	;# 
  1556  088F                     	;# 
  1557  088F                     	;# 
  1558  0890                     	;# 
  1559  0891                     	;# 
  1560  0892                     	;# 
  1561  0893                     	;# 
  1562  0893                     	;# 
  1563  0894                     	;# 
  1564  0895                     	;# 
  1565  0896                     	;# 
  1566  0897                     	;# 
  1567  0897                     	;# 
  1568  0898                     	;# 
  1569  0899                     	;# 
  1570  0D8C                     	;# 
  1571  0D8C                     	;# 
  1572  0D8D                     	;# 
  1573  0D8E                     	;# 
  1574  0D8F                     	;# 
  1575  0D8F                     	;# 
  1576  0D90                     	;# 
  1577  0D91                     	;# 
  1578  0D92                     	;# 
  1579  0D92                     	;# 
  1580  0D93                     	;# 
  1581  0D94                     	;# 
  1582  0D95                     	;# 
  1583  0D95                     	;# 
  1584  0D96                     	;# 
  1585  0D97                     	;# 
  1586  0D98                     	;# 
  1587  0D99                     	;# 
  1588  0D9A                     	;# 
  1589  0D9B                     	;# 
  1590  0D9C                     	;# 
  1591  0D9D                     	;# 
  1592  0D9E                     	;# 
  1593  0D9E                     	;# 
  1594  0D9F                     	;# 
  1595  0DA0                     	;# 
  1596  0DA1                     	;# 
  1597  0DA1                     	;# 
  1598  0DA2                     	;# 
  1599  0DA3                     	;# 
  1600  0DA4                     	;# 
  1601  0DA4                     	;# 
  1602  0DA5                     	;# 
  1603  0DA6                     	;# 
  1604  0DA7                     	;# 
  1605  0DA7                     	;# 
  1606  0DA8                     	;# 
  1607  0DA9                     	;# 
  1608  0DAA                     	;# 
  1609  0DAB                     	;# 
  1610  0DAC                     	;# 
  1611  0DAD                     	;# 
  1612  0DAE                     	;# 
  1613  0DAF                     	;# 
  1614  0E0F                     	;# 
  1615  0E10                     	;# 
  1616  0E11                     	;# 
  1617  0E12                     	;# 
  1618  0E13                     	;# 
  1619  0E14                     	;# 
  1620  0E15                     	;# 
  1621  0E16                     	;# 
  1622  0E17                     	;# 
  1623  0E18                     	;# 
  1624  0E19                     	;# 
  1625  0E1A                     	;# 
  1626  0E1B                     	;# 
  1627  0E1C                     	;# 
  1628  0E1D                     	;# 
  1629  0E1E                     	;# 
  1630  0E1F                     	;# 
  1631  0E20                     	;# 
  1632  0E21                     	;# 
  1633  0E22                     	;# 
  1634  0E23                     	;# 
  1635  0E24                     	;# 
  1636  0E25                     	;# 
  1637  0E26                     	;# 
  1638  0E27                     	;# 
  1639  0E28                     	;# 
  1640  0E29                     	;# 
  1641  0E2A                     	;# 
  1642  0E2B                     	;# 
  1643  0E2C                     	;# 
  1644  0E2D                     	;# 
  1645  0E2E                     	;# 
  1646  0E90                     	;# 
  1647  0E91                     	;# 
  1648  0E92                     	;# 
  1649  0E94                     	;# 
  1650  0E95                     	;# 
  1651  0E9C                     	;# 
  1652  0E9D                     	;# 
  1653  0E9E                     	;# 
  1654  0E9F                     	;# 
  1655  0EA0                     	;# 
  1656  0EA1                     	;# 
  1657  0EA2                     	;# 
  1658  0EA3                     	;# 
  1659  0EA4                     	;# 
  1660  0EA5                     	;# 
  1661  0EA6                     	;# 
  1662  0EA7                     	;# 
  1663  0F0F                     	;# 
  1664  0F10                     	;# 
  1665  0F11                     	;# 
  1666  0F12                     	;# 
  1667  0F13                     	;# 
  1668  0F14                     	;# 
  1669  0F15                     	;# 
  1670  0F16                     	;# 
  1671  0F17                     	;# 
  1672  0F18                     	;# 
  1673  0F19                     	;# 
  1674  0F1A                     	;# 
  1675  0F1B                     	;# 
  1676  0F1C                     	;# 
  1677  0F1D                     	;# 
  1678  0F1E                     	;# 
  1679  0F1F                     	;# 
  1680  0F20                     	;# 
  1681  0F21                     	;# 
  1682  0F22                     	;# 
  1683  0F23                     	;# 
  1684  0FE4                     	;# 
  1685  0FE5                     	;# 
  1686  0FE6                     	;# 
  1687  0FE7                     	;# 
  1688  0FE8                     	;# 
  1689  0FE9                     	;# 
  1690  0FEA                     	;# 
  1691  0FEB                     	;# 
  1692  0FED                     	;# 
  1693  0FEE                     	;# 
  1694  0FEF                     	;# 
  1695                           
  1696                           	psect	stringtext
  1697  0800                     __pstringtext:	
  1698  0800                     _DATA:	
  1699  0800  3400               	retlw	0
  1700  0801  3480               	retlw	128
  1701  0802  3440               	retlw	64
  1702  0803  34C0               	retlw	192
  1703  0804  3420               	retlw	32
  1704  0805  34A0               	retlw	160
  1705  0806  3460               	retlw	96
  1706  0807  34E0               	retlw	224
  1707  0808  3410               	retlw	16
  1708  0809  3490               	retlw	144
  1709  080A  3450               	retlw	80
  1710  080B  34D0               	retlw	208
  1711  080C  3430               	retlw	48
  1712  080D  34B0               	retlw	176
  1713  080E  3470               	retlw	112
  1714  080F  34F0               	retlw	240
  1715  0810  3408               	retlw	8
  1716  0811  3488               	retlw	136
  1717  0812  3448               	retlw	72
  1718  0813  34C8               	retlw	200
  1719  0814  3428               	retlw	40
  1720  0815  34A8               	retlw	168
  1721  0816  3468               	retlw	104
  1722  0817  34E8               	retlw	232
  1723  0818  3418               	retlw	24
  1724  0819  3498               	retlw	152
  1725  081A  3458               	retlw	88
  1726  081B  34D8               	retlw	216
  1727  081C  3438               	retlw	56
  1728  081D  34B8               	retlw	184
  1729  081E  3478               	retlw	120
  1730  081F  34F8               	retlw	248
  1731  0820  3404               	retlw	4
  1732  0821  3484               	retlw	132
  1733  0822  3444               	retlw	68
  1734  0823  34C4               	retlw	196
  1735  0824  3424               	retlw	36
  1736  0825  34A4               	retlw	164
  1737  0826  3464               	retlw	100
  1738  0827  34E4               	retlw	228
  1739  0828  3414               	retlw	20
  1740  0829  3494               	retlw	148
  1741  082A  3454               	retlw	84
  1742  082B  34D4               	retlw	212
  1743  082C  3434               	retlw	52
  1744  082D  34B4               	retlw	180
  1745  082E  3474               	retlw	116
  1746  082F  34F4               	retlw	244
  1747  0830  340C               	retlw	12
  1748  0831  348C               	retlw	140
  1749  0832  344C               	retlw	76
  1750  0833  34CC               	retlw	204
  1751  0834  342C               	retlw	44
  1752  0835  34AC               	retlw	172
  1753  0836  346C               	retlw	108
  1754  0837  34EC               	retlw	236
  1755  0838  341C               	retlw	28
  1756  0839  349C               	retlw	156
  1757  083A  345C               	retlw	92
  1758  083B  34DC               	retlw	220
  1759  083C  343C               	retlw	60
  1760  083D  34BC               	retlw	188
  1761  083E  347C               	retlw	124
  1762  083F  34FC               	retlw	252
  1763  0840  3406               	retlw	6
  1764  0841                     __end_of_DATA:	
  1765  0841                     _DacOutput:	
  1766  0841  342B               	retlw	43
  1767  0842  3448               	retlw	72
  1768  0843  3456               	retlw	86
  1769  0844  3464               	retlw	100
  1770  0845                     __end_of_DacOutput:	
  1771  0845                     _REGADD:	
  1772  0845  3407               	retlw	7
  1773  0846  3410               	retlw	16
  1774  0847                     __end_of_REGADD:	
  1775  0847                     _SLAVEADD:	
  1776  0847  3406               	retlw	6
  1777  0848  340E               	retlw	14
  1778  0849                     __end_of_SLAVEADD:	
  1779  000E                     _PORTC	set	14
  1780  0095                     _OPTION_REGbits	set	149
  1781  0099                     _OSCCON	set	153
  1782  009A                     _OSCSTAT	set	154
  1783  0098                     _OSCTUNE	set	152
  1784  008C                     _TRISA	set	140
  1785  008D                     _TRISB	set	141
  1786  008E                     _TRISC	set	142
  1787  0118                     _DAC1CON0	set	280
  1788  0119                     _DAC1CON1	set	281
  1789  010C                     _LATA	set	268
  1790  010D                     _LATB	set	269
  1791  010E                     _LATC	set	270
  1792  0861                     _LATA1	set	2145
  1793  0862                     _LATA2	set	2146
  1794  0864                     _LATA4	set	2148
  1795  086C                     _LATB4	set	2156
  1796  086D                     _LATB5	set	2157
  1797  086E                     _LATB6	set	2158
  1798  086F                     _LATB7	set	2159
  1799  018C                     _ANSELA	set	396
  1800  018D                     _ANSELB	set	397
  1801  018E                     _ANSELC	set	398
  1802  020D                     _WPUB	set	525
  1803  020E                     _WPUC	set	526
  1804                           
  1805                           ; #config settings
  1806  0000                     
  1807                           	psect	cinit
  1808  07F8                     start_initialization:	
  1809  07F8                     __initialization:	
  1810                           
  1811                           ; Clear objects allocated to COMMON
  1812  07F8  01FC               	clrf	__pbssCOMMON& (0+127)
  1813  07F9  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
  1814                           
  1815                           ; Clear objects allocated to BANK0
  1816  07FA  01A0               	clrf	__pbssBANK0& (0+127)
  1817  07FB  01A1               	clrf	(__pbssBANK0+1)& (0+127)
  1818  07FC  01A2               	clrf	(__pbssBANK0+2)& (0+127)
  1819  07FD                     end_of_initialization:	
  1820                           ;End of C runtime variable initialization code
  1821                           
  1822  07FD                     __end_of__initialization:	
  1823  07FD  0020               	movlb	0
  1824  07FE  3187  2F0A         	ljmp	_main	;jump to C main() function
  1825                           
  1826                           	psect	bssCOMMON
  1827  007C                     __pbssCOMMON:	
  1828  007C                     _Byte2:	
  1829  007C                     	ds	1
  1830  007D                     _Byte3:	
  1831  007D                     	ds	1
  1832                           
  1833                           	psect	bssBANK0
  1834  0020                     __pbssBANK0:	
  1835  0020                     _Byte1:	
  1836  0020                     	ds	1
  1837  0021                     _parity1:	
  1838  0021                     	ds	1
  1839  0022                     _parity2:	
  1840  0022                     	ds	1
  1841                           
  1842                           	psect	cstackCOMMON
  1843  0070                     __pcstackCOMMON:	
  1844  0070                     ?_OSCILLATOR_Initialize:	
  1845  0070                     ??_OSCILLATOR_Initialize:	
  1846                           ; 0 bytes @ 0x0
  1847                           
  1848  0070                     ?_DAC1_Initialize:	
  1849                           ; 0 bytes @ 0x0
  1850                           
  1851  0070                     ??_DAC1_Initialize:	
  1852                           ; 0 bytes @ 0x0
  1853                           
  1854  0070                     ?_DAC1_SetOutput:	
  1855                           ; 0 bytes @ 0x0
  1856                           
  1857  0070                     ??_DAC1_SetOutput:	
  1858                           ; 0 bytes @ 0x0
  1859                           
  1860  0070                     ?_PIN_MANAGER_Initialize:	
  1861                           ; 0 bytes @ 0x0
  1862                           
  1863  0070                     ??_PIN_MANAGER_Initialize:	
  1864                           ; 0 bytes @ 0x0
  1865                           
  1866  0070                     ?_SYSTEM_Initialize:	
  1867                           ; 0 bytes @ 0x0
  1868                           
  1869  0070                     ??_SYSTEM_Initialize:	
  1870                           ; 0 bytes @ 0x0
  1871                           
  1872  0070                     ?_shiftRegister:	
  1873                           ; 0 bytes @ 0x0
  1874                           
  1875  0070                     ??_paritycheck:	
  1876                           ; 0 bytes @ 0x0
  1877                           
  1878  0070                     ?_main:	
  1879                           ; 0 bytes @ 0x0
  1880                           
  1881  0070                     ?_paritycheck:	
  1882                           ; 0 bytes @ 0x0
  1883                           
  1884  0070                     DAC1_SetOutput@inputData:	
  1885                           ; 1 bytes @ 0x0
  1886                           
  1887  0070                     shiftRegister@Dummy2:	
  1888                           ; 1 bytes @ 0x0
  1889                           
  1890                           
  1891                           ; 1 bytes @ 0x0
  1892  0070                     	ds	1
  1893  0071                     shiftRegister@y:	
  1894  0071                     paritycheck@parity:	
  1895                           ; 1 bytes @ 0x1
  1896                           
  1897                           
  1898                           ; 1 bytes @ 0x1
  1899  0071                     	ds	1
  1900  0072                     ??_shiftRegister:	
  1901  0072                     paritycheck@Dummy:	
  1902                           ; 0 bytes @ 0x2
  1903                           
  1904                           
  1905                           ; 1 bytes @ 0x2
  1906  0072                     	ds	1
  1907  0073                     shiftRegister@m:	
  1908                           
  1909                           ; 1 bytes @ 0x3
  1910  0073                     	ds	1
  1911  0074                     shiftRegister@Dummy1:	
  1912                           
  1913                           ; 1 bytes @ 0x4
  1914  0074                     	ds	1
  1915  0075                     ?_MIPI:	
  1916  0075                     MIPI@y:	
  1917                           ; 0 bytes @ 0x5
  1918                           
  1919                           
  1920                           ; 1 bytes @ 0x5
  1921  0075                     	ds	1
  1922  0076                     ??_MIPI:	
  1923                           
  1924                           ; 0 bytes @ 0x6
  1925  0076                     	ds	2
  1926  0078                     MIPI@x:	
  1927                           
  1928                           ; 1 bytes @ 0x8
  1929  0078                     	ds	1
  1930  0079                     MIPI@i:	
  1931                           
  1932                           ; 1 bytes @ 0x9
  1933  0079                     	ds	1
  1934  007A                     MIPI@j:	
  1935                           
  1936                           ; 1 bytes @ 0xA
  1937  007A                     	ds	1
  1938  007B                     ??_main:	
  1939                           
  1940                           ; 0 bytes @ 0xB
  1941  007B                     	ds	1
  1942                           
  1943                           	psect	maintext
  1944  070A                     __pmaintext:	
  1945 ;;
  1946 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1947 ;;
  1948 ;; *************** function _main *****************
  1949 ;; Defined at:
  1950 ;;		line 179 in file "main.c"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;		None
  1953 ;; Auto vars:     Size  Location     Type
  1954 ;;		None
  1955 ;; Return value:  Size  Location     Type
  1956 ;;		None               void
  1957 ;; Registers used:
  1958 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1959 ;; Tracked objects:
  1960 ;;		On entry : B1F/0
  1961 ;;		On exit  : 0/0
  1962 ;;		Unchanged: 0/0
  1963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1964 ;;      Params:         0       0       0       0       0       0       0       0
  1965 ;;      Locals:         0       0       0       0       0       0       0       0
  1966 ;;      Temps:          1       0       0       0       0       0       0       0
  1967 ;;      Totals:         1       0       0       0       0       0       0       0
  1968 ;;Total ram usage:        1 bytes
  1969 ;; Hardware stack levels required when called:    2
  1970 ;; This function calls:
  1971 ;;		_DAC1_Initialize
  1972 ;;		_DAC1_SetOutput
  1973 ;;		_MIPI
  1974 ;;		_PIN_MANAGER_Initialize
  1975 ;;		_SYSTEM_Initialize
  1976 ;; This function is called by:
  1977 ;;		Startup code after reset
  1978 ;; This function uses a non-reentrant model
  1979 ;;
  1980                           
  1981                           
  1982                           ;psect for function _main
  1983  070A                     _main:	
  1984                           
  1985                           ;main.c: 181: SYSTEM_Initialize();
  1986                           
  1987                           ;incstack = 0
  1988                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1989  070A  3185  25E3  3187   	fcall	_SYSTEM_Initialize
  1990                           
  1991                           ;main.c: 182: DAC1_Initialize();
  1992  070D  3185  25D8  3187   	fcall	_DAC1_Initialize
  1993                           
  1994                           ;main.c: 183: PIN_MANAGER_Initialize();
  1995  0710  3186  2608  3187   	fcall	_PIN_MANAGER_Initialize
  1996                           
  1997                           ;main.c: 185: DAC1_SetOutput(0);
  1998  0713  3000               	movlw	0
  1999  0714  3185  25D3  3187   	fcall	_DAC1_SetOutput
  2000                           
  2001                           ;main.c: 186: do { LATA1 = 0; } while(0);
  2002  0717  0022               	movlb	2	; select bank2
  2003  0718  108C               	bcf	12,1	;volatile
  2004                           
  2005                           ;main.c: 187: do { LATA4 = 0; } while(0);
  2006  0719  120C               	bcf	12,4	;volatile
  2007                           
  2008                           ;main.c: 188: do { LATA2 = 0; } while(0);
  2009  071A  110C               	bcf	12,2	;volatile
  2010                           
  2011                           ;main.c: 189: do { LATB4 = 0; } while(0);
  2012  071B  120D               	bcf	13,4	;volatile
  2013  071C                     l963:	
  2014                           ;main.c: 191: while ((PORTC & 0xC0) != 0xC0) {
  2015                           
  2016                           ;main.c: 190: while (1) {
  2017                           
  2018  071C  30C0               	movlw	192
  2019  071D  0020               	movlb	0	; select bank0
  2020  071E  050E               	andwf	14,w	;volatile
  2021  071F  00FB               	movwf	??_main
  2022  0720  30C0               	movlw	192
  2023  0721  067B               	xorwf	??_main,w
  2024  0722  1D03               	btfss	3,2
  2025  0723  2F1C               	goto	l963
  2026                           
  2027                           ;main.c: 192: }
  2028                           ;main.c: 193: Byte1 = PORTC;
  2029  0724  080E               	movf	14,w	;volatile
  2030  0725  00FB               	movwf	??_main
  2031  0726  087B               	movf	??_main,w
  2032  0727  00A0               	movwf	_Byte1
  2033  0728                     l967:	
  2034                           ;main.c: 194: while ((PORTC & 0xC0) != 0x40) {
  2035                           
  2036  0728  30C0               	movlw	192
  2037  0729  050E               	andwf	14,w	;volatile
  2038  072A  00FB               	movwf	??_main
  2039  072B  3040               	movlw	64
  2040  072C  067B               	xorwf	??_main,w
  2041  072D  1D03               	btfss	3,2
  2042  072E  2F28               	goto	l967
  2043                           
  2044                           ;main.c: 195: }
  2045                           ;main.c: 196: Byte2 = PORTC & 0x3F;
  2046  072F  080E               	movf	14,w	;volatile
  2047  0730  393F               	andlw	63
  2048  0731  00FB               	movwf	??_main
  2049  0732  087B               	movf	??_main,w
  2050  0733  00FC               	movwf	_Byte2
  2051  0734                     l971:	
  2052                           ;main.c: 197: while ((PORTC & 0xC0) != 0x80) {
  2053                           
  2054  0734  30C0               	movlw	192
  2055  0735  050E               	andwf	14,w	;volatile
  2056  0736  00FB               	movwf	??_main
  2057  0737  3080               	movlw	128
  2058  0738  067B               	xorwf	??_main,w
  2059  0739  1D03               	btfss	3,2
  2060  073A  2F34               	goto	l971
  2061                           
  2062                           ;main.c: 198: }
  2063                           ;main.c: 199: Byte3 = PORTC & 0x3F;
  2064  073B  080E               	movf	14,w	;volatile
  2065  073C  393F               	andlw	63
  2066  073D  00FB               	movwf	??_main
  2067  073E  087B               	movf	??_main,w
  2068  073F  00FD               	movwf	_Byte3
  2069                           
  2070                           ;main.c: 200: if (((Byte1 & 0x10) == 0x10) && ((Byte1 & 0x0C) != 0x00))
  2071  0740  1E20               	btfss	_Byte1,4
  2072  0741  2F50               	goto	l981
  2073  0742  0820               	movf	_Byte1,w
  2074  0743  390C               	andlw	12
  2075  0744  1903               	btfsc	3,2
  2076  0745  2F50               	goto	l981
  2077                           
  2078                           ;main.c: 201: DAC1_SetOutput(DacOutput[(Byte1 & 0x03)]);
  2079  0746  0820               	movf	_Byte1,w
  2080  0747  3903               	andlw	3
  2081  0748  3E41               	addlw	low (_DacOutput| (0+32768))
  2082  0749  0084               	movwf	4
  2083  074A  3088               	movlw	high (_DacOutput| (0+32768))
  2084  074B  1803               	skipnc
  2085  074C  3E01               	addlw	1
  2086  074D  0085               	movwf	5
  2087  074E  0800               	movf	0,w	;code access
  2088  074F  2F51               	goto	L1
  2089  0750                     l981:	
  2090                           
  2091                           ;main.c: 202: else
  2092                           ;main.c: 203: DAC1_SetOutput(0);
  2093  0750  3000               	movlw	0
  2094  0751                     L1:	
  2095  0751  3185  25D3  3187   	fcall	_DAC1_SetOutput
  2096                           
  2097                           ;main.c: 205: if ((Byte1 & 0x3C) == 0x20) {
  2098  0754  303C               	movlw	60
  2099  0755  0020               	movlb	0	; select bank0
  2100  0756  0520               	andwf	_Byte1,w
  2101  0757  00FB               	movwf	??_main
  2102  0758  3020               	movlw	32
  2103  0759  067B               	xorwf	??_main,w
  2104  075A  1903               	btfsc	3,2
  2105  075B  2FA0               	goto	l172
  2106                           
  2107                           ;main.c: 209: if (((Byte1 & 0x30) != 0x00) && ((Byte1 & 0x0C) != 0x00)) {
  2108                           
  2109                           ;main.c: 208: } else {
  2110                           
  2111                           ;main.c: 207: do { LATB4 = 1; } while(0);
  2112                           
  2113                           ;main.c: 206: do { LATA2 = 0; } while(0);
  2114  075C  0020               	movlb	0	; select bank0
  2115  075D  0820               	movf	_Byte1,w
  2116  075E  3930               	andlw	48
  2117  075F  1903               	btfsc	3,2
  2118  0760  2FA4               	goto	l177
  2119  0761  0820               	movf	_Byte1,w
  2120  0762  390C               	andlw	12
  2121  0763  1903               	btfsc	3,2
  2122  0764  2FA4               	goto	l177
  2123                           
  2124                           ;main.c: 210: if ((Byte2 == 5) || (Byte2 == 8) || (Byte2 == 12) || (Byte2 == 13) || (Byt
      +                          e2 == 20) || (Byte2 == 26) || (Byte2 == 29) || (Byte3 == 5) || (Byte3 == 8) || (Byte3 ==
      +                           12) || (Byte3 == 13) || (Byte3 == 20) || (Byte3 == 26) || (Byte3 == 29)) {
  2125  0765  3005               	movlw	5
  2126  0766  067C               	xorwf	_Byte2,w
  2127  0767  1903               	btfsc	3,2
  2128  0768  2F9D               	goto	l167
  2129  0769  3008               	movlw	8
  2130  076A  067C               	xorwf	_Byte2,w
  2131  076B  1903               	btfsc	3,2
  2132  076C  2F9D               	goto	l167
  2133  076D  300C               	movlw	12
  2134  076E  067C               	xorwf	_Byte2,w
  2135  076F  1903               	btfsc	3,2
  2136  0770  2F9D               	goto	l167
  2137  0771  300D               	movlw	13
  2138  0772  067C               	xorwf	_Byte2,w
  2139  0773  1903               	btfsc	3,2
  2140  0774  2F9D               	goto	l167
  2141  0775  3014               	movlw	20
  2142  0776  067C               	xorwf	_Byte2,w
  2143  0777  1903               	btfsc	3,2
  2144  0778  2F9D               	goto	l167
  2145  0779  301A               	movlw	26
  2146  077A  067C               	xorwf	_Byte2,w
  2147  077B  1903               	btfsc	3,2
  2148  077C  2F9D               	goto	l167
  2149  077D  301D               	movlw	29
  2150  077E  067C               	xorwf	_Byte2,w
  2151  077F  1903               	btfsc	3,2
  2152  0780  2F9D               	goto	l167
  2153  0781  3005               	movlw	5
  2154  0782  067D               	xorwf	_Byte3,w
  2155  0783  1903               	btfsc	3,2
  2156  0784  2F9D               	goto	l167
  2157  0785  3008               	movlw	8
  2158  0786  067D               	xorwf	_Byte3,w
  2159  0787  1903               	btfsc	3,2
  2160  0788  2F9D               	goto	l167
  2161  0789  300C               	movlw	12
  2162  078A  067D               	xorwf	_Byte3,w
  2163  078B  1903               	btfsc	3,2
  2164  078C  2F9D               	goto	l167
  2165  078D  300D               	movlw	13
  2166  078E  067D               	xorwf	_Byte3,w
  2167  078F  1903               	btfsc	3,2
  2168  0790  2F9D               	goto	l167
  2169  0791  3014               	movlw	20
  2170  0792  067D               	xorwf	_Byte3,w
  2171  0793  1903               	btfsc	3,2
  2172  0794  2F9D               	goto	l167
  2173  0795  301A               	movlw	26
  2174  0796  067D               	xorwf	_Byte3,w
  2175  0797  1903               	btfsc	3,2
  2176  0798  2F9D               	goto	l167
  2177  0799  301D               	movlw	29
  2178  079A  067D               	xorwf	_Byte3,w
  2179  079B  1D03               	btfss	3,2
  2180  079C  2FA0               	goto	l172
  2181  079D                     l167:	
  2182                           ;main.c: 211: do { LATA2 = 1; } while(0);
  2183                           
  2184  079D  0022               	movlb	2	; select bank2
  2185  079E  150C               	bsf	12,2	;volatile
  2186                           
  2187                           ;main.c: 212: do { LATB4 = 1; } while(0);
  2188  079F  2FA2               	goto	l174
  2189  07A0                     l172:	
  2190                           ;main.c: 214: do { LATA2 = 0; } while(0);
  2191                           
  2192                           ;main.c: 213: } else {
  2193                           
  2194  07A0  0022               	movlb	2	; select bank2
  2195  07A1  110C               	bcf	12,2	;volatile
  2196  07A2                     l174:	
  2197                           ;main.c: 215: do { LATB4 = 1; } while(0);
  2198                           
  2199  07A2  160D               	bsf	13,4	;volatile
  2200                           
  2201                           ;main.c: 216: }
  2202                           ;main.c: 217: } else {
  2203  07A3  2FA7               	goto	l1017
  2204  07A4                     l177:	
  2205                           ;main.c: 218: do { LATA2 = 0; } while(0);
  2206                           
  2207  07A4  0022               	movlb	2	; select bank2
  2208  07A5  110C               	bcf	12,2	;volatile
  2209                           
  2210                           ;main.c: 219: do { LATB4 = 0; } while(0);
  2211  07A6  120D               	bcf	13,4	;volatile
  2212  07A7                     l1017:	
  2213                           
  2214                           ;main.c: 220: }
  2215                           ;main.c: 221: }
  2216                           ;main.c: 223: if (Byte2 == 3 && Byte3 == 7) {
  2217  07A7  3003               	movlw	3
  2218  07A8  067C               	xorwf	_Byte2,w
  2219  07A9  1D03               	btfss	3,2
  2220  07AA  2FB2               	goto	l1021
  2221  07AB  3007               	movlw	7
  2222  07AC  067D               	xorwf	_Byte3,w
  2223  07AD  1D03               	btfss	3,2
  2224  07AE  2FB2               	goto	l1021
  2225                           
  2226                           ;main.c: 224: do { LATA1 = 0; } while(0);
  2227  07AF  108C               	bcf	12,1	;volatile
  2228                           
  2229                           ;main.c: 225: do { LATA4 = 1; } while(0);
  2230  07B0  160C               	bsf	12,4	;volatile
  2231                           
  2232                           ;main.c: 226: } else {
  2233  07B1  2FE8               	goto	l1049
  2234  07B2                     l1021:	
  2235                           
  2236                           ;main.c: 227: if ((Byte2 == 7 && Byte3 == 0) || (Byte2 == 30 && Byte3 == 0) || (Byte2 ==
      +                           41 && Byte3 == 0) || (Byte2 == 5 && Byte3 == 30) || (Byte2 == 7 && Byte3 == 20) || (Byt
      +                          e2 == 12 && Byte3 == 30) || (Byte2 == 41 && Byte3 == 41)) {
  2237  07B2  3007               	movlw	7
  2238  07B3  067C               	xorwf	_Byte2,w
  2239  07B4  1903               	btfsc	3,2
  2240  07B5  087D               	movf	_Byte3,w
  2241  07B6  1903               	btfsc	3,2
  2242  07B7  2FE4               	goto	l202
  2243  07B8  301E               	movlw	30
  2244  07B9  067C               	xorwf	_Byte2,w
  2245  07BA  1903               	btfsc	3,2
  2246  07BB  087D               	movf	_Byte3,w
  2247  07BC  1903               	btfsc	3,2
  2248  07BD  2FE4               	goto	l202
  2249  07BE  3029               	movlw	41
  2250  07BF  067C               	xorwf	_Byte2,w
  2251  07C0  1903               	btfsc	3,2
  2252  07C1  087D               	movf	_Byte3,w
  2253  07C2  1903               	btfsc	3,2
  2254  07C3  2FE4               	goto	l202
  2255  07C4  3005               	movlw	5
  2256  07C5  067C               	xorwf	_Byte2,w
  2257  07C6  1D03               	btfss	3,2
  2258  07C7  2FCC               	goto	l1037
  2259  07C8  301E               	movlw	30
  2260  07C9  067D               	xorwf	_Byte3,w
  2261  07CA  1903               	btfsc	3,2
  2262  07CB  2FE4               	goto	l202
  2263  07CC                     l1037:	
  2264  07CC  3007               	movlw	7
  2265  07CD  067C               	xorwf	_Byte2,w
  2266  07CE  1D03               	btfss	3,2
  2267  07CF  2FD4               	goto	l1041
  2268  07D0  3014               	movlw	20
  2269  07D1  067D               	xorwf	_Byte3,w
  2270  07D2  1903               	btfsc	3,2
  2271  07D3  2FE4               	goto	l202
  2272  07D4                     l1041:	
  2273  07D4  300C               	movlw	12
  2274  07D5  067C               	xorwf	_Byte2,w
  2275  07D6  1D03               	btfss	3,2
  2276  07D7  2FDC               	goto	l1045
  2277  07D8  301E               	movlw	30
  2278  07D9  067D               	xorwf	_Byte3,w
  2279  07DA  1903               	btfsc	3,2
  2280  07DB  2FE4               	goto	l202
  2281  07DC                     l1045:	
  2282  07DC  3029               	movlw	41
  2283  07DD  067C               	xorwf	_Byte2,w
  2284  07DE  1D03               	btfss	3,2
  2285  07DF  2FE6               	goto	l207
  2286  07E0  3029               	movlw	41
  2287  07E1  067D               	xorwf	_Byte3,w
  2288  07E2  1D03               	btfss	3,2
  2289  07E3  2FE6               	goto	l207
  2290  07E4                     l202:	
  2291                           ;main.c: 228: do { LATA1 = 1; } while(0);
  2292                           
  2293  07E4  148C               	bsf	12,1	;volatile
  2294  07E5  2FE7               	goto	l209
  2295  07E6                     l207:	
  2296                           ;main.c: 231: do { LATA1 = 0; } while(0);
  2297                           
  2298                           ;main.c: 230: } else {
  2299                           
  2300                           ;main.c: 229: do { LATA4 = 0; } while(0);
  2301                           
  2302  07E6  108C               	bcf	12,1	;volatile
  2303  07E7                     l209:	
  2304                           ;main.c: 232: do { LATA4 = 0; } while(0);
  2305                           
  2306  07E7  120C               	bcf	12,4	;volatile
  2307  07E8                     l1049:	
  2308                           
  2309                           ;main.c: 233: }
  2310                           ;main.c: 234: }
  2311                           ;main.c: 238: if ((Byte2 == 5) && (Byte3 == 0)) {
  2312  07E8  3005               	movlw	5
  2313  07E9  067C               	xorwf	_Byte2,w
  2314  07EA  1D03               	btfss	3,2
  2315  07EB  2F1C               	goto	l963
  2316  07EC  087D               	movf	_Byte3,w
  2317  07ED  1D03               	btfss	3,2
  2318  07EE  2F1C               	goto	l963
  2319                           
  2320                           ;main.c: 239: MIPI(10,64);
  2321  07EF  3040               	movlw	64
  2322  07F0  00FB               	movwf	??_main
  2323  07F1  087B               	movf	??_main,w
  2324  07F2  00F5               	movwf	MIPI@y
  2325  07F3  300A               	movlw	10
  2326  07F4  3186  264A  3187   	fcall	_MIPI
  2327                           
  2328                           ;main.c: 263: } else {
  2329                           
  2330                           ;main.c: 260: } else {
  2331                           
  2332                           ;main.c: 257: } else {
  2333                           
  2334                           ;main.c: 254: } else {
  2335                           
  2336                           ;main.c: 251: } else {
  2337                           
  2338                           ;main.c: 248: } else {
  2339                           
  2340                           ;main.c: 245: } else {
  2341                           
  2342                           ;main.c: 242: } else {
  2343  07F7  2F1C               	goto	l963
  2344  07F8                     __end_of_main:	
  2345                           
  2346                           	psect	text1
  2347  05E3                     __ptext1:	
  2348 ;; *************** function _SYSTEM_Initialize *****************
  2349 ;; Defined at:
  2350 ;;		line 75 in file "mcc_generated_files/mcc.c"
  2351 ;; Parameters:    Size  Location     Type
  2352 ;;		None
  2353 ;; Auto vars:     Size  Location     Type
  2354 ;;		None
  2355 ;; Return value:  Size  Location     Type
  2356 ;;		None               void
  2357 ;; Registers used:
  2358 ;;		wreg, status,2, status,0, pclath, cstack
  2359 ;; Tracked objects:
  2360 ;;		On entry : 0/0
  2361 ;;		On exit  : 0/0
  2362 ;;		Unchanged: 0/0
  2363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2364 ;;      Params:         0       0       0       0       0       0       0       0
  2365 ;;      Locals:         0       0       0       0       0       0       0       0
  2366 ;;      Temps:          0       0       0       0       0       0       0       0
  2367 ;;      Totals:         0       0       0       0       0       0       0       0
  2368 ;;Total ram usage:        0 bytes
  2369 ;; Hardware stack levels used:    1
  2370 ;; Hardware stack levels required when called:    1
  2371 ;; This function calls:
  2372 ;;		_DAC1_Initialize
  2373 ;;		_OSCILLATOR_Initialize
  2374 ;;		_PIN_MANAGER_Initialize
  2375 ;; This function is called by:
  2376 ;;		_main
  2377 ;; This function uses a non-reentrant model
  2378 ;;
  2379                           
  2380                           
  2381                           ;psect for function _SYSTEM_Initialize
  2382  05E3                     _SYSTEM_Initialize:	
  2383                           
  2384                           ;mcc.c: 76: OSCILLATOR_Initialize();
  2385                           
  2386                           ;incstack = 0
  2387                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2388  05E3  3185  25DD  3185   	fcall	_OSCILLATOR_Initialize
  2389                           
  2390                           ;mcc.c: 77: PIN_MANAGER_Initialize();
  2391  05E6  3186  2608  3185   	fcall	_PIN_MANAGER_Initialize
  2392                           
  2393                           ;mcc.c: 78: DAC1_Initialize();
  2394  05E9  3185  25D8         	fcall	_DAC1_Initialize
  2395  05EB  0008               	return
  2396  05EC                     __end_of_SYSTEM_Initialize:	
  2397                           
  2398                           	psect	text2
  2399  0608                     __ptext2:	
  2400 ;; *************** function _PIN_MANAGER_Initialize *****************
  2401 ;; Defined at:
  2402 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;		None
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;		None
  2407 ;; Return value:  Size  Location     Type
  2408 ;;		None               void
  2409 ;; Registers used:
  2410 ;;		wreg, status,2
  2411 ;; Tracked objects:
  2412 ;;		On entry : 0/0
  2413 ;;		On exit  : 0/0
  2414 ;;		Unchanged: 0/0
  2415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2416 ;;      Params:         0       0       0       0       0       0       0       0
  2417 ;;      Locals:         0       0       0       0       0       0       0       0
  2418 ;;      Temps:          0       0       0       0       0       0       0       0
  2419 ;;      Totals:         0       0       0       0       0       0       0       0
  2420 ;;Total ram usage:        0 bytes
  2421 ;; Hardware stack levels used:    1
  2422 ;; This function calls:
  2423 ;;		Nothing
  2424 ;; This function is called by:
  2425 ;;		_SYSTEM_Initialize
  2426 ;;		_main
  2427 ;; This function uses a non-reentrant model
  2428 ;;
  2429                           
  2430                           
  2431                           ;psect for function _PIN_MANAGER_Initialize
  2432  0608                     _PIN_MANAGER_Initialize:	
  2433                           
  2434                           ;pin_manager.c: 51: LATA = 0x00;
  2435                           
  2436                           ;incstack = 0
  2437                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2438  0608  0022               	movlb	2	; select bank2
  2439  0609  018C               	clrf	12	;volatile
  2440                           
  2441                           ;pin_manager.c: 52: TRISA = 0x28;
  2442  060A  3028               	movlw	40
  2443  060B  0021               	movlb	1	; select bank1
  2444  060C  008C               	movwf	12	;volatile
  2445                           
  2446                           ;pin_manager.c: 53: ANSELA = 0x01;
  2447  060D  3001               	movlw	1
  2448  060E  0023               	movlb	3	; select bank3
  2449  060F  008C               	movwf	12	;volatile
  2450                           
  2451                           ;pin_manager.c: 55: LATB = 0x00;
  2452  0610  0022               	movlb	2	; select bank2
  2453  0611  018D               	clrf	13	;volatile
  2454                           
  2455                           ;pin_manager.c: 56: TRISB = 0x00;
  2456  0612  0021               	movlb	1	; select bank1
  2457  0613  018D               	clrf	13	;volatile
  2458                           
  2459                           ;pin_manager.c: 57: ANSELB = 0x00;
  2460  0614  0023               	movlb	3	; select bank3
  2461  0615  018D               	clrf	13	;volatile
  2462                           
  2463                           ;pin_manager.c: 58: WPUB = 0x00;
  2464  0616  0024               	movlb	4	; select bank4
  2465  0617  018D               	clrf	13	;volatile
  2466                           
  2467                           ;pin_manager.c: 60: LATC = 0x00;
  2468  0618  0022               	movlb	2	; select bank2
  2469  0619  018E               	clrf	14	;volatile
  2470                           
  2471                           ;pin_manager.c: 61: TRISC = 0xFF;
  2472  061A  30FF               	movlw	255
  2473  061B  0021               	movlb	1	; select bank1
  2474  061C  008E               	movwf	14	;volatile
  2475                           
  2476                           ;pin_manager.c: 62: ANSELC = 0x00;
  2477  061D  0023               	movlb	3	; select bank3
  2478  061E  018E               	clrf	14	;volatile
  2479                           
  2480                           ;pin_manager.c: 63: WPUC = 0x00;
  2481  061F  0024               	movlb	4	; select bank4
  2482  0620  018E               	clrf	14	;volatile
  2483                           
  2484                           ;pin_manager.c: 65: OPTION_REGbits.nWPUEN = 0x01;
  2485  0621  0021               	movlb	1	; select bank1
  2486  0622  1795               	bsf	21,7	;volatile
  2487  0623  0008               	return
  2488  0624                     __end_of_PIN_MANAGER_Initialize:	
  2489                           
  2490                           	psect	text3
  2491  05DD                     __ptext3:	
  2492 ;; *************** function _OSCILLATOR_Initialize *****************
  2493 ;; Defined at:
  2494 ;;		line 81 in file "mcc_generated_files/mcc.c"
  2495 ;; Parameters:    Size  Location     Type
  2496 ;;		None
  2497 ;; Auto vars:     Size  Location     Type
  2498 ;;		None
  2499 ;; Return value:  Size  Location     Type
  2500 ;;		None               void
  2501 ;; Registers used:
  2502 ;;		wreg, status,2
  2503 ;; Tracked objects:
  2504 ;;		On entry : 0/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2508 ;;      Params:         0       0       0       0       0       0       0       0
  2509 ;;      Locals:         0       0       0       0       0       0       0       0
  2510 ;;      Temps:          0       0       0       0       0       0       0       0
  2511 ;;      Totals:         0       0       0       0       0       0       0       0
  2512 ;;Total ram usage:        0 bytes
  2513 ;; Hardware stack levels used:    1
  2514 ;; This function calls:
  2515 ;;		Nothing
  2516 ;; This function is called by:
  2517 ;;		_SYSTEM_Initialize
  2518 ;; This function uses a non-reentrant model
  2519 ;;
  2520                           
  2521                           
  2522                           ;psect for function _OSCILLATOR_Initialize
  2523  05DD                     _OSCILLATOR_Initialize:	
  2524                           
  2525                           ;mcc.c: 83: OSCCON = 0x7A;
  2526                           
  2527                           ;incstack = 0
  2528                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2529  05DD  307A               	movlw	122
  2530  05DE  0021               	movlb	1	; select bank1
  2531  05DF  0099               	movwf	25	;volatile
  2532                           
  2533                           ;mcc.c: 85: OSCSTAT = 0x00;
  2534  05E0  019A               	clrf	26	;volatile
  2535                           
  2536                           ;mcc.c: 87: OSCTUNE = 0x00;
  2537  05E1  0198               	clrf	24	;volatile
  2538  05E2  0008               	return
  2539  05E3                     __end_of_OSCILLATOR_Initialize:	
  2540                           
  2541                           	psect	text4
  2542  05D8                     __ptext4:	
  2543 ;; *************** function _DAC1_Initialize *****************
  2544 ;; Defined at:
  2545 ;;		line 58 in file "mcc_generated_files/dac1.c"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;		None
  2548 ;; Auto vars:     Size  Location     Type
  2549 ;;		None
  2550 ;; Return value:  Size  Location     Type
  2551 ;;		None               void
  2552 ;; Registers used:
  2553 ;;		wreg, status,2
  2554 ;; Tracked objects:
  2555 ;;		On entry : 0/0
  2556 ;;		On exit  : 0/0
  2557 ;;		Unchanged: 0/0
  2558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2559 ;;      Params:         0       0       0       0       0       0       0       0
  2560 ;;      Locals:         0       0       0       0       0       0       0       0
  2561 ;;      Temps:          0       0       0       0       0       0       0       0
  2562 ;;      Totals:         0       0       0       0       0       0       0       0
  2563 ;;Total ram usage:        0 bytes
  2564 ;; Hardware stack levels used:    1
  2565 ;; This function calls:
  2566 ;;		Nothing
  2567 ;; This function is called by:
  2568 ;;		_SYSTEM_Initialize
  2569 ;;		_main
  2570 ;; This function uses a non-reentrant model
  2571 ;;
  2572                           
  2573                           
  2574                           ;psect for function _DAC1_Initialize
  2575  05D8                     _DAC1_Initialize:	
  2576                           
  2577                           ;dac1.c: 60: DAC1CON0 = 0xA0;
  2578                           
  2579                           ;incstack = 0
  2580                           ; Regs used in _DAC1_Initialize: [wreg+status,2]
  2581  05D8  30A0               	movlw	160
  2582  05D9  0022               	movlb	2	; select bank2
  2583  05DA  0098               	movwf	24	;volatile
  2584                           
  2585                           ;dac1.c: 62: DAC1CON1 = 0x00;
  2586  05DB  0199               	clrf	25	;volatile
  2587  05DC  0008               	return
  2588  05DD                     __end_of_DAC1_Initialize:	
  2589                           
  2590                           	psect	text5
  2591  064A                     __ptext5:	
  2592 ;; *************** function _MIPI *****************
  2593 ;; Defined at:
  2594 ;;		line 155 in file "main.c"
  2595 ;; Parameters:    Size  Location     Type
  2596 ;;  x               1    wreg     unsigned char 
  2597 ;;  y               1    5[COMMON] unsigned char 
  2598 ;; Auto vars:     Size  Location     Type
  2599 ;;  x               1    8[COMMON] unsigned char 
  2600 ;;  j               1   10[COMMON] unsigned char 
  2601 ;;  i               1    9[COMMON] unsigned char 
  2602 ;; Return value:  Size  Location     Type
  2603 ;;		None               void
  2604 ;; Registers used:
  2605 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2606 ;; Tracked objects:
  2607 ;;		On entry : 0/0
  2608 ;;		On exit  : 0/0
  2609 ;;		Unchanged: 0/0
  2610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2611 ;;      Params:         1       0       0       0       0       0       0       0
  2612 ;;      Locals:         3       0       0       0       0       0       0       0
  2613 ;;      Temps:          2       0       0       0       0       0       0       0
  2614 ;;      Totals:         6       0       0       0       0       0       0       0
  2615 ;;Total ram usage:        6 bytes
  2616 ;; Hardware stack levels used:    1
  2617 ;; Hardware stack levels required when called:    1
  2618 ;; This function calls:
  2619 ;;		_paritycheck
  2620 ;;		_shiftRegister
  2621 ;; This function is called by:
  2622 ;;		_main
  2623 ;; This function uses a non-reentrant model
  2624 ;;
  2625                           
  2626                           
  2627                           ;psect for function _MIPI
  2628  064A                     _MIPI:	
  2629                           
  2630                           ;incstack = 0
  2631                           ; Regs used in _MIPI: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2632                           ;MIPI@x stored from wreg
  2633  064A  00F8               	movwf	MIPI@x
  2634                           
  2635                           ;main.c: 156: parity1 = paritycheck(DATA[x]);
  2636  064B  0878               	movf	MIPI@x,w
  2637  064C  3E00               	addlw	low (_DATA| (0+32768))
  2638  064D  0084               	movwf	4
  2639  064E  3088               	movlw	high (_DATA| (0+32768))
  2640  064F  1803               	skipnc
  2641  0650  3E01               	addlw	1
  2642  0651  0085               	movwf	5
  2643  0652  0800               	movf	0,w	;code access
  2644  0653  3185  25EC  3186   	fcall	_paritycheck
  2645  0656  00F6               	movwf	??_MIPI
  2646  0657  0876               	movf	??_MIPI,w
  2647  0658  0020               	movlb	0	; select bank0
  2648  0659  00A1               	movwf	_parity1
  2649                           
  2650                           ;main.c: 157: parity2 = paritycheck(DATA[y]);
  2651  065A  0875               	movf	MIPI@y,w
  2652  065B  3E00               	addlw	low (_DATA| (0+32768))
  2653  065C  0084               	movwf	4
  2654  065D  3088               	movlw	high (_DATA| (0+32768))
  2655  065E  1803               	skipnc
  2656  065F  3E01               	addlw	1
  2657  0660  0085               	movwf	5
  2658  0661  0800               	movf	0,w	;code access
  2659  0662  3185  25EC  3186   	fcall	_paritycheck
  2660  0665  00F6               	movwf	??_MIPI
  2661  0666  0876               	movf	??_MIPI,w
  2662  0667  0020               	movlb	0	; select bank0
  2663  0668  00A2               	movwf	_parity2
  2664                           
  2665                           ;main.c: 158: for (uint8_t i=0; i<2; i++){
  2666  0669  01F9               	clrf	MIPI@i
  2667  066A                     L4:	
  2668  066A  3002               	movlw	2
  2669  066B  0279               	subwf	MIPI@i,w
  2670  066C  1803               	btfsc	3,0
  2671  066D  0008               	return
  2672                           
  2673                           ;main.c: 159: for (uint8_t j=0; j<2; j++){
  2674  066E  01FA               	clrf	MIPI@j
  2675  066F  3002               	movlw	2
  2676  0670  027A               	subwf	MIPI@j,w
  2677  0671  1803               	btfsc	3,0
  2678  0672  2F05               	goto	l949
  2679  0673                     l122:	
  2680                           ;main.c: 160: do { LATB7 = 1; } while(0);
  2681                           
  2682  0673  0022               	movlb	2	; select bank2
  2683  0674  178D               	bsf	13,7	;volatile
  2684                           
  2685                           ;main.c: 161: do { LATB5 = 1; } while(0);
  2686  0675  168D               	bsf	13,5	;volatile
  2687  0676  0000               	nop	;# 
  2688                           
  2689                           ;main.c: 163: do { LATB7 = 0; } while(0);
  2690  0677  0022               	movlb	2	; select bank2
  2691  0678  138D               	bcf	13,7	;volatile
  2692                           
  2693                           ;main.c: 164: do { LATB5 = 0; } while(0);
  2694  0679  128D               	bcf	13,5	;volatile
  2695                           
  2696                           ;main.c: 165: shiftRegister (SLAVEADD[i],SLAVEADD[i],4);
  2697  067A  0879               	movf	MIPI@i,w
  2698  067B  3E47               	addlw	low (_SLAVEADD| (0+32768))
  2699  067C  0084               	movwf	4
  2700  067D  3088               	movlw	high (_SLAVEADD| (0+32768))
  2701  067E  1803               	skipnc
  2702  067F  3E01               	addlw	1
  2703  0680  0085               	movwf	5
  2704  0681  0800               	movf	0,w	;code access
  2705  0682  00F6               	movwf	??_MIPI
  2706  0683  0876               	movf	??_MIPI,w
  2707  0684  00F0               	movwf	shiftRegister@Dummy2
  2708  0685  3004               	movlw	4
  2709  0686  00F7               	movwf	??_MIPI+1
  2710  0687  0877               	movf	??_MIPI+1,w
  2711  0688  00F1               	movwf	shiftRegister@y
  2712  0689  0879               	movf	MIPI@i,w
  2713  068A  3E47               	addlw	low (_SLAVEADD| (0+32768))
  2714  068B  0084               	movwf	4
  2715  068C  3088               	movlw	high (_SLAVEADD| (0+32768))
  2716  068D  1803               	skipnc
  2717  068E  3E01               	addlw	1
  2718  068F  0085               	movwf	5
  2719  0690  0800               	movf	0,w	;code access
  2720  0691  3186  2624  3186   	fcall	_shiftRegister
  2721                           
  2722                           ;main.c: 166: shiftRegister (0x02,0x02,3);
  2723  0694  3002               	movlw	2
  2724  0695  00F6               	movwf	??_MIPI
  2725  0696  0876               	movf	??_MIPI,w
  2726  0697  00F0               	movwf	shiftRegister@Dummy2
  2727  0698  3003               	movlw	3
  2728  0699  00F7               	movwf	??_MIPI+1
  2729  069A  0877               	movf	??_MIPI+1,w
  2730  069B  00F1               	movwf	shiftRegister@y
  2731  069C  3002               	movlw	2
  2732  069D  3186  2624  3186   	fcall	_shiftRegister
  2733                           
  2734                           ;main.c: 167: shiftRegister (REGADD[j],REGADD[j],5);
  2735  06A0  087A               	movf	MIPI@j,w
  2736  06A1  3E45               	addlw	low (_REGADD| (0+32768))
  2737  06A2  0084               	movwf	4
  2738  06A3  3088               	movlw	high (_REGADD| (0+32768))
  2739  06A4  1803               	skipnc
  2740  06A5  3E01               	addlw	1
  2741  06A6  0085               	movwf	5
  2742  06A7  0800               	movf	0,w	;code access
  2743  06A8  00F6               	movwf	??_MIPI
  2744  06A9  0876               	movf	??_MIPI,w
  2745  06AA  00F0               	movwf	shiftRegister@Dummy2
  2746  06AB  3005               	movlw	5
  2747  06AC  00F7               	movwf	??_MIPI+1
  2748  06AD  0877               	movf	??_MIPI+1,w
  2749  06AE  00F1               	movwf	shiftRegister@y
  2750  06AF  087A               	movf	MIPI@j,w
  2751  06B0  3E45               	addlw	low (_REGADD| (0+32768))
  2752  06B1  0084               	movwf	4
  2753  06B2  3088               	movlw	high (_REGADD| (0+32768))
  2754  06B3  1803               	skipnc
  2755  06B4  3E01               	addlw	1
  2756  06B5  0085               	movwf	5
  2757  06B6  0800               	movf	0,w	;code access
  2758  06B7  3186  2624  3186   	fcall	_shiftRegister
  2759                           
  2760                           ;main.c: 168: if (i==0) shiftRegister (0x01,0x01,1);
  2761  06BA  0879               	movf	MIPI@i,w
  2762  06BB  1D03               	btfss	3,2
  2763  06BC  2EC3               	goto	l935
  2764  06BD  01F0               	clrf	shiftRegister@Dummy2
  2765  06BE  0AF0               	incf	shiftRegister@Dummy2,f
  2766  06BF  01F1               	clrf	shiftRegister@y
  2767  06C0  0AF1               	incf	shiftRegister@y,f
  2768  06C1  3001               	movlw	1
  2769  06C2  2EC7               	goto	L2
  2770  06C3                     l935:	
  2771                           
  2772                           ;main.c: 169: else shiftRegister (0x00,0x00,1);
  2773  06C3  01F0               	clrf	shiftRegister@Dummy2
  2774  06C4  01F1               	clrf	shiftRegister@y
  2775  06C5  0AF1               	incf	shiftRegister@y,f
  2776  06C6  3000               	movlw	0
  2777  06C7                     L2:	
  2778  06C7  3186  2624  3186   	fcall	_shiftRegister
  2779                           
  2780                           ;main.c: 170: if (j==0) shiftRegister (0x00,0x00,8);
  2781  06CA  087A               	movf	MIPI@j,w
  2782  06CB  1D03               	btfss	3,2
  2783  06CC  2ED4               	goto	l941
  2784  06CD  01F0               	clrf	shiftRegister@Dummy2
  2785  06CE  3008               	movlw	8
  2786  06CF  00F6               	movwf	??_MIPI
  2787  06D0  0876               	movf	??_MIPI,w
  2788  06D1  00F1               	movwf	shiftRegister@y
  2789  06D2  3000               	movlw	0
  2790  06D3  2EEB               	goto	L3
  2791  06D4                     l941:	
  2792                           
  2793                           ;main.c: 171: else shiftRegister (DATA[x],DATA[y],8);
  2794  06D4  0875               	movf	MIPI@y,w
  2795  06D5  3E00               	addlw	low (_DATA| (0+32768))
  2796  06D6  0084               	movwf	4
  2797  06D7  3088               	movlw	high (_DATA| (0+32768))
  2798  06D8  1803               	skipnc
  2799  06D9  3E01               	addlw	1
  2800  06DA  0085               	movwf	5
  2801  06DB  0800               	movf	0,w	;code access
  2802  06DC  00F6               	movwf	??_MIPI
  2803  06DD  0876               	movf	??_MIPI,w
  2804  06DE  00F0               	movwf	shiftRegister@Dummy2
  2805  06DF  3008               	movlw	8
  2806  06E0  00F7               	movwf	??_MIPI+1
  2807  06E1  0877               	movf	??_MIPI+1,w
  2808  06E2  00F1               	movwf	shiftRegister@y
  2809  06E3  0878               	movf	MIPI@x,w
  2810  06E4  3E00               	addlw	low (_DATA| (0+32768))
  2811  06E5  0084               	movwf	4
  2812  06E6  3088               	movlw	high (_DATA| (0+32768))
  2813  06E7  1803               	skipnc
  2814  06E8  3E01               	addlw	1
  2815  06E9  0085               	movwf	5
  2816  06EA  0800               	movf	0,w	;code access
  2817  06EB                     L3:	
  2818  06EB  3186  2624  3186   	fcall	_shiftRegister
  2819                           
  2820                           ;main.c: 172: shiftRegister (parity1,parity2,2);
  2821  06EE  0020               	movlb	0	; select bank0
  2822  06EF  0822               	movf	_parity2,w
  2823  06F0  00F6               	movwf	??_MIPI
  2824  06F1  0876               	movf	??_MIPI,w
  2825  06F2  00F0               	movwf	shiftRegister@Dummy2
  2826  06F3  3002               	movlw	2
  2827  06F4  00F7               	movwf	??_MIPI+1
  2828  06F5  0877               	movf	??_MIPI+1,w
  2829  06F6  00F1               	movwf	shiftRegister@y
  2830  06F7  0821               	movf	_parity1,w
  2831  06F8  3186  2624  3186   	fcall	_shiftRegister
  2832  06FB  0000               	nop	;# 
  2833  06FC  0000               	nop	;# 
  2834  06FD  3001               	movlw	1
  2835  06FE  00F6               	movwf	??_MIPI
  2836  06FF  0876               	movf	??_MIPI,w
  2837  0700  07FA               	addwf	MIPI@j,f
  2838  0701  3002               	movlw	2
  2839  0702  027A               	subwf	MIPI@j,w
  2840  0703  1C03               	skipc
  2841  0704  2E73               	goto	l122
  2842  0705                     l949:	
  2843  0705  3001               	movlw	1
  2844  0706  00F6               	movwf	??_MIPI
  2845  0707  0876               	movf	??_MIPI,w
  2846  0708  07F9               	addwf	MIPI@i,f
  2847  0709  2E6A               	goto	L4
  2848  070A                     __end_of_MIPI:	
  2849                           
  2850                           	psect	text6
  2851  0624                     __ptext6:	
  2852 ;; *************** function _shiftRegister *****************
  2853 ;; Defined at:
  2854 ;;		line 132 in file "main.c"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;  Dummy1          1    wreg     unsigned char 
  2857 ;;  Dummy2          1    0[COMMON] unsigned char 
  2858 ;;  y               1    1[COMMON] unsigned char 
  2859 ;; Auto vars:     Size  Location     Type
  2860 ;;  Dummy1          1    4[COMMON] unsigned char 
  2861 ;;  m               1    3[COMMON] unsigned char 
  2862 ;; Return value:  Size  Location     Type
  2863 ;;		None               void
  2864 ;; Registers used:
  2865 ;;		wreg, status,2, status,0
  2866 ;; Tracked objects:
  2867 ;;		On entry : 0/0
  2868 ;;		On exit  : 0/0
  2869 ;;		Unchanged: 0/0
  2870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2871 ;;      Params:         2       0       0       0       0       0       0       0
  2872 ;;      Locals:         2       0       0       0       0       0       0       0
  2873 ;;      Temps:          1       0       0       0       0       0       0       0
  2874 ;;      Totals:         5       0       0       0       0       0       0       0
  2875 ;;Total ram usage:        5 bytes
  2876 ;; Hardware stack levels used:    1
  2877 ;; This function calls:
  2878 ;;		Nothing
  2879 ;; This function is called by:
  2880 ;;		_MIPI
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           
  2885                           ;psect for function _shiftRegister
  2886  0624                     _shiftRegister:	
  2887                           
  2888                           ;incstack = 0
  2889                           ; Regs used in _shiftRegister: [wreg+status,2+status,0]
  2890                           ;shiftRegister@Dummy1 stored from wreg
  2891  0624  00F4               	movwf	shiftRegister@Dummy1
  2892                           
  2893                           ;main.c: 133: for (uint8_t m=0; m<y; m++){
  2894  0625  01F3               	clrf	shiftRegister@m
  2895  0626                     l889:	
  2896  0626  0871               	movf	shiftRegister@y,w
  2897  0627  0273               	subwf	shiftRegister@m,w
  2898  0628  1803               	btfsc	3,0
  2899  0629  0008               	return
  2900                           
  2901                           ;main.c: 134: do { LATB6 = 1; } while(0);
  2902  062A  0022               	movlb	2	; select bank2
  2903  062B  170D               	bsf	13,6	;volatile
  2904                           
  2905                           ;main.c: 135: LATB7 = Dummy1 & 0x01;
  2906  062C  1C74               	btfss	shiftRegister@Dummy1,0
  2907  062D  2E31               	goto	u560
  2908  062E  0022               	movlb	2	; select bank2
  2909  062F  178D               	bsf	13,7	;volatile
  2910  0630  2E33               	goto	l879
  2911  0631                     u560:	
  2912  0631  0022               	movlb	2	; select bank2
  2913  0632  138D               	bcf	13,7	;volatile
  2914  0633                     l879:	
  2915                           
  2916                           ;main.c: 136: LATB5 = Dummy2 & 0x01;
  2917  0633  1C70               	btfss	shiftRegister@Dummy2,0
  2918  0634  2E38               	goto	u580
  2919  0635  0022               	movlb	2	; select bank2
  2920  0636  168D               	bsf	13,5	;volatile
  2921  0637  2E3A               	goto	u594
  2922  0638                     u580:	
  2923  0638  0022               	movlb	2	; select bank2
  2924  0639  128D               	bcf	13,5	;volatile
  2925  063A                     u594:	
  2926  063A  0000               	nop	;# 
  2927                           
  2928                           ;main.c: 138: do { LATB6 = 0; } while(0);
  2929  063B  0022               	movlb	2	; select bank2
  2930  063C  130D               	bcf	13,6	;volatile
  2931                           
  2932                           ;main.c: 139: Dummy1 = Dummy1 >> 1;
  2933  063D  3674               	lsrf	shiftRegister@Dummy1,w
  2934  063E  00F2               	movwf	??_shiftRegister
  2935  063F  0872               	movf	??_shiftRegister,w
  2936  0640  00F4               	movwf	shiftRegister@Dummy1
  2937                           
  2938                           ;main.c: 140: Dummy2 = Dummy2 >> 1;
  2939  0641  3670               	lsrf	shiftRegister@Dummy2,w
  2940  0642  00F2               	movwf	??_shiftRegister
  2941  0643  0872               	movf	??_shiftRegister,w
  2942  0644  00F0               	movwf	shiftRegister@Dummy2
  2943  0645  3001               	movlw	1
  2944  0646  00F2               	movwf	??_shiftRegister
  2945  0647  0872               	movf	??_shiftRegister,w
  2946  0648  07F3               	addwf	shiftRegister@m,f
  2947  0649  2E26               	goto	l889
  2948  064A                     __end_of_shiftRegister:	
  2949                           
  2950                           	psect	text7
  2951  05EC                     __ptext7:	
  2952 ;; *************** function _paritycheck *****************
  2953 ;; Defined at:
  2954 ;;		line 144 in file "main.c"
  2955 ;; Parameters:    Size  Location     Type
  2956 ;;  Dummy           1    wreg     unsigned char 
  2957 ;; Auto vars:     Size  Location     Type
  2958 ;;  Dummy           1    2[COMMON] unsigned char 
  2959 ;;  parity          1    1[COMMON] unsigned char 
  2960 ;; Return value:  Size  Location     Type
  2961 ;;                  1    wreg      unsigned char 
  2962 ;; Registers used:
  2963 ;;		wreg, status,2, status,0
  2964 ;; Tracked objects:
  2965 ;;		On entry : 0/0
  2966 ;;		On exit  : 0/0
  2967 ;;		Unchanged: 0/0
  2968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2969 ;;      Params:         0       0       0       0       0       0       0       0
  2970 ;;      Locals:         2       0       0       0       0       0       0       0
  2971 ;;      Temps:          1       0       0       0       0       0       0       0
  2972 ;;      Totals:         3       0       0       0       0       0       0       0
  2973 ;;Total ram usage:        3 bytes
  2974 ;; Hardware stack levels used:    1
  2975 ;; This function calls:
  2976 ;;		Nothing
  2977 ;; This function is called by:
  2978 ;;		_MIPI
  2979 ;; This function uses a non-reentrant model
  2980 ;;
  2981                           
  2982                           
  2983                           ;psect for function _paritycheck
  2984  05EC                     _paritycheck:	
  2985                           
  2986                           ;incstack = 0
  2987                           ; Regs used in _paritycheck: [wreg+status,2+status,0]
  2988                           ;paritycheck@Dummy stored from wreg
  2989  05EC  00F2               	movwf	paritycheck@Dummy
  2990                           
  2991                           ;main.c: 145: bool parity = 0;
  2992  05ED  01F1               	clrf	paritycheck@parity
  2993  05EE                     l110:	
  2994                           ;main.c: 146: while (Dummy)
  2995                           
  2996  05EE  0872               	movf	paritycheck@Dummy,w
  2997  05EF  1903               	btfsc	3,2
  2998  05F0  2E01               	goto	l895
  2999                           
  3000                           ;main.c: 147: {
  3001                           ;main.c: 148: parity = !parity;
  3002  05F1  0871               	movf	paritycheck@parity,w
  3003  05F2  1D03               	btfss	3,2
  3004  05F3  2DF6               	goto	u610
  3005  05F4  3001               	movlw	1
  3006  05F5  2DF7               	goto	u620
  3007  05F6                     u610:	
  3008  05F6  3000               	movlw	0
  3009  05F7                     u620:	
  3010  05F7  00F0               	movwf	??_paritycheck
  3011  05F8  0870               	movf	??_paritycheck,w
  3012  05F9  00F1               	movwf	paritycheck@parity
  3013                           
  3014                           ;main.c: 149: Dummy = Dummy & (Dummy - 1);
  3015  05FA  0872               	movf	paritycheck@Dummy,w
  3016  05FB  3EFF               	addlw	255
  3017  05FC  0572               	andwf	paritycheck@Dummy,w
  3018  05FD  00F0               	movwf	??_paritycheck
  3019  05FE  0870               	movf	??_paritycheck,w
  3020  05FF  00F2               	movwf	paritycheck@Dummy
  3021  0600  2DEE               	goto	l110
  3022  0601                     l895:	
  3023                           
  3024                           ;main.c: 150: }
  3025                           ;main.c: 151: if (parity) return 0;
  3026  0601  0871               	movf	paritycheck@parity,w
  3027  0602  1903               	btfsc	3,2
  3028  0603  2E06               	goto	l903
  3029  0604  3000               	movlw	0
  3030  0605  0008               	return
  3031  0606                     l903:	
  3032                           
  3033                           ;main.c: 152: else return 1;
  3034  0606  3001               	movlw	1
  3035  0607  0008               	return
  3036  0608                     __end_of_paritycheck:	
  3037                           
  3038                           	psect	text8
  3039  05D3                     __ptext8:	
  3040 ;; *************** function _DAC1_SetOutput *****************
  3041 ;; Defined at:
  3042 ;;		line 65 in file "mcc_generated_files/dac1.c"
  3043 ;; Parameters:    Size  Location     Type
  3044 ;;  inputData       1    wreg     unsigned char 
  3045 ;; Auto vars:     Size  Location     Type
  3046 ;;  inputData       1    0[COMMON] unsigned char 
  3047 ;; Return value:  Size  Location     Type
  3048 ;;		None               void
  3049 ;; Registers used:
  3050 ;;		wreg
  3051 ;; Tracked objects:
  3052 ;;		On entry : 0/0
  3053 ;;		On exit  : 0/0
  3054 ;;		Unchanged: 0/0
  3055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3056 ;;      Params:         0       0       0       0       0       0       0       0
  3057 ;;      Locals:         1       0       0       0       0       0       0       0
  3058 ;;      Temps:          0       0       0       0       0       0       0       0
  3059 ;;      Totals:         1       0       0       0       0       0       0       0
  3060 ;;Total ram usage:        1 bytes
  3061 ;; Hardware stack levels used:    1
  3062 ;; This function calls:
  3063 ;;		Nothing
  3064 ;; This function is called by:
  3065 ;;		_main
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           
  3070                           ;psect for function _DAC1_SetOutput
  3071  05D3                     _DAC1_SetOutput:	
  3072                           
  3073                           ;incstack = 0
  3074                           ; Regs used in _DAC1_SetOutput: [wreg]
  3075                           ;DAC1_SetOutput@inputData stored from wreg
  3076  05D3  00F0               	movwf	DAC1_SetOutput@inputData
  3077                           
  3078                           ;dac1.c: 66: DAC1CON1 = inputData;
  3079  05D4  0870               	movf	DAC1_SetOutput@inputData,w
  3080  05D5  0022               	movlb	2	; select bank2
  3081  05D6  0099               	movwf	25	;volatile
  3082  05D7  0008               	return
  3083  05D8                     __end_of_DAC1_SetOutput:	
  3084  007E                     btemp	set	126	;btemp
  3085  007E                     wtemp	set	126
  3086  007E                     wtemp0	set	126
  3087  0080                     wtemp1	set	128
  3088  0082                     wtemp2	set	130
  3089  0084                     wtemp3	set	132
  3090  0086                     wtemp4	set	134
  3091  0088                     wtemp5	set	136
  3092  007F                     wtemp6	set	127
  3093  007E                     ttemp	set	126
  3094  007E                     ttemp0	set	126
  3095  0081                     ttemp1	set	129
  3096  0084                     ttemp2	set	132
  3097  0087                     ttemp3	set	135
  3098  007F                     ttemp4	set	127
  3099  007E                     ltemp	set	126
  3100  007E                     ltemp0	set	126
  3101  0082                     ltemp1	set	130
  3102  0086                     ltemp2	set	134
  3103  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    73
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80      0       3
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_MIPI
    _MIPI->_shiftRegister

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1314
                                             11 COMMON     1     1      0
                    _DAC1_Initialize
                     _DAC1_SetOutput
                               _MIPI
             _PIN_MANAGER_Initialize
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _DAC1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DAC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MIPI                                                 6     5      1    1292
                                              5 COMMON     6     5      1
                        _paritycheck
                      _shiftRegister
 ---------------------------------------------------------------------------------
 (2) _shiftRegister                                        5     3      2     824
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) _paritycheck                                          3     3      0     113
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _DAC1_SetOutput                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DAC1_Initialize
   _DAC1_SetOutput
   _MIPI
     _paritycheck
     _shiftRegister
   _PIN_MANAGER_Initialize
   _SYSTEM_Initialize
     _DAC1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      11       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       3       6        3.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      11      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Dec 17 15:28:46 2015

                    __CFG_CP$OFF 0000                      __CFG_LVP$ON 0000                  _DAC1_Initialize 05D8  
                            l110 05EE                              l122 0673                              l202 07E4  
                            l207 07E6                              l209 07E7                              l172 07A0  
                            l174 07A2                              l167 079D                              l177 07A4  
                            l903 0606                              l941 06D4                              l935 06C3  
                            l971 0734                              l963 071C                              l949 0705  
                            l981 0750                              l895 0601                              l879 0633  
                            l967 0728                              l889 0626                              u610 05F6  
                            u620 05F7                              u560 0631                              u580 0638  
                            u594 063A                     __CFG_BORV$LO 0000                   _DAC1_SetOutput 05D3  
                   __CFG_ZCD$OFF 0000                             l1021 07B2                             l1041 07D4  
                           l1017 07A7                             l1045 07DC                             l1037 07CC  
                           l1049 07E8                             _DATA 0800                             _LATA 010C  
                           _LATB 010D                             _LATC 010E                             _MIPI 064A  
                           _WPUB 020D                             _WPUC 020E                     __CFG_WRT$OFF 0000  
                           _main 070A                             fsr0h 0005                             fsr0l 0004  
                           indf0 0000                             btemp 007E                             ltemp 007E  
                           start 0002                             ttemp 007E                             wtemp 007E  
                          ?_MIPI 0075                            MIPI@i 0079                            MIPI@j 007A  
                          MIPI@x 0078                            MIPI@y 0075   __size_of_OSCILLATOR_Initialize 0006  
  __end_of_OSCILLATOR_Initialize 05E3                            ?_main 0070                    __CFG_WDTE$OFF 0000  
                          _LATA1 0861                            _LATA2 0862                            _LATA4 0864  
                          _LATB4 086C                            _LATB5 086D                            _LATB6 086E  
                          _LATB7 086F           __end_of_DAC1_SetOutput 05D8                            _PORTC 000E  
                          _TRISA 008C                            _TRISB 008D                            _TRISC 008E  
               __end_of_SLAVEADD 0849                            _Byte1 0020                            _Byte2 007C  
                          _Byte3 007D                    __CFG_PWRTE$ON 0000                   __CFG_BOREN$OFF 0000  
                          ltemp0 007E                            ltemp1 0082                            ltemp2 0086  
                          ltemp3 0080                            ttemp0 007E                            ttemp1 0081  
                          ttemp2 0084                            ttemp3 0087                            ttemp4 007F  
                          status 0003                            wtemp0 007E                            wtemp1 0080  
                          wtemp2 0082                            wtemp3 0084                            wtemp4 0086  
                          wtemp5 0088                            wtemp6 007F                     __end_of_DATA 0841  
                   __end_of_MIPI 070A                   __CFG_MCLRE$OFF 0000                  __initialization 07F8  
                   __end_of_main 07F8          __end_of_DAC1_Initialize 05DD                     ?_paritycheck 0070  
                         ??_MIPI 0076                   __CFG_LPBOR$OFF 0000                           ??_main 007B  
                ?_DAC1_SetOutput 0070                   __CFG_PLLEN$OFF 0000                           _ANSELA 018C  
                         _ANSELB 018D                           _ANSELC 018E                           _REGADD 0845  
                         _OSCCON 0099          DAC1_SetOutput@inputData 0070                   __CFG_STVREN$ON 0000  
              __end_of_DacOutput 0845            __end_of_shiftRegister 064A                _SYSTEM_Initialize 05E3  
        __end_of__initialization 07FD               ?_SYSTEM_Initialize 0070                   __pcstackCOMMON 0070  
            ??_SYSTEM_Initialize 0070                 ?_DAC1_Initialize 0070                   _OPTION_REGbits 0095  
      __end_of_SYSTEM_Initialize 05EC                       __pbssBANK0 0020                 paritycheck@Dummy 0072  
                 shiftRegister@m 0073                   shiftRegister@y 0071                       __pmaintext 070A  
                __CFG_PPS1WAY$ON 0000             __size_of_paritycheck 001C                  __CFG_WDTCCS$SWC 0000  
                        _OSCSTAT 009A                          _OSCTUNE 0098              shiftRegister@Dummy1 0074  
            shiftRegister@Dummy2 0070                 ??_DAC1_SetOutput 0070                          __ptext1 05E3  
                        __ptext2 0608                          __ptext3 05DD                          __ptext4 05D8  
                        __ptext5 064A                          __ptext6 0624                          __ptext7 05EC  
                        __ptext8 05D3            _OSCILLATOR_Initialize 05DD                          _parity1 0021  
                        _parity2 0022         ??_PIN_MANAGER_Initialize 0070       __size_of_SYSTEM_Initialize 0009  
           end_of_initialization 07FD                     __pstringtext 0800                 __CFG_FOSC$INTOSC 0000  
                      _DacOutput 0841                   __end_of_REGADD 0847           ?_OSCILLATOR_Initialize 0070  
            start_initialization 07F8  __size_of_PIN_MANAGER_Initialize 001C           __size_of_shiftRegister 0026  
       __size_of_DAC1_Initialize 0005                      __pbssCOMMON 007C                        ___latbits 0001  
              paritycheck@parity 0071           _PIN_MANAGER_Initialize 0608                    ??_paritycheck 0070  
                       _DAC1CON0 0118                         _DAC1CON1 0119                    _shiftRegister 0624  
                       _SLAVEADD 0847             __CFG_WDTCPS$WDTCPS1F 0000                   ?_shiftRegister 0070  
            __end_of_paritycheck 0608                ??_DAC1_Initialize 0070          ??_OSCILLATOR_Initialize 0070  
        __size_of_DAC1_SetOutput 0005                    __size_of_MIPI 00C0                    __size_of_main 00EE  
           __CFG_WDTCWS$WDTCWSSW 0000                      _paritycheck 05EC                  ??_shiftRegister 0072  
        ?_PIN_MANAGER_Initialize 0070                __CFG_CLKOUTEN$OFF 0000   __end_of_PIN_MANAGER_Initialize 0624  
