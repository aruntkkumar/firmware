

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Jan 14 10:34:35 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16LF1618
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	dabs	1,0x7E,2
    21  0000                     	;# 
    22  0001                     	;# 
    23  0002                     	;# 
    24  0003                     	;# 
    25  0004                     	;# 
    26  0005                     	;# 
    27  0006                     	;# 
    28  0007                     	;# 
    29  0008                     	;# 
    30  0009                     	;# 
    31  000A                     	;# 
    32  000B                     	;# 
    33  000C                     	;# 
    34  000D                     	;# 
    35  000E                     	;# 
    36  0010                     	;# 
    37  0011                     	;# 
    38  0012                     	;# 
    39  0013                     	;# 
    40  0014                     	;# 
    41  0015                     	;# 
    42  0016                     	;# 
    43  0016                     	;# 
    44  0017                     	;# 
    45  0018                     	;# 
    46  0019                     	;# 
    47  001A                     	;# 
    48  001A                     	;# 
    49  001B                     	;# 
    50  001B                     	;# 
    51  001C                     	;# 
    52  001D                     	;# 
    53  001E                     	;# 
    54  001F                     	;# 
    55  008C                     	;# 
    56  008D                     	;# 
    57  008E                     	;# 
    58  0090                     	;# 
    59  0091                     	;# 
    60  0092                     	;# 
    61  0093                     	;# 
    62  0094                     	;# 
    63  0095                     	;# 
    64  0096                     	;# 
    65  0098                     	;# 
    66  0099                     	;# 
    67  009A                     	;# 
    68  009B                     	;# 
    69  009B                     	;# 
    70  009C                     	;# 
    71  009D                     	;# 
    72  009E                     	;# 
    73  009F                     	;# 
    74  010C                     	;# 
    75  010D                     	;# 
    76  010E                     	;# 
    77  0111                     	;# 
    78  0112                     	;# 
    79  0113                     	;# 
    80  0114                     	;# 
    81  0115                     	;# 
    82  0116                     	;# 
    83  0117                     	;# 
    84  0118                     	;# 
    85  0119                     	;# 
    86  011C                     	;# 
    87  018C                     	;# 
    88  018D                     	;# 
    89  018E                     	;# 
    90  0191                     	;# 
    91  0191                     	;# 
    92  0192                     	;# 
    93  0193                     	;# 
    94  0193                     	;# 
    95  0194                     	;# 
    96  0195                     	;# 
    97  0196                     	;# 
    98  0199                     	;# 
    99  0199                     	;# 
   100  0199                     	;# 
   101  019A                     	;# 
   102  019A                     	;# 
   103  019A                     	;# 
   104  019B                     	;# 
   105  019B                     	;# 
   106  019B                     	;# 
   107  019B                     	;# 
   108  019B                     	;# 
   109  019C                     	;# 
   110  019C                     	;# 
   111  019C                     	;# 
   112  019D                     	;# 
   113  019D                     	;# 
   114  019D                     	;# 
   115  019E                     	;# 
   116  019E                     	;# 
   117  019E                     	;# 
   118  019F                     	;# 
   119  019F                     	;# 
   120  019F                     	;# 
   121  019F                     	;# 
   122  019F                     	;# 
   123  020C                     	;# 
   124  020D                     	;# 
   125  020E                     	;# 
   126  0211                     	;# 
   127  0211                     	;# 
   128  0212                     	;# 
   129  0212                     	;# 
   130  0213                     	;# 
   131  0213                     	;# 
   132  0214                     	;# 
   133  0214                     	;# 
   134  0215                     	;# 
   135  0215                     	;# 
   136  0215                     	;# 
   137  0215                     	;# 
   138  0216                     	;# 
   139  0216                     	;# 
   140  0217                     	;# 
   141  0217                     	;# 
   142  028C                     	;# 
   143  028D                     	;# 
   144  028E                     	;# 
   145  0291                     	;# 
   146  0291                     	;# 
   147  0292                     	;# 
   148  0293                     	;# 
   149  0294                     	;# 
   150  0298                     	;# 
   151  0298                     	;# 
   152  0299                     	;# 
   153  029A                     	;# 
   154  029B                     	;# 
   155  029E                     	;# 
   156  030C                     	;# 
   157  030D                     	;# 
   158  030E                     	;# 
   159  038C                     	;# 
   160  038D                     	;# 
   161  038E                     	;# 
   162  0391                     	;# 
   163  0392                     	;# 
   164  0393                     	;# 
   165  0394                     	;# 
   166  0395                     	;# 
   167  0396                     	;# 
   168  0397                     	;# 
   169  0398                     	;# 
   170  0399                     	;# 
   171  040E                     	;# 
   172  0413                     	;# 
   173  0413                     	;# 
   174  0414                     	;# 
   175  0414                     	;# 
   176  0415                     	;# 
   177  0416                     	;# 
   178  0417                     	;# 
   179  0418                     	;# 
   180  041A                     	;# 
   181  041A                     	;# 
   182  041B                     	;# 
   183  041B                     	;# 
   184  041C                     	;# 
   185  041D                     	;# 
   186  041E                     	;# 
   187  041F                     	;# 
   188  0493                     	;# 
   189  0494                     	;# 
   190  0495                     	;# 
   191  0496                     	;# 
   192  049A                     	;# 
   193  049B                     	;# 
   194  049C                     	;# 
   195  049D                     	;# 
   196  058C                     	;# 
   197  058C                     	;# 
   198  058D                     	;# 
   199  058E                     	;# 
   200  058E                     	;# 
   201  058F                     	;# 
   202  0590                     	;# 
   203  0590                     	;# 
   204  0591                     	;# 
   205  0592                     	;# 
   206  0592                     	;# 
   207  0593                     	;# 
   208  0594                     	;# 
   209  0594                     	;# 
   210  0595                     	;# 
   211  0596                     	;# 
   212  0596                     	;# 
   213  0597                     	;# 
   214  0598                     	;# 
   215  0599                     	;# 
   216  059A                     	;# 
   217  059B                     	;# 
   218  059B                     	;# 
   219  059C                     	;# 
   220  059D                     	;# 
   221  060C                     	;# 
   222  060C                     	;# 
   223  060D                     	;# 
   224  060E                     	;# 
   225  060F                     	;# 
   226  060F                     	;# 
   227  0610                     	;# 
   228  0611                     	;# 
   229  0612                     	;# 
   230  0613                     	;# 
   231  0614                     	;# 
   232  0617                     	;# 
   233  0618                     	;# 
   234  0619                     	;# 
   235  061A                     	;# 
   236  061B                     	;# 
   237  061C                     	;# 
   238  0691                     	;# 
   239  0692                     	;# 
   240  0693                     	;# 
   241  0694                     	;# 
   242  0695                     	;# 
   243  0696                     	;# 
   244  0697                     	;# 
   245  0699                     	;# 
   246  069A                     	;# 
   247  0711                     	;# 
   248  0712                     	;# 
   249  0713                     	;# 
   250  0714                     	;# 
   251  0715                     	;# 
   252  0718                     	;# 
   253  0718                     	;# 
   254  0719                     	;# 
   255  071A                     	;# 
   256  071A                     	;# 
   257  071B                     	;# 
   258  071C                     	;# 
   259  071D                     	;# 
   260  0791                     	;# 
   261  0791                     	;# 
   262  0792                     	;# 
   263  0793                     	;# 
   264  0793                     	;# 
   265  0794                     	;# 
   266  0795                     	;# 
   267  0795                     	;# 
   268  0796                     	;# 
   269  0797                     	;# 
   270  0797                     	;# 
   271  0798                     	;# 
   272  0799                     	;# 
   273  079A                     	;# 
   274  080C                     	;# 
   275  080C                     	;# 
   276  080D                     	;# 
   277  080E                     	;# 
   278  080E                     	;# 
   279  080F                     	;# 
   280  0810                     	;# 
   281  0810                     	;# 
   282  0811                     	;# 
   283  0812                     	;# 
   284  0812                     	;# 
   285  0813                     	;# 
   286  0814                     	;# 
   287  0815                     	;# 
   288  0816                     	;# 
   289  0817                     	;# 
   290  0818                     	;# 
   291  0819                     	;# 
   292  081A                     	;# 
   293  081A                     	;# 
   294  081B                     	;# 
   295  081C                     	;# 
   296  081C                     	;# 
   297  081D                     	;# 
   298  088C                     	;# 
   299  088D                     	;# 
   300  088E                     	;# 
   301  088F                     	;# 
   302  088F                     	;# 
   303  0890                     	;# 
   304  0891                     	;# 
   305  0892                     	;# 
   306  0893                     	;# 
   307  0893                     	;# 
   308  0894                     	;# 
   309  0895                     	;# 
   310  0896                     	;# 
   311  0897                     	;# 
   312  0897                     	;# 
   313  0898                     	;# 
   314  0899                     	;# 
   315  0D8C                     	;# 
   316  0D8C                     	;# 
   317  0D8D                     	;# 
   318  0D8E                     	;# 
   319  0D8F                     	;# 
   320  0D8F                     	;# 
   321  0D90                     	;# 
   322  0D91                     	;# 
   323  0D92                     	;# 
   324  0D92                     	;# 
   325  0D93                     	;# 
   326  0D94                     	;# 
   327  0D95                     	;# 
   328  0D95                     	;# 
   329  0D96                     	;# 
   330  0D97                     	;# 
   331  0D98                     	;# 
   332  0D99                     	;# 
   333  0D9A                     	;# 
   334  0D9B                     	;# 
   335  0D9C                     	;# 
   336  0D9D                     	;# 
   337  0D9E                     	;# 
   338  0D9E                     	;# 
   339  0D9F                     	;# 
   340  0DA0                     	;# 
   341  0DA1                     	;# 
   342  0DA1                     	;# 
   343  0DA2                     	;# 
   344  0DA3                     	;# 
   345  0DA4                     	;# 
   346  0DA4                     	;# 
   347  0DA5                     	;# 
   348  0DA6                     	;# 
   349  0DA7                     	;# 
   350  0DA7                     	;# 
   351  0DA8                     	;# 
   352  0DA9                     	;# 
   353  0DAA                     	;# 
   354  0DAB                     	;# 
   355  0DAC                     	;# 
   356  0DAD                     	;# 
   357  0DAE                     	;# 
   358  0DAF                     	;# 
   359  0E0F                     	;# 
   360  0E10                     	;# 
   361  0E11                     	;# 
   362  0E12                     	;# 
   363  0E13                     	;# 
   364  0E14                     	;# 
   365  0E15                     	;# 
   366  0E16                     	;# 
   367  0E17                     	;# 
   368  0E18                     	;# 
   369  0E19                     	;# 
   370  0E1A                     	;# 
   371  0E1B                     	;# 
   372  0E1C                     	;# 
   373  0E1D                     	;# 
   374  0E1E                     	;# 
   375  0E1F                     	;# 
   376  0E20                     	;# 
   377  0E21                     	;# 
   378  0E22                     	;# 
   379  0E23                     	;# 
   380  0E24                     	;# 
   381  0E25                     	;# 
   382  0E26                     	;# 
   383  0E27                     	;# 
   384  0E28                     	;# 
   385  0E29                     	;# 
   386  0E2A                     	;# 
   387  0E2B                     	;# 
   388  0E2C                     	;# 
   389  0E2D                     	;# 
   390  0E2E                     	;# 
   391  0E90                     	;# 
   392  0E91                     	;# 
   393  0E92                     	;# 
   394  0E94                     	;# 
   395  0E95                     	;# 
   396  0E9C                     	;# 
   397  0E9D                     	;# 
   398  0E9E                     	;# 
   399  0E9F                     	;# 
   400  0EA0                     	;# 
   401  0EA1                     	;# 
   402  0EA2                     	;# 
   403  0EA3                     	;# 
   404  0EA4                     	;# 
   405  0EA5                     	;# 
   406  0EA6                     	;# 
   407  0EA7                     	;# 
   408  0F0F                     	;# 
   409  0F10                     	;# 
   410  0F11                     	;# 
   411  0F12                     	;# 
   412  0F13                     	;# 
   413  0F14                     	;# 
   414  0F15                     	;# 
   415  0F16                     	;# 
   416  0F17                     	;# 
   417  0F18                     	;# 
   418  0F19                     	;# 
   419  0F1A                     	;# 
   420  0F1B                     	;# 
   421  0F1C                     	;# 
   422  0F1D                     	;# 
   423  0F1E                     	;# 
   424  0F1F                     	;# 
   425  0F20                     	;# 
   426  0F21                     	;# 
   427  0F22                     	;# 
   428  0F23                     	;# 
   429  0FE4                     	;# 
   430  0FE5                     	;# 
   431  0FE6                     	;# 
   432  0FE7                     	;# 
   433  0FE8                     	;# 
   434  0FE9                     	;# 
   435  0FEA                     	;# 
   436  0FEB                     	;# 
   437  0FED                     	;# 
   438  0FEE                     	;# 
   439  0FEF                     	;# 
   440  0000                     	;# 
   441  0001                     	;# 
   442  0002                     	;# 
   443  0003                     	;# 
   444  0004                     	;# 
   445  0005                     	;# 
   446  0006                     	;# 
   447  0007                     	;# 
   448  0008                     	;# 
   449  0009                     	;# 
   450  000A                     	;# 
   451  000B                     	;# 
   452  000C                     	;# 
   453  000D                     	;# 
   454  000E                     	;# 
   455  0010                     	;# 
   456  0011                     	;# 
   457  0012                     	;# 
   458  0013                     	;# 
   459  0014                     	;# 
   460  0015                     	;# 
   461  0016                     	;# 
   462  0016                     	;# 
   463  0017                     	;# 
   464  0018                     	;# 
   465  0019                     	;# 
   466  001A                     	;# 
   467  001A                     	;# 
   468  001B                     	;# 
   469  001B                     	;# 
   470  001C                     	;# 
   471  001D                     	;# 
   472  001E                     	;# 
   473  001F                     	;# 
   474  008C                     	;# 
   475  008D                     	;# 
   476  008E                     	;# 
   477  0090                     	;# 
   478  0091                     	;# 
   479  0092                     	;# 
   480  0093                     	;# 
   481  0094                     	;# 
   482  0095                     	;# 
   483  0096                     	;# 
   484  0098                     	;# 
   485  0099                     	;# 
   486  009A                     	;# 
   487  009B                     	;# 
   488  009B                     	;# 
   489  009C                     	;# 
   490  009D                     	;# 
   491  009E                     	;# 
   492  009F                     	;# 
   493  010C                     	;# 
   494  010D                     	;# 
   495  010E                     	;# 
   496  0111                     	;# 
   497  0112                     	;# 
   498  0113                     	;# 
   499  0114                     	;# 
   500  0115                     	;# 
   501  0116                     	;# 
   502  0117                     	;# 
   503  0118                     	;# 
   504  0119                     	;# 
   505  011C                     	;# 
   506  018C                     	;# 
   507  018D                     	;# 
   508  018E                     	;# 
   509  0191                     	;# 
   510  0191                     	;# 
   511  0192                     	;# 
   512  0193                     	;# 
   513  0193                     	;# 
   514  0194                     	;# 
   515  0195                     	;# 
   516  0196                     	;# 
   517  0199                     	;# 
   518  0199                     	;# 
   519  0199                     	;# 
   520  019A                     	;# 
   521  019A                     	;# 
   522  019A                     	;# 
   523  019B                     	;# 
   524  019B                     	;# 
   525  019B                     	;# 
   526  019B                     	;# 
   527  019B                     	;# 
   528  019C                     	;# 
   529  019C                     	;# 
   530  019C                     	;# 
   531  019D                     	;# 
   532  019D                     	;# 
   533  019D                     	;# 
   534  019E                     	;# 
   535  019E                     	;# 
   536  019E                     	;# 
   537  019F                     	;# 
   538  019F                     	;# 
   539  019F                     	;# 
   540  019F                     	;# 
   541  019F                     	;# 
   542  020C                     	;# 
   543  020D                     	;# 
   544  020E                     	;# 
   545  0211                     	;# 
   546  0211                     	;# 
   547  0212                     	;# 
   548  0212                     	;# 
   549  0213                     	;# 
   550  0213                     	;# 
   551  0214                     	;# 
   552  0214                     	;# 
   553  0215                     	;# 
   554  0215                     	;# 
   555  0215                     	;# 
   556  0215                     	;# 
   557  0216                     	;# 
   558  0216                     	;# 
   559  0217                     	;# 
   560  0217                     	;# 
   561  028C                     	;# 
   562  028D                     	;# 
   563  028E                     	;# 
   564  0291                     	;# 
   565  0291                     	;# 
   566  0292                     	;# 
   567  0293                     	;# 
   568  0294                     	;# 
   569  0298                     	;# 
   570  0298                     	;# 
   571  0299                     	;# 
   572  029A                     	;# 
   573  029B                     	;# 
   574  029E                     	;# 
   575  030C                     	;# 
   576  030D                     	;# 
   577  030E                     	;# 
   578  038C                     	;# 
   579  038D                     	;# 
   580  038E                     	;# 
   581  0391                     	;# 
   582  0392                     	;# 
   583  0393                     	;# 
   584  0394                     	;# 
   585  0395                     	;# 
   586  0396                     	;# 
   587  0397                     	;# 
   588  0398                     	;# 
   589  0399                     	;# 
   590  040E                     	;# 
   591  0413                     	;# 
   592  0413                     	;# 
   593  0414                     	;# 
   594  0414                     	;# 
   595  0415                     	;# 
   596  0416                     	;# 
   597  0417                     	;# 
   598  0418                     	;# 
   599  041A                     	;# 
   600  041A                     	;# 
   601  041B                     	;# 
   602  041B                     	;# 
   603  041C                     	;# 
   604  041D                     	;# 
   605  041E                     	;# 
   606  041F                     	;# 
   607  0493                     	;# 
   608  0494                     	;# 
   609  0495                     	;# 
   610  0496                     	;# 
   611  049A                     	;# 
   612  049B                     	;# 
   613  049C                     	;# 
   614  049D                     	;# 
   615  058C                     	;# 
   616  058C                     	;# 
   617  058D                     	;# 
   618  058E                     	;# 
   619  058E                     	;# 
   620  058F                     	;# 
   621  0590                     	;# 
   622  0590                     	;# 
   623  0591                     	;# 
   624  0592                     	;# 
   625  0592                     	;# 
   626  0593                     	;# 
   627  0594                     	;# 
   628  0594                     	;# 
   629  0595                     	;# 
   630  0596                     	;# 
   631  0596                     	;# 
   632  0597                     	;# 
   633  0598                     	;# 
   634  0599                     	;# 
   635  059A                     	;# 
   636  059B                     	;# 
   637  059B                     	;# 
   638  059C                     	;# 
   639  059D                     	;# 
   640  060C                     	;# 
   641  060C                     	;# 
   642  060D                     	;# 
   643  060E                     	;# 
   644  060F                     	;# 
   645  060F                     	;# 
   646  0610                     	;# 
   647  0611                     	;# 
   648  0612                     	;# 
   649  0613                     	;# 
   650  0614                     	;# 
   651  0617                     	;# 
   652  0618                     	;# 
   653  0619                     	;# 
   654  061A                     	;# 
   655  061B                     	;# 
   656  061C                     	;# 
   657  0691                     	;# 
   658  0692                     	;# 
   659  0693                     	;# 
   660  0694                     	;# 
   661  0695                     	;# 
   662  0696                     	;# 
   663  0697                     	;# 
   664  0699                     	;# 
   665  069A                     	;# 
   666  0711                     	;# 
   667  0712                     	;# 
   668  0713                     	;# 
   669  0714                     	;# 
   670  0715                     	;# 
   671  0718                     	;# 
   672  0718                     	;# 
   673  0719                     	;# 
   674  071A                     	;# 
   675  071A                     	;# 
   676  071B                     	;# 
   677  071C                     	;# 
   678  071D                     	;# 
   679  0791                     	;# 
   680  0791                     	;# 
   681  0792                     	;# 
   682  0793                     	;# 
   683  0793                     	;# 
   684  0794                     	;# 
   685  0795                     	;# 
   686  0795                     	;# 
   687  0796                     	;# 
   688  0797                     	;# 
   689  0797                     	;# 
   690  0798                     	;# 
   691  0799                     	;# 
   692  079A                     	;# 
   693  080C                     	;# 
   694  080C                     	;# 
   695  080D                     	;# 
   696  080E                     	;# 
   697  080E                     	;# 
   698  080F                     	;# 
   699  0810                     	;# 
   700  0810                     	;# 
   701  0811                     	;# 
   702  0812                     	;# 
   703  0812                     	;# 
   704  0813                     	;# 
   705  0814                     	;# 
   706  0815                     	;# 
   707  0816                     	;# 
   708  0817                     	;# 
   709  0818                     	;# 
   710  0819                     	;# 
   711  081A                     	;# 
   712  081A                     	;# 
   713  081B                     	;# 
   714  081C                     	;# 
   715  081C                     	;# 
   716  081D                     	;# 
   717  088C                     	;# 
   718  088D                     	;# 
   719  088E                     	;# 
   720  088F                     	;# 
   721  088F                     	;# 
   722  0890                     	;# 
   723  0891                     	;# 
   724  0892                     	;# 
   725  0893                     	;# 
   726  0893                     	;# 
   727  0894                     	;# 
   728  0895                     	;# 
   729  0896                     	;# 
   730  0897                     	;# 
   731  0897                     	;# 
   732  0898                     	;# 
   733  0899                     	;# 
   734  0D8C                     	;# 
   735  0D8C                     	;# 
   736  0D8D                     	;# 
   737  0D8E                     	;# 
   738  0D8F                     	;# 
   739  0D8F                     	;# 
   740  0D90                     	;# 
   741  0D91                     	;# 
   742  0D92                     	;# 
   743  0D92                     	;# 
   744  0D93                     	;# 
   745  0D94                     	;# 
   746  0D95                     	;# 
   747  0D95                     	;# 
   748  0D96                     	;# 
   749  0D97                     	;# 
   750  0D98                     	;# 
   751  0D99                     	;# 
   752  0D9A                     	;# 
   753  0D9B                     	;# 
   754  0D9C                     	;# 
   755  0D9D                     	;# 
   756  0D9E                     	;# 
   757  0D9E                     	;# 
   758  0D9F                     	;# 
   759  0DA0                     	;# 
   760  0DA1                     	;# 
   761  0DA1                     	;# 
   762  0DA2                     	;# 
   763  0DA3                     	;# 
   764  0DA4                     	;# 
   765  0DA4                     	;# 
   766  0DA5                     	;# 
   767  0DA6                     	;# 
   768  0DA7                     	;# 
   769  0DA7                     	;# 
   770  0DA8                     	;# 
   771  0DA9                     	;# 
   772  0DAA                     	;# 
   773  0DAB                     	;# 
   774  0DAC                     	;# 
   775  0DAD                     	;# 
   776  0DAE                     	;# 
   777  0DAF                     	;# 
   778  0E0F                     	;# 
   779  0E10                     	;# 
   780  0E11                     	;# 
   781  0E12                     	;# 
   782  0E13                     	;# 
   783  0E14                     	;# 
   784  0E15                     	;# 
   785  0E16                     	;# 
   786  0E17                     	;# 
   787  0E18                     	;# 
   788  0E19                     	;# 
   789  0E1A                     	;# 
   790  0E1B                     	;# 
   791  0E1C                     	;# 
   792  0E1D                     	;# 
   793  0E1E                     	;# 
   794  0E1F                     	;# 
   795  0E20                     	;# 
   796  0E21                     	;# 
   797  0E22                     	;# 
   798  0E23                     	;# 
   799  0E24                     	;# 
   800  0E25                     	;# 
   801  0E26                     	;# 
   802  0E27                     	;# 
   803  0E28                     	;# 
   804  0E29                     	;# 
   805  0E2A                     	;# 
   806  0E2B                     	;# 
   807  0E2C                     	;# 
   808  0E2D                     	;# 
   809  0E2E                     	;# 
   810  0E90                     	;# 
   811  0E91                     	;# 
   812  0E92                     	;# 
   813  0E94                     	;# 
   814  0E95                     	;# 
   815  0E9C                     	;# 
   816  0E9D                     	;# 
   817  0E9E                     	;# 
   818  0E9F                     	;# 
   819  0EA0                     	;# 
   820  0EA1                     	;# 
   821  0EA2                     	;# 
   822  0EA3                     	;# 
   823  0EA4                     	;# 
   824  0EA5                     	;# 
   825  0EA6                     	;# 
   826  0EA7                     	;# 
   827  0F0F                     	;# 
   828  0F10                     	;# 
   829  0F11                     	;# 
   830  0F12                     	;# 
   831  0F13                     	;# 
   832  0F14                     	;# 
   833  0F15                     	;# 
   834  0F16                     	;# 
   835  0F17                     	;# 
   836  0F18                     	;# 
   837  0F19                     	;# 
   838  0F1A                     	;# 
   839  0F1B                     	;# 
   840  0F1C                     	;# 
   841  0F1D                     	;# 
   842  0F1E                     	;# 
   843  0F1F                     	;# 
   844  0F20                     	;# 
   845  0F21                     	;# 
   846  0F22                     	;# 
   847  0F23                     	;# 
   848  0FE4                     	;# 
   849  0FE5                     	;# 
   850  0FE6                     	;# 
   851  0FE7                     	;# 
   852  0FE8                     	;# 
   853  0FE9                     	;# 
   854  0FEA                     	;# 
   855  0FEB                     	;# 
   856  0FED                     	;# 
   857  0FEE                     	;# 
   858  0FEF                     	;# 
   859  0000                     	;# 
   860  0001                     	;# 
   861  0002                     	;# 
   862  0003                     	;# 
   863  0004                     	;# 
   864  0005                     	;# 
   865  0006                     	;# 
   866  0007                     	;# 
   867  0008                     	;# 
   868  0009                     	;# 
   869  000A                     	;# 
   870  000B                     	;# 
   871  000C                     	;# 
   872  000D                     	;# 
   873  000E                     	;# 
   874  0010                     	;# 
   875  0011                     	;# 
   876  0012                     	;# 
   877  0013                     	;# 
   878  0014                     	;# 
   879  0015                     	;# 
   880  0016                     	;# 
   881  0016                     	;# 
   882  0017                     	;# 
   883  0018                     	;# 
   884  0019                     	;# 
   885  001A                     	;# 
   886  001A                     	;# 
   887  001B                     	;# 
   888  001B                     	;# 
   889  001C                     	;# 
   890  001D                     	;# 
   891  001E                     	;# 
   892  001F                     	;# 
   893  008C                     	;# 
   894  008D                     	;# 
   895  008E                     	;# 
   896  0090                     	;# 
   897  0091                     	;# 
   898  0092                     	;# 
   899  0093                     	;# 
   900  0094                     	;# 
   901  0095                     	;# 
   902  0096                     	;# 
   903  0098                     	;# 
   904  0099                     	;# 
   905  009A                     	;# 
   906  009B                     	;# 
   907  009B                     	;# 
   908  009C                     	;# 
   909  009D                     	;# 
   910  009E                     	;# 
   911  009F                     	;# 
   912  010C                     	;# 
   913  010D                     	;# 
   914  010E                     	;# 
   915  0111                     	;# 
   916  0112                     	;# 
   917  0113                     	;# 
   918  0114                     	;# 
   919  0115                     	;# 
   920  0116                     	;# 
   921  0117                     	;# 
   922  0118                     	;# 
   923  0119                     	;# 
   924  011C                     	;# 
   925  018C                     	;# 
   926  018D                     	;# 
   927  018E                     	;# 
   928  0191                     	;# 
   929  0191                     	;# 
   930  0192                     	;# 
   931  0193                     	;# 
   932  0193                     	;# 
   933  0194                     	;# 
   934  0195                     	;# 
   935  0196                     	;# 
   936  0199                     	;# 
   937  0199                     	;# 
   938  0199                     	;# 
   939  019A                     	;# 
   940  019A                     	;# 
   941  019A                     	;# 
   942  019B                     	;# 
   943  019B                     	;# 
   944  019B                     	;# 
   945  019B                     	;# 
   946  019B                     	;# 
   947  019C                     	;# 
   948  019C                     	;# 
   949  019C                     	;# 
   950  019D                     	;# 
   951  019D                     	;# 
   952  019D                     	;# 
   953  019E                     	;# 
   954  019E                     	;# 
   955  019E                     	;# 
   956  019F                     	;# 
   957  019F                     	;# 
   958  019F                     	;# 
   959  019F                     	;# 
   960  019F                     	;# 
   961  020C                     	;# 
   962  020D                     	;# 
   963  020E                     	;# 
   964  0211                     	;# 
   965  0211                     	;# 
   966  0212                     	;# 
   967  0212                     	;# 
   968  0213                     	;# 
   969  0213                     	;# 
   970  0214                     	;# 
   971  0214                     	;# 
   972  0215                     	;# 
   973  0215                     	;# 
   974  0215                     	;# 
   975  0215                     	;# 
   976  0216                     	;# 
   977  0216                     	;# 
   978  0217                     	;# 
   979  0217                     	;# 
   980  028C                     	;# 
   981  028D                     	;# 
   982  028E                     	;# 
   983  0291                     	;# 
   984  0291                     	;# 
   985  0292                     	;# 
   986  0293                     	;# 
   987  0294                     	;# 
   988  0298                     	;# 
   989  0298                     	;# 
   990  0299                     	;# 
   991  029A                     	;# 
   992  029B                     	;# 
   993  029E                     	;# 
   994  030C                     	;# 
   995  030D                     	;# 
   996  030E                     	;# 
   997  038C                     	;# 
   998  038D                     	;# 
   999  038E                     	;# 
  1000  0391                     	;# 
  1001  0392                     	;# 
  1002  0393                     	;# 
  1003  0394                     	;# 
  1004  0395                     	;# 
  1005  0396                     	;# 
  1006  0397                     	;# 
  1007  0398                     	;# 
  1008  0399                     	;# 
  1009  040E                     	;# 
  1010  0413                     	;# 
  1011  0413                     	;# 
  1012  0414                     	;# 
  1013  0414                     	;# 
  1014  0415                     	;# 
  1015  0416                     	;# 
  1016  0417                     	;# 
  1017  0418                     	;# 
  1018  041A                     	;# 
  1019  041A                     	;# 
  1020  041B                     	;# 
  1021  041B                     	;# 
  1022  041C                     	;# 
  1023  041D                     	;# 
  1024  041E                     	;# 
  1025  041F                     	;# 
  1026  0493                     	;# 
  1027  0494                     	;# 
  1028  0495                     	;# 
  1029  0496                     	;# 
  1030  049A                     	;# 
  1031  049B                     	;# 
  1032  049C                     	;# 
  1033  049D                     	;# 
  1034  058C                     	;# 
  1035  058C                     	;# 
  1036  058D                     	;# 
  1037  058E                     	;# 
  1038  058E                     	;# 
  1039  058F                     	;# 
  1040  0590                     	;# 
  1041  0590                     	;# 
  1042  0591                     	;# 
  1043  0592                     	;# 
  1044  0592                     	;# 
  1045  0593                     	;# 
  1046  0594                     	;# 
  1047  0594                     	;# 
  1048  0595                     	;# 
  1049  0596                     	;# 
  1050  0596                     	;# 
  1051  0597                     	;# 
  1052  0598                     	;# 
  1053  0599                     	;# 
  1054  059A                     	;# 
  1055  059B                     	;# 
  1056  059B                     	;# 
  1057  059C                     	;# 
  1058  059D                     	;# 
  1059  060C                     	;# 
  1060  060C                     	;# 
  1061  060D                     	;# 
  1062  060E                     	;# 
  1063  060F                     	;# 
  1064  060F                     	;# 
  1065  0610                     	;# 
  1066  0611                     	;# 
  1067  0612                     	;# 
  1068  0613                     	;# 
  1069  0614                     	;# 
  1070  0617                     	;# 
  1071  0618                     	;# 
  1072  0619                     	;# 
  1073  061A                     	;# 
  1074  061B                     	;# 
  1075  061C                     	;# 
  1076  0691                     	;# 
  1077  0692                     	;# 
  1078  0693                     	;# 
  1079  0694                     	;# 
  1080  0695                     	;# 
  1081  0696                     	;# 
  1082  0697                     	;# 
  1083  0699                     	;# 
  1084  069A                     	;# 
  1085  0711                     	;# 
  1086  0712                     	;# 
  1087  0713                     	;# 
  1088  0714                     	;# 
  1089  0715                     	;# 
  1090  0718                     	;# 
  1091  0718                     	;# 
  1092  0719                     	;# 
  1093  071A                     	;# 
  1094  071A                     	;# 
  1095  071B                     	;# 
  1096  071C                     	;# 
  1097  071D                     	;# 
  1098  0791                     	;# 
  1099  0791                     	;# 
  1100  0792                     	;# 
  1101  0793                     	;# 
  1102  0793                     	;# 
  1103  0794                     	;# 
  1104  0795                     	;# 
  1105  0795                     	;# 
  1106  0796                     	;# 
  1107  0797                     	;# 
  1108  0797                     	;# 
  1109  0798                     	;# 
  1110  0799                     	;# 
  1111  079A                     	;# 
  1112  080C                     	;# 
  1113  080C                     	;# 
  1114  080D                     	;# 
  1115  080E                     	;# 
  1116  080E                     	;# 
  1117  080F                     	;# 
  1118  0810                     	;# 
  1119  0810                     	;# 
  1120  0811                     	;# 
  1121  0812                     	;# 
  1122  0812                     	;# 
  1123  0813                     	;# 
  1124  0814                     	;# 
  1125  0815                     	;# 
  1126  0816                     	;# 
  1127  0817                     	;# 
  1128  0818                     	;# 
  1129  0819                     	;# 
  1130  081A                     	;# 
  1131  081A                     	;# 
  1132  081B                     	;# 
  1133  081C                     	;# 
  1134  081C                     	;# 
  1135  081D                     	;# 
  1136  088C                     	;# 
  1137  088D                     	;# 
  1138  088E                     	;# 
  1139  088F                     	;# 
  1140  088F                     	;# 
  1141  0890                     	;# 
  1142  0891                     	;# 
  1143  0892                     	;# 
  1144  0893                     	;# 
  1145  0893                     	;# 
  1146  0894                     	;# 
  1147  0895                     	;# 
  1148  0896                     	;# 
  1149  0897                     	;# 
  1150  0897                     	;# 
  1151  0898                     	;# 
  1152  0899                     	;# 
  1153  0D8C                     	;# 
  1154  0D8C                     	;# 
  1155  0D8D                     	;# 
  1156  0D8E                     	;# 
  1157  0D8F                     	;# 
  1158  0D8F                     	;# 
  1159  0D90                     	;# 
  1160  0D91                     	;# 
  1161  0D92                     	;# 
  1162  0D92                     	;# 
  1163  0D93                     	;# 
  1164  0D94                     	;# 
  1165  0D95                     	;# 
  1166  0D95                     	;# 
  1167  0D96                     	;# 
  1168  0D97                     	;# 
  1169  0D98                     	;# 
  1170  0D99                     	;# 
  1171  0D9A                     	;# 
  1172  0D9B                     	;# 
  1173  0D9C                     	;# 
  1174  0D9D                     	;# 
  1175  0D9E                     	;# 
  1176  0D9E                     	;# 
  1177  0D9F                     	;# 
  1178  0DA0                     	;# 
  1179  0DA1                     	;# 
  1180  0DA1                     	;# 
  1181  0DA2                     	;# 
  1182  0DA3                     	;# 
  1183  0DA4                     	;# 
  1184  0DA4                     	;# 
  1185  0DA5                     	;# 
  1186  0DA6                     	;# 
  1187  0DA7                     	;# 
  1188  0DA7                     	;# 
  1189  0DA8                     	;# 
  1190  0DA9                     	;# 
  1191  0DAA                     	;# 
  1192  0DAB                     	;# 
  1193  0DAC                     	;# 
  1194  0DAD                     	;# 
  1195  0DAE                     	;# 
  1196  0DAF                     	;# 
  1197  0E0F                     	;# 
  1198  0E10                     	;# 
  1199  0E11                     	;# 
  1200  0E12                     	;# 
  1201  0E13                     	;# 
  1202  0E14                     	;# 
  1203  0E15                     	;# 
  1204  0E16                     	;# 
  1205  0E17                     	;# 
  1206  0E18                     	;# 
  1207  0E19                     	;# 
  1208  0E1A                     	;# 
  1209  0E1B                     	;# 
  1210  0E1C                     	;# 
  1211  0E1D                     	;# 
  1212  0E1E                     	;# 
  1213  0E1F                     	;# 
  1214  0E20                     	;# 
  1215  0E21                     	;# 
  1216  0E22                     	;# 
  1217  0E23                     	;# 
  1218  0E24                     	;# 
  1219  0E25                     	;# 
  1220  0E26                     	;# 
  1221  0E27                     	;# 
  1222  0E28                     	;# 
  1223  0E29                     	;# 
  1224  0E2A                     	;# 
  1225  0E2B                     	;# 
  1226  0E2C                     	;# 
  1227  0E2D                     	;# 
  1228  0E2E                     	;# 
  1229  0E90                     	;# 
  1230  0E91                     	;# 
  1231  0E92                     	;# 
  1232  0E94                     	;# 
  1233  0E95                     	;# 
  1234  0E9C                     	;# 
  1235  0E9D                     	;# 
  1236  0E9E                     	;# 
  1237  0E9F                     	;# 
  1238  0EA0                     	;# 
  1239  0EA1                     	;# 
  1240  0EA2                     	;# 
  1241  0EA3                     	;# 
  1242  0EA4                     	;# 
  1243  0EA5                     	;# 
  1244  0EA6                     	;# 
  1245  0EA7                     	;# 
  1246  0F0F                     	;# 
  1247  0F10                     	;# 
  1248  0F11                     	;# 
  1249  0F12                     	;# 
  1250  0F13                     	;# 
  1251  0F14                     	;# 
  1252  0F15                     	;# 
  1253  0F16                     	;# 
  1254  0F17                     	;# 
  1255  0F18                     	;# 
  1256  0F19                     	;# 
  1257  0F1A                     	;# 
  1258  0F1B                     	;# 
  1259  0F1C                     	;# 
  1260  0F1D                     	;# 
  1261  0F1E                     	;# 
  1262  0F1F                     	;# 
  1263  0F20                     	;# 
  1264  0F21                     	;# 
  1265  0F22                     	;# 
  1266  0F23                     	;# 
  1267  0FE4                     	;# 
  1268  0FE5                     	;# 
  1269  0FE6                     	;# 
  1270  0FE7                     	;# 
  1271  0FE8                     	;# 
  1272  0FE9                     	;# 
  1273  0FEA                     	;# 
  1274  0FEB                     	;# 
  1275  0FED                     	;# 
  1276  0FEE                     	;# 
  1277  0FEF                     	;# 
  1278  0000                     	;# 
  1279  0001                     	;# 
  1280  0002                     	;# 
  1281  0003                     	;# 
  1282  0004                     	;# 
  1283  0005                     	;# 
  1284  0006                     	;# 
  1285  0007                     	;# 
  1286  0008                     	;# 
  1287  0009                     	;# 
  1288  000A                     	;# 
  1289  000B                     	;# 
  1290  000C                     	;# 
  1291  000D                     	;# 
  1292  000E                     	;# 
  1293  0010                     	;# 
  1294  0011                     	;# 
  1295  0012                     	;# 
  1296  0013                     	;# 
  1297  0014                     	;# 
  1298  0015                     	;# 
  1299  0016                     	;# 
  1300  0016                     	;# 
  1301  0017                     	;# 
  1302  0018                     	;# 
  1303  0019                     	;# 
  1304  001A                     	;# 
  1305  001A                     	;# 
  1306  001B                     	;# 
  1307  001B                     	;# 
  1308  001C                     	;# 
  1309  001D                     	;# 
  1310  001E                     	;# 
  1311  001F                     	;# 
  1312  008C                     	;# 
  1313  008D                     	;# 
  1314  008E                     	;# 
  1315  0090                     	;# 
  1316  0091                     	;# 
  1317  0092                     	;# 
  1318  0093                     	;# 
  1319  0094                     	;# 
  1320  0095                     	;# 
  1321  0096                     	;# 
  1322  0098                     	;# 
  1323  0099                     	;# 
  1324  009A                     	;# 
  1325  009B                     	;# 
  1326  009B                     	;# 
  1327  009C                     	;# 
  1328  009D                     	;# 
  1329  009E                     	;# 
  1330  009F                     	;# 
  1331  010C                     	;# 
  1332  010D                     	;# 
  1333  010E                     	;# 
  1334  0111                     	;# 
  1335  0112                     	;# 
  1336  0113                     	;# 
  1337  0114                     	;# 
  1338  0115                     	;# 
  1339  0116                     	;# 
  1340  0117                     	;# 
  1341  0118                     	;# 
  1342  0119                     	;# 
  1343  011C                     	;# 
  1344  018C                     	;# 
  1345  018D                     	;# 
  1346  018E                     	;# 
  1347  0191                     	;# 
  1348  0191                     	;# 
  1349  0192                     	;# 
  1350  0193                     	;# 
  1351  0193                     	;# 
  1352  0194                     	;# 
  1353  0195                     	;# 
  1354  0196                     	;# 
  1355  0199                     	;# 
  1356  0199                     	;# 
  1357  0199                     	;# 
  1358  019A                     	;# 
  1359  019A                     	;# 
  1360  019A                     	;# 
  1361  019B                     	;# 
  1362  019B                     	;# 
  1363  019B                     	;# 
  1364  019B                     	;# 
  1365  019B                     	;# 
  1366  019C                     	;# 
  1367  019C                     	;# 
  1368  019C                     	;# 
  1369  019D                     	;# 
  1370  019D                     	;# 
  1371  019D                     	;# 
  1372  019E                     	;# 
  1373  019E                     	;# 
  1374  019E                     	;# 
  1375  019F                     	;# 
  1376  019F                     	;# 
  1377  019F                     	;# 
  1378  019F                     	;# 
  1379  019F                     	;# 
  1380  020C                     	;# 
  1381  020D                     	;# 
  1382  020E                     	;# 
  1383  0211                     	;# 
  1384  0211                     	;# 
  1385  0212                     	;# 
  1386  0212                     	;# 
  1387  0213                     	;# 
  1388  0213                     	;# 
  1389  0214                     	;# 
  1390  0214                     	;# 
  1391  0215                     	;# 
  1392  0215                     	;# 
  1393  0215                     	;# 
  1394  0215                     	;# 
  1395  0216                     	;# 
  1396  0216                     	;# 
  1397  0217                     	;# 
  1398  0217                     	;# 
  1399  028C                     	;# 
  1400  028D                     	;# 
  1401  028E                     	;# 
  1402  0291                     	;# 
  1403  0291                     	;# 
  1404  0292                     	;# 
  1405  0293                     	;# 
  1406  0294                     	;# 
  1407  0298                     	;# 
  1408  0298                     	;# 
  1409  0299                     	;# 
  1410  029A                     	;# 
  1411  029B                     	;# 
  1412  029E                     	;# 
  1413  030C                     	;# 
  1414  030D                     	;# 
  1415  030E                     	;# 
  1416  038C                     	;# 
  1417  038D                     	;# 
  1418  038E                     	;# 
  1419  0391                     	;# 
  1420  0392                     	;# 
  1421  0393                     	;# 
  1422  0394                     	;# 
  1423  0395                     	;# 
  1424  0396                     	;# 
  1425  0397                     	;# 
  1426  0398                     	;# 
  1427  0399                     	;# 
  1428  040E                     	;# 
  1429  0413                     	;# 
  1430  0413                     	;# 
  1431  0414                     	;# 
  1432  0414                     	;# 
  1433  0415                     	;# 
  1434  0416                     	;# 
  1435  0417                     	;# 
  1436  0418                     	;# 
  1437  041A                     	;# 
  1438  041A                     	;# 
  1439  041B                     	;# 
  1440  041B                     	;# 
  1441  041C                     	;# 
  1442  041D                     	;# 
  1443  041E                     	;# 
  1444  041F                     	;# 
  1445  0493                     	;# 
  1446  0494                     	;# 
  1447  0495                     	;# 
  1448  0496                     	;# 
  1449  049A                     	;# 
  1450  049B                     	;# 
  1451  049C                     	;# 
  1452  049D                     	;# 
  1453  058C                     	;# 
  1454  058C                     	;# 
  1455  058D                     	;# 
  1456  058E                     	;# 
  1457  058E                     	;# 
  1458  058F                     	;# 
  1459  0590                     	;# 
  1460  0590                     	;# 
  1461  0591                     	;# 
  1462  0592                     	;# 
  1463  0592                     	;# 
  1464  0593                     	;# 
  1465  0594                     	;# 
  1466  0594                     	;# 
  1467  0595                     	;# 
  1468  0596                     	;# 
  1469  0596                     	;# 
  1470  0597                     	;# 
  1471  0598                     	;# 
  1472  0599                     	;# 
  1473  059A                     	;# 
  1474  059B                     	;# 
  1475  059B                     	;# 
  1476  059C                     	;# 
  1477  059D                     	;# 
  1478  060C                     	;# 
  1479  060C                     	;# 
  1480  060D                     	;# 
  1481  060E                     	;# 
  1482  060F                     	;# 
  1483  060F                     	;# 
  1484  0610                     	;# 
  1485  0611                     	;# 
  1486  0612                     	;# 
  1487  0613                     	;# 
  1488  0614                     	;# 
  1489  0617                     	;# 
  1490  0618                     	;# 
  1491  0619                     	;# 
  1492  061A                     	;# 
  1493  061B                     	;# 
  1494  061C                     	;# 
  1495  0691                     	;# 
  1496  0692                     	;# 
  1497  0693                     	;# 
  1498  0694                     	;# 
  1499  0695                     	;# 
  1500  0696                     	;# 
  1501  0697                     	;# 
  1502  0699                     	;# 
  1503  069A                     	;# 
  1504  0711                     	;# 
  1505  0712                     	;# 
  1506  0713                     	;# 
  1507  0714                     	;# 
  1508  0715                     	;# 
  1509  0718                     	;# 
  1510  0718                     	;# 
  1511  0719                     	;# 
  1512  071A                     	;# 
  1513  071A                     	;# 
  1514  071B                     	;# 
  1515  071C                     	;# 
  1516  071D                     	;# 
  1517  0791                     	;# 
  1518  0791                     	;# 
  1519  0792                     	;# 
  1520  0793                     	;# 
  1521  0793                     	;# 
  1522  0794                     	;# 
  1523  0795                     	;# 
  1524  0795                     	;# 
  1525  0796                     	;# 
  1526  0797                     	;# 
  1527  0797                     	;# 
  1528  0798                     	;# 
  1529  0799                     	;# 
  1530  079A                     	;# 
  1531  080C                     	;# 
  1532  080C                     	;# 
  1533  080D                     	;# 
  1534  080E                     	;# 
  1535  080E                     	;# 
  1536  080F                     	;# 
  1537  0810                     	;# 
  1538  0810                     	;# 
  1539  0811                     	;# 
  1540  0812                     	;# 
  1541  0812                     	;# 
  1542  0813                     	;# 
  1543  0814                     	;# 
  1544  0815                     	;# 
  1545  0816                     	;# 
  1546  0817                     	;# 
  1547  0818                     	;# 
  1548  0819                     	;# 
  1549  081A                     	;# 
  1550  081A                     	;# 
  1551  081B                     	;# 
  1552  081C                     	;# 
  1553  081C                     	;# 
  1554  081D                     	;# 
  1555  088C                     	;# 
  1556  088D                     	;# 
  1557  088E                     	;# 
  1558  088F                     	;# 
  1559  088F                     	;# 
  1560  0890                     	;# 
  1561  0891                     	;# 
  1562  0892                     	;# 
  1563  0893                     	;# 
  1564  0893                     	;# 
  1565  0894                     	;# 
  1566  0895                     	;# 
  1567  0896                     	;# 
  1568  0897                     	;# 
  1569  0897                     	;# 
  1570  0898                     	;# 
  1571  0899                     	;# 
  1572  0D8C                     	;# 
  1573  0D8C                     	;# 
  1574  0D8D                     	;# 
  1575  0D8E                     	;# 
  1576  0D8F                     	;# 
  1577  0D8F                     	;# 
  1578  0D90                     	;# 
  1579  0D91                     	;# 
  1580  0D92                     	;# 
  1581  0D92                     	;# 
  1582  0D93                     	;# 
  1583  0D94                     	;# 
  1584  0D95                     	;# 
  1585  0D95                     	;# 
  1586  0D96                     	;# 
  1587  0D97                     	;# 
  1588  0D98                     	;# 
  1589  0D99                     	;# 
  1590  0D9A                     	;# 
  1591  0D9B                     	;# 
  1592  0D9C                     	;# 
  1593  0D9D                     	;# 
  1594  0D9E                     	;# 
  1595  0D9E                     	;# 
  1596  0D9F                     	;# 
  1597  0DA0                     	;# 
  1598  0DA1                     	;# 
  1599  0DA1                     	;# 
  1600  0DA2                     	;# 
  1601  0DA3                     	;# 
  1602  0DA4                     	;# 
  1603  0DA4                     	;# 
  1604  0DA5                     	;# 
  1605  0DA6                     	;# 
  1606  0DA7                     	;# 
  1607  0DA7                     	;# 
  1608  0DA8                     	;# 
  1609  0DA9                     	;# 
  1610  0DAA                     	;# 
  1611  0DAB                     	;# 
  1612  0DAC                     	;# 
  1613  0DAD                     	;# 
  1614  0DAE                     	;# 
  1615  0DAF                     	;# 
  1616  0E0F                     	;# 
  1617  0E10                     	;# 
  1618  0E11                     	;# 
  1619  0E12                     	;# 
  1620  0E13                     	;# 
  1621  0E14                     	;# 
  1622  0E15                     	;# 
  1623  0E16                     	;# 
  1624  0E17                     	;# 
  1625  0E18                     	;# 
  1626  0E19                     	;# 
  1627  0E1A                     	;# 
  1628  0E1B                     	;# 
  1629  0E1C                     	;# 
  1630  0E1D                     	;# 
  1631  0E1E                     	;# 
  1632  0E1F                     	;# 
  1633  0E20                     	;# 
  1634  0E21                     	;# 
  1635  0E22                     	;# 
  1636  0E23                     	;# 
  1637  0E24                     	;# 
  1638  0E25                     	;# 
  1639  0E26                     	;# 
  1640  0E27                     	;# 
  1641  0E28                     	;# 
  1642  0E29                     	;# 
  1643  0E2A                     	;# 
  1644  0E2B                     	;# 
  1645  0E2C                     	;# 
  1646  0E2D                     	;# 
  1647  0E2E                     	;# 
  1648  0E90                     	;# 
  1649  0E91                     	;# 
  1650  0E92                     	;# 
  1651  0E94                     	;# 
  1652  0E95                     	;# 
  1653  0E9C                     	;# 
  1654  0E9D                     	;# 
  1655  0E9E                     	;# 
  1656  0E9F                     	;# 
  1657  0EA0                     	;# 
  1658  0EA1                     	;# 
  1659  0EA2                     	;# 
  1660  0EA3                     	;# 
  1661  0EA4                     	;# 
  1662  0EA5                     	;# 
  1663  0EA6                     	;# 
  1664  0EA7                     	;# 
  1665  0F0F                     	;# 
  1666  0F10                     	;# 
  1667  0F11                     	;# 
  1668  0F12                     	;# 
  1669  0F13                     	;# 
  1670  0F14                     	;# 
  1671  0F15                     	;# 
  1672  0F16                     	;# 
  1673  0F17                     	;# 
  1674  0F18                     	;# 
  1675  0F19                     	;# 
  1676  0F1A                     	;# 
  1677  0F1B                     	;# 
  1678  0F1C                     	;# 
  1679  0F1D                     	;# 
  1680  0F1E                     	;# 
  1681  0F1F                     	;# 
  1682  0F20                     	;# 
  1683  0F21                     	;# 
  1684  0F22                     	;# 
  1685  0F23                     	;# 
  1686  0FE4                     	;# 
  1687  0FE5                     	;# 
  1688  0FE6                     	;# 
  1689  0FE7                     	;# 
  1690  0FE8                     	;# 
  1691  0FE9                     	;# 
  1692  0FEA                     	;# 
  1693  0FEB                     	;# 
  1694  0FED                     	;# 
  1695  0FEE                     	;# 
  1696  0FEF                     	;# 
  1697                           
  1698                           	psect	stringtext
  1699  0800                     __pstringtext:	
  1700  0800                     _DATA:	
  1701  0800  3400               	retlw	0
  1702  0801  3480               	retlw	128
  1703  0802  3440               	retlw	64
  1704  0803  34C0               	retlw	192
  1705  0804  3420               	retlw	32
  1706  0805  34A0               	retlw	160
  1707  0806  3460               	retlw	96
  1708  0807  34E0               	retlw	224
  1709  0808  3410               	retlw	16
  1710  0809  3490               	retlw	144
  1711  080A  3450               	retlw	80
  1712  080B  34D0               	retlw	208
  1713  080C  3430               	retlw	48
  1714  080D  34B0               	retlw	176
  1715  080E  3470               	retlw	112
  1716  080F  34F0               	retlw	240
  1717  0810  3408               	retlw	8
  1718  0811  3488               	retlw	136
  1719  0812  3448               	retlw	72
  1720  0813  34C8               	retlw	200
  1721  0814  3428               	retlw	40
  1722  0815  34A8               	retlw	168
  1723  0816  3468               	retlw	104
  1724  0817  34E8               	retlw	232
  1725  0818  3418               	retlw	24
  1726  0819  3498               	retlw	152
  1727  081A  3458               	retlw	88
  1728  081B  34D8               	retlw	216
  1729  081C  3438               	retlw	56
  1730  081D  34B8               	retlw	184
  1731  081E  3478               	retlw	120
  1732  081F  34F8               	retlw	248
  1733  0820  3404               	retlw	4
  1734  0821  3484               	retlw	132
  1735  0822  3444               	retlw	68
  1736  0823  34C4               	retlw	196
  1737  0824  3424               	retlw	36
  1738  0825  34A4               	retlw	164
  1739  0826  3464               	retlw	100
  1740  0827  34E4               	retlw	228
  1741  0828  3414               	retlw	20
  1742  0829  3494               	retlw	148
  1743  082A  3454               	retlw	84
  1744  082B  34D4               	retlw	212
  1745  082C  3434               	retlw	52
  1746  082D  34B4               	retlw	180
  1747  082E  3474               	retlw	116
  1748  082F  34F4               	retlw	244
  1749  0830  340C               	retlw	12
  1750  0831  348C               	retlw	140
  1751  0832  344C               	retlw	76
  1752  0833  34CC               	retlw	204
  1753  0834  342C               	retlw	44
  1754  0835  34AC               	retlw	172
  1755  0836  346C               	retlw	108
  1756  0837  34EC               	retlw	236
  1757  0838  341C               	retlw	28
  1758  0839  349C               	retlw	156
  1759  083A  345C               	retlw	92
  1760  083B  34DC               	retlw	220
  1761  083C  343C               	retlw	60
  1762  083D  34BC               	retlw	188
  1763  083E  347C               	retlw	124
  1764  083F  34FC               	retlw	252
  1765  0840  3406               	retlw	6
  1766  0841                     __end_of_DATA:	
  1767  0841                     _ACTIVEBAND:	
  1768  0841  3400               	retlw	0
  1769  0842  3400               	retlw	0
  1770  0843  3400               	retlw	0
  1771  0844  3400               	retlw	0
  1772  0845  3400               	retlw	0
  1773  0846  3401               	retlw	1
  1774  0847  3400               	retlw	0
  1775  0848  3400               	retlw	0
  1776  0849  3401               	retlw	1
  1777  084A  3400               	retlw	0
  1778  084B  3400               	retlw	0
  1779  084C  3400               	retlw	0
  1780  084D  3401               	retlw	1
  1781  084E  3401               	retlw	1
  1782  084F  3400               	retlw	0
  1783  0850  3400               	retlw	0
  1784  0851  3400               	retlw	0
  1785  0852  3400               	retlw	0
  1786  0853  3400               	retlw	0
  1787  0854  3400               	retlw	0
  1788  0855  3401               	retlw	1
  1789  0856  3400               	retlw	0
  1790  0857  3400               	retlw	0
  1791  0858  3400               	retlw	0
  1792  0859  3400               	retlw	0
  1793  085A  3400               	retlw	0
  1794  085B  3401               	retlw	1
  1795  085C  3400               	retlw	0
  1796  085D  3400               	retlw	0
  1797  085E  3401               	retlw	1
  1798  085F  3400               	retlw	0
  1799  0860  3400               	retlw	0
  1800  0861  3400               	retlw	0
  1801  0862  3400               	retlw	0
  1802  0863  3400               	retlw	0
  1803  0864  3400               	retlw	0
  1804  0865  3400               	retlw	0
  1805  0866  3400               	retlw	0
  1806  0867  3400               	retlw	0
  1807  0868  3400               	retlw	0
  1808  0869  3400               	retlw	0
  1809  086A  3400               	retlw	0
  1810  086B  3400               	retlw	0
  1811  086C  3400               	retlw	0
  1812  086D  3400               	retlw	0
  1813  086E  3400               	retlw	0
  1814  086F  3400               	retlw	0
  1815  0870  3400               	retlw	0
  1816  0871  3400               	retlw	0
  1817  0872  3400               	retlw	0
  1818  0873  3400               	retlw	0
  1819  0874  3400               	retlw	0
  1820  0875  3400               	retlw	0
  1821  0876  3400               	retlw	0
  1822  0877  3400               	retlw	0
  1823  0878  3400               	retlw	0
  1824  0879  3400               	retlw	0
  1825  087A  3400               	retlw	0
  1826  087B  3400               	retlw	0
  1827  087C  3400               	retlw	0
  1828  087D  3400               	retlw	0
  1829  087E  3400               	retlw	0
  1830  087F  3400               	retlw	0
  1831  0880  3400               	retlw	0
  1832  0881                     __end_of_ACTIVEBAND:	
  1833  0881                     _DacOutput:	
  1834  0881  342B               	retlw	43
  1835  0882  3448               	retlw	72
  1836  0883  3456               	retlw	86
  1837  0884  3464               	retlw	100
  1838  0885                     __end_of_DacOutput:	
  1839  0885                     _REGADD:	
  1840  0885  3407               	retlw	7
  1841  0886  3410               	retlw	16
  1842  0887                     __end_of_REGADD:	
  1843  0887                     _SLAVEADD:	
  1844  0887  3406               	retlw	6
  1845  0888  340E               	retlw	14
  1846  0889                     __end_of_SLAVEADD:	
  1847  000E                     _PORTC	set	14
  1848  0095                     _OPTION_REGbits	set	149
  1849  0099                     _OSCCON	set	153
  1850  009A                     _OSCSTAT	set	154
  1851  0098                     _OSCTUNE	set	152
  1852  008C                     _TRISA	set	140
  1853  008D                     _TRISB	set	141
  1854  008E                     _TRISC	set	142
  1855  0118                     _DAC1CON0	set	280
  1856  0119                     _DAC1CON1	set	281
  1857  010C                     _LATA	set	268
  1858  010D                     _LATB	set	269
  1859  010E                     _LATC	set	270
  1860  0861                     _LATA1	set	2145
  1861  0862                     _LATA2	set	2146
  1862  0864                     _LATA4	set	2148
  1863  086C                     _LATB4	set	2156
  1864  086D                     _LATB5	set	2157
  1865  086E                     _LATB6	set	2158
  1866  086F                     _LATB7	set	2159
  1867  018C                     _ANSELA	set	396
  1868  018D                     _ANSELB	set	397
  1869  018E                     _ANSELC	set	398
  1870  020D                     _WPUB	set	525
  1871  020E                     _WPUC	set	526
  1872                           
  1873                           ; #config settings
  1874  0000                     
  1875                           	psect	cinit
  1876  07F6                     start_initialization:	
  1877  07F6                     __initialization:	
  1878                           
  1879                           ; Clear objects allocated to COMMON
  1880  07F6  01FD               	clrf	__pbssCOMMON& (0+127)
  1881                           
  1882                           ; Clear objects allocated to BANK0
  1883  07F7  01A0               	clrf	__pbssBANK0& (0+127)
  1884  07F8  01A1               	clrf	(__pbssBANK0+1)& (0+127)
  1885  07F9  01A2               	clrf	(__pbssBANK0+2)& (0+127)
  1886  07FA  01A3               	clrf	(__pbssBANK0+3)& (0+127)
  1887  07FB  01A4               	clrf	(__pbssBANK0+4)& (0+127)
  1888  07FC  01A5               	clrf	(__pbssBANK0+5)& (0+127)
  1889  07FD                     end_of_initialization:	
  1890                           ;End of C runtime variable initialization code
  1891                           
  1892  07FD                     __end_of__initialization:	
  1893  07FD  0020               	movlb	0
  1894  07FE  3186  2E1D         	ljmp	_main	;jump to C main() function
  1895                           
  1896                           	psect	bssCOMMON
  1897  007D                     __pbssCOMMON:	
  1898  007D                     _Byte3:	
  1899  007D                     	ds	1
  1900                           
  1901                           	psect	bssBANK0
  1902  0020                     __pbssBANK0:	
  1903  0020                     _Byte1:	
  1904  0020                     	ds	1
  1905  0021                     _Byte2:	
  1906  0021                     	ds	1
  1907  0022                     _parity1:	
  1908  0022                     	ds	1
  1909  0023                     _parity2:	
  1910  0023                     	ds	1
  1911  0024                     _parity3:	
  1912  0024                     	ds	1
  1913  0025                     _parity4:	
  1914  0025                     	ds	1
  1915                           
  1916                           	psect	cstackCOMMON
  1917  0070                     __pcstackCOMMON:	
  1918  0070                     ?_OSCILLATOR_Initialize:	
  1919  0070                     ??_OSCILLATOR_Initialize:	
  1920                           ; 0 bytes @ 0x0
  1921                           
  1922  0070                     ?_DAC1_Initialize:	
  1923                           ; 0 bytes @ 0x0
  1924                           
  1925  0070                     ??_DAC1_Initialize:	
  1926                           ; 0 bytes @ 0x0
  1927                           
  1928  0070                     ?_DAC1_SetOutput:	
  1929                           ; 0 bytes @ 0x0
  1930                           
  1931  0070                     ??_DAC1_SetOutput:	
  1932                           ; 0 bytes @ 0x0
  1933                           
  1934  0070                     ?_PIN_MANAGER_Initialize:	
  1935                           ; 0 bytes @ 0x0
  1936                           
  1937  0070                     ??_PIN_MANAGER_Initialize:	
  1938                           ; 0 bytes @ 0x0
  1939                           
  1940  0070                     ?_SYSTEM_Initialize:	
  1941                           ; 0 bytes @ 0x0
  1942                           
  1943  0070                     ??_SYSTEM_Initialize:	
  1944                           ; 0 bytes @ 0x0
  1945                           
  1946  0070                     ?_shiftRegister:	
  1947                           ; 0 bytes @ 0x0
  1948                           
  1949  0070                     ??_paritycheck:	
  1950                           ; 0 bytes @ 0x0
  1951                           
  1952  0070                     ?_ConfigureShiftRegister:	
  1953                           ; 0 bytes @ 0x0
  1954                           
  1955  0070                     ??_ConfigureShiftRegister:	
  1956                           ; 0 bytes @ 0x0
  1957                           
  1958  0070                     ?_main:	
  1959                           ; 0 bytes @ 0x0
  1960                           
  1961  0070                     ?_paritycheck:	
  1962                           ; 0 bytes @ 0x0
  1963                           
  1964  0070                     DAC1_SetOutput@inputData:	
  1965                           ; 1 bytes @ 0x0
  1966                           
  1967  0070                     shiftRegister@Dummy2:	
  1968                           ; 1 bytes @ 0x0
  1969                           
  1970                           
  1971                           ; 1 bytes @ 0x0
  1972  0070                     	ds	1
  1973  0071                     shiftRegister@y:	
  1974  0071                     paritycheck@parity:	
  1975                           ; 1 bytes @ 0x1
  1976                           
  1977  0071                     ConfigureShiftRegister@i:	
  1978                           ; 1 bytes @ 0x1
  1979                           
  1980                           
  1981                           ; 1 bytes @ 0x1
  1982  0071                     	ds	1
  1983  0072                     ??_shiftRegister:	
  1984  0072                     paritycheck@Dummy:	
  1985                           ; 0 bytes @ 0x2
  1986                           
  1987  0072                     ConfigureShiftRegister@ReverseReg:	
  1988                           ; 1 bytes @ 0x2
  1989                           
  1990                           
  1991                           ; 1 bytes @ 0x2
  1992  0072                     	ds	1
  1993  0073                     shiftRegister@m:	
  1994                           
  1995                           ; 1 bytes @ 0x3
  1996  0073                     	ds	1
  1997  0074                     shiftRegister@Dummy1:	
  1998                           
  1999                           ; 1 bytes @ 0x4
  2000  0074                     	ds	1
  2001  0075                     ?_MIPI:	
  2002  0075                     MIPI@b:	
  2003                           ; 0 bytes @ 0x5
  2004                           
  2005                           
  2006                           ; 1 bytes @ 0x5
  2007  0075                     	ds	1
  2008  0076                     MIPI@c:	
  2009                           
  2010                           ; 1 bytes @ 0x6
  2011  0076                     	ds	1
  2012  0077                     MIPI@d:	
  2013                           
  2014                           ; 1 bytes @ 0x7
  2015  0077                     	ds	1
  2016  0078                     ??_MIPI:	
  2017                           
  2018                           ; 0 bytes @ 0x8
  2019  0078                     	ds	2
  2020  007A                     MIPI@a:	
  2021                           
  2022                           ; 1 bytes @ 0xA
  2023  007A                     	ds	1
  2024  007B                     MIPI@j:	
  2025                           
  2026                           ; 1 bytes @ 0xB
  2027  007B                     	ds	1
  2028  007C                     MIPI@i:	
  2029                           
  2030                           ; 1 bytes @ 0xC
  2031  007C                     	ds	1
  2032                           
  2033                           	psect	cstackBANK0
  2034  0026                     __pcstackBANK0:	
  2035  0026                     ??_main:	
  2036                           
  2037                           ; 0 bytes @ 0x0
  2038  0026                     	ds	3
  2039                           
  2040                           	psect	maintext
  2041  061D                     __pmaintext:	
  2042 ;;
  2043 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2044 ;;
  2045 ;; *************** function _main *****************
  2046 ;; Defined at:
  2047 ;;		line 291 in file "main.c"
  2048 ;; Parameters:    Size  Location     Type
  2049 ;;		None
  2050 ;; Auto vars:     Size  Location     Type
  2051 ;;		None
  2052 ;; Return value:  Size  Location     Type
  2053 ;;		None               void
  2054 ;; Registers used:
  2055 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2056 ;; Tracked objects:
  2057 ;;		On entry : B1F/0
  2058 ;;		On exit  : 0/0
  2059 ;;		Unchanged: 0/0
  2060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2061 ;;      Params:         0       0       0       0       0       0       0       0
  2062 ;;      Locals:         0       0       0       0       0       0       0       0
  2063 ;;      Temps:          0       3       0       0       0       0       0       0
  2064 ;;      Totals:         0       3       0       0       0       0       0       0
  2065 ;;Total ram usage:        3 bytes
  2066 ;; Hardware stack levels required when called:    2
  2067 ;; This function calls:
  2068 ;;		_ConfigureShiftRegister
  2069 ;;		_DAC1_Initialize
  2070 ;;		_DAC1_SetOutput
  2071 ;;		_MIPI
  2072 ;;		_PIN_MANAGER_Initialize
  2073 ;;		_SYSTEM_Initialize
  2074 ;; This function is called by:
  2075 ;;		Startup code after reset
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           
  2079                           
  2080                           ;psect for function _main
  2081  061D                     _main:	
  2082                           
  2083                           ;main.c: 293: SYSTEM_Initialize();
  2084                           
  2085                           ;incstack = 0
  2086                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2087  061D  3185  256B  3186   	fcall	_SYSTEM_Initialize
  2088                           
  2089                           ;main.c: 294: DAC1_Initialize();
  2090  0620  3185  2560  3186   	fcall	_DAC1_Initialize
  2091                           
  2092                           ;main.c: 295: PIN_MANAGER_Initialize();
  2093  0623  3185  2590  3186   	fcall	_PIN_MANAGER_Initialize
  2094                           
  2095                           ;main.c: 297: DAC1_SetOutput(0);
  2096  0626  3000               	movlw	0
  2097  0627  3185  255B  3186   	fcall	_DAC1_SetOutput
  2098                           
  2099                           ;main.c: 300: do { LATA1 = 0; } while(0);
  2100  062A  0022               	movlb	2	; select bank2
  2101  062B  108C               	bcf	12,1	;volatile
  2102                           
  2103                           ;main.c: 301: do { LATA4 = 0; } while(0);
  2104  062C  120C               	bcf	12,4	;volatile
  2105                           
  2106                           ;main.c: 302: do { LATA2 = 0; } while(0);
  2107  062D  110C               	bcf	12,2	;volatile
  2108                           
  2109                           ;main.c: 303: do { LATB4 = 0; } while(0);
  2110  062E  120D               	bcf	13,4	;volatile
  2111  062F                     l962:	
  2112                           ;main.c: 305: while ((PORTC & 0xC0) != 0xC0) {
  2113                           
  2114                           ;main.c: 304: while (1) {
  2115                           
  2116  062F  30C0               	movlw	192
  2117  0630  0020               	movlb	0	; select bank0
  2118  0631  050E               	andwf	14,w	;volatile
  2119  0632  00A6               	movwf	??_main
  2120  0633  30C0               	movlw	192
  2121  0634  0626               	xorwf	??_main,w
  2122  0635  1D03               	btfss	3,2
  2123  0636  2E2F               	goto	l962
  2124                           
  2125                           ;main.c: 306: }
  2126                           ;main.c: 307: Byte1 = PORTC;
  2127  0637  080E               	movf	14,w	;volatile
  2128  0638  00A6               	movwf	??_main
  2129  0639  0826               	movf	??_main,w
  2130  063A  00A0               	movwf	_Byte1
  2131  063B                     l966:	
  2132                           ;main.c: 308: while ((PORTC & 0xC0) != 0x40) {
  2133                           
  2134  063B  30C0               	movlw	192
  2135  063C  050E               	andwf	14,w	;volatile
  2136  063D  00A6               	movwf	??_main
  2137  063E  3040               	movlw	64
  2138  063F  0626               	xorwf	??_main,w
  2139  0640  1D03               	btfss	3,2
  2140  0641  2E3B               	goto	l966
  2141                           
  2142                           ;main.c: 309: }
  2143                           ;main.c: 310: Byte2 = PORTC & 0x3F;
  2144  0642  080E               	movf	14,w	;volatile
  2145  0643  393F               	andlw	63
  2146  0644  00A6               	movwf	??_main
  2147  0645  0826               	movf	??_main,w
  2148  0646  00A1               	movwf	_Byte2
  2149  0647                     l970:	
  2150                           ;main.c: 311: while ((PORTC & 0xC0) != 0x80) {
  2151                           
  2152  0647  30C0               	movlw	192
  2153  0648  050E               	andwf	14,w	;volatile
  2154  0649  00A6               	movwf	??_main
  2155  064A  3080               	movlw	128
  2156  064B  0626               	xorwf	??_main,w
  2157  064C  1D03               	btfss	3,2
  2158  064D  2E47               	goto	l970
  2159                           
  2160                           ;main.c: 312: }
  2161                           ;main.c: 313: Byte3 = PORTC & 0x3F;
  2162  064E  080E               	movf	14,w	;volatile
  2163  064F  393F               	andlw	63
  2164  0650  00A6               	movwf	??_main
  2165  0651  0826               	movf	??_main,w
  2166  0652  00FD               	movwf	_Byte3
  2167                           
  2168                           ;main.c: 314: if (((Byte1 & 0x10) == 0x10) && ((Byte1 & 0x0C) != 0x00))
  2169  0653  1E20               	btfss	_Byte1,4
  2170  0654  2E63               	goto	l980
  2171  0655  0820               	movf	_Byte1,w
  2172  0656  390C               	andlw	12
  2173  0657  1903               	btfsc	3,2
  2174  0658  2E63               	goto	l980
  2175                           
  2176                           ;main.c: 315: DAC1_SetOutput(DacOutput[(Byte1 & 0x03)]);
  2177  0659  0820               	movf	_Byte1,w
  2178  065A  3903               	andlw	3
  2179  065B  3E81               	addlw	low (_DacOutput| (0+32768))
  2180  065C  0084               	movwf	4
  2181  065D  3088               	movlw	high (_DacOutput| (0+32768))
  2182  065E  1803               	skipnc
  2183  065F  3E01               	addlw	1
  2184  0660  0085               	movwf	5
  2185  0661  0800               	movf	0,w	;code access
  2186  0662  2E64               	goto	L1
  2187  0663                     l980:	
  2188                           
  2189                           ;main.c: 316: else
  2190                           ;main.c: 317: DAC1_SetOutput(0);
  2191  0663  3000               	movlw	0
  2192  0664                     L1:	
  2193  0664  3185  255B  3186   	fcall	_DAC1_SetOutput
  2194                           
  2195                           ;main.c: 319: if ((Byte1 & 0x3C) == 0x20) {
  2196  0667  303C               	movlw	60
  2197  0668  0020               	movlb	0	; select bank0
  2198  0669  0520               	andwf	_Byte1,w
  2199  066A  00A6               	movwf	??_main
  2200  066B  3020               	movlw	32
  2201  066C  0626               	xorwf	??_main,w
  2202  066D  1D03               	btfss	3,2
  2203  066E  2E73               	goto	l984
  2204                           
  2205                           ;main.c: 320: do { LATA2 = 0; } while(0);
  2206  066F  0022               	movlb	2	; select bank2
  2207  0670  110C               	bcf	12,2	;volatile
  2208                           
  2209                           ;main.c: 321: do { LATB4 = 1; } while(0);
  2210  0671  160D               	bsf	13,4	;volatile
  2211                           
  2212                           ;main.c: 322: } else {
  2213  0672  2E9C               	goto	l992
  2214  0673                     l984:	
  2215                           
  2216                           ;main.c: 323: if (((Byte1 & 0x30) != 0x00) && ((Byte1 & 0x0C) != 0x00)) {
  2217  0673  0020               	movlb	0	; select bank0
  2218  0674  0820               	movf	_Byte1,w
  2219  0675  3930               	andlw	48
  2220  0676  1903               	btfsc	3,2
  2221  0677  2E99               	goto	l206
  2222  0678  0820               	movf	_Byte1,w
  2223  0679  390C               	andlw	12
  2224  067A  1903               	btfsc	3,2
  2225  067B  2E99               	goto	l206
  2226                           
  2227                           ;main.c: 324: do { LATB4 = 1; } while(0);
  2228  067C  0022               	movlb	2	; select bank2
  2229  067D  160D               	bsf	13,4	;volatile
  2230                           
  2231                           ;main.c: 325: if (ACTIVEBAND[Byte2] || ACTIVEBAND[Byte3])
  2232  067E  0020               	movlb	0	; select bank0
  2233  067F  0821               	movf	_Byte2,w
  2234  0680  3E41               	addlw	low (_ACTIVEBAND| (0+32768))
  2235  0681  0084               	movwf	4
  2236  0682  3088               	movlw	high (_ACTIVEBAND| (0+32768))
  2237  0683  1803               	skipnc
  2238  0684  3E01               	addlw	1
  2239  0685  0085               	movwf	5
  2240  0686  0012               	moviw fsr0++
  2241  0687  1D03               	btfss	3,2
  2242  0688  2E93               	goto	l200
  2243  0689  087D               	movf	_Byte3,w
  2244  068A  3E41               	addlw	low (_ACTIVEBAND| (0+32768))
  2245  068B  0084               	movwf	4
  2246  068C  3088               	movlw	high (_ACTIVEBAND| (0+32768))
  2247  068D  1803               	skipnc
  2248  068E  3E01               	addlw	1
  2249  068F  0085               	movwf	5
  2250  0690  0012               	moviw fsr0++
  2251  0691  1903               	btfsc	3,2
  2252  0692  2E96               	goto	l203
  2253  0693                     l200:	
  2254                           ;main.c: 326: do { LATA2 = 1; } while(0);
  2255                           
  2256  0693  0022               	movlb	2	; select bank2
  2257  0694  150C               	bsf	12,2	;volatile
  2258  0695  2E9C               	goto	l992
  2259  0696                     l203:	
  2260                           ;main.c: 327: else
  2261                           ;main.c: 328: do { LATA2 = 0; } while(0);
  2262                           
  2263  0696  0022               	movlb	2	; select bank2
  2264  0697  110C               	bcf	12,2	;volatile
  2265                           
  2266                           ;main.c: 336: } else {
  2267  0698  2E9C               	goto	l992
  2268  0699                     l206:	
  2269                           ;main.c: 337: do { LATA2 = 0; } while(0);
  2270                           
  2271  0699  0022               	movlb	2	; select bank2
  2272  069A  110C               	bcf	12,2	;volatile
  2273                           
  2274                           ;main.c: 338: do { LATB4 = 0; } while(0);
  2275  069B  120D               	bcf	13,4	;volatile
  2276  069C                     l992:	
  2277                           
  2278                           ;main.c: 339: }
  2279                           ;main.c: 340: }
  2280                           ;main.c: 356: if ((Byte2 <=64) && (Byte3 <=64))
  2281  069C  3041               	movlw	65
  2282  069D  0020               	movlb	0	; select bank0
  2283  069E  0221               	subwf	_Byte2,w
  2284  069F  1803               	skipnc
  2285  06A0  2EB3               	goto	l998
  2286  06A1  3041               	movlw	65
  2287  06A2  027D               	subwf	_Byte3,w
  2288  06A3  1803               	skipnc
  2289  06A4  2EB3               	goto	l998
  2290                           
  2291                           ;main.c: 357: MIPI(Byte2,Byte2,Byte3,Byte3);
  2292  06A5  0821               	movf	_Byte2,w
  2293  06A6  00A6               	movwf	??_main
  2294  06A7  0826               	movf	??_main,w
  2295  06A8  00F5               	movwf	MIPI@b
  2296  06A9  087D               	movf	_Byte3,w
  2297  06AA  00A7               	movwf	??_main+1
  2298  06AB  0827               	movf	??_main+1,w
  2299  06AC  00F6               	movwf	MIPI@c
  2300  06AD  087D               	movf	_Byte3,w
  2301  06AE  00A8               	movwf	??_main+2
  2302  06AF  0828               	movf	??_main+2,w
  2303  06B0  00F7               	movwf	MIPI@d
  2304  06B1  0821               	movf	_Byte2,w
  2305  06B2  2EDB               	goto	L2
  2306  06B3                     l998:	
  2307                           
  2308                           ;main.c: 358: else if ((Byte2 == 65) && (Byte3 <=64))
  2309  06B3  3041               	movlw	65
  2310  06B4  0020               	movlb	0	; select bank0
  2311  06B5  0621               	xorwf	_Byte2,w
  2312  06B6  1D03               	btfss	3,2
  2313  06B7  2EC4               	goto	l1004
  2314  06B8  3041               	movlw	65
  2315  06B9  027D               	subwf	_Byte3,w
  2316  06BA  1803               	skipnc
  2317  06BB  2EC4               	goto	l1004
  2318                           
  2319                           ;main.c: 359: MIPI(Byte3,Byte3,0,0);
  2320  06BC  087D               	movf	_Byte3,w
  2321  06BD  00A6               	movwf	??_main
  2322  06BE  0826               	movf	??_main,w
  2323  06BF  00F5               	movwf	MIPI@b
  2324  06C0  01F6               	clrf	MIPI@c
  2325  06C1  01F7               	clrf	MIPI@d
  2326  06C2  087D               	movf	_Byte3,w
  2327  06C3  2EDB               	goto	L2
  2328  06C4                     l1004:	
  2329                           
  2330                           ;main.c: 360: else if ((Byte2 == 66) && (Byte3 <=64))
  2331  06C4  3042               	movlw	66
  2332  06C5  0020               	movlb	0	; select bank0
  2333  06C6  0621               	xorwf	_Byte2,w
  2334  06C7  1D03               	btfss	3,2
  2335  06C8  2ED7               	goto	l1010
  2336  06C9  3041               	movlw	65
  2337  06CA  027D               	subwf	_Byte3,w
  2338  06CB  1803               	skipnc
  2339  06CC  2ED7               	goto	l1010
  2340                           
  2341                           ;main.c: 361: MIPI(0,0,Byte3,Byte3);
  2342  06CD  01F5               	clrf	MIPI@b
  2343  06CE  087D               	movf	_Byte3,w
  2344  06CF  00A6               	movwf	??_main
  2345  06D0  0826               	movf	??_main,w
  2346  06D1  00F6               	movwf	MIPI@c
  2347  06D2  087D               	movf	_Byte3,w
  2348  06D3  00A7               	movwf	??_main+1
  2349  06D4  0827               	movf	??_main+1,w
  2350  06D5  00F7               	movwf	MIPI@d
  2351  06D6  2EDA               	goto	L3
  2352  06D7                     l1010:	
  2353                           
  2354                           ;main.c: 362: else
  2355                           ;main.c: 363: MIPI(0,0,0,0);
  2356  06D7  01F5               	clrf	MIPI@b
  2357  06D8  01F6               	clrf	MIPI@c
  2358  06D9  01F7               	clrf	MIPI@d
  2359  06DA                     L3:	
  2360  06DA  3000               	movlw	0
  2361  06DB                     L2:	
  2362  06DB  3186  26E6  3186   	fcall	_MIPI
  2363                           
  2364                           ;main.c: 444: do { LATA1 = 1; } while(0);
  2365  06DE  0022               	movlb	2	; select bank2
  2366  06DF  148C               	bsf	12,1	;volatile
  2367                           
  2368                           ;main.c: 445: ConfigureShiftRegister();
  2369  06E0  3185  25D2  3186   	fcall	_ConfigureShiftRegister
  2370                           
  2371                           ;main.c: 446: do { LATA1 = 0; } while(0);
  2372  06E3  0022               	movlb	2	; select bank2
  2373  06E4  108C               	bcf	12,1	;volatile
  2374  06E5  2E2F               	goto	l962
  2375  06E6                     __end_of_main:	
  2376                           
  2377                           	psect	text1
  2378  056B                     __ptext1:	
  2379 ;; *************** function _SYSTEM_Initialize *****************
  2380 ;; Defined at:
  2381 ;;		line 75 in file "mcc_generated_files/mcc.c"
  2382 ;; Parameters:    Size  Location     Type
  2383 ;;		None
  2384 ;; Auto vars:     Size  Location     Type
  2385 ;;		None
  2386 ;; Return value:  Size  Location     Type
  2387 ;;		None               void
  2388 ;; Registers used:
  2389 ;;		wreg, status,2, status,0, pclath, cstack
  2390 ;; Tracked objects:
  2391 ;;		On entry : 0/0
  2392 ;;		On exit  : 0/0
  2393 ;;		Unchanged: 0/0
  2394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2395 ;;      Params:         0       0       0       0       0       0       0       0
  2396 ;;      Locals:         0       0       0       0       0       0       0       0
  2397 ;;      Temps:          0       0       0       0       0       0       0       0
  2398 ;;      Totals:         0       0       0       0       0       0       0       0
  2399 ;;Total ram usage:        0 bytes
  2400 ;; Hardware stack levels used:    1
  2401 ;; Hardware stack levels required when called:    1
  2402 ;; This function calls:
  2403 ;;		_DAC1_Initialize
  2404 ;;		_OSCILLATOR_Initialize
  2405 ;;		_PIN_MANAGER_Initialize
  2406 ;; This function is called by:
  2407 ;;		_main
  2408 ;; This function uses a non-reentrant model
  2409 ;;
  2410                           
  2411                           
  2412                           ;psect for function _SYSTEM_Initialize
  2413  056B                     _SYSTEM_Initialize:	
  2414                           
  2415                           ;mcc.c: 76: OSCILLATOR_Initialize();
  2416                           
  2417                           ;incstack = 0
  2418                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2419  056B  3185  2565  3185   	fcall	_OSCILLATOR_Initialize
  2420                           
  2421                           ;mcc.c: 77: PIN_MANAGER_Initialize();
  2422  056E  3185  2590  3185   	fcall	_PIN_MANAGER_Initialize
  2423                           
  2424                           ;mcc.c: 78: DAC1_Initialize();
  2425  0571  3185  2560         	fcall	_DAC1_Initialize
  2426  0573  0008               	return
  2427  0574                     __end_of_SYSTEM_Initialize:	
  2428                           
  2429                           	psect	text2
  2430  0590                     __ptext2:	
  2431 ;; *************** function _PIN_MANAGER_Initialize *****************
  2432 ;; Defined at:
  2433 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  2434 ;; Parameters:    Size  Location     Type
  2435 ;;		None
  2436 ;; Auto vars:     Size  Location     Type
  2437 ;;		None
  2438 ;; Return value:  Size  Location     Type
  2439 ;;		None               void
  2440 ;; Registers used:
  2441 ;;		wreg, status,2
  2442 ;; Tracked objects:
  2443 ;;		On entry : 0/0
  2444 ;;		On exit  : 0/0
  2445 ;;		Unchanged: 0/0
  2446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2447 ;;      Params:         0       0       0       0       0       0       0       0
  2448 ;;      Locals:         0       0       0       0       0       0       0       0
  2449 ;;      Temps:          0       0       0       0       0       0       0       0
  2450 ;;      Totals:         0       0       0       0       0       0       0       0
  2451 ;;Total ram usage:        0 bytes
  2452 ;; Hardware stack levels used:    1
  2453 ;; This function calls:
  2454 ;;		Nothing
  2455 ;; This function is called by:
  2456 ;;		_SYSTEM_Initialize
  2457 ;;		_main
  2458 ;; This function uses a non-reentrant model
  2459 ;;
  2460                           
  2461                           
  2462                           ;psect for function _PIN_MANAGER_Initialize
  2463  0590                     _PIN_MANAGER_Initialize:	
  2464                           
  2465                           ;pin_manager.c: 51: LATA = 0x00;
  2466                           
  2467                           ;incstack = 0
  2468                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2469  0590  0022               	movlb	2	; select bank2
  2470  0591  018C               	clrf	12	;volatile
  2471                           
  2472                           ;pin_manager.c: 52: TRISA = 0x28;
  2473  0592  3028               	movlw	40
  2474  0593  0021               	movlb	1	; select bank1
  2475  0594  008C               	movwf	12	;volatile
  2476                           
  2477                           ;pin_manager.c: 53: ANSELA = 0x01;
  2478  0595  3001               	movlw	1
  2479  0596  0023               	movlb	3	; select bank3
  2480  0597  008C               	movwf	12	;volatile
  2481                           
  2482                           ;pin_manager.c: 55: LATB = 0x00;
  2483  0598  0022               	movlb	2	; select bank2
  2484  0599  018D               	clrf	13	;volatile
  2485                           
  2486                           ;pin_manager.c: 56: TRISB = 0x00;
  2487  059A  0021               	movlb	1	; select bank1
  2488  059B  018D               	clrf	13	;volatile
  2489                           
  2490                           ;pin_manager.c: 57: ANSELB = 0x00;
  2491  059C  0023               	movlb	3	; select bank3
  2492  059D  018D               	clrf	13	;volatile
  2493                           
  2494                           ;pin_manager.c: 58: WPUB = 0x00;
  2495  059E  0024               	movlb	4	; select bank4
  2496  059F  018D               	clrf	13	;volatile
  2497                           
  2498                           ;pin_manager.c: 60: LATC = 0x00;
  2499  05A0  0022               	movlb	2	; select bank2
  2500  05A1  018E               	clrf	14	;volatile
  2501                           
  2502                           ;pin_manager.c: 61: TRISC = 0xFF;
  2503  05A2  30FF               	movlw	255
  2504  05A3  0021               	movlb	1	; select bank1
  2505  05A4  008E               	movwf	14	;volatile
  2506                           
  2507                           ;pin_manager.c: 62: ANSELC = 0x00;
  2508  05A5  0023               	movlb	3	; select bank3
  2509  05A6  018E               	clrf	14	;volatile
  2510                           
  2511                           ;pin_manager.c: 63: WPUC = 0x00;
  2512  05A7  0024               	movlb	4	; select bank4
  2513  05A8  018E               	clrf	14	;volatile
  2514                           
  2515                           ;pin_manager.c: 65: OPTION_REGbits.nWPUEN = 0x01;
  2516  05A9  0021               	movlb	1	; select bank1
  2517  05AA  1795               	bsf	21,7	;volatile
  2518  05AB  0008               	return
  2519  05AC                     __end_of_PIN_MANAGER_Initialize:	
  2520                           
  2521                           	psect	text3
  2522  0565                     __ptext3:	
  2523 ;; *************** function _OSCILLATOR_Initialize *****************
  2524 ;; Defined at:
  2525 ;;		line 81 in file "mcc_generated_files/mcc.c"
  2526 ;; Parameters:    Size  Location     Type
  2527 ;;		None
  2528 ;; Auto vars:     Size  Location     Type
  2529 ;;		None
  2530 ;; Return value:  Size  Location     Type
  2531 ;;		None               void
  2532 ;; Registers used:
  2533 ;;		wreg, status,2
  2534 ;; Tracked objects:
  2535 ;;		On entry : 0/0
  2536 ;;		On exit  : 0/0
  2537 ;;		Unchanged: 0/0
  2538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2539 ;;      Params:         0       0       0       0       0       0       0       0
  2540 ;;      Locals:         0       0       0       0       0       0       0       0
  2541 ;;      Temps:          0       0       0       0       0       0       0       0
  2542 ;;      Totals:         0       0       0       0       0       0       0       0
  2543 ;;Total ram usage:        0 bytes
  2544 ;; Hardware stack levels used:    1
  2545 ;; This function calls:
  2546 ;;		Nothing
  2547 ;; This function is called by:
  2548 ;;		_SYSTEM_Initialize
  2549 ;; This function uses a non-reentrant model
  2550 ;;
  2551                           
  2552                           
  2553                           ;psect for function _OSCILLATOR_Initialize
  2554  0565                     _OSCILLATOR_Initialize:	
  2555                           
  2556                           ;mcc.c: 83: OSCCON = 0x7A;
  2557                           
  2558                           ;incstack = 0
  2559                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2560  0565  307A               	movlw	122
  2561  0566  0021               	movlb	1	; select bank1
  2562  0567  0099               	movwf	25	;volatile
  2563                           
  2564                           ;mcc.c: 85: OSCSTAT = 0x00;
  2565  0568  019A               	clrf	26	;volatile
  2566                           
  2567                           ;mcc.c: 87: OSCTUNE = 0x00;
  2568  0569  0198               	clrf	24	;volatile
  2569  056A  0008               	return
  2570  056B                     __end_of_OSCILLATOR_Initialize:	
  2571                           
  2572                           	psect	text4
  2573  0560                     __ptext4:	
  2574 ;; *************** function _DAC1_Initialize *****************
  2575 ;; Defined at:
  2576 ;;		line 58 in file "mcc_generated_files/dac1.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;		None
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;		None
  2581 ;; Return value:  Size  Location     Type
  2582 ;;		None               void
  2583 ;; Registers used:
  2584 ;;		wreg, status,2
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2590 ;;      Params:         0       0       0       0       0       0       0       0
  2591 ;;      Locals:         0       0       0       0       0       0       0       0
  2592 ;;      Temps:          0       0       0       0       0       0       0       0
  2593 ;;      Totals:         0       0       0       0       0       0       0       0
  2594 ;;Total ram usage:        0 bytes
  2595 ;; Hardware stack levels used:    1
  2596 ;; This function calls:
  2597 ;;		Nothing
  2598 ;; This function is called by:
  2599 ;;		_SYSTEM_Initialize
  2600 ;;		_main
  2601 ;; This function uses a non-reentrant model
  2602 ;;
  2603                           
  2604                           
  2605                           ;psect for function _DAC1_Initialize
  2606  0560                     _DAC1_Initialize:	
  2607                           
  2608                           ;dac1.c: 60: DAC1CON0 = 0xA0;
  2609                           
  2610                           ;incstack = 0
  2611                           ; Regs used in _DAC1_Initialize: [wreg+status,2]
  2612  0560  30A0               	movlw	160
  2613  0561  0022               	movlb	2	; select bank2
  2614  0562  0098               	movwf	24	;volatile
  2615                           
  2616                           ;dac1.c: 62: DAC1CON1 = 0x00;
  2617  0563  0199               	clrf	25	;volatile
  2618  0564  0008               	return
  2619  0565                     __end_of_DAC1_Initialize:	
  2620                           
  2621                           	psect	text5
  2622  06E6                     __ptext5:	
  2623 ;; *************** function _MIPI *****************
  2624 ;; Defined at:
  2625 ;;		line 162 in file "main.c"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;  a               1    wreg     unsigned char 
  2628 ;;  b               1    5[COMMON] unsigned char 
  2629 ;;  c               1    6[COMMON] unsigned char 
  2630 ;;  d               1    7[COMMON] unsigned char 
  2631 ;; Auto vars:     Size  Location     Type
  2632 ;;  a               1   10[COMMON] unsigned char 
  2633 ;;  j               1   11[COMMON] unsigned char 
  2634 ;;  i               1   12[COMMON] unsigned char 
  2635 ;; Return value:  Size  Location     Type
  2636 ;;		None               void
  2637 ;; Registers used:
  2638 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2639 ;; Tracked objects:
  2640 ;;		On entry : 0/0
  2641 ;;		On exit  : 0/0
  2642 ;;		Unchanged: 0/0
  2643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2644 ;;      Params:         3       0       0       0       0       0       0       0
  2645 ;;      Locals:         3       0       0       0       0       0       0       0
  2646 ;;      Temps:          2       0       0       0       0       0       0       0
  2647 ;;      Totals:         8       0       0       0       0       0       0       0
  2648 ;;Total ram usage:        8 bytes
  2649 ;; Hardware stack levels used:    1
  2650 ;; Hardware stack levels required when called:    1
  2651 ;; This function calls:
  2652 ;;		_paritycheck
  2653 ;;		_shiftRegister
  2654 ;; This function is called by:
  2655 ;;		_main
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659                           
  2660                           ;psect for function _MIPI
  2661  06E6                     _MIPI:	
  2662                           
  2663                           ;incstack = 0
  2664                           ; Regs used in _MIPI: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2665                           ;MIPI@a stored from wreg
  2666  06E6  00FA               	movwf	MIPI@a
  2667                           
  2668                           ;main.c: 163: parity1 = paritycheck(DATA[a]);
  2669  06E7  087A               	movf	MIPI@a,w
  2670  06E8  3E00               	addlw	low (_DATA| (0+32768))
  2671  06E9  0084               	movwf	4
  2672  06EA  3088               	movlw	high (_DATA| (0+32768))
  2673  06EB  1803               	skipnc
  2674  06EC  3E01               	addlw	1
  2675  06ED  0085               	movwf	5
  2676  06EE  0800               	movf	0,w	;code access
  2677  06EF  3185  2574  3186   	fcall	_paritycheck
  2678  06F2  00F8               	movwf	??_MIPI
  2679  06F3  0878               	movf	??_MIPI,w
  2680  06F4  0020               	movlb	0	; select bank0
  2681  06F5  00A2               	movwf	_parity1
  2682                           
  2683                           ;main.c: 164: parity2 = paritycheck(DATA[b]);
  2684  06F6  0875               	movf	MIPI@b,w
  2685  06F7  3E00               	addlw	low (_DATA| (0+32768))
  2686  06F8  0084               	movwf	4
  2687  06F9  3088               	movlw	high (_DATA| (0+32768))
  2688  06FA  1803               	skipnc
  2689  06FB  3E01               	addlw	1
  2690  06FC  0085               	movwf	5
  2691  06FD  0800               	movf	0,w	;code access
  2692  06FE  3185  2574  3186   	fcall	_paritycheck
  2693  0701  00F8               	movwf	??_MIPI
  2694  0702  0878               	movf	??_MIPI,w
  2695  0703  0020               	movlb	0	; select bank0
  2696  0704  00A3               	movwf	_parity2
  2697                           
  2698                           ;main.c: 165: parity3 = paritycheck(DATA[c]);
  2699  0705  0876               	movf	MIPI@c,w
  2700  0706  3E00               	addlw	low (_DATA| (0+32768))
  2701  0707  0084               	movwf	4
  2702  0708  3088               	movlw	high (_DATA| (0+32768))
  2703  0709  1803               	skipnc
  2704  070A  3E01               	addlw	1
  2705  070B  0085               	movwf	5
  2706  070C  0800               	movf	0,w	;code access
  2707  070D  3185  2574  3186   	fcall	_paritycheck
  2708  0710  00F8               	movwf	??_MIPI
  2709  0711  0878               	movf	??_MIPI,w
  2710  0712  0020               	movlb	0	; select bank0
  2711  0713  00A4               	movwf	_parity3
  2712                           
  2713                           ;main.c: 166: parity4 = paritycheck(DATA[d]);
  2714  0714  0877               	movf	MIPI@d,w
  2715  0715  3E00               	addlw	low (_DATA| (0+32768))
  2716  0716  0084               	movwf	4
  2717  0717  3088               	movlw	high (_DATA| (0+32768))
  2718  0718  1803               	skipnc
  2719  0719  3E01               	addlw	1
  2720  071A  0085               	movwf	5
  2721  071B  0800               	movf	0,w	;code access
  2722  071C  3185  2574  3186   	fcall	_paritycheck
  2723  071F  00F8               	movwf	??_MIPI
  2724  0720  0878               	movf	??_MIPI,w
  2725  0721  0020               	movlb	0	; select bank0
  2726  0722  00A5               	movwf	_parity4
  2727                           
  2728                           ;main.c: 167: for (uint8_t i=0; i<2; i++){
  2729  0723  01FC               	clrf	MIPI@i
  2730  0724                     L6:	
  2731  0724  3002               	movlw	2
  2732  0725  027C               	subwf	MIPI@i,w
  2733  0726  1803               	btfsc	3,0
  2734  0727  0008               	return
  2735                           
  2736                           ;main.c: 168: for (uint8_t j=0; j<2; j++){
  2737  0728  01FB               	clrf	MIPI@j
  2738  0729  3002               	movlw	2
  2739  072A  027B               	subwf	MIPI@j,w
  2740  072B  1803               	btfsc	3,0
  2741  072C  2FF1               	goto	l912
  2742  072D                     l128:	
  2743                           ;main.c: 169: do { LATB7 = 1; } while(0);
  2744                           
  2745  072D  0022               	movlb	2	; select bank2
  2746  072E  178D               	bsf	13,7	;volatile
  2747                           
  2748                           ;main.c: 170: do { LATB5 = 1; } while(0);
  2749  072F  168D               	bsf	13,5	;volatile
  2750  0730  0000               	nop	;# 
  2751                           
  2752                           ;main.c: 172: do { LATB7 = 0; } while(0);
  2753  0731  0022               	movlb	2	; select bank2
  2754  0732  138D               	bcf	13,7	;volatile
  2755                           
  2756                           ;main.c: 173: do { LATB5 = 0; } while(0);
  2757  0733  128D               	bcf	13,5	;volatile
  2758                           
  2759                           ;main.c: 174: shiftRegister (SLAVEADD[i],SLAVEADD[i],4);
  2760  0734  087C               	movf	MIPI@i,w
  2761  0735  3E87               	addlw	low (_SLAVEADD| (0+32768))
  2762  0736  0084               	movwf	4
  2763  0737  3088               	movlw	high (_SLAVEADD| (0+32768))
  2764  0738  1803               	skipnc
  2765  0739  3E01               	addlw	1
  2766  073A  0085               	movwf	5
  2767  073B  0800               	movf	0,w	;code access
  2768  073C  00F8               	movwf	??_MIPI
  2769  073D  0878               	movf	??_MIPI,w
  2770  073E  00F0               	movwf	shiftRegister@Dummy2
  2771  073F  3004               	movlw	4
  2772  0740  00F9               	movwf	??_MIPI+1
  2773  0741  0879               	movf	??_MIPI+1,w
  2774  0742  00F1               	movwf	shiftRegister@y
  2775  0743  087C               	movf	MIPI@i,w
  2776  0744  3E87               	addlw	low (_SLAVEADD| (0+32768))
  2777  0745  0084               	movwf	4
  2778  0746  3088               	movlw	high (_SLAVEADD| (0+32768))
  2779  0747  1803               	skipnc
  2780  0748  3E01               	addlw	1
  2781  0749  0085               	movwf	5
  2782  074A  0800               	movf	0,w	;code access
  2783  074B  3185  25AC  3186   	fcall	_shiftRegister
  2784                           
  2785                           ;main.c: 175: shiftRegister (0x02,0x02,3);
  2786  074E  3002               	movlw	2
  2787  074F  00F8               	movwf	??_MIPI
  2788  0750  0878               	movf	??_MIPI,w
  2789  0751  00F0               	movwf	shiftRegister@Dummy2
  2790  0752  3003               	movlw	3
  2791  0753  00F9               	movwf	??_MIPI+1
  2792  0754  0879               	movf	??_MIPI+1,w
  2793  0755  00F1               	movwf	shiftRegister@y
  2794  0756  3002               	movlw	2
  2795  0757  3185  25AC  3186   	fcall	_shiftRegister
  2796                           
  2797                           ;main.c: 176: shiftRegister (REGADD[j],REGADD[j],5);
  2798  075A  087B               	movf	MIPI@j,w
  2799  075B  3E85               	addlw	low (_REGADD| (0+32768))
  2800  075C  0084               	movwf	4
  2801  075D  3088               	movlw	high (_REGADD| (0+32768))
  2802  075E  1803               	skipnc
  2803  075F  3E01               	addlw	1
  2804  0760  0085               	movwf	5
  2805  0761  0800               	movf	0,w	;code access
  2806  0762  00F8               	movwf	??_MIPI
  2807  0763  0878               	movf	??_MIPI,w
  2808  0764  00F0               	movwf	shiftRegister@Dummy2
  2809  0765  3005               	movlw	5
  2810  0766  00F9               	movwf	??_MIPI+1
  2811  0767  0879               	movf	??_MIPI+1,w
  2812  0768  00F1               	movwf	shiftRegister@y
  2813  0769  087B               	movf	MIPI@j,w
  2814  076A  3E85               	addlw	low (_REGADD| (0+32768))
  2815  076B  0084               	movwf	4
  2816  076C  3088               	movlw	high (_REGADD| (0+32768))
  2817  076D  1803               	skipnc
  2818  076E  3E01               	addlw	1
  2819  076F  0085               	movwf	5
  2820  0770  0800               	movf	0,w	;code access
  2821  0771  3185  25AC  3186   	fcall	_shiftRegister
  2822                           
  2823                           ;main.c: 177: if (i==0)
  2824  0774  087C               	movf	MIPI@i,w
  2825  0775  1D03               	btfss	3,2
  2826  0776  2F7D               	goto	l892
  2827                           
  2828                           ;main.c: 178: shiftRegister (0x01,0x01,1);
  2829  0777  01F0               	clrf	shiftRegister@Dummy2
  2830  0778  0AF0               	incf	shiftRegister@Dummy2,f
  2831  0779  01F1               	clrf	shiftRegister@y
  2832  077A  0AF1               	incf	shiftRegister@y,f
  2833  077B  3001               	movlw	1
  2834  077C  2F81               	goto	L4
  2835  077D                     l892:	
  2836                           
  2837                           ;main.c: 179: else
  2838                           ;main.c: 180: shiftRegister (0x00,0x00,1);
  2839  077D  01F0               	clrf	shiftRegister@Dummy2
  2840  077E  01F1               	clrf	shiftRegister@y
  2841  077F  0AF1               	incf	shiftRegister@y,f
  2842  0780  3000               	movlw	0
  2843  0781                     L4:	
  2844  0781  3185  25AC  3186   	fcall	_shiftRegister
  2845                           
  2846                           ;main.c: 181: if (j==0){
  2847  0784  087B               	movf	MIPI@j,w
  2848  0785  1D03               	btfss	3,2
  2849  0786  2F98               	goto	l898
  2850                           
  2851                           ;main.c: 182: shiftRegister (0x00,0x00,8);
  2852  0787  01F0               	clrf	shiftRegister@Dummy2
  2853  0788  3008               	movlw	8
  2854  0789  00F8               	movwf	??_MIPI
  2855  078A  0878               	movf	??_MIPI,w
  2856  078B  00F1               	movwf	shiftRegister@y
  2857  078C  3000               	movlw	0
  2858  078D  3185  25AC  3186   	fcall	_shiftRegister
  2859                           
  2860                           ;main.c: 183: shiftRegister (0x01,0x01,2);
  2861  0790  01F0               	clrf	shiftRegister@Dummy2
  2862  0791  0AF0               	incf	shiftRegister@Dummy2,f
  2863  0792  3002               	movlw	2
  2864  0793  00F8               	movwf	??_MIPI
  2865  0794  0878               	movf	??_MIPI,w
  2866  0795  00F1               	movwf	shiftRegister@y
  2867  0796  3001               	movlw	1
  2868  0797  2FE4               	goto	L5
  2869  0798                     l898:	
  2870                           ;main.c: 184: }
  2871                           
  2872                           
  2873                           ;main.c: 185: else{
  2874                           ;main.c: 186: if (i==0){
  2875  0798  087C               	movf	MIPI@i,w
  2876  0799  1D03               	btfss	3,2
  2877  079A  2FC0               	goto	l904
  2878                           
  2879                           ;main.c: 187: shiftRegister (DATA[a],DATA[c],8);
  2880  079B  0876               	movf	MIPI@c,w
  2881  079C  3E00               	addlw	low (_DATA| (0+32768))
  2882  079D  0084               	movwf	4
  2883  079E  3088               	movlw	high (_DATA| (0+32768))
  2884  079F  1803               	skipnc
  2885  07A0  3E01               	addlw	1
  2886  07A1  0085               	movwf	5
  2887  07A2  0800               	movf	0,w	;code access
  2888  07A3  00F8               	movwf	??_MIPI
  2889  07A4  0878               	movf	??_MIPI,w
  2890  07A5  00F0               	movwf	shiftRegister@Dummy2
  2891  07A6  3008               	movlw	8
  2892  07A7  00F9               	movwf	??_MIPI+1
  2893  07A8  0879               	movf	??_MIPI+1,w
  2894  07A9  00F1               	movwf	shiftRegister@y
  2895  07AA  087A               	movf	MIPI@a,w
  2896  07AB  3E00               	addlw	low (_DATA| (0+32768))
  2897  07AC  0084               	movwf	4
  2898  07AD  3088               	movlw	high (_DATA| (0+32768))
  2899  07AE  1803               	skipnc
  2900  07AF  3E01               	addlw	1
  2901  07B0  0085               	movwf	5
  2902  07B1  0800               	movf	0,w	;code access
  2903  07B2  3185  25AC  3186   	fcall	_shiftRegister
  2904                           
  2905                           ;main.c: 188: shiftRegister (parity1,parity3,2);
  2906  07B5  0020               	movlb	0	; select bank0
  2907  07B6  0824               	movf	_parity3,w
  2908  07B7  00F8               	movwf	??_MIPI
  2909  07B8  0878               	movf	??_MIPI,w
  2910  07B9  00F0               	movwf	shiftRegister@Dummy2
  2911  07BA  3002               	movlw	2
  2912  07BB  00F9               	movwf	??_MIPI+1
  2913  07BC  0879               	movf	??_MIPI+1,w
  2914  07BD  00F1               	movwf	shiftRegister@y
  2915  07BE  0822               	movf	_parity1,w
  2916  07BF  2FE4               	goto	L5
  2917  07C0                     l904:	
  2918                           ;main.c: 189: }else{
  2919                           
  2920                           
  2921                           ;main.c: 190: shiftRegister (DATA[b],DATA[d],8);
  2922  07C0  0877               	movf	MIPI@d,w
  2923  07C1  3E00               	addlw	low (_DATA| (0+32768))
  2924  07C2  0084               	movwf	4
  2925  07C3  3088               	movlw	high (_DATA| (0+32768))
  2926  07C4  1803               	skipnc
  2927  07C5  3E01               	addlw	1
  2928  07C6  0085               	movwf	5
  2929  07C7  0800               	movf	0,w	;code access
  2930  07C8  00F8               	movwf	??_MIPI
  2931  07C9  0878               	movf	??_MIPI,w
  2932  07CA  00F0               	movwf	shiftRegister@Dummy2
  2933  07CB  3008               	movlw	8
  2934  07CC  00F9               	movwf	??_MIPI+1
  2935  07CD  0879               	movf	??_MIPI+1,w
  2936  07CE  00F1               	movwf	shiftRegister@y
  2937  07CF  0875               	movf	MIPI@b,w
  2938  07D0  3E00               	addlw	low (_DATA| (0+32768))
  2939  07D1  0084               	movwf	4
  2940  07D2  3088               	movlw	high (_DATA| (0+32768))
  2941  07D3  1803               	skipnc
  2942  07D4  3E01               	addlw	1
  2943  07D5  0085               	movwf	5
  2944  07D6  0800               	movf	0,w	;code access
  2945  07D7  3185  25AC  3186   	fcall	_shiftRegister
  2946                           
  2947                           ;main.c: 191: shiftRegister (parity2,parity4,2);
  2948  07DA  0020               	movlb	0	; select bank0
  2949  07DB  0825               	movf	_parity4,w
  2950  07DC  00F8               	movwf	??_MIPI
  2951  07DD  0878               	movf	??_MIPI,w
  2952  07DE  00F0               	movwf	shiftRegister@Dummy2
  2953  07DF  3002               	movlw	2
  2954  07E0  00F9               	movwf	??_MIPI+1
  2955  07E1  0879               	movf	??_MIPI+1,w
  2956  07E2  00F1               	movwf	shiftRegister@y
  2957  07E3  0823               	movf	_parity2,w
  2958  07E4                     L5:	
  2959  07E4  3185  25AC  3186   	fcall	_shiftRegister
  2960  07E7  0000               	nop	;# 
  2961  07E8  0000               	nop	;# 
  2962  07E9  3001               	movlw	1
  2963  07EA  00F8               	movwf	??_MIPI
  2964  07EB  0878               	movf	??_MIPI,w
  2965  07EC  07FB               	addwf	MIPI@j,f
  2966  07ED  3002               	movlw	2
  2967  07EE  027B               	subwf	MIPI@j,w
  2968  07EF  1C03               	skipc
  2969  07F0  2F2D               	goto	l128
  2970  07F1                     l912:	
  2971  07F1  3001               	movlw	1
  2972  07F2  00F8               	movwf	??_MIPI
  2973  07F3  0878               	movf	??_MIPI,w
  2974  07F4  07FC               	addwf	MIPI@i,f
  2975  07F5  2F24               	goto	L6
  2976  07F6                     __end_of_MIPI:	
  2977                           
  2978                           	psect	text6
  2979  05AC                     __ptext6:	
  2980 ;; *************** function _shiftRegister *****************
  2981 ;; Defined at:
  2982 ;;		line 139 in file "main.c"
  2983 ;; Parameters:    Size  Location     Type
  2984 ;;  Dummy1          1    wreg     unsigned char 
  2985 ;;  Dummy2          1    0[COMMON] unsigned char 
  2986 ;;  y               1    1[COMMON] unsigned char 
  2987 ;; Auto vars:     Size  Location     Type
  2988 ;;  Dummy1          1    4[COMMON] unsigned char 
  2989 ;;  m               1    3[COMMON] unsigned char 
  2990 ;; Return value:  Size  Location     Type
  2991 ;;		None               void
  2992 ;; Registers used:
  2993 ;;		wreg, status,2, status,0
  2994 ;; Tracked objects:
  2995 ;;		On entry : 0/0
  2996 ;;		On exit  : 0/0
  2997 ;;		Unchanged: 0/0
  2998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2999 ;;      Params:         2       0       0       0       0       0       0       0
  3000 ;;      Locals:         2       0       0       0       0       0       0       0
  3001 ;;      Temps:          1       0       0       0       0       0       0       0
  3002 ;;      Totals:         5       0       0       0       0       0       0       0
  3003 ;;Total ram usage:        5 bytes
  3004 ;; Hardware stack levels used:    1
  3005 ;; This function calls:
  3006 ;;		Nothing
  3007 ;; This function is called by:
  3008 ;;		_MIPI
  3009 ;; This function uses a non-reentrant model
  3010 ;;
  3011                           
  3012                           
  3013                           ;psect for function _shiftRegister
  3014  05AC                     _shiftRegister:	
  3015                           
  3016                           ;incstack = 0
  3017                           ; Regs used in _shiftRegister: [wreg+status,2+status,0]
  3018                           ;shiftRegister@Dummy1 stored from wreg
  3019  05AC  00F4               	movwf	shiftRegister@Dummy1
  3020                           
  3021                           ;main.c: 140: for (uint8_t m=0; m<y; m++){
  3022  05AD  01F3               	clrf	shiftRegister@m
  3023  05AE                     l846:	
  3024  05AE  0871               	movf	shiftRegister@y,w
  3025  05AF  0273               	subwf	shiftRegister@m,w
  3026  05B0  1803               	btfsc	3,0
  3027  05B1  0008               	return
  3028                           
  3029                           ;main.c: 141: do { LATB6 = 1; } while(0);
  3030  05B2  0022               	movlb	2	; select bank2
  3031  05B3  170D               	bsf	13,6	;volatile
  3032                           
  3033                           ;main.c: 142: LATB7 = Dummy1 & 0x01;
  3034  05B4  1C74               	btfss	shiftRegister@Dummy1,0
  3035  05B5  2DB9               	goto	u430
  3036  05B6  0022               	movlb	2	; select bank2
  3037  05B7  178D               	bsf	13,7	;volatile
  3038  05B8  2DBB               	goto	l836
  3039  05B9                     u430:	
  3040  05B9  0022               	movlb	2	; select bank2
  3041  05BA  138D               	bcf	13,7	;volatile
  3042  05BB                     l836:	
  3043                           
  3044                           ;main.c: 143: LATB5 = Dummy2 & 0x01;
  3045  05BB  1C70               	btfss	shiftRegister@Dummy2,0
  3046  05BC  2DC0               	goto	u450
  3047  05BD  0022               	movlb	2	; select bank2
  3048  05BE  168D               	bsf	13,5	;volatile
  3049  05BF  2DC2               	goto	u464
  3050  05C0                     u450:	
  3051  05C0  0022               	movlb	2	; select bank2
  3052  05C1  128D               	bcf	13,5	;volatile
  3053  05C2                     u464:	
  3054  05C2  0000               	nop	;# 
  3055                           
  3056                           ;main.c: 145: do { LATB6 = 0; } while(0);
  3057  05C3  0022               	movlb	2	; select bank2
  3058  05C4  130D               	bcf	13,6	;volatile
  3059                           
  3060                           ;main.c: 146: Dummy1 = Dummy1 >> 1;
  3061  05C5  3674               	lsrf	shiftRegister@Dummy1,w
  3062  05C6  00F2               	movwf	??_shiftRegister
  3063  05C7  0872               	movf	??_shiftRegister,w
  3064  05C8  00F4               	movwf	shiftRegister@Dummy1
  3065                           
  3066                           ;main.c: 147: Dummy2 = Dummy2 >> 1;
  3067  05C9  3670               	lsrf	shiftRegister@Dummy2,w
  3068  05CA  00F2               	movwf	??_shiftRegister
  3069  05CB  0872               	movf	??_shiftRegister,w
  3070  05CC  00F0               	movwf	shiftRegister@Dummy2
  3071  05CD  3001               	movlw	1
  3072  05CE  00F2               	movwf	??_shiftRegister
  3073  05CF  0872               	movf	??_shiftRegister,w
  3074  05D0  07F3               	addwf	shiftRegister@m,f
  3075  05D1  2DAE               	goto	l846
  3076  05D2                     __end_of_shiftRegister:	
  3077                           
  3078                           	psect	text7
  3079  0574                     __ptext7:	
  3080 ;; *************** function _paritycheck *****************
  3081 ;; Defined at:
  3082 ;;		line 151 in file "main.c"
  3083 ;; Parameters:    Size  Location     Type
  3084 ;;  Dummy           1    wreg     unsigned char 
  3085 ;; Auto vars:     Size  Location     Type
  3086 ;;  Dummy           1    2[COMMON] unsigned char 
  3087 ;;  parity          1    1[COMMON] unsigned char 
  3088 ;; Return value:  Size  Location     Type
  3089 ;;                  1    wreg      unsigned char 
  3090 ;; Registers used:
  3091 ;;		wreg, status,2, status,0
  3092 ;; Tracked objects:
  3093 ;;		On entry : 0/0
  3094 ;;		On exit  : 0/0
  3095 ;;		Unchanged: 0/0
  3096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3097 ;;      Params:         0       0       0       0       0       0       0       0
  3098 ;;      Locals:         2       0       0       0       0       0       0       0
  3099 ;;      Temps:          1       0       0       0       0       0       0       0
  3100 ;;      Totals:         3       0       0       0       0       0       0       0
  3101 ;;Total ram usage:        3 bytes
  3102 ;; Hardware stack levels used:    1
  3103 ;; This function calls:
  3104 ;;		Nothing
  3105 ;; This function is called by:
  3106 ;;		_MIPI
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110                           
  3111                           ;psect for function _paritycheck
  3112  0574                     _paritycheck:	
  3113                           
  3114                           ;incstack = 0
  3115                           ; Regs used in _paritycheck: [wreg+status,2+status,0]
  3116                           ;paritycheck@Dummy stored from wreg
  3117  0574  00F2               	movwf	paritycheck@Dummy
  3118                           
  3119                           ;main.c: 152: bool parity = 0;
  3120  0575  01F1               	clrf	paritycheck@parity
  3121  0576                     l116:	
  3122                           ;main.c: 153: while (Dummy)
  3123                           
  3124  0576  0872               	movf	paritycheck@Dummy,w
  3125  0577  1903               	btfsc	3,2
  3126  0578  2D89               	goto	l852
  3127                           
  3128                           ;main.c: 154: {
  3129                           ;main.c: 155: parity = !parity;
  3130  0579  0871               	movf	paritycheck@parity,w
  3131  057A  1D03               	btfss	3,2
  3132  057B  2D7E               	goto	u480
  3133  057C  3001               	movlw	1
  3134  057D  2D7F               	goto	u490
  3135  057E                     u480:	
  3136  057E  3000               	movlw	0
  3137  057F                     u490:	
  3138  057F  00F0               	movwf	??_paritycheck
  3139  0580  0870               	movf	??_paritycheck,w
  3140  0581  00F1               	movwf	paritycheck@parity
  3141                           
  3142                           ;main.c: 156: Dummy = Dummy & (Dummy - 1);
  3143  0582  0872               	movf	paritycheck@Dummy,w
  3144  0583  3EFF               	addlw	255
  3145  0584  0572               	andwf	paritycheck@Dummy,w
  3146  0585  00F0               	movwf	??_paritycheck
  3147  0586  0870               	movf	??_paritycheck,w
  3148  0587  00F2               	movwf	paritycheck@Dummy
  3149  0588  2D76               	goto	l116
  3150  0589                     l852:	
  3151                           
  3152                           ;main.c: 157: }
  3153                           ;main.c: 158: if (parity) return 0;
  3154  0589  0871               	movf	paritycheck@parity,w
  3155  058A  1903               	btfsc	3,2
  3156  058B  2D8E               	goto	l860
  3157  058C  3000               	movlw	0
  3158  058D  0008               	return
  3159  058E                     l860:	
  3160                           
  3161                           ;main.c: 159: else return 1;
  3162  058E  3001               	movlw	1
  3163  058F  0008               	return
  3164  0590                     __end_of_paritycheck:	
  3165                           
  3166                           	psect	text8
  3167  055B                     __ptext8:	
  3168 ;; *************** function _DAC1_SetOutput *****************
  3169 ;; Defined at:
  3170 ;;		line 65 in file "mcc_generated_files/dac1.c"
  3171 ;; Parameters:    Size  Location     Type
  3172 ;;  inputData       1    wreg     unsigned char 
  3173 ;; Auto vars:     Size  Location     Type
  3174 ;;  inputData       1    0[COMMON] unsigned char 
  3175 ;; Return value:  Size  Location     Type
  3176 ;;		None               void
  3177 ;; Registers used:
  3178 ;;		wreg
  3179 ;; Tracked objects:
  3180 ;;		On entry : 0/0
  3181 ;;		On exit  : 0/0
  3182 ;;		Unchanged: 0/0
  3183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3184 ;;      Params:         0       0       0       0       0       0       0       0
  3185 ;;      Locals:         1       0       0       0       0       0       0       0
  3186 ;;      Temps:          0       0       0       0       0       0       0       0
  3187 ;;      Totals:         1       0       0       0       0       0       0       0
  3188 ;;Total ram usage:        1 bytes
  3189 ;; Hardware stack levels used:    1
  3190 ;; This function calls:
  3191 ;;		Nothing
  3192 ;; This function is called by:
  3193 ;;		_main
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197                           
  3198                           ;psect for function _DAC1_SetOutput
  3199  055B                     _DAC1_SetOutput:	
  3200                           
  3201                           ;incstack = 0
  3202                           ; Regs used in _DAC1_SetOutput: [wreg]
  3203                           ;DAC1_SetOutput@inputData stored from wreg
  3204  055B  00F0               	movwf	DAC1_SetOutput@inputData
  3205                           
  3206                           ;dac1.c: 66: DAC1CON1 = inputData;
  3207  055C  0870               	movf	DAC1_SetOutput@inputData,w
  3208  055D  0022               	movlb	2	; select bank2
  3209  055E  0099               	movwf	25	;volatile
  3210  055F  0008               	return
  3211  0560                     __end_of_DAC1_SetOutput:	
  3212                           
  3213                           	psect	text9
  3214  05D2                     __ptext9:	
  3215 ;; *************** function _ConfigureShiftRegister *****************
  3216 ;; Defined at:
  3217 ;;		line 200 in file "main.c"
  3218 ;; Parameters:    Size  Location     Type
  3219 ;;		None
  3220 ;; Auto vars:     Size  Location     Type
  3221 ;;  ReverseReg      1    2[COMMON] unsigned char 
  3222 ;;  i               1    1[COMMON] unsigned char 
  3223 ;; Return value:  Size  Location     Type
  3224 ;;		None               void
  3225 ;; Registers used:
  3226 ;;		wreg, status,2, status,0
  3227 ;; Tracked objects:
  3228 ;;		On entry : 0/0
  3229 ;;		On exit  : 0/0
  3230 ;;		Unchanged: 0/0
  3231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3232 ;;      Params:         0       0       0       0       0       0       0       0
  3233 ;;      Locals:         2       0       0       0       0       0       0       0
  3234 ;;      Temps:          1       0       0       0       0       0       0       0
  3235 ;;      Totals:         3       0       0       0       0       0       0       0
  3236 ;;Total ram usage:        3 bytes
  3237 ;; Hardware stack levels used:    1
  3238 ;; This function calls:
  3239 ;;		Nothing
  3240 ;; This function is called by:
  3241 ;;		_main
  3242 ;; This function uses a non-reentrant model
  3243 ;;
  3244                           
  3245                           
  3246                           ;psect for function _ConfigureShiftRegister
  3247  05D2                     _ConfigureShiftRegister:	
  3248                           
  3249                           ;main.c: 201: uint8_t ReverseReg, i;
  3250                           ;main.c: 202: if ((Byte2 <=64) && (Byte3 <=64))
  3251                           
  3252                           ;incstack = 0
  3253                           ; Regs used in _ConfigureShiftRegister: [wreg+status,2+status,0]
  3254  05D2  3041               	movlw	65
  3255  05D3  0020               	movlb	0	; select bank0
  3256  05D4  0221               	subwf	_Byte2,w
  3257  05D5  1803               	skipnc
  3258  05D6  2DDD               	goto	l922
  3259  05D7  3041               	movlw	65
  3260  05D8  027D               	subwf	_Byte3,w
  3261  05D9  1803               	skipnc
  3262  05DA  2DDD               	goto	l922
  3263                           
  3264                           ;main.c: 203: ReverseReg = 0x30;
  3265  05DB  3030               	movlw	48
  3266  05DC  2DF2               	goto	L9
  3267  05DD                     l922:	
  3268                           
  3269                           ;main.c: 204: else if ((Byte2 == 65) && (Byte3 <=64))
  3270  05DD  3041               	movlw	65
  3271  05DE  0621               	xorwf	_Byte2,w
  3272  05DF  1D03               	btfss	3,2
  3273  05E0  2DE7               	goto	l928
  3274  05E1  3041               	movlw	65
  3275  05E2  027D               	subwf	_Byte3,w
  3276  05E3  1803               	skipnc
  3277  05E4  2DE7               	goto	l928
  3278                           
  3279                           ;main.c: 205: ReverseReg = 0x10;
  3280  05E5  3010               	movlw	16
  3281  05E6  2DF2               	goto	L9
  3282  05E7                     l928:	
  3283                           
  3284                           ;main.c: 206: else if ((Byte2 == 66) && (Byte3 <=64))
  3285  05E7  3042               	movlw	66
  3286  05E8  0621               	xorwf	_Byte2,w
  3287  05E9  1D03               	btfss	3,2
  3288  05EA  2DF1               	goto	l934
  3289  05EB  3041               	movlw	65
  3290  05EC  027D               	subwf	_Byte3,w
  3291  05ED  1803               	skipnc
  3292  05EE  2DF1               	goto	l934
  3293                           
  3294                           ;main.c: 207: ReverseReg = 0xB0;
  3295  05EF  30B0               	movlw	176
  3296  05F0  2DF2               	goto	L9
  3297  05F1                     l934:	
  3298                           
  3299                           ;main.c: 208: else
  3300                           ;main.c: 209: ReverseReg = 0x90;
  3301  05F1  3090               	movlw	144
  3302  05F2                     L9:	
  3303  05F2  00F0               	movwf	??_ConfigureShiftRegister
  3304  05F3  0870               	movf	??_ConfigureShiftRegister,w
  3305  05F4  00F2               	movwf	ConfigureShiftRegister@ReverseReg
  3306                           
  3307                           ;main.c: 270: LATA4 = 0;
  3308  05F5  0022               	movlb	2	; select bank2
  3309  05F6  120C               	bcf	12,4	;volatile
  3310                           
  3311                           ;main.c: 271: do { LATB6 = 1; } while(0);
  3312  05F7  170D               	bsf	13,6	;volatile
  3313  05F8  0000               	nop	;# 
  3314                           
  3315                           ;main.c: 273: do { LATB6 = 0; } while(0);
  3316  05F9  0022               	movlb	2	; select bank2
  3317  05FA  130D               	bcf	13,6	;volatile
  3318                           
  3319                           ;main.c: 275: for (i=0; i<8; i++) {
  3320  05FB  01F1               	clrf	ConfigureShiftRegister@i
  3321  05FC  3008               	movlw	8
  3322  05FD  0271               	subwf	ConfigureShiftRegister@i,w
  3323  05FE  1803               	btfsc	3,0
  3324  05FF  2E17               	goto	l156
  3325  0600                     l155:	
  3326                           
  3327                           ;main.c: 276: LATA4 = ReverseReg & 0x01;
  3328  0600  1C72               	btfss	ConfigureShiftRegister@ReverseReg,0
  3329  0601  2E05               	goto	u660
  3330  0602  0022               	movlb	2	; select bank2
  3331  0603  160C               	bsf	12,4	;volatile
  3332  0604  2E07               	goto	l157
  3333  0605                     u660:	
  3334  0605  0022               	movlb	2	; select bank2
  3335  0606  120C               	bcf	12,4	;volatile
  3336  0607                     l157:	
  3337                           ;main.c: 277: do { LATB6 = 1; } while(0);
  3338                           
  3339  0607  170D               	bsf	13,6	;volatile
  3340  0608  0000               	nop	;# 
  3341                           
  3342                           ;main.c: 279: do { LATB6 = 0; } while(0);
  3343  0609  0022               	movlb	2	; select bank2
  3344  060A  130D               	bcf	13,6	;volatile
  3345                           
  3346                           ;main.c: 280: ReverseReg = ReverseReg >> 1;
  3347  060B  3672               	lsrf	ConfigureShiftRegister@ReverseReg,w
  3348  060C  00F0               	movwf	??_ConfigureShiftRegister
  3349  060D  0870               	movf	??_ConfigureShiftRegister,w
  3350  060E  00F2               	movwf	ConfigureShiftRegister@ReverseReg
  3351  060F  3001               	movlw	1
  3352  0610  00F0               	movwf	??_ConfigureShiftRegister
  3353  0611  0870               	movf	??_ConfigureShiftRegister,w
  3354  0612  07F1               	addwf	ConfigureShiftRegister@i,f
  3355  0613  3008               	movlw	8
  3356  0614  0271               	subwf	ConfigureShiftRegister@i,w
  3357  0615  1C03               	skipc
  3358  0616  2E00               	goto	l155
  3359  0617                     l156:	
  3360                           
  3361                           ;main.c: 281: }
  3362                           ;main.c: 284: LATA4 = 0;
  3363  0617  120C               	bcf	12,4	;volatile
  3364                           
  3365                           ;main.c: 285: do { LATB6 = 1; } while(0);
  3366  0618  170D               	bsf	13,6	;volatile
  3367  0619  0000               	nop	;# 
  3368                           
  3369                           ;main.c: 287: do { LATB6 = 0; } while(0);
  3370  061A  0022               	movlb	2	; select bank2
  3371  061B  130D               	bcf	13,6	;volatile
  3372  061C  0008               	return
  3373  061D                     __end_of_ConfigureShiftRegister:	
  3374  007E                     btemp	set	126	;btemp
  3375  007E                     wtemp	set	126
  3376  007E                     wtemp0	set	126
  3377  0080                     wtemp1	set	128
  3378  0082                     wtemp2	set	130
  3379  0084                     wtemp3	set	132
  3380  0086                     wtemp4	set	134
  3381  0088                     wtemp5	set	136
  3382  007F                     wtemp6	set	127
  3383  007E                     ttemp	set	126
  3384  007E                     ttemp0	set	126
  3385  0081                     ttemp1	set	129
  3386  0084                     ttemp2	set	132
  3387  0087                     ttemp3	set	135
  3388  007F                     ttemp4	set	127
  3389  007E                     ltemp	set	126
  3390  007E                     ltemp0	set	126
  3391  0082                     ltemp1	set	130
  3392  0086                     ltemp2	set	134
  3393  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    137
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80      3       9
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_MIPI
    _MIPI->_shiftRegister

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    2250
                                              0 BANK0      3     3      0
             _ConfigureShiftRegister
                    _DAC1_Initialize
                     _DAC1_SetOutput
                               _MIPI
             _PIN_MANAGER_Initialize
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _DAC1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DAC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MIPI                                                 8     5      3    2133
                                              5 COMMON     8     5      3
                        _paritycheck
                      _shiftRegister
 ---------------------------------------------------------------------------------
 (2) _shiftRegister                                        5     3      2    1082
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) _paritycheck                                          3     3      0     113
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _DAC1_SetOutput                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureShiftRegister                               3     3      0      95
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureShiftRegister
   _DAC1_Initialize
   _DAC1_SetOutput
   _MIPI
     _paritycheck
     _shiftRegister
   _PIN_MANAGER_Initialize
   _SYSTEM_Initialize
     _DAC1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      17       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      3       9       6       11.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      17      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Jan 14 10:34:35 2016

                     __CFG_CP$OFF 0000                       __CFG_LVP$ON 0000                   _DAC1_Initialize 0560  
                             l200 0693                               l203 0696                               l116 0576  
                             l206 0699                               l128 072D                               l155 0600  
                             l156 0617                               l157 0607                               l904 07C0  
                             l912 07F1                               l922 05DD                               l860 058E  
                             l852 0589                               l836 05BB                               l934 05F1  
                             l846 05AE                               l928 05E7                               l970 0647  
                             l962 062F                               l892 077D                               l980 0663  
                             l966 063B                               l992 069C                               l984 0673  
                             l898 0798                               l998 06B3                               u430 05B9  
                             u450 05C0                               u480 057E                               u464 05C2  
                             u490 057F                               u660 0605    __end_of_ConfigureShiftRegister 061D  
                    __CFG_BORV$LO 0000                    _DAC1_SetOutput 055B                      __CFG_ZCD$OFF 0000  
                            l1010 06D7                              l1004 06C4                              _DATA 0800  
                            _LATA 010C                              _LATB 010D                              _LATC 010E  
                            _MIPI 06E6                              _WPUB 020D                              _WPUC 020E  
                    __CFG_WRT$OFF 0000                              _main 061D                              fsr0h 0005  
                            fsr0l 0004                              indf0 0000                              btemp 007E  
                            ltemp 007E                              start 0002                              ttemp 007E  
                            wtemp 007E                             ?_MIPI 0075                             MIPI@a 007A  
                           MIPI@b 0075                             MIPI@c 0076                             MIPI@d 0077  
                           MIPI@i 007C                             MIPI@j 007B    __size_of_OSCILLATOR_Initialize 0006  
   __end_of_OSCILLATOR_Initialize 056B                             ?_main 0070                     __CFG_WDTE$OFF 0000  
                           _LATA1 0861                             _LATA2 0862                             _LATA4 0864  
                           _LATB4 086C                             _LATB5 086D                             _LATB6 086E  
                           _LATB7 086F            __end_of_DAC1_SetOutput 0560                             _PORTC 000E  
                           _TRISA 008C                             _TRISB 008D                             _TRISC 008E  
                __end_of_SLAVEADD 0889                             _Byte1 0020                             _Byte2 0021  
                           _Byte3 007D                     __CFG_PWRTE$ON 0000                    __CFG_BOREN$OFF 0000  
                           ltemp0 007E                             ltemp1 0082                             ltemp2 0086  
                           ltemp3 0080                             ttemp0 007E                             ttemp1 0081  
                           ttemp2 0084                             ttemp3 0087                             ttemp4 007F  
                           status 0003                             wtemp0 007E                             wtemp1 0080  
                           wtemp2 0082                             wtemp3 0084                             wtemp4 0086  
                           wtemp5 0088                             wtemp6 007F                      __end_of_DATA 0841  
                    __end_of_MIPI 07F6                    __CFG_MCLRE$OFF 0000                   __initialization 07F6  
                    __end_of_main 06E6           __end_of_DAC1_Initialize 0565                      ?_paritycheck 0070  
                          ??_MIPI 0078                    __CFG_LPBOR$OFF 0000                            ??_main 0026  
                 ?_DAC1_SetOutput 0070                    __CFG_PLLEN$OFF 0000                            _ANSELA 018C  
                          _ANSELB 018D                            _ANSELC 018E                            _REGADD 0885  
                          _OSCCON 0099           DAC1_SetOutput@inputData 0070                    __CFG_STVREN$ON 0000  
              __end_of_ACTIVEBAND 0881                 __end_of_DacOutput 0885             __end_of_shiftRegister 05D2  
               _SYSTEM_Initialize 056B           __end_of__initialization 07FD                ?_SYSTEM_Initialize 0070  
                  __pcstackCOMMON 0070               ??_SYSTEM_Initialize 0070                  ?_DAC1_Initialize 0070  
                  _OPTION_REGbits 0095         __end_of_SYSTEM_Initialize 0574                        __pbssBANK0 0020  
                paritycheck@Dummy 0072                    shiftRegister@m 0073                    shiftRegister@y 0071  
                      __pmaintext 061D                   __CFG_PPS1WAY$ON 0000              __size_of_paritycheck 001C  
                 __CFG_WDTCCS$SWC 0000                           _OSCSTAT 009A                           _OSCTUNE 0098  
             shiftRegister@Dummy1 0074               shiftRegister@Dummy2 0070                  ??_DAC1_SetOutput 0070  
         ConfigureShiftRegister@i 0071                           __ptext1 056B                           __ptext2 0590  
                         __ptext3 0565                           __ptext4 0560                           __ptext5 06E6  
                         __ptext6 05AC                           __ptext7 0574                           __ptext8 055B  
                         __ptext9 05D2             _OSCILLATOR_Initialize 0565                           _parity1 0022  
                         _parity2 0023                           _parity3 0024                           _parity4 0025  
        ??_PIN_MANAGER_Initialize 0070        __size_of_SYSTEM_Initialize 0009              end_of_initialization 07FD  
                    __pstringtext 0800          ??_ConfigureShiftRegister 0070                  __CFG_FOSC$INTOSC 0000  
                       _DacOutput 0881                    __end_of_REGADD 0887            ?_OSCILLATOR_Initialize 0070  
             start_initialization 07F6   __size_of_PIN_MANAGER_Initialize 001C            __size_of_shiftRegister 0026  
 __size_of_ConfigureShiftRegister 004B          __size_of_DAC1_Initialize 0005                       __pbssCOMMON 007D  
                       ___latbits 0001                     __pcstackBANK0 0026                 paritycheck@parity 0071  
          _PIN_MANAGER_Initialize 0590                     ??_paritycheck 0070                          _DAC1CON0 0118  
                        _DAC1CON1 0119                     _shiftRegister 05AC            _ConfigureShiftRegister 05D2  
                        _SLAVEADD 0887              __CFG_WDTCPS$WDTCPS1F 0000                    ?_shiftRegister 0070  
             __end_of_paritycheck 0590                 ??_DAC1_Initialize 0070                        _ACTIVEBAND 0841  
         ??_OSCILLATOR_Initialize 0070           __size_of_DAC1_SetOutput 0005                     __size_of_MIPI 0110  
                   __size_of_main 00C9              __CFG_WDTCWS$WDTCWSSW 0000  ConfigureShiftRegister@ReverseReg 0072  
                     _paritycheck 0574                   ??_shiftRegister 0072           ?_PIN_MANAGER_Initialize 0070  
               __CFG_CLKOUTEN$OFF 0000           ?_ConfigureShiftRegister 0070    __end_of_PIN_MANAGER_Initialize 05AC  
