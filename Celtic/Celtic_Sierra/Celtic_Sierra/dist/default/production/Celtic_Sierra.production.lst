

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Wed Jan 06 10:36:39 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16LF1618
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	swtext1,local,class=CONST,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	dabs	1,0x7E,2
    21  0000                     	;# 
    22  0001                     	;# 
    23  0002                     	;# 
    24  0003                     	;# 
    25  0004                     	;# 
    26  0005                     	;# 
    27  0006                     	;# 
    28  0007                     	;# 
    29  0008                     	;# 
    30  0009                     	;# 
    31  000A                     	;# 
    32  000B                     	;# 
    33  000C                     	;# 
    34  000D                     	;# 
    35  000E                     	;# 
    36  0010                     	;# 
    37  0011                     	;# 
    38  0012                     	;# 
    39  0013                     	;# 
    40  0014                     	;# 
    41  0015                     	;# 
    42  0016                     	;# 
    43  0016                     	;# 
    44  0017                     	;# 
    45  0018                     	;# 
    46  0019                     	;# 
    47  001A                     	;# 
    48  001A                     	;# 
    49  001B                     	;# 
    50  001B                     	;# 
    51  001C                     	;# 
    52  001D                     	;# 
    53  001E                     	;# 
    54  001F                     	;# 
    55  008C                     	;# 
    56  008D                     	;# 
    57  008E                     	;# 
    58  0090                     	;# 
    59  0091                     	;# 
    60  0092                     	;# 
    61  0093                     	;# 
    62  0094                     	;# 
    63  0095                     	;# 
    64  0096                     	;# 
    65  0098                     	;# 
    66  0099                     	;# 
    67  009A                     	;# 
    68  009B                     	;# 
    69  009B                     	;# 
    70  009C                     	;# 
    71  009D                     	;# 
    72  009E                     	;# 
    73  009F                     	;# 
    74  010C                     	;# 
    75  010D                     	;# 
    76  010E                     	;# 
    77  0111                     	;# 
    78  0112                     	;# 
    79  0113                     	;# 
    80  0114                     	;# 
    81  0115                     	;# 
    82  0116                     	;# 
    83  0117                     	;# 
    84  0118                     	;# 
    85  0119                     	;# 
    86  011C                     	;# 
    87  018C                     	;# 
    88  018D                     	;# 
    89  018E                     	;# 
    90  0191                     	;# 
    91  0191                     	;# 
    92  0192                     	;# 
    93  0193                     	;# 
    94  0193                     	;# 
    95  0194                     	;# 
    96  0195                     	;# 
    97  0196                     	;# 
    98  0199                     	;# 
    99  0199                     	;# 
   100  0199                     	;# 
   101  019A                     	;# 
   102  019A                     	;# 
   103  019A                     	;# 
   104  019B                     	;# 
   105  019B                     	;# 
   106  019B                     	;# 
   107  019B                     	;# 
   108  019B                     	;# 
   109  019C                     	;# 
   110  019C                     	;# 
   111  019C                     	;# 
   112  019D                     	;# 
   113  019D                     	;# 
   114  019D                     	;# 
   115  019E                     	;# 
   116  019E                     	;# 
   117  019E                     	;# 
   118  019F                     	;# 
   119  019F                     	;# 
   120  019F                     	;# 
   121  019F                     	;# 
   122  019F                     	;# 
   123  020C                     	;# 
   124  020D                     	;# 
   125  020E                     	;# 
   126  0211                     	;# 
   127  0211                     	;# 
   128  0212                     	;# 
   129  0212                     	;# 
   130  0213                     	;# 
   131  0213                     	;# 
   132  0214                     	;# 
   133  0214                     	;# 
   134  0215                     	;# 
   135  0215                     	;# 
   136  0215                     	;# 
   137  0215                     	;# 
   138  0216                     	;# 
   139  0216                     	;# 
   140  0217                     	;# 
   141  0217                     	;# 
   142  028C                     	;# 
   143  028D                     	;# 
   144  028E                     	;# 
   145  0291                     	;# 
   146  0291                     	;# 
   147  0292                     	;# 
   148  0293                     	;# 
   149  0294                     	;# 
   150  0298                     	;# 
   151  0298                     	;# 
   152  0299                     	;# 
   153  029A                     	;# 
   154  029B                     	;# 
   155  029E                     	;# 
   156  030C                     	;# 
   157  030D                     	;# 
   158  030E                     	;# 
   159  038C                     	;# 
   160  038D                     	;# 
   161  038E                     	;# 
   162  0391                     	;# 
   163  0392                     	;# 
   164  0393                     	;# 
   165  0394                     	;# 
   166  0395                     	;# 
   167  0396                     	;# 
   168  0397                     	;# 
   169  0398                     	;# 
   170  0399                     	;# 
   171  040E                     	;# 
   172  0413                     	;# 
   173  0413                     	;# 
   174  0414                     	;# 
   175  0414                     	;# 
   176  0415                     	;# 
   177  0416                     	;# 
   178  0417                     	;# 
   179  0418                     	;# 
   180  041A                     	;# 
   181  041A                     	;# 
   182  041B                     	;# 
   183  041B                     	;# 
   184  041C                     	;# 
   185  041D                     	;# 
   186  041E                     	;# 
   187  041F                     	;# 
   188  0493                     	;# 
   189  0494                     	;# 
   190  0495                     	;# 
   191  0496                     	;# 
   192  049A                     	;# 
   193  049B                     	;# 
   194  049C                     	;# 
   195  049D                     	;# 
   196  058C                     	;# 
   197  058C                     	;# 
   198  058D                     	;# 
   199  058E                     	;# 
   200  058E                     	;# 
   201  058F                     	;# 
   202  0590                     	;# 
   203  0590                     	;# 
   204  0591                     	;# 
   205  0592                     	;# 
   206  0592                     	;# 
   207  0593                     	;# 
   208  0594                     	;# 
   209  0594                     	;# 
   210  0595                     	;# 
   211  0596                     	;# 
   212  0596                     	;# 
   213  0597                     	;# 
   214  0598                     	;# 
   215  0599                     	;# 
   216  059A                     	;# 
   217  059B                     	;# 
   218  059B                     	;# 
   219  059C                     	;# 
   220  059D                     	;# 
   221  060C                     	;# 
   222  060C                     	;# 
   223  060D                     	;# 
   224  060E                     	;# 
   225  060F                     	;# 
   226  060F                     	;# 
   227  0610                     	;# 
   228  0611                     	;# 
   229  0612                     	;# 
   230  0613                     	;# 
   231  0614                     	;# 
   232  0617                     	;# 
   233  0618                     	;# 
   234  0619                     	;# 
   235  061A                     	;# 
   236  061B                     	;# 
   237  061C                     	;# 
   238  0691                     	;# 
   239  0692                     	;# 
   240  0693                     	;# 
   241  0694                     	;# 
   242  0695                     	;# 
   243  0696                     	;# 
   244  0697                     	;# 
   245  0699                     	;# 
   246  069A                     	;# 
   247  0711                     	;# 
   248  0712                     	;# 
   249  0713                     	;# 
   250  0714                     	;# 
   251  0715                     	;# 
   252  0718                     	;# 
   253  0718                     	;# 
   254  0719                     	;# 
   255  071A                     	;# 
   256  071A                     	;# 
   257  071B                     	;# 
   258  071C                     	;# 
   259  071D                     	;# 
   260  0791                     	;# 
   261  0791                     	;# 
   262  0792                     	;# 
   263  0793                     	;# 
   264  0793                     	;# 
   265  0794                     	;# 
   266  0795                     	;# 
   267  0795                     	;# 
   268  0796                     	;# 
   269  0797                     	;# 
   270  0797                     	;# 
   271  0798                     	;# 
   272  0799                     	;# 
   273  079A                     	;# 
   274  080C                     	;# 
   275  080C                     	;# 
   276  080D                     	;# 
   277  080E                     	;# 
   278  080E                     	;# 
   279  080F                     	;# 
   280  0810                     	;# 
   281  0810                     	;# 
   282  0811                     	;# 
   283  0812                     	;# 
   284  0812                     	;# 
   285  0813                     	;# 
   286  0814                     	;# 
   287  0815                     	;# 
   288  0816                     	;# 
   289  0817                     	;# 
   290  0818                     	;# 
   291  0819                     	;# 
   292  081A                     	;# 
   293  081A                     	;# 
   294  081B                     	;# 
   295  081C                     	;# 
   296  081C                     	;# 
   297  081D                     	;# 
   298  088C                     	;# 
   299  088D                     	;# 
   300  088E                     	;# 
   301  088F                     	;# 
   302  088F                     	;# 
   303  0890                     	;# 
   304  0891                     	;# 
   305  0892                     	;# 
   306  0893                     	;# 
   307  0893                     	;# 
   308  0894                     	;# 
   309  0895                     	;# 
   310  0896                     	;# 
   311  0897                     	;# 
   312  0897                     	;# 
   313  0898                     	;# 
   314  0899                     	;# 
   315  0D8C                     	;# 
   316  0D8C                     	;# 
   317  0D8D                     	;# 
   318  0D8E                     	;# 
   319  0D8F                     	;# 
   320  0D8F                     	;# 
   321  0D90                     	;# 
   322  0D91                     	;# 
   323  0D92                     	;# 
   324  0D92                     	;# 
   325  0D93                     	;# 
   326  0D94                     	;# 
   327  0D95                     	;# 
   328  0D95                     	;# 
   329  0D96                     	;# 
   330  0D97                     	;# 
   331  0D98                     	;# 
   332  0D99                     	;# 
   333  0D9A                     	;# 
   334  0D9B                     	;# 
   335  0D9C                     	;# 
   336  0D9D                     	;# 
   337  0D9E                     	;# 
   338  0D9E                     	;# 
   339  0D9F                     	;# 
   340  0DA0                     	;# 
   341  0DA1                     	;# 
   342  0DA1                     	;# 
   343  0DA2                     	;# 
   344  0DA3                     	;# 
   345  0DA4                     	;# 
   346  0DA4                     	;# 
   347  0DA5                     	;# 
   348  0DA6                     	;# 
   349  0DA7                     	;# 
   350  0DA7                     	;# 
   351  0DA8                     	;# 
   352  0DA9                     	;# 
   353  0DAA                     	;# 
   354  0DAB                     	;# 
   355  0DAC                     	;# 
   356  0DAD                     	;# 
   357  0DAE                     	;# 
   358  0DAF                     	;# 
   359  0E0F                     	;# 
   360  0E10                     	;# 
   361  0E11                     	;# 
   362  0E12                     	;# 
   363  0E13                     	;# 
   364  0E14                     	;# 
   365  0E15                     	;# 
   366  0E16                     	;# 
   367  0E17                     	;# 
   368  0E18                     	;# 
   369  0E19                     	;# 
   370  0E1A                     	;# 
   371  0E1B                     	;# 
   372  0E1C                     	;# 
   373  0E1D                     	;# 
   374  0E1E                     	;# 
   375  0E1F                     	;# 
   376  0E20                     	;# 
   377  0E21                     	;# 
   378  0E22                     	;# 
   379  0E23                     	;# 
   380  0E24                     	;# 
   381  0E25                     	;# 
   382  0E26                     	;# 
   383  0E27                     	;# 
   384  0E28                     	;# 
   385  0E29                     	;# 
   386  0E2A                     	;# 
   387  0E2B                     	;# 
   388  0E2C                     	;# 
   389  0E2D                     	;# 
   390  0E2E                     	;# 
   391  0E90                     	;# 
   392  0E91                     	;# 
   393  0E92                     	;# 
   394  0E94                     	;# 
   395  0E95                     	;# 
   396  0E9C                     	;# 
   397  0E9D                     	;# 
   398  0E9E                     	;# 
   399  0E9F                     	;# 
   400  0EA0                     	;# 
   401  0EA1                     	;# 
   402  0EA2                     	;# 
   403  0EA3                     	;# 
   404  0EA4                     	;# 
   405  0EA5                     	;# 
   406  0EA6                     	;# 
   407  0EA7                     	;# 
   408  0F0F                     	;# 
   409  0F10                     	;# 
   410  0F11                     	;# 
   411  0F12                     	;# 
   412  0F13                     	;# 
   413  0F14                     	;# 
   414  0F15                     	;# 
   415  0F16                     	;# 
   416  0F17                     	;# 
   417  0F18                     	;# 
   418  0F19                     	;# 
   419  0F1A                     	;# 
   420  0F1B                     	;# 
   421  0F1C                     	;# 
   422  0F1D                     	;# 
   423  0F1E                     	;# 
   424  0F1F                     	;# 
   425  0F20                     	;# 
   426  0F21                     	;# 
   427  0F22                     	;# 
   428  0F23                     	;# 
   429  0FE4                     	;# 
   430  0FE5                     	;# 
   431  0FE6                     	;# 
   432  0FE7                     	;# 
   433  0FE8                     	;# 
   434  0FE9                     	;# 
   435  0FEA                     	;# 
   436  0FEB                     	;# 
   437  0FED                     	;# 
   438  0FEE                     	;# 
   439  0FEF                     	;# 
   440  0000                     	;# 
   441  0001                     	;# 
   442  0002                     	;# 
   443  0003                     	;# 
   444  0004                     	;# 
   445  0005                     	;# 
   446  0006                     	;# 
   447  0007                     	;# 
   448  0008                     	;# 
   449  0009                     	;# 
   450  000A                     	;# 
   451  000B                     	;# 
   452  000C                     	;# 
   453  000D                     	;# 
   454  000E                     	;# 
   455  0010                     	;# 
   456  0011                     	;# 
   457  0012                     	;# 
   458  0013                     	;# 
   459  0014                     	;# 
   460  0015                     	;# 
   461  0016                     	;# 
   462  0016                     	;# 
   463  0017                     	;# 
   464  0018                     	;# 
   465  0019                     	;# 
   466  001A                     	;# 
   467  001A                     	;# 
   468  001B                     	;# 
   469  001B                     	;# 
   470  001C                     	;# 
   471  001D                     	;# 
   472  001E                     	;# 
   473  001F                     	;# 
   474  008C                     	;# 
   475  008D                     	;# 
   476  008E                     	;# 
   477  0090                     	;# 
   478  0091                     	;# 
   479  0092                     	;# 
   480  0093                     	;# 
   481  0094                     	;# 
   482  0095                     	;# 
   483  0096                     	;# 
   484  0098                     	;# 
   485  0099                     	;# 
   486  009A                     	;# 
   487  009B                     	;# 
   488  009B                     	;# 
   489  009C                     	;# 
   490  009D                     	;# 
   491  009E                     	;# 
   492  009F                     	;# 
   493  010C                     	;# 
   494  010D                     	;# 
   495  010E                     	;# 
   496  0111                     	;# 
   497  0112                     	;# 
   498  0113                     	;# 
   499  0114                     	;# 
   500  0115                     	;# 
   501  0116                     	;# 
   502  0117                     	;# 
   503  0118                     	;# 
   504  0119                     	;# 
   505  011C                     	;# 
   506  018C                     	;# 
   507  018D                     	;# 
   508  018E                     	;# 
   509  0191                     	;# 
   510  0191                     	;# 
   511  0192                     	;# 
   512  0193                     	;# 
   513  0193                     	;# 
   514  0194                     	;# 
   515  0195                     	;# 
   516  0196                     	;# 
   517  0199                     	;# 
   518  0199                     	;# 
   519  0199                     	;# 
   520  019A                     	;# 
   521  019A                     	;# 
   522  019A                     	;# 
   523  019B                     	;# 
   524  019B                     	;# 
   525  019B                     	;# 
   526  019B                     	;# 
   527  019B                     	;# 
   528  019C                     	;# 
   529  019C                     	;# 
   530  019C                     	;# 
   531  019D                     	;# 
   532  019D                     	;# 
   533  019D                     	;# 
   534  019E                     	;# 
   535  019E                     	;# 
   536  019E                     	;# 
   537  019F                     	;# 
   538  019F                     	;# 
   539  019F                     	;# 
   540  019F                     	;# 
   541  019F                     	;# 
   542  020C                     	;# 
   543  020D                     	;# 
   544  020E                     	;# 
   545  0211                     	;# 
   546  0211                     	;# 
   547  0212                     	;# 
   548  0212                     	;# 
   549  0213                     	;# 
   550  0213                     	;# 
   551  0214                     	;# 
   552  0214                     	;# 
   553  0215                     	;# 
   554  0215                     	;# 
   555  0215                     	;# 
   556  0215                     	;# 
   557  0216                     	;# 
   558  0216                     	;# 
   559  0217                     	;# 
   560  0217                     	;# 
   561  028C                     	;# 
   562  028D                     	;# 
   563  028E                     	;# 
   564  0291                     	;# 
   565  0291                     	;# 
   566  0292                     	;# 
   567  0293                     	;# 
   568  0294                     	;# 
   569  0298                     	;# 
   570  0298                     	;# 
   571  0299                     	;# 
   572  029A                     	;# 
   573  029B                     	;# 
   574  029E                     	;# 
   575  030C                     	;# 
   576  030D                     	;# 
   577  030E                     	;# 
   578  038C                     	;# 
   579  038D                     	;# 
   580  038E                     	;# 
   581  0391                     	;# 
   582  0392                     	;# 
   583  0393                     	;# 
   584  0394                     	;# 
   585  0395                     	;# 
   586  0396                     	;# 
   587  0397                     	;# 
   588  0398                     	;# 
   589  0399                     	;# 
   590  040E                     	;# 
   591  0413                     	;# 
   592  0413                     	;# 
   593  0414                     	;# 
   594  0414                     	;# 
   595  0415                     	;# 
   596  0416                     	;# 
   597  0417                     	;# 
   598  0418                     	;# 
   599  041A                     	;# 
   600  041A                     	;# 
   601  041B                     	;# 
   602  041B                     	;# 
   603  041C                     	;# 
   604  041D                     	;# 
   605  041E                     	;# 
   606  041F                     	;# 
   607  0493                     	;# 
   608  0494                     	;# 
   609  0495                     	;# 
   610  0496                     	;# 
   611  049A                     	;# 
   612  049B                     	;# 
   613  049C                     	;# 
   614  049D                     	;# 
   615  058C                     	;# 
   616  058C                     	;# 
   617  058D                     	;# 
   618  058E                     	;# 
   619  058E                     	;# 
   620  058F                     	;# 
   621  0590                     	;# 
   622  0590                     	;# 
   623  0591                     	;# 
   624  0592                     	;# 
   625  0592                     	;# 
   626  0593                     	;# 
   627  0594                     	;# 
   628  0594                     	;# 
   629  0595                     	;# 
   630  0596                     	;# 
   631  0596                     	;# 
   632  0597                     	;# 
   633  0598                     	;# 
   634  0599                     	;# 
   635  059A                     	;# 
   636  059B                     	;# 
   637  059B                     	;# 
   638  059C                     	;# 
   639  059D                     	;# 
   640  060C                     	;# 
   641  060C                     	;# 
   642  060D                     	;# 
   643  060E                     	;# 
   644  060F                     	;# 
   645  060F                     	;# 
   646  0610                     	;# 
   647  0611                     	;# 
   648  0612                     	;# 
   649  0613                     	;# 
   650  0614                     	;# 
   651  0617                     	;# 
   652  0618                     	;# 
   653  0619                     	;# 
   654  061A                     	;# 
   655  061B                     	;# 
   656  061C                     	;# 
   657  0691                     	;# 
   658  0692                     	;# 
   659  0693                     	;# 
   660  0694                     	;# 
   661  0695                     	;# 
   662  0696                     	;# 
   663  0697                     	;# 
   664  0699                     	;# 
   665  069A                     	;# 
   666  0711                     	;# 
   667  0712                     	;# 
   668  0713                     	;# 
   669  0714                     	;# 
   670  0715                     	;# 
   671  0718                     	;# 
   672  0718                     	;# 
   673  0719                     	;# 
   674  071A                     	;# 
   675  071A                     	;# 
   676  071B                     	;# 
   677  071C                     	;# 
   678  071D                     	;# 
   679  0791                     	;# 
   680  0791                     	;# 
   681  0792                     	;# 
   682  0793                     	;# 
   683  0793                     	;# 
   684  0794                     	;# 
   685  0795                     	;# 
   686  0795                     	;# 
   687  0796                     	;# 
   688  0797                     	;# 
   689  0797                     	;# 
   690  0798                     	;# 
   691  0799                     	;# 
   692  079A                     	;# 
   693  080C                     	;# 
   694  080C                     	;# 
   695  080D                     	;# 
   696  080E                     	;# 
   697  080E                     	;# 
   698  080F                     	;# 
   699  0810                     	;# 
   700  0810                     	;# 
   701  0811                     	;# 
   702  0812                     	;# 
   703  0812                     	;# 
   704  0813                     	;# 
   705  0814                     	;# 
   706  0815                     	;# 
   707  0816                     	;# 
   708  0817                     	;# 
   709  0818                     	;# 
   710  0819                     	;# 
   711  081A                     	;# 
   712  081A                     	;# 
   713  081B                     	;# 
   714  081C                     	;# 
   715  081C                     	;# 
   716  081D                     	;# 
   717  088C                     	;# 
   718  088D                     	;# 
   719  088E                     	;# 
   720  088F                     	;# 
   721  088F                     	;# 
   722  0890                     	;# 
   723  0891                     	;# 
   724  0892                     	;# 
   725  0893                     	;# 
   726  0893                     	;# 
   727  0894                     	;# 
   728  0895                     	;# 
   729  0896                     	;# 
   730  0897                     	;# 
   731  0897                     	;# 
   732  0898                     	;# 
   733  0899                     	;# 
   734  0D8C                     	;# 
   735  0D8C                     	;# 
   736  0D8D                     	;# 
   737  0D8E                     	;# 
   738  0D8F                     	;# 
   739  0D8F                     	;# 
   740  0D90                     	;# 
   741  0D91                     	;# 
   742  0D92                     	;# 
   743  0D92                     	;# 
   744  0D93                     	;# 
   745  0D94                     	;# 
   746  0D95                     	;# 
   747  0D95                     	;# 
   748  0D96                     	;# 
   749  0D97                     	;# 
   750  0D98                     	;# 
   751  0D99                     	;# 
   752  0D9A                     	;# 
   753  0D9B                     	;# 
   754  0D9C                     	;# 
   755  0D9D                     	;# 
   756  0D9E                     	;# 
   757  0D9E                     	;# 
   758  0D9F                     	;# 
   759  0DA0                     	;# 
   760  0DA1                     	;# 
   761  0DA1                     	;# 
   762  0DA2                     	;# 
   763  0DA3                     	;# 
   764  0DA4                     	;# 
   765  0DA4                     	;# 
   766  0DA5                     	;# 
   767  0DA6                     	;# 
   768  0DA7                     	;# 
   769  0DA7                     	;# 
   770  0DA8                     	;# 
   771  0DA9                     	;# 
   772  0DAA                     	;# 
   773  0DAB                     	;# 
   774  0DAC                     	;# 
   775  0DAD                     	;# 
   776  0DAE                     	;# 
   777  0DAF                     	;# 
   778  0E0F                     	;# 
   779  0E10                     	;# 
   780  0E11                     	;# 
   781  0E12                     	;# 
   782  0E13                     	;# 
   783  0E14                     	;# 
   784  0E15                     	;# 
   785  0E16                     	;# 
   786  0E17                     	;# 
   787  0E18                     	;# 
   788  0E19                     	;# 
   789  0E1A                     	;# 
   790  0E1B                     	;# 
   791  0E1C                     	;# 
   792  0E1D                     	;# 
   793  0E1E                     	;# 
   794  0E1F                     	;# 
   795  0E20                     	;# 
   796  0E21                     	;# 
   797  0E22                     	;# 
   798  0E23                     	;# 
   799  0E24                     	;# 
   800  0E25                     	;# 
   801  0E26                     	;# 
   802  0E27                     	;# 
   803  0E28                     	;# 
   804  0E29                     	;# 
   805  0E2A                     	;# 
   806  0E2B                     	;# 
   807  0E2C                     	;# 
   808  0E2D                     	;# 
   809  0E2E                     	;# 
   810  0E90                     	;# 
   811  0E91                     	;# 
   812  0E92                     	;# 
   813  0E94                     	;# 
   814  0E95                     	;# 
   815  0E9C                     	;# 
   816  0E9D                     	;# 
   817  0E9E                     	;# 
   818  0E9F                     	;# 
   819  0EA0                     	;# 
   820  0EA1                     	;# 
   821  0EA2                     	;# 
   822  0EA3                     	;# 
   823  0EA4                     	;# 
   824  0EA5                     	;# 
   825  0EA6                     	;# 
   826  0EA7                     	;# 
   827  0F0F                     	;# 
   828  0F10                     	;# 
   829  0F11                     	;# 
   830  0F12                     	;# 
   831  0F13                     	;# 
   832  0F14                     	;# 
   833  0F15                     	;# 
   834  0F16                     	;# 
   835  0F17                     	;# 
   836  0F18                     	;# 
   837  0F19                     	;# 
   838  0F1A                     	;# 
   839  0F1B                     	;# 
   840  0F1C                     	;# 
   841  0F1D                     	;# 
   842  0F1E                     	;# 
   843  0F1F                     	;# 
   844  0F20                     	;# 
   845  0F21                     	;# 
   846  0F22                     	;# 
   847  0F23                     	;# 
   848  0FE4                     	;# 
   849  0FE5                     	;# 
   850  0FE6                     	;# 
   851  0FE7                     	;# 
   852  0FE8                     	;# 
   853  0FE9                     	;# 
   854  0FEA                     	;# 
   855  0FEB                     	;# 
   856  0FED                     	;# 
   857  0FEE                     	;# 
   858  0FEF                     	;# 
   859  0000                     	;# 
   860  0001                     	;# 
   861  0002                     	;# 
   862  0003                     	;# 
   863  0004                     	;# 
   864  0005                     	;# 
   865  0006                     	;# 
   866  0007                     	;# 
   867  0008                     	;# 
   868  0009                     	;# 
   869  000A                     	;# 
   870  000B                     	;# 
   871  000C                     	;# 
   872  000D                     	;# 
   873  000E                     	;# 
   874  0010                     	;# 
   875  0011                     	;# 
   876  0012                     	;# 
   877  0013                     	;# 
   878  0014                     	;# 
   879  0015                     	;# 
   880  0016                     	;# 
   881  0016                     	;# 
   882  0017                     	;# 
   883  0018                     	;# 
   884  0019                     	;# 
   885  001A                     	;# 
   886  001A                     	;# 
   887  001B                     	;# 
   888  001B                     	;# 
   889  001C                     	;# 
   890  001D                     	;# 
   891  001E                     	;# 
   892  001F                     	;# 
   893  008C                     	;# 
   894  008D                     	;# 
   895  008E                     	;# 
   896  0090                     	;# 
   897  0091                     	;# 
   898  0092                     	;# 
   899  0093                     	;# 
   900  0094                     	;# 
   901  0095                     	;# 
   902  0096                     	;# 
   903  0098                     	;# 
   904  0099                     	;# 
   905  009A                     	;# 
   906  009B                     	;# 
   907  009B                     	;# 
   908  009C                     	;# 
   909  009D                     	;# 
   910  009E                     	;# 
   911  009F                     	;# 
   912  010C                     	;# 
   913  010D                     	;# 
   914  010E                     	;# 
   915  0111                     	;# 
   916  0112                     	;# 
   917  0113                     	;# 
   918  0114                     	;# 
   919  0115                     	;# 
   920  0116                     	;# 
   921  0117                     	;# 
   922  0118                     	;# 
   923  0119                     	;# 
   924  011C                     	;# 
   925  018C                     	;# 
   926  018D                     	;# 
   927  018E                     	;# 
   928  0191                     	;# 
   929  0191                     	;# 
   930  0192                     	;# 
   931  0193                     	;# 
   932  0193                     	;# 
   933  0194                     	;# 
   934  0195                     	;# 
   935  0196                     	;# 
   936  0199                     	;# 
   937  0199                     	;# 
   938  0199                     	;# 
   939  019A                     	;# 
   940  019A                     	;# 
   941  019A                     	;# 
   942  019B                     	;# 
   943  019B                     	;# 
   944  019B                     	;# 
   945  019B                     	;# 
   946  019B                     	;# 
   947  019C                     	;# 
   948  019C                     	;# 
   949  019C                     	;# 
   950  019D                     	;# 
   951  019D                     	;# 
   952  019D                     	;# 
   953  019E                     	;# 
   954  019E                     	;# 
   955  019E                     	;# 
   956  019F                     	;# 
   957  019F                     	;# 
   958  019F                     	;# 
   959  019F                     	;# 
   960  019F                     	;# 
   961  020C                     	;# 
   962  020D                     	;# 
   963  020E                     	;# 
   964  0211                     	;# 
   965  0211                     	;# 
   966  0212                     	;# 
   967  0212                     	;# 
   968  0213                     	;# 
   969  0213                     	;# 
   970  0214                     	;# 
   971  0214                     	;# 
   972  0215                     	;# 
   973  0215                     	;# 
   974  0215                     	;# 
   975  0215                     	;# 
   976  0216                     	;# 
   977  0216                     	;# 
   978  0217                     	;# 
   979  0217                     	;# 
   980  028C                     	;# 
   981  028D                     	;# 
   982  028E                     	;# 
   983  0291                     	;# 
   984  0291                     	;# 
   985  0292                     	;# 
   986  0293                     	;# 
   987  0294                     	;# 
   988  0298                     	;# 
   989  0298                     	;# 
   990  0299                     	;# 
   991  029A                     	;# 
   992  029B                     	;# 
   993  029E                     	;# 
   994  030C                     	;# 
   995  030D                     	;# 
   996  030E                     	;# 
   997  038C                     	;# 
   998  038D                     	;# 
   999  038E                     	;# 
  1000  0391                     	;# 
  1001  0392                     	;# 
  1002  0393                     	;# 
  1003  0394                     	;# 
  1004  0395                     	;# 
  1005  0396                     	;# 
  1006  0397                     	;# 
  1007  0398                     	;# 
  1008  0399                     	;# 
  1009  040E                     	;# 
  1010  0413                     	;# 
  1011  0413                     	;# 
  1012  0414                     	;# 
  1013  0414                     	;# 
  1014  0415                     	;# 
  1015  0416                     	;# 
  1016  0417                     	;# 
  1017  0418                     	;# 
  1018  041A                     	;# 
  1019  041A                     	;# 
  1020  041B                     	;# 
  1021  041B                     	;# 
  1022  041C                     	;# 
  1023  041D                     	;# 
  1024  041E                     	;# 
  1025  041F                     	;# 
  1026  0493                     	;# 
  1027  0494                     	;# 
  1028  0495                     	;# 
  1029  0496                     	;# 
  1030  049A                     	;# 
  1031  049B                     	;# 
  1032  049C                     	;# 
  1033  049D                     	;# 
  1034  058C                     	;# 
  1035  058C                     	;# 
  1036  058D                     	;# 
  1037  058E                     	;# 
  1038  058E                     	;# 
  1039  058F                     	;# 
  1040  0590                     	;# 
  1041  0590                     	;# 
  1042  0591                     	;# 
  1043  0592                     	;# 
  1044  0592                     	;# 
  1045  0593                     	;# 
  1046  0594                     	;# 
  1047  0594                     	;# 
  1048  0595                     	;# 
  1049  0596                     	;# 
  1050  0596                     	;# 
  1051  0597                     	;# 
  1052  0598                     	;# 
  1053  0599                     	;# 
  1054  059A                     	;# 
  1055  059B                     	;# 
  1056  059B                     	;# 
  1057  059C                     	;# 
  1058  059D                     	;# 
  1059  060C                     	;# 
  1060  060C                     	;# 
  1061  060D                     	;# 
  1062  060E                     	;# 
  1063  060F                     	;# 
  1064  060F                     	;# 
  1065  0610                     	;# 
  1066  0611                     	;# 
  1067  0612                     	;# 
  1068  0613                     	;# 
  1069  0614                     	;# 
  1070  0617                     	;# 
  1071  0618                     	;# 
  1072  0619                     	;# 
  1073  061A                     	;# 
  1074  061B                     	;# 
  1075  061C                     	;# 
  1076  0691                     	;# 
  1077  0692                     	;# 
  1078  0693                     	;# 
  1079  0694                     	;# 
  1080  0695                     	;# 
  1081  0696                     	;# 
  1082  0697                     	;# 
  1083  0699                     	;# 
  1084  069A                     	;# 
  1085  0711                     	;# 
  1086  0712                     	;# 
  1087  0713                     	;# 
  1088  0714                     	;# 
  1089  0715                     	;# 
  1090  0718                     	;# 
  1091  0718                     	;# 
  1092  0719                     	;# 
  1093  071A                     	;# 
  1094  071A                     	;# 
  1095  071B                     	;# 
  1096  071C                     	;# 
  1097  071D                     	;# 
  1098  0791                     	;# 
  1099  0791                     	;# 
  1100  0792                     	;# 
  1101  0793                     	;# 
  1102  0793                     	;# 
  1103  0794                     	;# 
  1104  0795                     	;# 
  1105  0795                     	;# 
  1106  0796                     	;# 
  1107  0797                     	;# 
  1108  0797                     	;# 
  1109  0798                     	;# 
  1110  0799                     	;# 
  1111  079A                     	;# 
  1112  080C                     	;# 
  1113  080C                     	;# 
  1114  080D                     	;# 
  1115  080E                     	;# 
  1116  080E                     	;# 
  1117  080F                     	;# 
  1118  0810                     	;# 
  1119  0810                     	;# 
  1120  0811                     	;# 
  1121  0812                     	;# 
  1122  0812                     	;# 
  1123  0813                     	;# 
  1124  0814                     	;# 
  1125  0815                     	;# 
  1126  0816                     	;# 
  1127  0817                     	;# 
  1128  0818                     	;# 
  1129  0819                     	;# 
  1130  081A                     	;# 
  1131  081A                     	;# 
  1132  081B                     	;# 
  1133  081C                     	;# 
  1134  081C                     	;# 
  1135  081D                     	;# 
  1136  088C                     	;# 
  1137  088D                     	;# 
  1138  088E                     	;# 
  1139  088F                     	;# 
  1140  088F                     	;# 
  1141  0890                     	;# 
  1142  0891                     	;# 
  1143  0892                     	;# 
  1144  0893                     	;# 
  1145  0893                     	;# 
  1146  0894                     	;# 
  1147  0895                     	;# 
  1148  0896                     	;# 
  1149  0897                     	;# 
  1150  0897                     	;# 
  1151  0898                     	;# 
  1152  0899                     	;# 
  1153  0D8C                     	;# 
  1154  0D8C                     	;# 
  1155  0D8D                     	;# 
  1156  0D8E                     	;# 
  1157  0D8F                     	;# 
  1158  0D8F                     	;# 
  1159  0D90                     	;# 
  1160  0D91                     	;# 
  1161  0D92                     	;# 
  1162  0D92                     	;# 
  1163  0D93                     	;# 
  1164  0D94                     	;# 
  1165  0D95                     	;# 
  1166  0D95                     	;# 
  1167  0D96                     	;# 
  1168  0D97                     	;# 
  1169  0D98                     	;# 
  1170  0D99                     	;# 
  1171  0D9A                     	;# 
  1172  0D9B                     	;# 
  1173  0D9C                     	;# 
  1174  0D9D                     	;# 
  1175  0D9E                     	;# 
  1176  0D9E                     	;# 
  1177  0D9F                     	;# 
  1178  0DA0                     	;# 
  1179  0DA1                     	;# 
  1180  0DA1                     	;# 
  1181  0DA2                     	;# 
  1182  0DA3                     	;# 
  1183  0DA4                     	;# 
  1184  0DA4                     	;# 
  1185  0DA5                     	;# 
  1186  0DA6                     	;# 
  1187  0DA7                     	;# 
  1188  0DA7                     	;# 
  1189  0DA8                     	;# 
  1190  0DA9                     	;# 
  1191  0DAA                     	;# 
  1192  0DAB                     	;# 
  1193  0DAC                     	;# 
  1194  0DAD                     	;# 
  1195  0DAE                     	;# 
  1196  0DAF                     	;# 
  1197  0E0F                     	;# 
  1198  0E10                     	;# 
  1199  0E11                     	;# 
  1200  0E12                     	;# 
  1201  0E13                     	;# 
  1202  0E14                     	;# 
  1203  0E15                     	;# 
  1204  0E16                     	;# 
  1205  0E17                     	;# 
  1206  0E18                     	;# 
  1207  0E19                     	;# 
  1208  0E1A                     	;# 
  1209  0E1B                     	;# 
  1210  0E1C                     	;# 
  1211  0E1D                     	;# 
  1212  0E1E                     	;# 
  1213  0E1F                     	;# 
  1214  0E20                     	;# 
  1215  0E21                     	;# 
  1216  0E22                     	;# 
  1217  0E23                     	;# 
  1218  0E24                     	;# 
  1219  0E25                     	;# 
  1220  0E26                     	;# 
  1221  0E27                     	;# 
  1222  0E28                     	;# 
  1223  0E29                     	;# 
  1224  0E2A                     	;# 
  1225  0E2B                     	;# 
  1226  0E2C                     	;# 
  1227  0E2D                     	;# 
  1228  0E2E                     	;# 
  1229  0E90                     	;# 
  1230  0E91                     	;# 
  1231  0E92                     	;# 
  1232  0E94                     	;# 
  1233  0E95                     	;# 
  1234  0E9C                     	;# 
  1235  0E9D                     	;# 
  1236  0E9E                     	;# 
  1237  0E9F                     	;# 
  1238  0EA0                     	;# 
  1239  0EA1                     	;# 
  1240  0EA2                     	;# 
  1241  0EA3                     	;# 
  1242  0EA4                     	;# 
  1243  0EA5                     	;# 
  1244  0EA6                     	;# 
  1245  0EA7                     	;# 
  1246  0F0F                     	;# 
  1247  0F10                     	;# 
  1248  0F11                     	;# 
  1249  0F12                     	;# 
  1250  0F13                     	;# 
  1251  0F14                     	;# 
  1252  0F15                     	;# 
  1253  0F16                     	;# 
  1254  0F17                     	;# 
  1255  0F18                     	;# 
  1256  0F19                     	;# 
  1257  0F1A                     	;# 
  1258  0F1B                     	;# 
  1259  0F1C                     	;# 
  1260  0F1D                     	;# 
  1261  0F1E                     	;# 
  1262  0F1F                     	;# 
  1263  0F20                     	;# 
  1264  0F21                     	;# 
  1265  0F22                     	;# 
  1266  0F23                     	;# 
  1267  0FE4                     	;# 
  1268  0FE5                     	;# 
  1269  0FE6                     	;# 
  1270  0FE7                     	;# 
  1271  0FE8                     	;# 
  1272  0FE9                     	;# 
  1273  0FEA                     	;# 
  1274  0FEB                     	;# 
  1275  0FED                     	;# 
  1276  0FEE                     	;# 
  1277  0FEF                     	;# 
  1278  0000                     	;# 
  1279  0001                     	;# 
  1280  0002                     	;# 
  1281  0003                     	;# 
  1282  0004                     	;# 
  1283  0005                     	;# 
  1284  0006                     	;# 
  1285  0007                     	;# 
  1286  0008                     	;# 
  1287  0009                     	;# 
  1288  000A                     	;# 
  1289  000B                     	;# 
  1290  000C                     	;# 
  1291  000D                     	;# 
  1292  000E                     	;# 
  1293  0010                     	;# 
  1294  0011                     	;# 
  1295  0012                     	;# 
  1296  0013                     	;# 
  1297  0014                     	;# 
  1298  0015                     	;# 
  1299  0016                     	;# 
  1300  0016                     	;# 
  1301  0017                     	;# 
  1302  0018                     	;# 
  1303  0019                     	;# 
  1304  001A                     	;# 
  1305  001A                     	;# 
  1306  001B                     	;# 
  1307  001B                     	;# 
  1308  001C                     	;# 
  1309  001D                     	;# 
  1310  001E                     	;# 
  1311  001F                     	;# 
  1312  008C                     	;# 
  1313  008D                     	;# 
  1314  008E                     	;# 
  1315  0090                     	;# 
  1316  0091                     	;# 
  1317  0092                     	;# 
  1318  0093                     	;# 
  1319  0094                     	;# 
  1320  0095                     	;# 
  1321  0096                     	;# 
  1322  0098                     	;# 
  1323  0099                     	;# 
  1324  009A                     	;# 
  1325  009B                     	;# 
  1326  009B                     	;# 
  1327  009C                     	;# 
  1328  009D                     	;# 
  1329  009E                     	;# 
  1330  009F                     	;# 
  1331  010C                     	;# 
  1332  010D                     	;# 
  1333  010E                     	;# 
  1334  0111                     	;# 
  1335  0112                     	;# 
  1336  0113                     	;# 
  1337  0114                     	;# 
  1338  0115                     	;# 
  1339  0116                     	;# 
  1340  0117                     	;# 
  1341  0118                     	;# 
  1342  0119                     	;# 
  1343  011C                     	;# 
  1344  018C                     	;# 
  1345  018D                     	;# 
  1346  018E                     	;# 
  1347  0191                     	;# 
  1348  0191                     	;# 
  1349  0192                     	;# 
  1350  0193                     	;# 
  1351  0193                     	;# 
  1352  0194                     	;# 
  1353  0195                     	;# 
  1354  0196                     	;# 
  1355  0199                     	;# 
  1356  0199                     	;# 
  1357  0199                     	;# 
  1358  019A                     	;# 
  1359  019A                     	;# 
  1360  019A                     	;# 
  1361  019B                     	;# 
  1362  019B                     	;# 
  1363  019B                     	;# 
  1364  019B                     	;# 
  1365  019B                     	;# 
  1366  019C                     	;# 
  1367  019C                     	;# 
  1368  019C                     	;# 
  1369  019D                     	;# 
  1370  019D                     	;# 
  1371  019D                     	;# 
  1372  019E                     	;# 
  1373  019E                     	;# 
  1374  019E                     	;# 
  1375  019F                     	;# 
  1376  019F                     	;# 
  1377  019F                     	;# 
  1378  019F                     	;# 
  1379  019F                     	;# 
  1380  020C                     	;# 
  1381  020D                     	;# 
  1382  020E                     	;# 
  1383  0211                     	;# 
  1384  0211                     	;# 
  1385  0212                     	;# 
  1386  0212                     	;# 
  1387  0213                     	;# 
  1388  0213                     	;# 
  1389  0214                     	;# 
  1390  0214                     	;# 
  1391  0215                     	;# 
  1392  0215                     	;# 
  1393  0215                     	;# 
  1394  0215                     	;# 
  1395  0216                     	;# 
  1396  0216                     	;# 
  1397  0217                     	;# 
  1398  0217                     	;# 
  1399  028C                     	;# 
  1400  028D                     	;# 
  1401  028E                     	;# 
  1402  0291                     	;# 
  1403  0291                     	;# 
  1404  0292                     	;# 
  1405  0293                     	;# 
  1406  0294                     	;# 
  1407  0298                     	;# 
  1408  0298                     	;# 
  1409  0299                     	;# 
  1410  029A                     	;# 
  1411  029B                     	;# 
  1412  029E                     	;# 
  1413  030C                     	;# 
  1414  030D                     	;# 
  1415  030E                     	;# 
  1416  038C                     	;# 
  1417  038D                     	;# 
  1418  038E                     	;# 
  1419  0391                     	;# 
  1420  0392                     	;# 
  1421  0393                     	;# 
  1422  0394                     	;# 
  1423  0395                     	;# 
  1424  0396                     	;# 
  1425  0397                     	;# 
  1426  0398                     	;# 
  1427  0399                     	;# 
  1428  040E                     	;# 
  1429  0413                     	;# 
  1430  0413                     	;# 
  1431  0414                     	;# 
  1432  0414                     	;# 
  1433  0415                     	;# 
  1434  0416                     	;# 
  1435  0417                     	;# 
  1436  0418                     	;# 
  1437  041A                     	;# 
  1438  041A                     	;# 
  1439  041B                     	;# 
  1440  041B                     	;# 
  1441  041C                     	;# 
  1442  041D                     	;# 
  1443  041E                     	;# 
  1444  041F                     	;# 
  1445  0493                     	;# 
  1446  0494                     	;# 
  1447  0495                     	;# 
  1448  0496                     	;# 
  1449  049A                     	;# 
  1450  049B                     	;# 
  1451  049C                     	;# 
  1452  049D                     	;# 
  1453  058C                     	;# 
  1454  058C                     	;# 
  1455  058D                     	;# 
  1456  058E                     	;# 
  1457  058E                     	;# 
  1458  058F                     	;# 
  1459  0590                     	;# 
  1460  0590                     	;# 
  1461  0591                     	;# 
  1462  0592                     	;# 
  1463  0592                     	;# 
  1464  0593                     	;# 
  1465  0594                     	;# 
  1466  0594                     	;# 
  1467  0595                     	;# 
  1468  0596                     	;# 
  1469  0596                     	;# 
  1470  0597                     	;# 
  1471  0598                     	;# 
  1472  0599                     	;# 
  1473  059A                     	;# 
  1474  059B                     	;# 
  1475  059B                     	;# 
  1476  059C                     	;# 
  1477  059D                     	;# 
  1478  060C                     	;# 
  1479  060C                     	;# 
  1480  060D                     	;# 
  1481  060E                     	;# 
  1482  060F                     	;# 
  1483  060F                     	;# 
  1484  0610                     	;# 
  1485  0611                     	;# 
  1486  0612                     	;# 
  1487  0613                     	;# 
  1488  0614                     	;# 
  1489  0617                     	;# 
  1490  0618                     	;# 
  1491  0619                     	;# 
  1492  061A                     	;# 
  1493  061B                     	;# 
  1494  061C                     	;# 
  1495  0691                     	;# 
  1496  0692                     	;# 
  1497  0693                     	;# 
  1498  0694                     	;# 
  1499  0695                     	;# 
  1500  0696                     	;# 
  1501  0697                     	;# 
  1502  0699                     	;# 
  1503  069A                     	;# 
  1504  0711                     	;# 
  1505  0712                     	;# 
  1506  0713                     	;# 
  1507  0714                     	;# 
  1508  0715                     	;# 
  1509  0718                     	;# 
  1510  0718                     	;# 
  1511  0719                     	;# 
  1512  071A                     	;# 
  1513  071A                     	;# 
  1514  071B                     	;# 
  1515  071C                     	;# 
  1516  071D                     	;# 
  1517  0791                     	;# 
  1518  0791                     	;# 
  1519  0792                     	;# 
  1520  0793                     	;# 
  1521  0793                     	;# 
  1522  0794                     	;# 
  1523  0795                     	;# 
  1524  0795                     	;# 
  1525  0796                     	;# 
  1526  0797                     	;# 
  1527  0797                     	;# 
  1528  0798                     	;# 
  1529  0799                     	;# 
  1530  079A                     	;# 
  1531  080C                     	;# 
  1532  080C                     	;# 
  1533  080D                     	;# 
  1534  080E                     	;# 
  1535  080E                     	;# 
  1536  080F                     	;# 
  1537  0810                     	;# 
  1538  0810                     	;# 
  1539  0811                     	;# 
  1540  0812                     	;# 
  1541  0812                     	;# 
  1542  0813                     	;# 
  1543  0814                     	;# 
  1544  0815                     	;# 
  1545  0816                     	;# 
  1546  0817                     	;# 
  1547  0818                     	;# 
  1548  0819                     	;# 
  1549  081A                     	;# 
  1550  081A                     	;# 
  1551  081B                     	;# 
  1552  081C                     	;# 
  1553  081C                     	;# 
  1554  081D                     	;# 
  1555  088C                     	;# 
  1556  088D                     	;# 
  1557  088E                     	;# 
  1558  088F                     	;# 
  1559  088F                     	;# 
  1560  0890                     	;# 
  1561  0891                     	;# 
  1562  0892                     	;# 
  1563  0893                     	;# 
  1564  0893                     	;# 
  1565  0894                     	;# 
  1566  0895                     	;# 
  1567  0896                     	;# 
  1568  0897                     	;# 
  1569  0897                     	;# 
  1570  0898                     	;# 
  1571  0899                     	;# 
  1572  0D8C                     	;# 
  1573  0D8C                     	;# 
  1574  0D8D                     	;# 
  1575  0D8E                     	;# 
  1576  0D8F                     	;# 
  1577  0D8F                     	;# 
  1578  0D90                     	;# 
  1579  0D91                     	;# 
  1580  0D92                     	;# 
  1581  0D92                     	;# 
  1582  0D93                     	;# 
  1583  0D94                     	;# 
  1584  0D95                     	;# 
  1585  0D95                     	;# 
  1586  0D96                     	;# 
  1587  0D97                     	;# 
  1588  0D98                     	;# 
  1589  0D99                     	;# 
  1590  0D9A                     	;# 
  1591  0D9B                     	;# 
  1592  0D9C                     	;# 
  1593  0D9D                     	;# 
  1594  0D9E                     	;# 
  1595  0D9E                     	;# 
  1596  0D9F                     	;# 
  1597  0DA0                     	;# 
  1598  0DA1                     	;# 
  1599  0DA1                     	;# 
  1600  0DA2                     	;# 
  1601  0DA3                     	;# 
  1602  0DA4                     	;# 
  1603  0DA4                     	;# 
  1604  0DA5                     	;# 
  1605  0DA6                     	;# 
  1606  0DA7                     	;# 
  1607  0DA7                     	;# 
  1608  0DA8                     	;# 
  1609  0DA9                     	;# 
  1610  0DAA                     	;# 
  1611  0DAB                     	;# 
  1612  0DAC                     	;# 
  1613  0DAD                     	;# 
  1614  0DAE                     	;# 
  1615  0DAF                     	;# 
  1616  0E0F                     	;# 
  1617  0E10                     	;# 
  1618  0E11                     	;# 
  1619  0E12                     	;# 
  1620  0E13                     	;# 
  1621  0E14                     	;# 
  1622  0E15                     	;# 
  1623  0E16                     	;# 
  1624  0E17                     	;# 
  1625  0E18                     	;# 
  1626  0E19                     	;# 
  1627  0E1A                     	;# 
  1628  0E1B                     	;# 
  1629  0E1C                     	;# 
  1630  0E1D                     	;# 
  1631  0E1E                     	;# 
  1632  0E1F                     	;# 
  1633  0E20                     	;# 
  1634  0E21                     	;# 
  1635  0E22                     	;# 
  1636  0E23                     	;# 
  1637  0E24                     	;# 
  1638  0E25                     	;# 
  1639  0E26                     	;# 
  1640  0E27                     	;# 
  1641  0E28                     	;# 
  1642  0E29                     	;# 
  1643  0E2A                     	;# 
  1644  0E2B                     	;# 
  1645  0E2C                     	;# 
  1646  0E2D                     	;# 
  1647  0E2E                     	;# 
  1648  0E90                     	;# 
  1649  0E91                     	;# 
  1650  0E92                     	;# 
  1651  0E94                     	;# 
  1652  0E95                     	;# 
  1653  0E9C                     	;# 
  1654  0E9D                     	;# 
  1655  0E9E                     	;# 
  1656  0E9F                     	;# 
  1657  0EA0                     	;# 
  1658  0EA1                     	;# 
  1659  0EA2                     	;# 
  1660  0EA3                     	;# 
  1661  0EA4                     	;# 
  1662  0EA5                     	;# 
  1663  0EA6                     	;# 
  1664  0EA7                     	;# 
  1665  0F0F                     	;# 
  1666  0F10                     	;# 
  1667  0F11                     	;# 
  1668  0F12                     	;# 
  1669  0F13                     	;# 
  1670  0F14                     	;# 
  1671  0F15                     	;# 
  1672  0F16                     	;# 
  1673  0F17                     	;# 
  1674  0F18                     	;# 
  1675  0F19                     	;# 
  1676  0F1A                     	;# 
  1677  0F1B                     	;# 
  1678  0F1C                     	;# 
  1679  0F1D                     	;# 
  1680  0F1E                     	;# 
  1681  0F1F                     	;# 
  1682  0F20                     	;# 
  1683  0F21                     	;# 
  1684  0F22                     	;# 
  1685  0F23                     	;# 
  1686  0FE4                     	;# 
  1687  0FE5                     	;# 
  1688  0FE6                     	;# 
  1689  0FE7                     	;# 
  1690  0FE8                     	;# 
  1691  0FE9                     	;# 
  1692  0FEA                     	;# 
  1693  0FEB                     	;# 
  1694  0FED                     	;# 
  1695  0FEE                     	;# 
  1696  0FEF                     	;# 
  1697                           
  1698                           	psect	stringtext
  1699  0800                     __pstringtext:	
  1700  0800                     _USIDHIGHREV:	
  1701  0800  345C               	retlw	92
  1702  0801  3407               	retlw	7
  1703  0802  3440               	retlw	64
  1704  0803  345C               	retlw	92
  1705  0804  3490               	retlw	144
  1706  0805  3441               	retlw	65
  1707  0806  345C               	retlw	92
  1708  0807  3410               	retlw	16
  1709  0808  347F               	retlw	127
  1710  0809  345C               	retlw	92
  1711  080A  3490               	retlw	144
  1712  080B  3400               	retlw	0
  1713  080C  345C               	retlw	92
  1714  080D  3410               	retlw	16
  1715  080E  3401               	retlw	1
  1716  080F  345C               	retlw	92
  1717  0810  3410               	retlw	16
  1718  0811  3402               	retlw	2
  1719  0812  345C               	retlw	92
  1720  0813  3410               	retlw	16
  1721  0814  3404               	retlw	4
  1722  0815  345C               	retlw	92
  1723  0816  3410               	retlw	16
  1724  0817  3408               	retlw	8
  1725  0818  345C               	retlw	92
  1726  0819  3410               	retlw	16
  1727  081A  3410               	retlw	16
  1728  081B  345C               	retlw	92
  1729  081C  3410               	retlw	16
  1730  081D  3420               	retlw	32
  1731  081E  345C               	retlw	92
  1732  081F  3410               	retlw	16
  1733  0820  3440               	retlw	64
  1734  0821  345C               	retlw	92
  1735  0822  3410               	retlw	16
  1736  0823  3454               	retlw	84
  1737  0824                     __end_of_USIDHIGHREV:	
  1738  0824                     _USIDLOWREV:	
  1739  0824  344C               	retlw	76
  1740  0825  3427               	retlw	39
  1741  0826  3440               	retlw	64
  1742  0827  344C               	retlw	76
  1743  0828  34B0               	retlw	176
  1744  0829  3441               	retlw	65
  1745  082A  344C               	retlw	76
  1746  082B  3430               	retlw	48
  1747  082C  347F               	retlw	127
  1748  082D  344C               	retlw	76
  1749  082E  34B0               	retlw	176
  1750  082F  3400               	retlw	0
  1751  0830  344C               	retlw	76
  1752  0831  3430               	retlw	48
  1753  0832  3401               	retlw	1
  1754  0833  344C               	retlw	76
  1755  0834  3430               	retlw	48
  1756  0835  3402               	retlw	2
  1757  0836  344C               	retlw	76
  1758  0837  3430               	retlw	48
  1759  0838  3404               	retlw	4
  1760  0839  344C               	retlw	76
  1761  083A  3430               	retlw	48
  1762  083B  3408               	retlw	8
  1763  083C  344C               	retlw	76
  1764  083D  3430               	retlw	48
  1765  083E  3410               	retlw	16
  1766  083F  344C               	retlw	76
  1767  0840  3430               	retlw	48
  1768  0841  3420               	retlw	32
  1769  0842  344C               	retlw	76
  1770  0843  3430               	retlw	48
  1771  0844  3440               	retlw	64
  1772  0845  344C               	retlw	76
  1773  0846  3430               	retlw	48
  1774  0847  3454               	retlw	84
  1775  0848                     __end_of_USIDLOWREV:	
  1776  0848                     _DacOutput:	
  1777  0848  342B               	retlw	43
  1778  0849  3448               	retlw	72
  1779  084A  3456               	retlw	86
  1780  084B  3464               	retlw	100
  1781  084C                     __end_of_DacOutput:	
  1782  000E                     _PORTC	set	14
  1783  0095                     _OPTION_REGbits	set	149
  1784  0099                     _OSCCON	set	153
  1785  009A                     _OSCSTAT	set	154
  1786  0098                     _OSCTUNE	set	152
  1787  008C                     _TRISA	set	140
  1788  008D                     _TRISB	set	141
  1789  008E                     _TRISC	set	142
  1790  0118                     _DAC1CON0	set	280
  1791  0119                     _DAC1CON1	set	281
  1792  010C                     _LATA	set	268
  1793  010D                     _LATB	set	269
  1794  010E                     _LATC	set	270
  1795  0861                     _LATA1	set	2145
  1796  0862                     _LATA2	set	2146
  1797  0864                     _LATA4	set	2148
  1798  086C                     _LATB4	set	2156
  1799  086D                     _LATB5	set	2157
  1800  086E                     _LATB6	set	2158
  1801  086F                     _LATB7	set	2159
  1802  018C                     _ANSELA	set	396
  1803  018D                     _ANSELB	set	397
  1804  018E                     _ANSELC	set	398
  1805  020D                     _WPUB	set	525
  1806  020E                     _WPUC	set	526
  1807                           
  1808                           ; #config settings
  1809  0000                     
  1810                           	psect	cinit
  1811  07F9                     start_initialization:	
  1812  07F9                     __initialization:	
  1813                           
  1814                           ; Clear objects allocated to COMMON
  1815  07F9  01FC               	clrf	__pbssCOMMON& (0+127)
  1816  07FA  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
  1817                           
  1818                           ; Clear objects allocated to BANK0
  1819  07FB  01A0               	clrf	__pbssBANK0& (0+127)
  1820  07FC  01A1               	clrf	(__pbssBANK0+1)& (0+127)
  1821  07FD                     end_of_initialization:	
  1822                           ;End of C runtime variable initialization code
  1823                           
  1824  07FD                     __end_of__initialization:	
  1825  07FD  0020               	movlb	0
  1826  07FE  3186  2EF9         	ljmp	_main	;jump to C main() function
  1827                           
  1828                           	psect	bssCOMMON
  1829  007C                     __pbssCOMMON:	
  1830  007C                     _Byte2:	
  1831  007C                     	ds	1
  1832  007D                     _Byte3:	
  1833  007D                     	ds	1
  1834                           
  1835                           	psect	bssBANK0
  1836  0020                     __pbssBANK0:	
  1837  0020                     _Byte1:	
  1838  0020                     	ds	1
  1839  0021                     _readDummy:	
  1840  0021                     	ds	1
  1841                           
  1842                           	psect	cstackCOMMON
  1843  0070                     __pcstackCOMMON:	
  1844  0070                     ?_OSCILLATOR_Initialize:	
  1845  0070                     ??_OSCILLATOR_Initialize:	
  1846                           ; 0 bytes @ 0x0
  1847                           
  1848  0070                     ?_DAC1_Initialize:	
  1849                           ; 0 bytes @ 0x0
  1850                           
  1851  0070                     ??_DAC1_Initialize:	
  1852                           ; 0 bytes @ 0x0
  1853                           
  1854  0070                     ?_DAC1_SetOutput:	
  1855                           ; 0 bytes @ 0x0
  1856                           
  1857  0070                     ??_DAC1_SetOutput:	
  1858                           ; 0 bytes @ 0x0
  1859                           
  1860  0070                     ?_PIN_MANAGER_Initialize:	
  1861                           ; 0 bytes @ 0x0
  1862                           
  1863  0070                     ??_PIN_MANAGER_Initialize:	
  1864                           ; 0 bytes @ 0x0
  1865                           
  1866  0070                     ?_SYSTEM_Initialize:	
  1867                           ; 0 bytes @ 0x0
  1868                           
  1869  0070                     ??_SYSTEM_Initialize:	
  1870                           ; 0 bytes @ 0x0
  1871                           
  1872  0070                     ?_MIPITRANSFER1:	
  1873                           ; 0 bytes @ 0x0
  1874                           
  1875  0070                     ??_MIPITRANSFER1:	
  1876                           ; 0 bytes @ 0x0
  1877                           
  1878  0070                     ?_MIPITRANSFER2:	
  1879                           ; 0 bytes @ 0x0
  1880                           
  1881  0070                     ??_MIPITRANSFER2:	
  1882                           ; 0 bytes @ 0x0
  1883                           
  1884  0070                     ?_SSCtest:	
  1885                           ; 0 bytes @ 0x0
  1886                           
  1887  0070                     ?_ConfigureShiftRegister:	
  1888                           ; 0 bytes @ 0x0
  1889                           
  1890  0070                     ??_ConfigureShiftRegister:	
  1891                           ; 0 bytes @ 0x0
  1892                           
  1893  0070                     ?_main:	
  1894                           ; 0 bytes @ 0x0
  1895                           
  1896  0070                     DAC1_SetOutput@inputData:	
  1897                           ; 0 bytes @ 0x0
  1898                           
  1899                           
  1900                           ; 1 bytes @ 0x0
  1901  0070                     	ds	1
  1902  0071                     ConfigureShiftRegister@i:	
  1903                           
  1904                           ; 1 bytes @ 0x1
  1905  0071                     	ds	1
  1906  0072                     ConfigureShiftRegister@ReverseReg:	
  1907                           
  1908                           ; 1 bytes @ 0x2
  1909  0072                     	ds	1
  1910  0073                     MIPITRANSFER1@k:	
  1911  0073                     MIPITRANSFER2@k:	
  1912                           ; 1 bytes @ 0x3
  1913                           
  1914                           
  1915                           ; 1 bytes @ 0x3
  1916  0073                     	ds	1
  1917  0074                     MIPITRANSFER1@j:	
  1918  0074                     MIPITRANSFER2@j:	
  1919                           ; 1 bytes @ 0x4
  1920                           
  1921                           
  1922                           ; 1 bytes @ 0x4
  1923  0074                     	ds	1
  1924  0075                     MIPITRANSFER1@j_110:	
  1925  0075                     MIPITRANSFER2@j_118:	
  1926                           ; 1 bytes @ 0x5
  1927                           
  1928                           
  1929                           ; 1 bytes @ 0x5
  1930  0075                     	ds	1
  1931  0076                     MIPITRANSFER1@j_111:	
  1932  0076                     MIPITRANSFER2@j_119:	
  1933                           ; 1 bytes @ 0x6
  1934                           
  1935                           
  1936                           ; 1 bytes @ 0x6
  1937  0076                     	ds	1
  1938  0077                     MIPITRANSFER1@j_113:	
  1939  0077                     MIPITRANSFER2@j_121:	
  1940                           ; 1 bytes @ 0x7
  1941                           
  1942                           
  1943                           ; 1 bytes @ 0x7
  1944  0077                     	ds	1
  1945  0078                     MIPITRANSFER1@i:	
  1946  0078                     MIPITRANSFER2@i:	
  1947                           ; 1 bytes @ 0x8
  1948                           
  1949                           
  1950                           ; 1 bytes @ 0x8
  1951  0078                     	ds	1
  1952  0079                     MIPITRANSFER1@i_112:	
  1953  0079                     MIPITRANSFER2@i_120:	
  1954                           ; 1 bytes @ 0x9
  1955                           
  1956                           
  1957                           ; 1 bytes @ 0x9
  1958  0079                     	ds	1
  1959  007A                     ??_SSCtest:	
  1960  007A                     SSCtest@CABAND:	
  1961                           ; 0 bytes @ 0xA
  1962                           
  1963                           
  1964                           ; 1 bytes @ 0xA
  1965  007A                     	ds	1
  1966  007B                     ??_main:	
  1967                           
  1968                           ; 0 bytes @ 0xB
  1969  007B                     	ds	1
  1970                           
  1971                           	psect	maintext
  1972  06F9                     __pmaintext:	
  1973 ;;
  1974 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1975 ;;
  1976 ;; *************** function _main *****************
  1977 ;; Defined at:
  1978 ;;		line 294 in file "main.c"
  1979 ;; Parameters:    Size  Location     Type
  1980 ;;		None
  1981 ;; Auto vars:     Size  Location     Type
  1982 ;;		None
  1983 ;; Return value:  Size  Location     Type
  1984 ;;		None               void
  1985 ;; Registers used:
  1986 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1987 ;; Tracked objects:
  1988 ;;		On entry : B1F/0
  1989 ;;		On exit  : 0/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1992 ;;      Params:         0       0       0       0       0       0       0       0
  1993 ;;      Locals:         0       0       0       0       0       0       0       0
  1994 ;;      Temps:          1       0       0       0       0       0       0       0
  1995 ;;      Totals:         1       0       0       0       0       0       0       0
  1996 ;;Total ram usage:        1 bytes
  1997 ;; Hardware stack levels required when called:    2
  1998 ;; This function calls:
  1999 ;;		_ConfigureShiftRegister
  2000 ;;		_DAC1_Initialize
  2001 ;;		_DAC1_SetOutput
  2002 ;;		_MIPITRANSFER1
  2003 ;;		_MIPITRANSFER2
  2004 ;;		_PIN_MANAGER_Initialize
  2005 ;;		_SSCtest
  2006 ;;		_SYSTEM_Initialize
  2007 ;; This function is called by:
  2008 ;;		Startup code after reset
  2009 ;; This function uses a non-reentrant model
  2010 ;;
  2011                           
  2012                           
  2013                           ;psect for function _main
  2014  06F9                     _main:	
  2015                           
  2016                           ;main.c: 296: SYSTEM_Initialize();
  2017                           
  2018                           ;incstack = 0
  2019                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2020  06F9  3184  2433  3186   	fcall	_SYSTEM_Initialize
  2021                           
  2022                           ;main.c: 297: DAC1_Initialize();
  2023  06FC  3184  2428  3186   	fcall	_DAC1_Initialize
  2024                           
  2025                           ;main.c: 298: PIN_MANAGER_Initialize();
  2026  06FF  3184  243C  3186   	fcall	_PIN_MANAGER_Initialize
  2027                           
  2028                           ;main.c: 300: DAC1_SetOutput(0);
  2029  0702  3000               	movlw	0
  2030  0703  3184  2423  3186   	fcall	_DAC1_SetOutput
  2031                           
  2032                           ;main.c: 301: Byte2 = 0x00;
  2033  0706  01FC               	clrf	_Byte2
  2034                           
  2035                           ;main.c: 302: Byte3 = 0x00;
  2036  0707  01FD               	clrf	_Byte3
  2037                           
  2038                           ;main.c: 303: do { LATA1 = 1; } while(0);
  2039  0708  0022               	movlb	2	; select bank2
  2040  0709  148C               	bsf	12,1	;volatile
  2041                           
  2042                           ;main.c: 304: ConfigureShiftRegister();
  2043  070A  3184  2458  3186   	fcall	_ConfigureShiftRegister
  2044                           
  2045                           ;main.c: 305: do { LATA1 = 0; } while(0);
  2046  070D  0022               	movlb	2	; select bank2
  2047  070E  108C               	bcf	12,1	;volatile
  2048                           
  2049                           ;main.c: 308: do { LATA2 = 0; } while(0);
  2050  070F  110C               	bcf	12,2	;volatile
  2051                           
  2052                           ;main.c: 309: do { LATB4 = 0; } while(0);
  2053  0710  120D               	bcf	13,4	;volatile
  2054  0711                     l1342:	
  2055                           ;main.c: 311: while ((PORTC & 0xC0) != 0xC0){}
  2056                           
  2057                           ;main.c: 310: while (1) {
  2058                           
  2059  0711  30C0               	movlw	192
  2060  0712  0020               	movlb	0	; select bank0
  2061  0713  050E               	andwf	14,w	;volatile
  2062  0714  00FB               	movwf	??_main
  2063  0715  30C0               	movlw	192
  2064  0716  067B               	xorwf	??_main,w
  2065  0717  1D03               	btfss	3,2
  2066  0718  2F11               	goto	l1342
  2067                           
  2068                           ;main.c: 312: Byte1 = PORTC;
  2069  0719  080E               	movf	14,w	;volatile
  2070  071A  00FB               	movwf	??_main
  2071  071B  087B               	movf	??_main,w
  2072  071C  00A0               	movwf	_Byte1
  2073                           
  2074                           ;main.c: 313: Byte2 = 0x05;
  2075  071D  3005               	movlw	5
  2076  071E  00FB               	movwf	??_main
  2077  071F  087B               	movf	??_main,w
  2078  0720  00FC               	movwf	_Byte2
  2079                           
  2080                           ;main.c: 314: Byte3 = 0x00;
  2081  0721  01FD               	clrf	_Byte3
  2082                           
  2083                           ;main.c: 319: if (((Byte1 & 0x10) == 0x10) && ((Byte1 & 0x0C) != 0x00))
  2084  0722  1E20               	btfss	_Byte1,4
  2085  0723  2F32               	goto	l1354
  2086  0724  0820               	movf	_Byte1,w
  2087  0725  390C               	andlw	12
  2088  0726  1903               	btfsc	3,2
  2089  0727  2F32               	goto	l1354
  2090                           
  2091                           ;main.c: 320: DAC1_SetOutput(DacOutput[(Byte1 & 0x03)]);
  2092  0728  0820               	movf	_Byte1,w
  2093  0729  3903               	andlw	3
  2094  072A  3E48               	addlw	low (_DacOutput| (0+32768))
  2095  072B  0084               	movwf	4
  2096  072C  3088               	movlw	high (_DacOutput| (0+32768))
  2097  072D  1803               	skipnc
  2098  072E  3E01               	addlw	1
  2099  072F  0085               	movwf	5
  2100  0730  0800               	movf	0,w	;code access
  2101  0731  2F33               	goto	L1
  2102  0732                     l1354:	
  2103                           
  2104                           ;main.c: 321: else
  2105                           ;main.c: 322: DAC1_SetOutput(0);
  2106  0732  3000               	movlw	0
  2107  0733                     L1:	
  2108  0733  3184  2423  3186   	fcall	_DAC1_SetOutput
  2109                           
  2110                           ;main.c: 324: if ((Byte1 & 0x3C) == 0x20){
  2111  0736  303C               	movlw	60
  2112  0737  0020               	movlb	0	; select bank0
  2113  0738  0520               	andwf	_Byte1,w
  2114  0739  00FB               	movwf	??_main
  2115  073A  3020               	movlw	32
  2116  073B  067B               	xorwf	??_main,w
  2117  073C  1903               	btfsc	3,2
  2118  073D  2F82               	goto	l259
  2119                           
  2120                           ;main.c: 327: }else{ if (((Byte1 & 0x30) != 0x00) && ((Byte1 & 0x0C) != 0x00)){
  2121                           
  2122                           ;main.c: 326: do { LATB4 = 1; } while(0);
  2123                           
  2124                           ;main.c: 325: do { LATA2 = 0; } while(0);
  2125  073E  0020               	movlb	0	; select bank0
  2126  073F  0820               	movf	_Byte1,w
  2127  0740  3930               	andlw	48
  2128  0741  1903               	btfsc	3,2
  2129  0742  2F86               	goto	l264
  2130  0743  0820               	movf	_Byte1,w
  2131  0744  390C               	andlw	12
  2132  0745  1903               	btfsc	3,2
  2133  0746  2F86               	goto	l264
  2134                           
  2135                           ;main.c: 328: if ((Byte2 == 5) || (Byte2 == 8) || (Byte2 == 12) || (Byte2 == 13) || (Byt
      +                          e2 == 20) || (Byte2 == 26) || (Byte2 == 29) || (Byte3 == 5) || (Byte3 == 8) || (Byte3 ==
      +                           12) || (Byte3 == 13) || (Byte3 == 20) || (Byte3 == 26) || (Byte3 == 29)){
  2136  0747  3005               	movlw	5
  2137  0748  067C               	xorwf	_Byte2,w
  2138  0749  1903               	btfsc	3,2
  2139  074A  2F7F               	goto	l254
  2140  074B  3008               	movlw	8
  2141  074C  067C               	xorwf	_Byte2,w
  2142  074D  1903               	btfsc	3,2
  2143  074E  2F7F               	goto	l254
  2144  074F  300C               	movlw	12
  2145  0750  067C               	xorwf	_Byte2,w
  2146  0751  1903               	btfsc	3,2
  2147  0752  2F7F               	goto	l254
  2148  0753  300D               	movlw	13
  2149  0754  067C               	xorwf	_Byte2,w
  2150  0755  1903               	btfsc	3,2
  2151  0756  2F7F               	goto	l254
  2152  0757  3014               	movlw	20
  2153  0758  067C               	xorwf	_Byte2,w
  2154  0759  1903               	btfsc	3,2
  2155  075A  2F7F               	goto	l254
  2156  075B  301A               	movlw	26
  2157  075C  067C               	xorwf	_Byte2,w
  2158  075D  1903               	btfsc	3,2
  2159  075E  2F7F               	goto	l254
  2160  075F  301D               	movlw	29
  2161  0760  067C               	xorwf	_Byte2,w
  2162  0761  1903               	btfsc	3,2
  2163  0762  2F7F               	goto	l254
  2164  0763  3005               	movlw	5
  2165  0764  067D               	xorwf	_Byte3,w
  2166  0765  1903               	btfsc	3,2
  2167  0766  2F7F               	goto	l254
  2168  0767  3008               	movlw	8
  2169  0768  067D               	xorwf	_Byte3,w
  2170  0769  1903               	btfsc	3,2
  2171  076A  2F7F               	goto	l254
  2172  076B  300C               	movlw	12
  2173  076C  067D               	xorwf	_Byte3,w
  2174  076D  1903               	btfsc	3,2
  2175  076E  2F7F               	goto	l254
  2176  076F  300D               	movlw	13
  2177  0770  067D               	xorwf	_Byte3,w
  2178  0771  1903               	btfsc	3,2
  2179  0772  2F7F               	goto	l254
  2180  0773  3014               	movlw	20
  2181  0774  067D               	xorwf	_Byte3,w
  2182  0775  1903               	btfsc	3,2
  2183  0776  2F7F               	goto	l254
  2184  0777  301A               	movlw	26
  2185  0778  067D               	xorwf	_Byte3,w
  2186  0779  1903               	btfsc	3,2
  2187  077A  2F7F               	goto	l254
  2188  077B  301D               	movlw	29
  2189  077C  067D               	xorwf	_Byte3,w
  2190  077D  1D03               	btfss	3,2
  2191  077E  2F82               	goto	l259
  2192  077F                     l254:	
  2193                           ;main.c: 329: do { LATA2 = 1; } while(0);
  2194                           
  2195  077F  0022               	movlb	2	; select bank2
  2196  0780  150C               	bsf	12,2	;volatile
  2197                           
  2198                           ;main.c: 330: do { LATB4 = 1; } while(0);
  2199  0781  2F84               	goto	l261
  2200  0782                     l259:	
  2201                           ;main.c: 332: do { LATA2 = 0; } while(0);
  2202                           
  2203                           ;main.c: 331: }else{
  2204                           
  2205  0782  0022               	movlb	2	; select bank2
  2206  0783  110C               	bcf	12,2	;volatile
  2207  0784                     l261:	
  2208                           ;main.c: 333: do { LATB4 = 1; } while(0);
  2209                           
  2210  0784  160D               	bsf	13,4	;volatile
  2211                           
  2212                           ;main.c: 334: }
  2213                           ;main.c: 335: }else{
  2214  0785  2F89               	goto	l1390
  2215  0786                     l264:	
  2216                           ;main.c: 336: do { LATA2 = 0; } while(0);
  2217                           
  2218  0786  0022               	movlb	2	; select bank2
  2219  0787  110C               	bcf	12,2	;volatile
  2220                           
  2221                           ;main.c: 337: do { LATB4 = 0; } while(0);
  2222  0788  120D               	bcf	13,4	;volatile
  2223  0789                     l1390:	
  2224                           
  2225                           ;main.c: 338: }
  2226                           ;main.c: 339: }
  2227                           ;main.c: 357: if (Byte2 == 5){
  2228  0789  3005               	movlw	5
  2229  078A  067C               	xorwf	_Byte2,w
  2230  078B  1D03               	btfss	3,2
  2231  078C  2F92               	goto	l1394
  2232                           
  2233                           ;main.c: 358: SSCtest (Byte3);
  2234  078D  087D               	movf	_Byte3,w
  2235  078E  3184  24C2  3186   	fcall	_SSCtest
  2236                           
  2237                           ;main.c: 359: }else{ if (Byte3 == 5){
  2238  0791  2FF1               	goto	l1436
  2239  0792                     l1394:	
  2240  0792  3005               	movlw	5
  2241  0793  067D               	xorwf	_Byte3,w
  2242  0794  1D03               	btfss	3,2
  2243  0795  2F9B               	goto	l1398
  2244                           
  2245                           ;main.c: 360: MIPITRANSFER1 (3);
  2246  0796  3003               	movlw	3
  2247  0797  3185  2547  3186   	fcall	_MIPITRANSFER1
  2248                           
  2249                           ;main.c: 361: }else{ if ((Byte2 == 8) || (Byte3 == 8)){
  2250  079A  2FF1               	goto	l1436
  2251  079B                     l1398:	
  2252  079B  3008               	movlw	8
  2253  079C  067C               	xorwf	_Byte2,w
  2254  079D  1903               	btfsc	3,2
  2255  079E  2FA3               	goto	l1402
  2256  079F  3008               	movlw	8
  2257  07A0  067D               	xorwf	_Byte3,w
  2258  07A1  1D03               	btfss	3,2
  2259  07A2  2FA8               	goto	l1404
  2260  07A3                     l1402:	
  2261                           
  2262                           ;main.c: 362: MIPITRANSFER1 (6);
  2263  07A3  3006               	movlw	6
  2264  07A4  3185  2547  3186   	fcall	_MIPITRANSFER1
  2265                           
  2266                           ;main.c: 363: }else{ if ((Byte2 == 12) || (Byte3 == 12)){
  2267  07A7  2FF1               	goto	l1436
  2268  07A8                     l1404:	
  2269  07A8  300C               	movlw	12
  2270  07A9  067C               	xorwf	_Byte2,w
  2271  07AA  1903               	btfsc	3,2
  2272  07AB  2FB0               	goto	l1408
  2273  07AC  300C               	movlw	12
  2274  07AD  067D               	xorwf	_Byte3,w
  2275  07AE  1D03               	btfss	3,2
  2276  07AF  2FB5               	goto	l1410
  2277  07B0                     l1408:	
  2278                           
  2279                           ;main.c: 364: MIPITRANSFER1 (9);
  2280  07B0  3009               	movlw	9
  2281  07B1  3185  2547  3186   	fcall	_MIPITRANSFER1
  2282                           
  2283                           ;main.c: 365: }else{ if ((Byte2 == 13) || (Byte3 == 13)){
  2284  07B4  2FF1               	goto	l1436
  2285  07B5                     l1410:	
  2286  07B5  300D               	movlw	13
  2287  07B6  067C               	xorwf	_Byte2,w
  2288  07B7  1903               	btfsc	3,2
  2289  07B8  2FBD               	goto	l1414
  2290  07B9  300D               	movlw	13
  2291  07BA  067D               	xorwf	_Byte3,w
  2292  07BB  1D03               	btfss	3,2
  2293  07BC  2FC2               	goto	l1416
  2294  07BD                     l1414:	
  2295                           
  2296                           ;main.c: 366: MIPITRANSFER1 (12);
  2297  07BD  300C               	movlw	12
  2298  07BE  3185  2547  3186   	fcall	_MIPITRANSFER1
  2299                           
  2300                           ;main.c: 367: }else{ if ((Byte2 == 20) || (Byte3 == 20)){
  2301  07C1  2FF1               	goto	l1436
  2302  07C2                     l1416:	
  2303  07C2  3014               	movlw	20
  2304  07C3  067C               	xorwf	_Byte2,w
  2305  07C4  1903               	btfsc	3,2
  2306  07C5  2FCA               	goto	l1420
  2307  07C6  3014               	movlw	20
  2308  07C7  067D               	xorwf	_Byte3,w
  2309  07C8  1D03               	btfss	3,2
  2310  07C9  2FCF               	goto	l1422
  2311  07CA                     l1420:	
  2312                           
  2313                           ;main.c: 368: MIPITRANSFER1 (15);
  2314  07CA  300F               	movlw	15
  2315  07CB  3185  2547  3186   	fcall	_MIPITRANSFER1
  2316                           
  2317                           ;main.c: 369: }else{ if ((Byte2 == 26) || (Byte3 == 26)){
  2318  07CE  2FF1               	goto	l1436
  2319  07CF                     l1422:	
  2320  07CF  301A               	movlw	26
  2321  07D0  067C               	xorwf	_Byte2,w
  2322  07D1  1903               	btfsc	3,2
  2323  07D2  2FD7               	goto	l1426
  2324  07D3  301A               	movlw	26
  2325  07D4  067D               	xorwf	_Byte3,w
  2326  07D5  1D03               	btfss	3,2
  2327  07D6  2FDC               	goto	l1428
  2328  07D7                     l1426:	
  2329                           
  2330                           ;main.c: 370: MIPITRANSFER1 (18);
  2331  07D7  3012               	movlw	18
  2332  07D8  3185  2547  3186   	fcall	_MIPITRANSFER1
  2333                           
  2334                           ;main.c: 371: }else{ if ((Byte2 == 29) || (Byte3 == 29)){
  2335  07DB  2FF1               	goto	l1436
  2336  07DC                     l1428:	
  2337  07DC  301D               	movlw	29
  2338  07DD  067C               	xorwf	_Byte2,w
  2339  07DE  1903               	btfsc	3,2
  2340  07DF  2FE4               	goto	l1432
  2341  07E0  301D               	movlw	29
  2342  07E1  067D               	xorwf	_Byte3,w
  2343  07E2  1D03               	btfss	3,2
  2344  07E3  2FE9               	goto	l1434
  2345  07E4                     l1432:	
  2346                           
  2347                           ;main.c: 372: MIPITRANSFER1 (21);
  2348  07E4  3015               	movlw	21
  2349  07E5  3185  2547  3186   	fcall	_MIPITRANSFER1
  2350                           
  2351                           ;main.c: 373: }else{
  2352  07E8  2FF1               	goto	l1436
  2353  07E9                     l1434:	
  2354                           
  2355                           ;main.c: 374: MIPITRANSFER1 (30);
  2356  07E9  301E               	movlw	30
  2357  07EA  3185  2547  3186   	fcall	_MIPITRANSFER1
  2358                           
  2359                           ;main.c: 375: MIPITRANSFER2 (30);
  2360  07ED  301E               	movlw	30
  2361  07EE  3186  2620  3186   	fcall	_MIPITRANSFER2
  2362  07F1                     l1436:	
  2363                           ;main.c: 376: }
  2364                           ;main.c: 377: }
  2365                           ;main.c: 378: }
  2366                           ;main.c: 379: }
  2367                           ;main.c: 380: }
  2368                           ;main.c: 381: }
  2369                           ;main.c: 382: }
  2370                           ;main.c: 383: }
  2371                           ;main.c: 384: do { LATA1 = 1; } while(0);
  2372                           
  2373  07F1  0022               	movlb	2	; select bank2
  2374  07F2  148C               	bsf	12,1	;volatile
  2375                           
  2376                           ;main.c: 385: ConfigureShiftRegister();
  2377  07F3  3184  2458  3186   	fcall	_ConfigureShiftRegister
  2378                           
  2379                           ;main.c: 386: do { LATA1 = 0; } while(0);
  2380  07F6  0022               	movlb	2	; select bank2
  2381  07F7  108C               	bcf	12,1	;volatile
  2382  07F8  2F11               	goto	l1342
  2383  07F9                     __end_of_main:	
  2384                           
  2385                           	psect	text1
  2386  0433                     __ptext1:	
  2387 ;; *************** function _SYSTEM_Initialize *****************
  2388 ;; Defined at:
  2389 ;;		line 75 in file "mcc_generated_files/mcc.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;		None
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;		None
  2394 ;; Return value:  Size  Location     Type
  2395 ;;		None               void
  2396 ;; Registers used:
  2397 ;;		wreg, status,2, status,0, pclath, cstack
  2398 ;; Tracked objects:
  2399 ;;		On entry : 0/0
  2400 ;;		On exit  : 0/0
  2401 ;;		Unchanged: 0/0
  2402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2403 ;;      Params:         0       0       0       0       0       0       0       0
  2404 ;;      Locals:         0       0       0       0       0       0       0       0
  2405 ;;      Temps:          0       0       0       0       0       0       0       0
  2406 ;;      Totals:         0       0       0       0       0       0       0       0
  2407 ;;Total ram usage:        0 bytes
  2408 ;; Hardware stack levels used:    1
  2409 ;; Hardware stack levels required when called:    1
  2410 ;; This function calls:
  2411 ;;		_DAC1_Initialize
  2412 ;;		_OSCILLATOR_Initialize
  2413 ;;		_PIN_MANAGER_Initialize
  2414 ;; This function is called by:
  2415 ;;		_main
  2416 ;; This function uses a non-reentrant model
  2417 ;;
  2418                           
  2419                           
  2420                           ;psect for function _SYSTEM_Initialize
  2421  0433                     _SYSTEM_Initialize:	
  2422                           
  2423                           ;mcc.c: 76: OSCILLATOR_Initialize();
  2424                           
  2425                           ;incstack = 0
  2426                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2427  0433  3184  242D  3184   	fcall	_OSCILLATOR_Initialize
  2428                           
  2429                           ;mcc.c: 77: PIN_MANAGER_Initialize();
  2430  0436  3184  243C  3184   	fcall	_PIN_MANAGER_Initialize
  2431                           
  2432                           ;mcc.c: 78: DAC1_Initialize();
  2433  0439  3184  2428         	fcall	_DAC1_Initialize
  2434  043B  0008               	return
  2435  043C                     __end_of_SYSTEM_Initialize:	
  2436                           
  2437                           	psect	text2
  2438  043C                     __ptext2:	
  2439 ;; *************** function _PIN_MANAGER_Initialize *****************
  2440 ;; Defined at:
  2441 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;		None
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;		None
  2446 ;; Return value:  Size  Location     Type
  2447 ;;		None               void
  2448 ;; Registers used:
  2449 ;;		wreg, status,2
  2450 ;; Tracked objects:
  2451 ;;		On entry : 0/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2455 ;;      Params:         0       0       0       0       0       0       0       0
  2456 ;;      Locals:         0       0       0       0       0       0       0       0
  2457 ;;      Temps:          0       0       0       0       0       0       0       0
  2458 ;;      Totals:         0       0       0       0       0       0       0       0
  2459 ;;Total ram usage:        0 bytes
  2460 ;; Hardware stack levels used:    1
  2461 ;; This function calls:
  2462 ;;		Nothing
  2463 ;; This function is called by:
  2464 ;;		_SYSTEM_Initialize
  2465 ;;		_main
  2466 ;; This function uses a non-reentrant model
  2467 ;;
  2468                           
  2469                           
  2470                           ;psect for function _PIN_MANAGER_Initialize
  2471  043C                     _PIN_MANAGER_Initialize:	
  2472                           
  2473                           ;pin_manager.c: 51: LATA = 0x00;
  2474                           
  2475                           ;incstack = 0
  2476                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2477  043C  0022               	movlb	2	; select bank2
  2478  043D  018C               	clrf	12	;volatile
  2479                           
  2480                           ;pin_manager.c: 52: TRISA = 0x28;
  2481  043E  3028               	movlw	40
  2482  043F  0021               	movlb	1	; select bank1
  2483  0440  008C               	movwf	12	;volatile
  2484                           
  2485                           ;pin_manager.c: 53: ANSELA = 0x01;
  2486  0441  3001               	movlw	1
  2487  0442  0023               	movlb	3	; select bank3
  2488  0443  008C               	movwf	12	;volatile
  2489                           
  2490                           ;pin_manager.c: 55: LATB = 0x00;
  2491  0444  0022               	movlb	2	; select bank2
  2492  0445  018D               	clrf	13	;volatile
  2493                           
  2494                           ;pin_manager.c: 56: TRISB = 0x00;
  2495  0446  0021               	movlb	1	; select bank1
  2496  0447  018D               	clrf	13	;volatile
  2497                           
  2498                           ;pin_manager.c: 57: ANSELB = 0x00;
  2499  0448  0023               	movlb	3	; select bank3
  2500  0449  018D               	clrf	13	;volatile
  2501                           
  2502                           ;pin_manager.c: 58: WPUB = 0x00;
  2503  044A  0024               	movlb	4	; select bank4
  2504  044B  018D               	clrf	13	;volatile
  2505                           
  2506                           ;pin_manager.c: 60: LATC = 0x00;
  2507  044C  0022               	movlb	2	; select bank2
  2508  044D  018E               	clrf	14	;volatile
  2509                           
  2510                           ;pin_manager.c: 61: TRISC = 0xFF;
  2511  044E  30FF               	movlw	255
  2512  044F  0021               	movlb	1	; select bank1
  2513  0450  008E               	movwf	14	;volatile
  2514                           
  2515                           ;pin_manager.c: 62: ANSELC = 0x00;
  2516  0451  0023               	movlb	3	; select bank3
  2517  0452  018E               	clrf	14	;volatile
  2518                           
  2519                           ;pin_manager.c: 63: WPUC = 0x00;
  2520  0453  0024               	movlb	4	; select bank4
  2521  0454  018E               	clrf	14	;volatile
  2522                           
  2523                           ;pin_manager.c: 65: OPTION_REGbits.nWPUEN = 0x01;
  2524  0455  0021               	movlb	1	; select bank1
  2525  0456  1795               	bsf	21,7	;volatile
  2526  0457  0008               	return
  2527  0458                     __end_of_PIN_MANAGER_Initialize:	
  2528                           
  2529                           	psect	text3
  2530  042D                     __ptext3:	
  2531 ;; *************** function _OSCILLATOR_Initialize *****************
  2532 ;; Defined at:
  2533 ;;		line 81 in file "mcc_generated_files/mcc.c"
  2534 ;; Parameters:    Size  Location     Type
  2535 ;;		None
  2536 ;; Auto vars:     Size  Location     Type
  2537 ;;		None
  2538 ;; Return value:  Size  Location     Type
  2539 ;;		None               void
  2540 ;; Registers used:
  2541 ;;		wreg, status,2
  2542 ;; Tracked objects:
  2543 ;;		On entry : 0/0
  2544 ;;		On exit  : 0/0
  2545 ;;		Unchanged: 0/0
  2546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2547 ;;      Params:         0       0       0       0       0       0       0       0
  2548 ;;      Locals:         0       0       0       0       0       0       0       0
  2549 ;;      Temps:          0       0       0       0       0       0       0       0
  2550 ;;      Totals:         0       0       0       0       0       0       0       0
  2551 ;;Total ram usage:        0 bytes
  2552 ;; Hardware stack levels used:    1
  2553 ;; This function calls:
  2554 ;;		Nothing
  2555 ;; This function is called by:
  2556 ;;		_SYSTEM_Initialize
  2557 ;; This function uses a non-reentrant model
  2558 ;;
  2559                           
  2560                           
  2561                           ;psect for function _OSCILLATOR_Initialize
  2562  042D                     _OSCILLATOR_Initialize:	
  2563                           
  2564                           ;mcc.c: 83: OSCCON = 0x7A;
  2565                           
  2566                           ;incstack = 0
  2567                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2568  042D  307A               	movlw	122
  2569  042E  0021               	movlb	1	; select bank1
  2570  042F  0099               	movwf	25	;volatile
  2571                           
  2572                           ;mcc.c: 85: OSCSTAT = 0x00;
  2573  0430  019A               	clrf	26	;volatile
  2574                           
  2575                           ;mcc.c: 87: OSCTUNE = 0x00;
  2576  0431  0198               	clrf	24	;volatile
  2577  0432  0008               	return
  2578  0433                     __end_of_OSCILLATOR_Initialize:	
  2579                           
  2580                           	psect	text4
  2581  0428                     __ptext4:	
  2582 ;; *************** function _DAC1_Initialize *****************
  2583 ;; Defined at:
  2584 ;;		line 58 in file "mcc_generated_files/dac1.c"
  2585 ;; Parameters:    Size  Location     Type
  2586 ;;		None
  2587 ;; Auto vars:     Size  Location     Type
  2588 ;;		None
  2589 ;; Return value:  Size  Location     Type
  2590 ;;		None               void
  2591 ;; Registers used:
  2592 ;;		wreg, status,2
  2593 ;; Tracked objects:
  2594 ;;		On entry : 0/0
  2595 ;;		On exit  : 0/0
  2596 ;;		Unchanged: 0/0
  2597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2598 ;;      Params:         0       0       0       0       0       0       0       0
  2599 ;;      Locals:         0       0       0       0       0       0       0       0
  2600 ;;      Temps:          0       0       0       0       0       0       0       0
  2601 ;;      Totals:         0       0       0       0       0       0       0       0
  2602 ;;Total ram usage:        0 bytes
  2603 ;; Hardware stack levels used:    1
  2604 ;; This function calls:
  2605 ;;		Nothing
  2606 ;; This function is called by:
  2607 ;;		_SYSTEM_Initialize
  2608 ;;		_main
  2609 ;; This function uses a non-reentrant model
  2610 ;;
  2611                           
  2612                           
  2613                           ;psect for function _DAC1_Initialize
  2614  0428                     _DAC1_Initialize:	
  2615                           
  2616                           ;dac1.c: 60: DAC1CON0 = 0xA0;
  2617                           
  2618                           ;incstack = 0
  2619                           ; Regs used in _DAC1_Initialize: [wreg+status,2]
  2620  0428  30A0               	movlw	160
  2621  0429  0022               	movlb	2	; select bank2
  2622  042A  0098               	movwf	24	;volatile
  2623                           
  2624                           ;dac1.c: 62: DAC1CON1 = 0x00;
  2625  042B  0199               	clrf	25	;volatile
  2626  042C  0008               	return
  2627  042D                     __end_of_DAC1_Initialize:	
  2628                           
  2629                           	psect	text5
  2630  04C2                     __ptext5:	
  2631 ;; *************** function _SSCtest *****************
  2632 ;; Defined at:
  2633 ;;		line 182 in file "main.c"
  2634 ;; Parameters:    Size  Location     Type
  2635 ;;  CABAND          1    wreg     unsigned char 
  2636 ;; Auto vars:     Size  Location     Type
  2637 ;;  CABAND          1   10[COMMON] unsigned char 
  2638 ;; Return value:  Size  Location     Type
  2639 ;;		None               void
  2640 ;; Registers used:
  2641 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2642 ;; Tracked objects:
  2643 ;;		On entry : 0/0
  2644 ;;		On exit  : 0/0
  2645 ;;		Unchanged: 0/0
  2646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2647 ;;      Params:         0       0       0       0       0       0       0       0
  2648 ;;      Locals:         1       0       0       0       0       0       0       0
  2649 ;;      Temps:          0       0       0       0       0       0       0       0
  2650 ;;      Totals:         1       0       0       0       0       0       0       0
  2651 ;;Total ram usage:        1 bytes
  2652 ;; Hardware stack levels used:    1
  2653 ;; Hardware stack levels required when called:    1
  2654 ;; This function calls:
  2655 ;;		_MIPITRANSFER1
  2656 ;;		_MIPITRANSFER2
  2657 ;; This function is called by:
  2658 ;;		_main
  2659 ;; This function uses a non-reentrant model
  2660 ;;
  2661                           
  2662                           
  2663                           ;psect for function _SSCtest
  2664  04C2                     _SSCtest:	
  2665                           
  2666                           ;incstack = 0
  2667                           ; Regs used in _SSCtest: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2668                           ;SSCtest@CABAND stored from wreg
  2669  04C2  00FA               	movwf	SSCtest@CABAND
  2670                           
  2671                           ;main.c: 183: switch (CABAND){
  2672  04C3  2D3C               	goto	l1268
  2673  04C4                     l1236:	
  2674                           ;main.c: 184: case 0:
  2675                           
  2676                           
  2677                           ;main.c: 185: MIPITRANSFER1 (33);
  2678  04C4  3021               	movlw	33
  2679  04C5  3185  2547  3184   	fcall	_MIPITRANSFER1
  2680                           
  2681                           ;main.c: 186: MIPITRANSFER2 (3);
  2682  04C8  3003               	movlw	3
  2683  04C9  3186  2620         	fcall	_MIPITRANSFER2
  2684                           
  2685                           ;main.c: 187: break;
  2686  04CB  0008               	return
  2687  04CC                     l1238:	
  2688                           ;main.c: 188: case 1:
  2689                           
  2690                           
  2691                           ;main.c: 189: MIPITRANSFER1 (3);
  2692  04CC  3003               	movlw	3
  2693  04CD  3185  2547  3184   	fcall	_MIPITRANSFER1
  2694                           
  2695                           ;main.c: 190: MIPITRANSFER2 (33);
  2696  04D0  3021               	movlw	33
  2697  04D1  3186  2620         	fcall	_MIPITRANSFER2
  2698                           
  2699                           ;main.c: 191: break;
  2700  04D3  0008               	return
  2701  04D4                     l1240:	
  2702                           ;main.c: 192: case 2:
  2703                           
  2704                           
  2705                           ;main.c: 193: MIPITRANSFER1 (6);
  2706  04D4  3006               	movlw	6
  2707  04D5  3185  2547  3184   	fcall	_MIPITRANSFER1
  2708                           
  2709                           ;main.c: 194: MIPITRANSFER2 (30);
  2710  04D8  301E               	movlw	30
  2711  04D9  3186  2620         	fcall	_MIPITRANSFER2
  2712                           
  2713                           ;main.c: 195: break;
  2714  04DB  0008               	return
  2715  04DC                     l1242:	
  2716                           ;main.c: 196: case 3:
  2717                           
  2718                           
  2719                           ;main.c: 197: MIPITRANSFER1 (30);
  2720  04DC  301E               	movlw	30
  2721  04DD  3185  2547  3184   	fcall	_MIPITRANSFER1
  2722                           
  2723                           ;main.c: 198: MIPITRANSFER2 (6);
  2724  04E0  3006               	movlw	6
  2725  04E1  3186  2620         	fcall	_MIPITRANSFER2
  2726                           
  2727                           ;main.c: 199: break;
  2728  04E3  0008               	return
  2729  04E4                     l1244:	
  2730                           ;main.c: 200: case 4:
  2731                           
  2732                           
  2733                           ;main.c: 201: MIPITRANSFER1 (3);
  2734  04E4  3003               	movlw	3
  2735  04E5  3185  2547  3184   	fcall	_MIPITRANSFER1
  2736                           
  2737                           ;main.c: 202: MIPITRANSFER2 (3);
  2738  04E8  3003               	movlw	3
  2739  04E9  3186  2620         	fcall	_MIPITRANSFER2
  2740                           
  2741                           ;main.c: 205: break;
  2742                           
  2743                           ;main.c: 204: case 5:
  2744                           
  2745                           ;main.c: 203: break;
  2746  04EB  0008               	return
  2747  04EC                     l1246:	
  2748                           ;main.c: 206: case 6:
  2749                           
  2750                           
  2751                           ;main.c: 207: MIPITRANSFER1 (33);
  2752  04EC  3021               	movlw	33
  2753  04ED  3185  2547  3184   	fcall	_MIPITRANSFER1
  2754                           
  2755                           ;main.c: 208: MIPITRANSFER2 (30);
  2756  04F0  301E               	movlw	30
  2757  04F1  3186  2620         	fcall	_MIPITRANSFER2
  2758                           
  2759                           ;main.c: 209: break;
  2760  04F3  0008               	return
  2761  04F4                     l1248:	
  2762                           ;main.c: 210: case 7:
  2763                           
  2764                           
  2765                           ;main.c: 211: MIPITRANSFER1 (30);
  2766  04F4  301E               	movlw	30
  2767  04F5  3185  2547  3184   	fcall	_MIPITRANSFER1
  2768                           
  2769                           ;main.c: 212: MIPITRANSFER2 (33);
  2770  04F8  3021               	movlw	33
  2771  04F9  3186  2620         	fcall	_MIPITRANSFER2
  2772                           
  2773                           ;main.c: 213: break;
  2774  04FB  0008               	return
  2775  04FC                     l1250:	
  2776                           ;main.c: 214: case 8:
  2777                           
  2778                           
  2779                           ;main.c: 215: MIPITRANSFER1 (27);
  2780  04FC  301B               	movlw	27
  2781  04FD  3185  2547  3184   	fcall	_MIPITRANSFER1
  2782                           
  2783                           ;main.c: 216: MIPITRANSFER2 (30);
  2784  0500  301E               	movlw	30
  2785  0501  3186  2620         	fcall	_MIPITRANSFER2
  2786                           
  2787                           ;main.c: 217: break;
  2788  0503  0008               	return
  2789  0504                     l1252:	
  2790                           ;main.c: 218: case 9:
  2791                           
  2792                           
  2793                           ;main.c: 219: MIPITRANSFER1 (24);
  2794  0504  3018               	movlw	24
  2795  0505  3185  2547  3184   	fcall	_MIPITRANSFER1
  2796                           
  2797                           ;main.c: 220: MIPITRANSFER2 (30);
  2798  0508  301E               	movlw	30
  2799  0509  3186  2620         	fcall	_MIPITRANSFER2
  2800                           
  2801                           ;main.c: 221: break;
  2802  050B  0008               	return
  2803  050C                     l1254:	
  2804                           ;main.c: 222: case 10:
  2805                           
  2806                           
  2807                           ;main.c: 223: MIPITRANSFER1 (21);
  2808  050C  3015               	movlw	21
  2809  050D  3185  2547  3184   	fcall	_MIPITRANSFER1
  2810                           
  2811                           ;main.c: 224: MIPITRANSFER2 (30);
  2812  0510  301E               	movlw	30
  2813  0511  3186  2620         	fcall	_MIPITRANSFER2
  2814                           
  2815                           ;main.c: 225: break;
  2816  0513  0008               	return
  2817  0514                     l1256:	
  2818                           ;main.c: 226: case 11:
  2819                           
  2820                           
  2821                           ;main.c: 227: MIPITRANSFER1 (18);
  2822  0514  3012               	movlw	18
  2823  0515  3185  2547  3184   	fcall	_MIPITRANSFER1
  2824                           
  2825                           ;main.c: 228: MIPITRANSFER2 (30);
  2826  0518  301E               	movlw	30
  2827  0519  3186  2620         	fcall	_MIPITRANSFER2
  2828                           
  2829                           ;main.c: 229: break;
  2830  051B  0008               	return
  2831  051C                     l1258:	
  2832                           ;main.c: 230: case 12:
  2833                           
  2834                           
  2835                           ;main.c: 231: MIPITRANSFER1 (15);
  2836  051C  300F               	movlw	15
  2837  051D  3185  2547  3184   	fcall	_MIPITRANSFER1
  2838                           
  2839                           ;main.c: 232: MIPITRANSFER2 (30);
  2840  0520  301E               	movlw	30
  2841  0521  3186  2620         	fcall	_MIPITRANSFER2
  2842                           
  2843                           ;main.c: 233: break;
  2844  0523  0008               	return
  2845  0524                     l1260:	
  2846                           ;main.c: 234: case 13:
  2847                           
  2848                           
  2849                           ;main.c: 235: MIPITRANSFER1 (12);
  2850  0524  300C               	movlw	12
  2851  0525  3185  2547  3184   	fcall	_MIPITRANSFER1
  2852                           
  2853                           ;main.c: 236: MIPITRANSFER2 (30);
  2854  0528  301E               	movlw	30
  2855  0529  3186  2620         	fcall	_MIPITRANSFER2
  2856                           
  2857                           ;main.c: 237: break;
  2858  052B  0008               	return
  2859  052C                     l1262:	
  2860                           ;main.c: 238: case 14:
  2861                           
  2862                           
  2863                           ;main.c: 239: MIPITRANSFER1 (9);
  2864  052C  3009               	movlw	9
  2865  052D  3185  2547  3184   	fcall	_MIPITRANSFER1
  2866                           
  2867                           ;main.c: 240: MIPITRANSFER2 (30);
  2868  0530  301E               	movlw	30
  2869  0531  3186  2620         	fcall	_MIPITRANSFER2
  2870                           
  2871                           ;main.c: 241: break;
  2872  0533  0008               	return
  2873  0534                     l1264:	
  2874                           ;main.c: 242: default:
  2875                           
  2876                           
  2877                           ;main.c: 243: MIPITRANSFER1 (6);
  2878  0534  3006               	movlw	6
  2879  0535  3185  2547  3184   	fcall	_MIPITRANSFER1
  2880                           
  2881                           ;main.c: 244: MIPITRANSFER2 (6);
  2882  0538  3006               	movlw	6
  2883  0539  3186  2620         	fcall	_MIPITRANSFER2
  2884                           
  2885                           ;main.c: 246: }
  2886                           
  2887                           ;main.c: 245: break;
  2888  053B  0008               	return
  2889  053C                     l1268:	
  2890  053C  087A               	movf	SSCtest@CABAND,w
  2891                           
  2892                           ; Switch size 1, requested type "space"
  2893                           ; Number of cases is 15, Range of values is 0 to 14
  2894                           ; switch strategies available:
  2895                           ; Name         Instructions Cycles
  2896                           ; direct_byte           36     6 (fixed)
  2897                           ; simple_byte           46    24 (average)
  2898                           ; jumptable            260     6 (fixed)
  2899                           ;	Chosen strategy is direct_byte
  2900  053D  0084               	movwf	4
  2901  053E  300F               	movlw	15
  2902  053F  0204               	subwf	4,w
  2903  0540  1803               	skipnc
  2904  0541  2D34               	goto	l1264
  2905  0542  3180               	movlp	high S1462
  2906  0543  3504               	lslf	4,w
  2907  0544  3E04               	addlw	low S1462
  2908  0545  0082               	movwf	2
  2909  0546                     l192:	
  2910  0546  0008               	return
  2911  0547                     __end_of_SSCtest:	
  2912                           
  2913                           	psect	swtext1
  2914  0004                     __pswtext1:	
  2915  0004                     S1462:	
  2916  0004  3184  2CC4         	ljmp	l1236
  2917  0006  3184  2CCC         	ljmp	l1238
  2918  0008  3184  2CD4         	ljmp	l1240
  2919  000A  3184  2CDC         	ljmp	l1242
  2920  000C  3184  2CE4         	ljmp	l1244
  2921  000E  3185  2D46         	ljmp	l192
  2922  0010  3184  2CEC         	ljmp	l1246
  2923  0012  3184  2CF4         	ljmp	l1248
  2924  0014  3184  2CFC         	ljmp	l1250
  2925  0016  3185  2D04         	ljmp	l1252
  2926  0018  3185  2D0C         	ljmp	l1254
  2927  001A  3185  2D14         	ljmp	l1256
  2928  001C  3185  2D1C         	ljmp	l1258
  2929  001E  3185  2D24         	ljmp	l1260
  2930  0020  3185  2D2C         	ljmp	l1262
  2931                           
  2932                           	psect	text6
  2933  0620                     __ptext6:	
  2934 ;; *************** function _MIPITRANSFER2 *****************
  2935 ;; Defined at:
  2936 ;;		line 133 in file "main.c"
  2937 ;; Parameters:    Size  Location     Type
  2938 ;;  k               1    wreg     unsigned char 
  2939 ;; Auto vars:     Size  Location     Type
  2940 ;;  k               1    3[COMMON] unsigned char 
  2941 ;;  j               1    7[COMMON] unsigned char 
  2942 ;;  j               1    5[COMMON] unsigned char 
  2943 ;;  i               1    9[COMMON] unsigned char 
  2944 ;;  j               1    6[COMMON] unsigned char 
  2945 ;;  i               1    8[COMMON] unsigned char 
  2946 ;;  j               1    4[COMMON] unsigned char 
  2947 ;; Return value:  Size  Location     Type
  2948 ;;		None               void
  2949 ;; Registers used:
  2950 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2951 ;; Tracked objects:
  2952 ;;		On entry : 0/0
  2953 ;;		On exit  : 0/0
  2954 ;;		Unchanged: 0/0
  2955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2956 ;;      Params:         0       0       0       0       0       0       0       0
  2957 ;;      Locals:         7       0       0       0       0       0       0       0
  2958 ;;      Temps:          3       0       0       0       0       0       0       0
  2959 ;;      Totals:        10       0       0       0       0       0       0       0
  2960 ;;Total ram usage:       10 bytes
  2961 ;; Hardware stack levels used:    1
  2962 ;; This function calls:
  2963 ;;		Nothing
  2964 ;; This function is called by:
  2965 ;;		_SSCtest
  2966 ;;		_main
  2967 ;; This function uses a non-reentrant model
  2968 ;;
  2969                           
  2970                           
  2971                           ;psect for function _MIPITRANSFER2
  2972  0620                     _MIPITRANSFER2:	
  2973                           
  2974                           ;incstack = 0
  2975                           ; Regs used in _MIPITRANSFER2: [wreg-fsr0h+status,2+status,0+pclath]
  2976                           ;MIPITRANSFER2@k stored from wreg
  2977  0620  00F3               	movwf	MIPITRANSFER2@k
  2978                           
  2979                           ;main.c: 134: do { LATB5 = 1; } while(0);
  2980  0621  0022               	movlb	2	; select bank2
  2981  0622  168D               	bsf	13,5	;volatile
  2982  0623  0000               	nop	;# 
  2983                           
  2984                           ;main.c: 136: do { LATB5 = 0; } while(0);
  2985  0624  0022               	movlb	2	; select bank2
  2986  0625  128D               	bcf	13,5	;volatile
  2987                           
  2988                           ;main.c: 137: readDummy = USIDLOWREV[0];
  2989  0626  3024               	movlw	low (_USIDLOWREV| (0+32768))
  2990  0627  0084               	movwf	4
  2991  0628  3088               	movlw	high (_USIDLOWREV| (0+32768))
  2992  0629  0085               	movwf	5
  2993  062A  0800               	movf	0,w	;code access
  2994  062B  00F0               	movwf	??_MIPITRANSFER2
  2995  062C  0870               	movf	??_MIPITRANSFER2,w
  2996  062D  0020               	movlb	0	; select bank0
  2997  062E  00A1               	movwf	_readDummy
  2998                           
  2999                           ;main.c: 138: readDummy = readDummy >> 1;
  3000  062F  3621               	lsrf	_readDummy,w
  3001  0630  00F0               	movwf	??_MIPITRANSFER2
  3002  0631  0870               	movf	??_MIPITRANSFER2,w
  3003  0632  00A1               	movwf	_readDummy
  3004                           
  3005                           ;main.c: 139: for (uint8_t j=0; j<7; j++){
  3006  0633  01F4               	clrf	MIPITRANSFER2@j
  3007  0634  3007               	movlw	7
  3008  0635  0274               	subwf	MIPITRANSFER2@j,w
  3009  0636  1803               	btfsc	3,0
  3010  0637  2E52               	goto	l140
  3011  0638                     l141:	
  3012                           ;main.c: 140: do { LATB6 = 1; } while(0);
  3013                           
  3014  0638  0022               	movlb	2	; select bank2
  3015  0639  170D               	bsf	13,6	;volatile
  3016                           
  3017                           ;main.c: 141: LATB5 = readDummy & 0x01;
  3018  063A  0020               	movlb	0	; select bank0
  3019  063B  1C21               	btfss	_readDummy,0
  3020  063C  2E40               	goto	u1160
  3021  063D  0022               	movlb	2	; select bank2
  3022  063E  168D               	bsf	13,5	;volatile
  3023  063F  2E42               	goto	u1174
  3024  0640                     u1160:	
  3025  0640  0022               	movlb	2	; select bank2
  3026  0641  128D               	bcf	13,5	;volatile
  3027  0642                     u1174:	
  3028  0642  0000               	nop	;# 
  3029                           
  3030                           ;main.c: 143: do { LATB6 = 0; } while(0);
  3031  0643  0022               	movlb	2	; select bank2
  3032  0644  130D               	bcf	13,6	;volatile
  3033                           
  3034                           ;main.c: 144: readDummy = readDummy >> 1;
  3035  0645  0020               	movlb	0	; select bank0
  3036  0646  3621               	lsrf	_readDummy,w
  3037  0647  00F0               	movwf	??_MIPITRANSFER2
  3038  0648  0870               	movf	??_MIPITRANSFER2,w
  3039  0649  00A1               	movwf	_readDummy
  3040  064A  3001               	movlw	1
  3041  064B  00F0               	movwf	??_MIPITRANSFER2
  3042  064C  0870               	movf	??_MIPITRANSFER2,w
  3043  064D  07F4               	addwf	MIPITRANSFER2@j,f
  3044  064E  3007               	movlw	7
  3045  064F  0274               	subwf	MIPITRANSFER2@j,w
  3046  0650  1C03               	skipc
  3047  0651  2E38               	goto	l141
  3048  0652                     l140:	
  3049                           
  3050                           ;main.c: 145: }
  3051                           ;main.c: 146: for (uint8_t i=1; i<3; i++){
  3052  0652  01F8               	clrf	MIPITRANSFER2@i
  3053  0653  0AF8               	incf	MIPITRANSFER2@i,f
  3054  0654  3003               	movlw	3
  3055  0655  0278               	subwf	MIPITRANSFER2@i,w
  3056  0656  1803               	btfsc	3,0
  3057  0657  2E8A               	goto	l146
  3058  0658                     l1180:	
  3059                           
  3060                           ;main.c: 147: readDummy = USIDLOWREV[i];
  3061  0658  0878               	movf	MIPITRANSFER2@i,w
  3062  0659  3E24               	addlw	low (_USIDLOWREV| (0+32768))
  3063  065A  0084               	movwf	4
  3064  065B  3088               	movlw	high (_USIDLOWREV| (0+32768))
  3065  065C  1803               	skipnc
  3066  065D  3E01               	addlw	1
  3067  065E  0085               	movwf	5
  3068  065F  0800               	movf	0,w	;code access
  3069  0660  00F0               	movwf	??_MIPITRANSFER2
  3070  0661  0870               	movf	??_MIPITRANSFER2,w
  3071  0662  00A1               	movwf	_readDummy
  3072                           
  3073                           ;main.c: 148: for (uint8_t j=0; j<8; j++){
  3074  0663  01F5               	clrf	MIPITRANSFER2@j_118
  3075  0664  3008               	movlw	8
  3076  0665  0275               	subwf	MIPITRANSFER2@j_118,w
  3077  0666  1803               	btfsc	3,0
  3078  0667  2E82               	goto	l1192
  3079  0668                     l149:	
  3080                           ;main.c: 149: do { LATB6 = 1; } while(0);
  3081                           
  3082  0668  0022               	movlb	2	; select bank2
  3083  0669  170D               	bsf	13,6	;volatile
  3084                           
  3085                           ;main.c: 150: LATB5 = readDummy & 0x01;
  3086  066A  0020               	movlb	0	; select bank0
  3087  066B  1C21               	btfss	_readDummy,0
  3088  066C  2E70               	goto	u1210
  3089  066D  0022               	movlb	2	; select bank2
  3090  066E  168D               	bsf	13,5	;volatile
  3091  066F  2E72               	goto	u1224
  3092  0670                     u1210:	
  3093  0670  0022               	movlb	2	; select bank2
  3094  0671  128D               	bcf	13,5	;volatile
  3095  0672                     u1224:	
  3096  0672  0000               	nop	;# 
  3097                           
  3098                           ;main.c: 152: do { LATB6 = 0; } while(0);
  3099  0673  0022               	movlb	2	; select bank2
  3100  0674  130D               	bcf	13,6	;volatile
  3101                           
  3102                           ;main.c: 153: readDummy = readDummy >> 1;
  3103  0675  0020               	movlb	0	; select bank0
  3104  0676  3621               	lsrf	_readDummy,w
  3105  0677  00F0               	movwf	??_MIPITRANSFER2
  3106  0678  0870               	movf	??_MIPITRANSFER2,w
  3107  0679  00A1               	movwf	_readDummy
  3108  067A  3001               	movlw	1
  3109  067B  00F0               	movwf	??_MIPITRANSFER2
  3110  067C  0870               	movf	??_MIPITRANSFER2,w
  3111  067D  07F5               	addwf	MIPITRANSFER2@j_118,f
  3112  067E  3008               	movlw	8
  3113  067F  0275               	subwf	MIPITRANSFER2@j_118,w
  3114  0680  1C03               	skipc
  3115  0681  2E68               	goto	l149
  3116  0682                     l1192:	
  3117  0682  3001               	movlw	1
  3118  0683  00F0               	movwf	??_MIPITRANSFER2
  3119  0684  0870               	movf	??_MIPITRANSFER2,w
  3120  0685  07F8               	addwf	MIPITRANSFER2@i,f
  3121  0686  3003               	movlw	3
  3122  0687  0278               	subwf	MIPITRANSFER2@i,w
  3123  0688  1C03               	skipc
  3124  0689  2E58               	goto	l1180
  3125  068A                     l146:	
  3126  068A  0000               	nop	;# 
  3127  068B  0000               	nop	;# 
  3128                           
  3129                           ;main.c: 158: do { LATB5 = 1; } while(0);
  3130  068C  0022               	movlb	2	; select bank2
  3131  068D  168D               	bsf	13,5	;volatile
  3132  068E  0000               	nop	;# 
  3133                           
  3134                           ;main.c: 160: do { LATB5 = 0; } while(0);
  3135  068F  0022               	movlb	2	; select bank2
  3136  0690  128D               	bcf	13,5	;volatile
  3137                           
  3138                           ;main.c: 161: readDummy = USIDLOWREV[k];
  3139  0691  0873               	movf	MIPITRANSFER2@k,w
  3140  0692  3E24               	addlw	low (_USIDLOWREV| (0+32768))
  3141  0693  0084               	movwf	4
  3142  0694  3088               	movlw	high (_USIDLOWREV| (0+32768))
  3143  0695  1803               	skipnc
  3144  0696  3E01               	addlw	1
  3145  0697  0085               	movwf	5
  3146  0698  0800               	movf	0,w	;code access
  3147  0699  00F0               	movwf	??_MIPITRANSFER2
  3148  069A  0870               	movf	??_MIPITRANSFER2,w
  3149  069B  0020               	movlb	0	; select bank0
  3150  069C  00A1               	movwf	_readDummy
  3151                           
  3152                           ;main.c: 162: readDummy = readDummy >> 1;
  3153  069D  3621               	lsrf	_readDummy,w
  3154  069E  00F0               	movwf	??_MIPITRANSFER2
  3155  069F  0870               	movf	??_MIPITRANSFER2,w
  3156  06A0  00A1               	movwf	_readDummy
  3157                           
  3158                           ;main.c: 163: for (uint8_t j=0; j<7; j++){
  3159  06A1  01F6               	clrf	MIPITRANSFER2@j_119
  3160  06A2  3007               	movlw	7
  3161  06A3  0276               	subwf	MIPITRANSFER2@j_119,w
  3162  06A4  1803               	btfsc	3,0
  3163  06A5  2EC0               	goto	l158
  3164  06A6                     l159:	
  3165                           ;main.c: 164: do { LATB6 = 1; } while(0);
  3166                           
  3167  06A6  0022               	movlb	2	; select bank2
  3168  06A7  170D               	bsf	13,6	;volatile
  3169                           
  3170                           ;main.c: 165: LATB5 = readDummy & 0x01;
  3171  06A8  0020               	movlb	0	; select bank0
  3172  06A9  1C21               	btfss	_readDummy,0
  3173  06AA  2EAE               	goto	u1260
  3174  06AB  0022               	movlb	2	; select bank2
  3175  06AC  168D               	bsf	13,5	;volatile
  3176  06AD  2EB0               	goto	u1274
  3177  06AE                     u1260:	
  3178  06AE  0022               	movlb	2	; select bank2
  3179  06AF  128D               	bcf	13,5	;volatile
  3180  06B0                     u1274:	
  3181  06B0  0000               	nop	;# 
  3182                           
  3183                           ;main.c: 167: do { LATB6 = 0; } while(0);
  3184  06B1  0022               	movlb	2	; select bank2
  3185  06B2  130D               	bcf	13,6	;volatile
  3186                           
  3187                           ;main.c: 168: readDummy = readDummy >> 1;
  3188  06B3  0020               	movlb	0	; select bank0
  3189  06B4  3621               	lsrf	_readDummy,w
  3190  06B5  00F0               	movwf	??_MIPITRANSFER2
  3191  06B6  0870               	movf	??_MIPITRANSFER2,w
  3192  06B7  00A1               	movwf	_readDummy
  3193  06B8  3001               	movlw	1
  3194  06B9  00F0               	movwf	??_MIPITRANSFER2
  3195  06BA  0870               	movf	??_MIPITRANSFER2,w
  3196  06BB  07F6               	addwf	MIPITRANSFER2@j_119,f
  3197  06BC  3007               	movlw	7
  3198  06BD  0276               	subwf	MIPITRANSFER2@j_119,w
  3199  06BE  1C03               	skipc
  3200  06BF  2EA6               	goto	l159
  3201  06C0                     l158:	
  3202                           
  3203                           ;main.c: 169: }
  3204                           ;main.c: 170: for (uint8_t i=1; i<3; i++){
  3205  06C0  01F9               	clrf	MIPITRANSFER2@i_120
  3206  06C1  0AF9               	incf	MIPITRANSFER2@i_120,f
  3207  06C2                     L2:	
  3208  06C2  3003               	movlw	3
  3209  06C3  0279               	subwf	MIPITRANSFER2@i_120,w
  3210  06C4  1803               	btfsc	3,0
  3211  06C5  0008               	return
  3212                           
  3213                           ;main.c: 171: readDummy = USIDLOWREV[(k+i)];
  3214  06C6  0873               	movf	MIPITRANSFER2@k,w
  3215  06C7  0779               	addwf	MIPITRANSFER2@i_120,w
  3216  06C8  00F0               	movwf	??_MIPITRANSFER2
  3217  06C9  01F1               	clrf	??_MIPITRANSFER2+1
  3218  06CA  0DF1               	rlf	??_MIPITRANSFER2+1,f
  3219  06CB  3024               	movlw	low (_USIDLOWREV| (0+32768))
  3220  06CC  0770               	addwf	??_MIPITRANSFER2,w
  3221  06CD  0084               	movwf	4
  3222  06CE  3088               	movlw	high (_USIDLOWREV| (0+32768))
  3223  06CF  3D71               	addwfc	??_MIPITRANSFER2+1,w
  3224  06D0  0085               	movwf	5
  3225  06D1  0800               	movf	0,w	;code access
  3226  06D2  00F2               	movwf	??_MIPITRANSFER2+2
  3227  06D3  0872               	movf	??_MIPITRANSFER2+2,w
  3228  06D4  00A1               	movwf	_readDummy
  3229                           
  3230                           ;main.c: 172: for (uint8_t j=0; j<8; j++){
  3231  06D5  01F7               	clrf	MIPITRANSFER2@j_121
  3232  06D6  3008               	movlw	8
  3233  06D7  0277               	subwf	MIPITRANSFER2@j_121,w
  3234  06D8  1803               	btfsc	3,0
  3235  06D9  2EF4               	goto	l1226
  3236  06DA                     l167:	
  3237                           ;main.c: 173: do { LATB6 = 1; } while(0);
  3238                           
  3239  06DA  0022               	movlb	2	; select bank2
  3240  06DB  170D               	bsf	13,6	;volatile
  3241                           
  3242                           ;main.c: 174: LATB5 = readDummy & 0x01;
  3243  06DC  0020               	movlb	0	; select bank0
  3244  06DD  1C21               	btfss	_readDummy,0
  3245  06DE  2EE2               	goto	u1310
  3246  06DF  0022               	movlb	2	; select bank2
  3247  06E0  168D               	bsf	13,5	;volatile
  3248  06E1  2EE4               	goto	u1324
  3249  06E2                     u1310:	
  3250  06E2  0022               	movlb	2	; select bank2
  3251  06E3  128D               	bcf	13,5	;volatile
  3252  06E4                     u1324:	
  3253  06E4  0000               	nop	;# 
  3254                           
  3255                           ;main.c: 176: do { LATB6 = 0; } while(0);
  3256  06E5  0022               	movlb	2	; select bank2
  3257  06E6  130D               	bcf	13,6	;volatile
  3258                           
  3259                           ;main.c: 177: readDummy = readDummy >> 1;
  3260  06E7  0020               	movlb	0	; select bank0
  3261  06E8  3621               	lsrf	_readDummy,w
  3262  06E9  00F0               	movwf	??_MIPITRANSFER2
  3263  06EA  0870               	movf	??_MIPITRANSFER2,w
  3264  06EB  00A1               	movwf	_readDummy
  3265  06EC  3001               	movlw	1
  3266  06ED  00F0               	movwf	??_MIPITRANSFER2
  3267  06EE  0870               	movf	??_MIPITRANSFER2,w
  3268  06EF  07F7               	addwf	MIPITRANSFER2@j_121,f
  3269  06F0  3008               	movlw	8
  3270  06F1  0277               	subwf	MIPITRANSFER2@j_121,w
  3271  06F2  1C03               	skipc
  3272  06F3  2EDA               	goto	l167
  3273  06F4                     l1226:	
  3274  06F4  3001               	movlw	1
  3275  06F5  00F0               	movwf	??_MIPITRANSFER2
  3276  06F6  0870               	movf	??_MIPITRANSFER2,w
  3277  06F7  07F9               	addwf	MIPITRANSFER2@i_120,f
  3278  06F8  2EC2               	goto	L2
  3279  06F9                     __end_of_MIPITRANSFER2:	
  3280                           
  3281                           	psect	text7
  3282  0547                     __ptext7:	
  3283 ;; *************** function _MIPITRANSFER1 *****************
  3284 ;; Defined at:
  3285 ;;		line 84 in file "main.c"
  3286 ;; Parameters:    Size  Location     Type
  3287 ;;  k               1    wreg     unsigned char 
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;  k               1    3[COMMON] unsigned char 
  3290 ;;  j               1    7[COMMON] unsigned char 
  3291 ;;  j               1    5[COMMON] unsigned char 
  3292 ;;  i               1    9[COMMON] unsigned char 
  3293 ;;  j               1    6[COMMON] unsigned char 
  3294 ;;  i               1    8[COMMON] unsigned char 
  3295 ;;  j               1    4[COMMON] unsigned char 
  3296 ;; Return value:  Size  Location     Type
  3297 ;;		None               void
  3298 ;; Registers used:
  3299 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3300 ;; Tracked objects:
  3301 ;;		On entry : 0/0
  3302 ;;		On exit  : 0/0
  3303 ;;		Unchanged: 0/0
  3304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3305 ;;      Params:         0       0       0       0       0       0       0       0
  3306 ;;      Locals:         7       0       0       0       0       0       0       0
  3307 ;;      Temps:          3       0       0       0       0       0       0       0
  3308 ;;      Totals:        10       0       0       0       0       0       0       0
  3309 ;;Total ram usage:       10 bytes
  3310 ;; Hardware stack levels used:    1
  3311 ;; This function calls:
  3312 ;;		Nothing
  3313 ;; This function is called by:
  3314 ;;		_SSCtest
  3315 ;;		_main
  3316 ;; This function uses a non-reentrant model
  3317 ;;
  3318                           
  3319                           
  3320                           ;psect for function _MIPITRANSFER1
  3321  0547                     _MIPITRANSFER1:	
  3322                           
  3323                           ;incstack = 0
  3324                           ; Regs used in _MIPITRANSFER1: [wreg-fsr0h+status,2+status,0+pclath]
  3325                           ;MIPITRANSFER1@k stored from wreg
  3326  0547  00F3               	movwf	MIPITRANSFER1@k
  3327                           
  3328                           ;main.c: 85: do { LATB7 = 1; } while(0);
  3329  0548  0022               	movlb	2	; select bank2
  3330  0549  178D               	bsf	13,7	;volatile
  3331  054A  0000               	nop	;# 
  3332                           
  3333                           ;main.c: 87: do { LATB7 = 0; } while(0);
  3334  054B  0022               	movlb	2	; select bank2
  3335  054C  138D               	bcf	13,7	;volatile
  3336                           
  3337                           ;main.c: 88: readDummy = USIDLOWREV[0];
  3338  054D  3024               	movlw	low (_USIDLOWREV| (0+32768))
  3339  054E  0084               	movwf	4
  3340  054F  3088               	movlw	high (_USIDLOWREV| (0+32768))
  3341  0550  0085               	movwf	5
  3342  0551  0800               	movf	0,w	;code access
  3343  0552  00F0               	movwf	??_MIPITRANSFER1
  3344  0553  0870               	movf	??_MIPITRANSFER1,w
  3345  0554  0020               	movlb	0	; select bank0
  3346  0555  00A1               	movwf	_readDummy
  3347                           
  3348                           ;main.c: 89: readDummy = readDummy >> 1;
  3349  0556  3621               	lsrf	_readDummy,w
  3350  0557  00F0               	movwf	??_MIPITRANSFER1
  3351  0558  0870               	movf	??_MIPITRANSFER1,w
  3352  0559  00A1               	movwf	_readDummy
  3353                           
  3354                           ;main.c: 90: for (uint8_t j=0; j<7; j++){
  3355  055A  01F4               	clrf	MIPITRANSFER1@j
  3356  055B  3007               	movlw	7
  3357  055C  0274               	subwf	MIPITRANSFER1@j,w
  3358  055D  1803               	btfsc	3,0
  3359  055E  2D79               	goto	l101
  3360  055F                     l102:	
  3361                           ;main.c: 91: do { LATB6 = 1; } while(0);
  3362                           
  3363  055F  0022               	movlb	2	; select bank2
  3364  0560  170D               	bsf	13,6	;volatile
  3365                           
  3366                           ;main.c: 92: LATB7 = readDummy & 0x01;
  3367  0561  0020               	movlb	0	; select bank0
  3368  0562  1C21               	btfss	_readDummy,0
  3369  0563  2D67               	goto	u960
  3370  0564  0022               	movlb	2	; select bank2
  3371  0565  178D               	bsf	13,7	;volatile
  3372  0566  2D69               	goto	u974
  3373  0567                     u960:	
  3374  0567  0022               	movlb	2	; select bank2
  3375  0568  138D               	bcf	13,7	;volatile
  3376  0569                     u974:	
  3377  0569  0000               	nop	;# 
  3378                           
  3379                           ;main.c: 94: do { LATB6 = 0; } while(0);
  3380  056A  0022               	movlb	2	; select bank2
  3381  056B  130D               	bcf	13,6	;volatile
  3382                           
  3383                           ;main.c: 95: readDummy = readDummy >> 1;
  3384  056C  0020               	movlb	0	; select bank0
  3385  056D  3621               	lsrf	_readDummy,w
  3386  056E  00F0               	movwf	??_MIPITRANSFER1
  3387  056F  0870               	movf	??_MIPITRANSFER1,w
  3388  0570  00A1               	movwf	_readDummy
  3389  0571  3001               	movlw	1
  3390  0572  00F0               	movwf	??_MIPITRANSFER1
  3391  0573  0870               	movf	??_MIPITRANSFER1,w
  3392  0574  07F4               	addwf	MIPITRANSFER1@j,f
  3393  0575  3007               	movlw	7
  3394  0576  0274               	subwf	MIPITRANSFER1@j,w
  3395  0577  1C03               	skipc
  3396  0578  2D5F               	goto	l102
  3397  0579                     l101:	
  3398                           
  3399                           ;main.c: 96: }
  3400                           ;main.c: 97: for (uint8_t i=1; i<3; i++){
  3401  0579  01F8               	clrf	MIPITRANSFER1@i
  3402  057A  0AF8               	incf	MIPITRANSFER1@i,f
  3403  057B  3003               	movlw	3
  3404  057C  0278               	subwf	MIPITRANSFER1@i,w
  3405  057D  1803               	btfsc	3,0
  3406  057E  2DB1               	goto	l107
  3407  057F                     l1112:	
  3408                           
  3409                           ;main.c: 98: readDummy = USIDLOWREV[i];
  3410  057F  0878               	movf	MIPITRANSFER1@i,w
  3411  0580  3E24               	addlw	low (_USIDLOWREV| (0+32768))
  3412  0581  0084               	movwf	4
  3413  0582  3088               	movlw	high (_USIDLOWREV| (0+32768))
  3414  0583  1803               	skipnc
  3415  0584  3E01               	addlw	1
  3416  0585  0085               	movwf	5
  3417  0586  0800               	movf	0,w	;code access
  3418  0587  00F0               	movwf	??_MIPITRANSFER1
  3419  0588  0870               	movf	??_MIPITRANSFER1,w
  3420  0589  00A1               	movwf	_readDummy
  3421                           
  3422                           ;main.c: 99: for (uint8_t j=0; j<8; j++){
  3423  058A  01F5               	clrf	MIPITRANSFER1@j_110
  3424  058B  3008               	movlw	8
  3425  058C  0275               	subwf	MIPITRANSFER1@j_110,w
  3426  058D  1803               	btfsc	3,0
  3427  058E  2DA9               	goto	l1124
  3428  058F                     l110:	
  3429                           ;main.c: 100: do { LATB6 = 1; } while(0);
  3430                           
  3431  058F  0022               	movlb	2	; select bank2
  3432  0590  170D               	bsf	13,6	;volatile
  3433                           
  3434                           ;main.c: 101: LATB7 = readDummy & 0x01;
  3435  0591  0020               	movlb	0	; select bank0
  3436  0592  1C21               	btfss	_readDummy,0
  3437  0593  2D97               	goto	u1010
  3438  0594  0022               	movlb	2	; select bank2
  3439  0595  178D               	bsf	13,7	;volatile
  3440  0596  2D99               	goto	u1024
  3441  0597                     u1010:	
  3442  0597  0022               	movlb	2	; select bank2
  3443  0598  138D               	bcf	13,7	;volatile
  3444  0599                     u1024:	
  3445  0599  0000               	nop	;# 
  3446                           
  3447                           ;main.c: 103: do { LATB6 = 0; } while(0);
  3448  059A  0022               	movlb	2	; select bank2
  3449  059B  130D               	bcf	13,6	;volatile
  3450                           
  3451                           ;main.c: 104: readDummy = readDummy >> 1;
  3452  059C  0020               	movlb	0	; select bank0
  3453  059D  3621               	lsrf	_readDummy,w
  3454  059E  00F0               	movwf	??_MIPITRANSFER1
  3455  059F  0870               	movf	??_MIPITRANSFER1,w
  3456  05A0  00A1               	movwf	_readDummy
  3457  05A1  3001               	movlw	1
  3458  05A2  00F0               	movwf	??_MIPITRANSFER1
  3459  05A3  0870               	movf	??_MIPITRANSFER1,w
  3460  05A4  07F5               	addwf	MIPITRANSFER1@j_110,f
  3461  05A5  3008               	movlw	8
  3462  05A6  0275               	subwf	MIPITRANSFER1@j_110,w
  3463  05A7  1C03               	skipc
  3464  05A8  2D8F               	goto	l110
  3465  05A9                     l1124:	
  3466  05A9  3001               	movlw	1
  3467  05AA  00F0               	movwf	??_MIPITRANSFER1
  3468  05AB  0870               	movf	??_MIPITRANSFER1,w
  3469  05AC  07F8               	addwf	MIPITRANSFER1@i,f
  3470  05AD  3003               	movlw	3
  3471  05AE  0278               	subwf	MIPITRANSFER1@i,w
  3472  05AF  1C03               	skipc
  3473  05B0  2D7F               	goto	l1112
  3474  05B1                     l107:	
  3475  05B1  0000               	nop	;# 
  3476  05B2  0000               	nop	;# 
  3477                           
  3478                           ;main.c: 109: do { LATB7 = 1; } while(0);
  3479  05B3  0022               	movlb	2	; select bank2
  3480  05B4  178D               	bsf	13,7	;volatile
  3481  05B5  0000               	nop	;# 
  3482                           
  3483                           ;main.c: 111: do { LATB7 = 0; } while(0);
  3484  05B6  0022               	movlb	2	; select bank2
  3485  05B7  138D               	bcf	13,7	;volatile
  3486                           
  3487                           ;main.c: 112: readDummy = USIDLOWREV[k];
  3488  05B8  0873               	movf	MIPITRANSFER1@k,w
  3489  05B9  3E24               	addlw	low (_USIDLOWREV| (0+32768))
  3490  05BA  0084               	movwf	4
  3491  05BB  3088               	movlw	high (_USIDLOWREV| (0+32768))
  3492  05BC  1803               	skipnc
  3493  05BD  3E01               	addlw	1
  3494  05BE  0085               	movwf	5
  3495  05BF  0800               	movf	0,w	;code access
  3496  05C0  00F0               	movwf	??_MIPITRANSFER1
  3497  05C1  0870               	movf	??_MIPITRANSFER1,w
  3498  05C2  0020               	movlb	0	; select bank0
  3499  05C3  00A1               	movwf	_readDummy
  3500                           
  3501                           ;main.c: 113: readDummy = readDummy >> 1;
  3502  05C4  3621               	lsrf	_readDummy,w
  3503  05C5  00F0               	movwf	??_MIPITRANSFER1
  3504  05C6  0870               	movf	??_MIPITRANSFER1,w
  3505  05C7  00A1               	movwf	_readDummy
  3506                           
  3507                           ;main.c: 114: for (uint8_t j=0; j<7; j++){
  3508  05C8  01F6               	clrf	MIPITRANSFER1@j_111
  3509  05C9  3007               	movlw	7
  3510  05CA  0276               	subwf	MIPITRANSFER1@j_111,w
  3511  05CB  1803               	btfsc	3,0
  3512  05CC  2DE7               	goto	l119
  3513  05CD                     l120:	
  3514                           ;main.c: 115: do { LATB6 = 1; } while(0);
  3515                           
  3516  05CD  0022               	movlb	2	; select bank2
  3517  05CE  170D               	bsf	13,6	;volatile
  3518                           
  3519                           ;main.c: 116: LATB7 = readDummy & 0x01;
  3520  05CF  0020               	movlb	0	; select bank0
  3521  05D0  1C21               	btfss	_readDummy,0
  3522  05D1  2DD5               	goto	u1060
  3523  05D2  0022               	movlb	2	; select bank2
  3524  05D3  178D               	bsf	13,7	;volatile
  3525  05D4  2DD7               	goto	u1074
  3526  05D5                     u1060:	
  3527  05D5  0022               	movlb	2	; select bank2
  3528  05D6  138D               	bcf	13,7	;volatile
  3529  05D7                     u1074:	
  3530  05D7  0000               	nop	;# 
  3531                           
  3532                           ;main.c: 118: do { LATB6 = 0; } while(0);
  3533  05D8  0022               	movlb	2	; select bank2
  3534  05D9  130D               	bcf	13,6	;volatile
  3535                           
  3536                           ;main.c: 119: readDummy = readDummy >> 1;
  3537  05DA  0020               	movlb	0	; select bank0
  3538  05DB  3621               	lsrf	_readDummy,w
  3539  05DC  00F0               	movwf	??_MIPITRANSFER1
  3540  05DD  0870               	movf	??_MIPITRANSFER1,w
  3541  05DE  00A1               	movwf	_readDummy
  3542  05DF  3001               	movlw	1
  3543  05E0  00F0               	movwf	??_MIPITRANSFER1
  3544  05E1  0870               	movf	??_MIPITRANSFER1,w
  3545  05E2  07F6               	addwf	MIPITRANSFER1@j_111,f
  3546  05E3  3007               	movlw	7
  3547  05E4  0276               	subwf	MIPITRANSFER1@j_111,w
  3548  05E5  1C03               	skipc
  3549  05E6  2DCD               	goto	l120
  3550  05E7                     l119:	
  3551                           
  3552                           ;main.c: 120: }
  3553                           ;main.c: 121: for (uint8_t i=1; i<3; i++){
  3554  05E7  01F9               	clrf	MIPITRANSFER1@i_112
  3555  05E8  0AF9               	incf	MIPITRANSFER1@i_112,f
  3556  05E9                     L3:	
  3557  05E9  3003               	movlw	3
  3558  05EA  0279               	subwf	MIPITRANSFER1@i_112,w
  3559  05EB  1803               	btfsc	3,0
  3560  05EC  0008               	return
  3561                           
  3562                           ;main.c: 122: readDummy = USIDLOWREV[(k+i)];
  3563  05ED  0873               	movf	MIPITRANSFER1@k,w
  3564  05EE  0779               	addwf	MIPITRANSFER1@i_112,w
  3565  05EF  00F0               	movwf	??_MIPITRANSFER1
  3566  05F0  01F1               	clrf	??_MIPITRANSFER1+1
  3567  05F1  0DF1               	rlf	??_MIPITRANSFER1+1,f
  3568  05F2  3024               	movlw	low (_USIDLOWREV| (0+32768))
  3569  05F3  0770               	addwf	??_MIPITRANSFER1,w
  3570  05F4  0084               	movwf	4
  3571  05F5  3088               	movlw	high (_USIDLOWREV| (0+32768))
  3572  05F6  3D71               	addwfc	??_MIPITRANSFER1+1,w
  3573  05F7  0085               	movwf	5
  3574  05F8  0800               	movf	0,w	;code access
  3575  05F9  00F2               	movwf	??_MIPITRANSFER1+2
  3576  05FA  0872               	movf	??_MIPITRANSFER1+2,w
  3577  05FB  00A1               	movwf	_readDummy
  3578                           
  3579                           ;main.c: 123: for (uint8_t j=0; j<8; j++){
  3580  05FC  01F7               	clrf	MIPITRANSFER1@j_113
  3581  05FD  3008               	movlw	8
  3582  05FE  0277               	subwf	MIPITRANSFER1@j_113,w
  3583  05FF  1803               	btfsc	3,0
  3584  0600  2E1B               	goto	l1158
  3585  0601                     l128:	
  3586                           ;main.c: 124: do { LATB6 = 1; } while(0);
  3587                           
  3588  0601  0022               	movlb	2	; select bank2
  3589  0602  170D               	bsf	13,6	;volatile
  3590                           
  3591                           ;main.c: 125: LATB7 = readDummy & 0x01;
  3592  0603  0020               	movlb	0	; select bank0
  3593  0604  1C21               	btfss	_readDummy,0
  3594  0605  2E09               	goto	u1110
  3595  0606  0022               	movlb	2	; select bank2
  3596  0607  178D               	bsf	13,7	;volatile
  3597  0608  2E0B               	goto	u1124
  3598  0609                     u1110:	
  3599  0609  0022               	movlb	2	; select bank2
  3600  060A  138D               	bcf	13,7	;volatile
  3601  060B                     u1124:	
  3602  060B  0000               	nop	;# 
  3603                           
  3604                           ;main.c: 127: do { LATB6 = 0; } while(0);
  3605  060C  0022               	movlb	2	; select bank2
  3606  060D  130D               	bcf	13,6	;volatile
  3607                           
  3608                           ;main.c: 128: readDummy = readDummy >> 1;
  3609  060E  0020               	movlb	0	; select bank0
  3610  060F  3621               	lsrf	_readDummy,w
  3611  0610  00F0               	movwf	??_MIPITRANSFER1
  3612  0611  0870               	movf	??_MIPITRANSFER1,w
  3613  0612  00A1               	movwf	_readDummy
  3614  0613  3001               	movlw	1
  3615  0614  00F0               	movwf	??_MIPITRANSFER1
  3616  0615  0870               	movf	??_MIPITRANSFER1,w
  3617  0616  07F7               	addwf	MIPITRANSFER1@j_113,f
  3618  0617  3008               	movlw	8
  3619  0618  0277               	subwf	MIPITRANSFER1@j_113,w
  3620  0619  1C03               	skipc
  3621  061A  2E01               	goto	l128
  3622  061B                     l1158:	
  3623  061B  3001               	movlw	1
  3624  061C  00F0               	movwf	??_MIPITRANSFER1
  3625  061D  0870               	movf	??_MIPITRANSFER1,w
  3626  061E  07F9               	addwf	MIPITRANSFER1@i_112,f
  3627  061F  2DE9               	goto	L3
  3628  0620                     __end_of_MIPITRANSFER1:	
  3629                           
  3630                           	psect	text8
  3631  0423                     __ptext8:	
  3632 ;; *************** function _DAC1_SetOutput *****************
  3633 ;; Defined at:
  3634 ;;		line 65 in file "mcc_generated_files/dac1.c"
  3635 ;; Parameters:    Size  Location     Type
  3636 ;;  inputData       1    wreg     unsigned char 
  3637 ;; Auto vars:     Size  Location     Type
  3638 ;;  inputData       1    0[COMMON] unsigned char 
  3639 ;; Return value:  Size  Location     Type
  3640 ;;		None               void
  3641 ;; Registers used:
  3642 ;;		wreg
  3643 ;; Tracked objects:
  3644 ;;		On entry : 0/0
  3645 ;;		On exit  : 0/0
  3646 ;;		Unchanged: 0/0
  3647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3648 ;;      Params:         0       0       0       0       0       0       0       0
  3649 ;;      Locals:         1       0       0       0       0       0       0       0
  3650 ;;      Temps:          0       0       0       0       0       0       0       0
  3651 ;;      Totals:         1       0       0       0       0       0       0       0
  3652 ;;Total ram usage:        1 bytes
  3653 ;; Hardware stack levels used:    1
  3654 ;; This function calls:
  3655 ;;		Nothing
  3656 ;; This function is called by:
  3657 ;;		_main
  3658 ;; This function uses a non-reentrant model
  3659 ;;
  3660                           
  3661                           
  3662                           ;psect for function _DAC1_SetOutput
  3663  0423                     _DAC1_SetOutput:	
  3664                           
  3665                           ;incstack = 0
  3666                           ; Regs used in _DAC1_SetOutput: [wreg]
  3667                           ;DAC1_SetOutput@inputData stored from wreg
  3668  0423  00F0               	movwf	DAC1_SetOutput@inputData
  3669                           
  3670                           ;dac1.c: 66: DAC1CON1 = inputData;
  3671  0424  0870               	movf	DAC1_SetOutput@inputData,w
  3672  0425  0022               	movlb	2	; select bank2
  3673  0426  0099               	movwf	25	;volatile
  3674  0427  0008               	return
  3675  0428                     __end_of_DAC1_SetOutput:	
  3676                           
  3677                           	psect	text9
  3678  0458                     __ptext9:	
  3679 ;; *************** function _ConfigureShiftRegister *****************
  3680 ;; Defined at:
  3681 ;;		line 249 in file "main.c"
  3682 ;; Parameters:    Size  Location     Type
  3683 ;;		None
  3684 ;; Auto vars:     Size  Location     Type
  3685 ;;  ReverseReg      1    2[COMMON] unsigned char 
  3686 ;;  i               1    1[COMMON] unsigned char 
  3687 ;; Return value:  Size  Location     Type
  3688 ;;		None               void
  3689 ;; Registers used:
  3690 ;;		wreg, status,2, status,0
  3691 ;; Tracked objects:
  3692 ;;		On entry : 0/0
  3693 ;;		On exit  : 0/0
  3694 ;;		Unchanged: 0/0
  3695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3696 ;;      Params:         0       0       0       0       0       0       0       0
  3697 ;;      Locals:         2       0       0       0       0       0       0       0
  3698 ;;      Temps:          1       0       0       0       0       0       0       0
  3699 ;;      Totals:         3       0       0       0       0       0       0       0
  3700 ;;Total ram usage:        3 bytes
  3701 ;; Hardware stack levels used:    1
  3702 ;; This function calls:
  3703 ;;		Nothing
  3704 ;; This function is called by:
  3705 ;;		_main
  3706 ;; This function uses a non-reentrant model
  3707 ;;
  3708                           
  3709                           
  3710                           ;psect for function _ConfigureShiftRegister
  3711  0458                     _ConfigureShiftRegister:	
  3712                           
  3713                           ;main.c: 250: uint8_t ReverseReg, i;
  3714                           ;main.c: 253: if (Byte2 == 3 && Byte3 == 7){
  3715                           
  3716                           ;incstack = 0
  3717                           ; Regs used in _ConfigureShiftRegister: [wreg+status,2+status,0]
  3718  0458  3003               	movlw	3
  3719  0459  067C               	xorwf	_Byte2,w
  3720  045A  1D03               	btfss	3,2
  3721  045B  2C62               	goto	l1280
  3722  045C  3007               	movlw	7
  3723  045D  067D               	xorwf	_Byte3,w
  3724  045E  1D03               	btfss	3,2
  3725  045F  2C62               	goto	l1280
  3726                           
  3727                           ;main.c: 254: ReverseReg = 0x50;
  3728  0460  3050               	movlw	80
  3729  0461  2C97               	goto	L5
  3730  0462                     l1280:	
  3731                           ;main.c: 255: }
  3732                           
  3733                           
  3734                           ;main.c: 257: else if ((Byte2 == 7 && Byte3 == 0) ||
  3735                           ;main.c: 258: (Byte2 == 30 && Byte3 == 0) ||
  3736                           ;main.c: 259: (Byte2 == 41 && Byte3 == 0) ||
  3737                           ;main.c: 260: (Byte2 == 5 && Byte3 == 30) ||
  3738                           ;main.c: 261: (Byte2 == 7 && Byte3 == 20) ||
  3739                           ;main.c: 262: (Byte2 == 12 && Byte3 == 30) ||
  3740                           ;main.c: 263: (Byte2 == 41 && Byte3 == 41)
  3741                           ;main.c: 264: ){
  3742  0462  3007               	movlw	7
  3743  0463  067C               	xorwf	_Byte2,w
  3744  0464  1903               	btfsc	3,2
  3745  0465  087D               	movf	_Byte3,w
  3746  0466  1903               	btfsc	3,2
  3747  0467  2C94               	goto	l1308
  3748  0468  301E               	movlw	30
  3749  0469  067C               	xorwf	_Byte2,w
  3750  046A  1903               	btfsc	3,2
  3751  046B  087D               	movf	_Byte3,w
  3752  046C  1903               	btfsc	3,2
  3753  046D  2C94               	goto	l1308
  3754  046E  3029               	movlw	41
  3755  046F  067C               	xorwf	_Byte2,w
  3756  0470  1903               	btfsc	3,2
  3757  0471  087D               	movf	_Byte3,w
  3758  0472  1903               	btfsc	3,2
  3759  0473  2C94               	goto	l1308
  3760  0474  3005               	movlw	5
  3761  0475  067C               	xorwf	_Byte2,w
  3762  0476  1D03               	btfss	3,2
  3763  0477  2C7C               	goto	l1296
  3764  0478  301E               	movlw	30
  3765  0479  067D               	xorwf	_Byte3,w
  3766  047A  1903               	btfsc	3,2
  3767  047B  2C94               	goto	l1308
  3768  047C                     l1296:	
  3769  047C  3007               	movlw	7
  3770  047D  067C               	xorwf	_Byte2,w
  3771  047E  1D03               	btfss	3,2
  3772  047F  2C84               	goto	l1300
  3773  0480  3014               	movlw	20
  3774  0481  067D               	xorwf	_Byte3,w
  3775  0482  1903               	btfsc	3,2
  3776  0483  2C94               	goto	l1308
  3777  0484                     l1300:	
  3778  0484  300C               	movlw	12
  3779  0485  067C               	xorwf	_Byte2,w
  3780  0486  1D03               	btfss	3,2
  3781  0487  2C8C               	goto	l1304
  3782  0488  301E               	movlw	30
  3783  0489  067D               	xorwf	_Byte3,w
  3784  048A  1903               	btfsc	3,2
  3785  048B  2C94               	goto	l1308
  3786  048C                     l1304:	
  3787  048C  3029               	movlw	41
  3788  048D  067C               	xorwf	_Byte2,w
  3789  048E  1D03               	btfss	3,2
  3790  048F  2C96               	goto	l1310
  3791  0490  3029               	movlw	41
  3792  0491  067D               	xorwf	_Byte3,w
  3793  0492  1D03               	btfss	3,2
  3794  0493  2C96               	goto	l1310
  3795  0494                     l1308:	
  3796                           
  3797                           ;main.c: 265: ReverseReg = 0x90;
  3798  0494  3090               	movlw	144
  3799  0495  2C97               	goto	L5
  3800  0496                     l1310:	
  3801                           ;main.c: 266: }
  3802                           
  3803                           
  3804                           ;main.c: 268: else{
  3805                           ;main.c: 269: ReverseReg = 0x10;
  3806  0496  3010               	movlw	16
  3807  0497                     L5:	
  3808  0497  00F0               	movwf	??_ConfigureShiftRegister
  3809  0498  0870               	movf	??_ConfigureShiftRegister,w
  3810  0499  00F2               	movwf	ConfigureShiftRegister@ReverseReg
  3811                           
  3812                           ;main.c: 270: }
  3813                           ;main.c: 273: LATA4 = 0;
  3814  049A  0022               	movlb	2	; select bank2
  3815  049B  120C               	bcf	12,4	;volatile
  3816                           
  3817                           ;main.c: 274: do { LATB6 = 1; } while(0);
  3818  049C  170D               	bsf	13,6	;volatile
  3819  049D  0000               	nop	;# 
  3820                           
  3821                           ;main.c: 276: do { LATB6 = 0; } while(0);
  3822  049E  0022               	movlb	2	; select bank2
  3823  049F  130D               	bcf	13,6	;volatile
  3824                           
  3825                           ;main.c: 278: for (i=0; i<8; i++) {
  3826  04A0  01F1               	clrf	ConfigureShiftRegister@i
  3827  04A1  3008               	movlw	8
  3828  04A2  0271               	subwf	ConfigureShiftRegister@i,w
  3829  04A3  1803               	btfsc	3,0
  3830  04A4  2CBC               	goto	l218
  3831  04A5                     l217:	
  3832                           
  3833                           ;main.c: 279: LATA4 = ReverseReg & 0x01;
  3834  04A5  1C72               	btfss	ConfigureShiftRegister@ReverseReg,0
  3835  04A6  2CAA               	goto	u1520
  3836  04A7  0022               	movlb	2	; select bank2
  3837  04A8  160C               	bsf	12,4	;volatile
  3838  04A9  2CAC               	goto	l219
  3839  04AA                     u1520:	
  3840  04AA  0022               	movlb	2	; select bank2
  3841  04AB  120C               	bcf	12,4	;volatile
  3842  04AC                     l219:	
  3843                           ;main.c: 280: do { LATB6 = 1; } while(0);
  3844                           
  3845  04AC  170D               	bsf	13,6	;volatile
  3846  04AD  0000               	nop	;# 
  3847                           
  3848                           ;main.c: 282: do { LATB6 = 0; } while(0);
  3849  04AE  0022               	movlb	2	; select bank2
  3850  04AF  130D               	bcf	13,6	;volatile
  3851                           
  3852                           ;main.c: 283: ReverseReg = ReverseReg >> 1;
  3853  04B0  3672               	lsrf	ConfigureShiftRegister@ReverseReg,w
  3854  04B1  00F0               	movwf	??_ConfigureShiftRegister
  3855  04B2  0870               	movf	??_ConfigureShiftRegister,w
  3856  04B3  00F2               	movwf	ConfigureShiftRegister@ReverseReg
  3857  04B4  3001               	movlw	1
  3858  04B5  00F0               	movwf	??_ConfigureShiftRegister
  3859  04B6  0870               	movf	??_ConfigureShiftRegister,w
  3860  04B7  07F1               	addwf	ConfigureShiftRegister@i,f
  3861  04B8  3008               	movlw	8
  3862  04B9  0271               	subwf	ConfigureShiftRegister@i,w
  3863  04BA  1C03               	skipc
  3864  04BB  2CA5               	goto	l217
  3865  04BC                     l218:	
  3866                           
  3867                           ;main.c: 284: }
  3868                           ;main.c: 287: LATA4 = 0;
  3869  04BC  120C               	bcf	12,4	;volatile
  3870                           
  3871                           ;main.c: 288: do { LATB6 = 1; } while(0);
  3872  04BD  170D               	bsf	13,6	;volatile
  3873  04BE  0000               	nop	;# 
  3874                           
  3875                           ;main.c: 290: do { LATB6 = 0; } while(0);
  3876  04BF  0022               	movlb	2	; select bank2
  3877  04C0  130D               	bcf	13,6	;volatile
  3878  04C1  0008               	return
  3879  04C2                     __end_of_ConfigureShiftRegister:	
  3880  007E                     btemp	set	126	;btemp
  3881  007E                     wtemp	set	126
  3882  007E                     wtemp0	set	126
  3883  0080                     wtemp1	set	128
  3884  0082                     wtemp2	set	130
  3885  0084                     wtemp3	set	132
  3886  0086                     wtemp4	set	134
  3887  0088                     wtemp5	set	136
  3888  007F                     wtemp6	set	127
  3889  007E                     ttemp	set	126
  3890  007E                     ttemp0	set	126
  3891  0081                     ttemp1	set	129
  3892  0084                     ttemp2	set	132
  3893  0087                     ttemp3	set	135
  3894  007F                     ttemp4	set	127
  3895  007E                     ltemp	set	126
  3896  007E                     ltemp0	set	126
  3897  0082                     ltemp1	set	130
  3898  0086                     ltemp2	set	134
  3899  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    76
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80      0       2
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SSCtest
    _SSCtest->_MIPITRANSFER1
    _SSCtest->_MIPITRANSFER2

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1594
                                             11 COMMON     1     1      0
             _ConfigureShiftRegister
                    _DAC1_Initialize
                     _DAC1_SetOutput
                      _MIPITRANSFER1
                      _MIPITRANSFER2
             _PIN_MANAGER_Initialize
                            _SSCtest
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _DAC1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DAC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SSCtest                                              1     1      0     750
                                             10 COMMON     1     1      0
                      _MIPITRANSFER1
                      _MIPITRANSFER2
 ---------------------------------------------------------------------------------
 (2) _MIPITRANSFER2                                       10    10      0     364
                                              0 COMMON    10    10      0
 ---------------------------------------------------------------------------------
 (2) _MIPITRANSFER1                                       10    10      0     364
                                              0 COMMON    10    10      0
 ---------------------------------------------------------------------------------
 (1) _DAC1_SetOutput                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureShiftRegister                               3     3      0      94
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureShiftRegister
   _DAC1_Initialize
   _DAC1_SetOutput
   _MIPITRANSFER1
   _MIPITRANSFER2
   _PIN_MANAGER_Initialize
   _SSCtest
     _MIPITRANSFER1
     _MIPITRANSFER2
   _SYSTEM_Initialize
     _DAC1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      10       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       2       6        2.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      10      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed Jan 06 10:36:39 2016

                               pc 0002                       __CFG_CP$OFF 0000                       __CFG_LVP$ON 0000  
                 _DAC1_Initialize 0428                               l101 0579                               l110 058F  
                             l102 055F                               l120 05CD                               l107 05B1  
                             l140 0652                               l141 0638                               l119 05E7  
                             l128 0601                               l217 04A5                               l218 04BC  
                             l146 068A                               l219 04AC                               l149 0668  
                             l261 0784                               l158 06C0                               l254 077F  
                             l167 06DA                               l159 06A6                               l192 0546  
                             l264 0786                               l259 0782                               u960 0567  
                             u974 0569    __end_of_ConfigureShiftRegister 04C2                      __CFG_BORV$LO 0000  
                  _DAC1_SetOutput 0423                              S1462 0004                      __CFG_ZCD$OFF 0000  
                            l1112 057F                              l1300 0484                              l1124 05A9  
                            l1310 0496                              l1304 048C                              l1240 04D4  
                            l1226 06F4                              l1250 04FC                              l1242 04DC  
                            l1410 07B5                              l1402 07A3                              l1308 0494  
                            l1180 0658                              l1260 0524                              l1252 0504  
                            l1244 04E4                              l1236 04C4                              l1420 07CA  
                            l1404 07A8                              l1158 061B                              l1262 052C  
                            l1254 050C                              l1246 04EC                              l1238 04CC  
                            l1422 07CF                              l1414 07BD                              l1342 0711  
                            l1280 0462                              l1192 0682                              l1264 0534  
                            l1256 0514                              l1248 04F4                              l1432 07E4  
                            l1416 07C2                              l1408 07B0                              l1258 051C  
                            l1434 07E9                              l1426 07D7                              l1354 0732  
                            l1268 053C                              l1428 07DC                              l1436 07F1  
                            l1390 0789                              l1296 047C                              l1394 0792  
                            l1398 079B                              u1010 0597                              u1110 0609  
                            u1024 0599                              u1210 0670                              u1124 060B  
                            u1060 05D5                              u1310 06E2                              u1224 0672  
                            u1160 0640                              u1074 05D7                              u1324 06E4  
                            u1260 06AE                              _LATA 010C                              u1174 0642  
                            _LATB 010D                              _LATC 010E                              u1520 04AA  
                            u1274 06B0                              _WPUB 020D                              _WPUC 020E  
                    __CFG_WRT$OFF 0000                              _main 06F9                              fsr0h 0005  
                            fsr0l 0004                              indf0 0000                              btemp 007E  
                            ltemp 007E                              start 0002                              ttemp 007E  
                 __end_of_SSCtest 0547                              wtemp 007E    __size_of_OSCILLATOR_Initialize 0006  
   __end_of_OSCILLATOR_Initialize 0433                             ?_main 0070                     __CFG_WDTE$OFF 0000  
                           _LATA1 0861                             _LATA2 0862                             _LATA4 0864  
                           _LATB4 086C                             _LATB5 086D                             _LATB6 086E  
                           _LATB7 086F            __end_of_DAC1_SetOutput 0428                             _PORTC 000E  
                           _TRISA 008C                             _TRISB 008D                             _TRISC 008E  
                           _Byte1 0020                             _Byte2 007C                             _Byte3 007D  
                   __CFG_PWRTE$ON 0000            __size_of_MIPITRANSFER1 00D9            __size_of_MIPITRANSFER2 00D9  
                  __CFG_BOREN$OFF 0000                             ltemp0 007E                             ltemp1 0082  
                           ltemp2 0086                             ltemp3 0080                             ttemp0 007E  
                           ttemp1 0081                             ttemp2 0084                             ttemp3 0087  
                           ttemp4 007F                             status 0003                             wtemp0 007E  
                           wtemp1 0080                             wtemp2 0082                             wtemp3 0084  
                           wtemp4 0086                             wtemp5 0088                             wtemp6 007F  
                  __CFG_MCLRE$OFF 0000                   __initialization 07F9                      __end_of_main 07F9  
         __end_of_DAC1_Initialize 042D                    __CFG_LPBOR$OFF 0000                            ??_main 007B  
                 ?_DAC1_SetOutput 0070                    __CFG_PLLEN$OFF 0000                            _ANSELA 018C  
                          _ANSELB 018D                            _ANSELC 018E                         ??_SSCtest 007A  
                          _OSCCON 0099           DAC1_SetOutput@inputData 0070                     _MIPITRANSFER1 0547  
                   _MIPITRANSFER2 0620                    __CFG_STVREN$ON 0000                 __end_of_DacOutput 084C  
               _SYSTEM_Initialize 0433           __end_of__initialization 07FD                ?_SYSTEM_Initialize 0070  
                  ?_MIPITRANSFER1 0070                    ?_MIPITRANSFER2 0070                    __pcstackCOMMON 0070  
             ??_SYSTEM_Initialize 0070                  ?_DAC1_Initialize 0070                    _OPTION_REGbits 0095  
       __end_of_SYSTEM_Initialize 043C                        __pbssBANK0 0020                        __pmaintext 06F9  
                 __CFG_PPS1WAY$ON 0000                    MIPITRANSFER1@i 0078                    MIPITRANSFER1@j 0074  
                  MIPITRANSFER1@k 0073                    MIPITRANSFER2@i 0078                    MIPITRANSFER2@j 0074  
                  MIPITRANSFER2@k 0073                   __CFG_WDTCCS$SWC 0000                           _OSCSTAT 009A  
                         _OSCTUNE 0098                           _SSCtest 04C2                   ??_MIPITRANSFER1 0070  
                 ??_MIPITRANSFER2 0070                  ??_DAC1_SetOutput 0070           ConfigureShiftRegister@i 0071  
                         __ptext1 0433                           __ptext2 043C                           __ptext3 042D  
                         __ptext4 0428                           __ptext5 04C2                           __ptext6 0620  
                         __ptext7 0547                           __ptext8 0423                           __ptext9 0458  
           _OSCILLATOR_Initialize 042D                __end_of_USIDLOWREV 0848          ??_PIN_MANAGER_Initialize 0070  
      __size_of_SYSTEM_Initialize 0009              end_of_initialization 07FD                      __pstringtext 0800  
        ??_ConfigureShiftRegister 0070                  __CFG_FOSC$INTOSC 0000                         _DacOutput 0848  
              MIPITRANSFER1@i_112 0079            ?_OSCILLATOR_Initialize 0070                MIPITRANSFER1@j_110 0075  
              MIPITRANSFER1@j_111 0076                MIPITRANSFER1@j_113 0077                MIPITRANSFER2@i_120 0079  
              MIPITRANSFER2@j_121 0077                MIPITRANSFER2@j_118 0075                MIPITRANSFER2@j_119 0076  
             start_initialization 07F9   __size_of_PIN_MANAGER_Initialize 001C   __size_of_ConfigureShiftRegister 006A  
        __size_of_DAC1_Initialize 0005                       __pbssCOMMON 007C                         ___latbits 0001  
                        ?_SSCtest 0070            _PIN_MANAGER_Initialize 043C                          _DAC1CON0 0118  
                        _DAC1CON1 0119                         __pswtext1 0004                         _readDummy 0021  
          _ConfigureShiftRegister 0458             __end_of_MIPITRANSFER1 0620             __end_of_MIPITRANSFER2 06F9  
            __CFG_WDTCPS$WDTCPS1F 0000                 ??_DAC1_Initialize 0070                  __size_of_SSCtest 0085  
         ??_OSCILLATOR_Initialize 0070                     SSCtest@CABAND 007A           __size_of_DAC1_SetOutput 0005  
             __end_of_USIDHIGHREV 0824                     __size_of_main 0100              __CFG_WDTCWS$WDTCWSSW 0000  
ConfigureShiftRegister@ReverseReg 0072           ?_PIN_MANAGER_Initialize 0070                 __CFG_CLKOUTEN$OFF 0000  
                     _USIDHIGHREV 0800           ?_ConfigureShiftRegister 0070    __end_of_PIN_MANAGER_Initialize 0458  
                      _USIDLOWREV 0824  
