

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Mon Dec 21 14:12:18 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16LF1618
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	swtext1,local,class=CONST,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	dabs	1,0x7E,2
    21  0000                     	;# 
    22  0001                     	;# 
    23  0002                     	;# 
    24  0003                     	;# 
    25  0004                     	;# 
    26  0005                     	;# 
    27  0006                     	;# 
    28  0007                     	;# 
    29  0008                     	;# 
    30  0009                     	;# 
    31  000A                     	;# 
    32  000B                     	;# 
    33  000C                     	;# 
    34  000D                     	;# 
    35  000E                     	;# 
    36  0010                     	;# 
    37  0011                     	;# 
    38  0012                     	;# 
    39  0013                     	;# 
    40  0014                     	;# 
    41  0015                     	;# 
    42  0016                     	;# 
    43  0016                     	;# 
    44  0017                     	;# 
    45  0018                     	;# 
    46  0019                     	;# 
    47  001A                     	;# 
    48  001A                     	;# 
    49  001B                     	;# 
    50  001B                     	;# 
    51  001C                     	;# 
    52  001D                     	;# 
    53  001E                     	;# 
    54  001F                     	;# 
    55  008C                     	;# 
    56  008D                     	;# 
    57  008E                     	;# 
    58  0090                     	;# 
    59  0091                     	;# 
    60  0092                     	;# 
    61  0093                     	;# 
    62  0094                     	;# 
    63  0095                     	;# 
    64  0096                     	;# 
    65  0098                     	;# 
    66  0099                     	;# 
    67  009A                     	;# 
    68  009B                     	;# 
    69  009B                     	;# 
    70  009C                     	;# 
    71  009D                     	;# 
    72  009E                     	;# 
    73  009F                     	;# 
    74  010C                     	;# 
    75  010D                     	;# 
    76  010E                     	;# 
    77  0111                     	;# 
    78  0112                     	;# 
    79  0113                     	;# 
    80  0114                     	;# 
    81  0115                     	;# 
    82  0116                     	;# 
    83  0117                     	;# 
    84  0118                     	;# 
    85  0119                     	;# 
    86  011C                     	;# 
    87  018C                     	;# 
    88  018D                     	;# 
    89  018E                     	;# 
    90  0191                     	;# 
    91  0191                     	;# 
    92  0192                     	;# 
    93  0193                     	;# 
    94  0193                     	;# 
    95  0194                     	;# 
    96  0195                     	;# 
    97  0196                     	;# 
    98  0199                     	;# 
    99  0199                     	;# 
   100  0199                     	;# 
   101  019A                     	;# 
   102  019A                     	;# 
   103  019A                     	;# 
   104  019B                     	;# 
   105  019B                     	;# 
   106  019B                     	;# 
   107  019B                     	;# 
   108  019B                     	;# 
   109  019C                     	;# 
   110  019C                     	;# 
   111  019C                     	;# 
   112  019D                     	;# 
   113  019D                     	;# 
   114  019D                     	;# 
   115  019E                     	;# 
   116  019E                     	;# 
   117  019E                     	;# 
   118  019F                     	;# 
   119  019F                     	;# 
   120  019F                     	;# 
   121  019F                     	;# 
   122  019F                     	;# 
   123  020C                     	;# 
   124  020D                     	;# 
   125  020E                     	;# 
   126  0211                     	;# 
   127  0211                     	;# 
   128  0212                     	;# 
   129  0212                     	;# 
   130  0213                     	;# 
   131  0213                     	;# 
   132  0214                     	;# 
   133  0214                     	;# 
   134  0215                     	;# 
   135  0215                     	;# 
   136  0215                     	;# 
   137  0215                     	;# 
   138  0216                     	;# 
   139  0216                     	;# 
   140  0217                     	;# 
   141  0217                     	;# 
   142  028C                     	;# 
   143  028D                     	;# 
   144  028E                     	;# 
   145  0291                     	;# 
   146  0291                     	;# 
   147  0292                     	;# 
   148  0293                     	;# 
   149  0294                     	;# 
   150  0298                     	;# 
   151  0298                     	;# 
   152  0299                     	;# 
   153  029A                     	;# 
   154  029B                     	;# 
   155  029E                     	;# 
   156  030C                     	;# 
   157  030D                     	;# 
   158  030E                     	;# 
   159  038C                     	;# 
   160  038D                     	;# 
   161  038E                     	;# 
   162  0391                     	;# 
   163  0392                     	;# 
   164  0393                     	;# 
   165  0394                     	;# 
   166  0395                     	;# 
   167  0396                     	;# 
   168  0397                     	;# 
   169  0398                     	;# 
   170  0399                     	;# 
   171  040E                     	;# 
   172  0413                     	;# 
   173  0413                     	;# 
   174  0414                     	;# 
   175  0414                     	;# 
   176  0415                     	;# 
   177  0416                     	;# 
   178  0417                     	;# 
   179  0418                     	;# 
   180  041A                     	;# 
   181  041A                     	;# 
   182  041B                     	;# 
   183  041B                     	;# 
   184  041C                     	;# 
   185  041D                     	;# 
   186  041E                     	;# 
   187  041F                     	;# 
   188  0493                     	;# 
   189  0494                     	;# 
   190  0495                     	;# 
   191  0496                     	;# 
   192  049A                     	;# 
   193  049B                     	;# 
   194  049C                     	;# 
   195  049D                     	;# 
   196  058C                     	;# 
   197  058C                     	;# 
   198  058D                     	;# 
   199  058E                     	;# 
   200  058E                     	;# 
   201  058F                     	;# 
   202  0590                     	;# 
   203  0590                     	;# 
   204  0591                     	;# 
   205  0592                     	;# 
   206  0592                     	;# 
   207  0593                     	;# 
   208  0594                     	;# 
   209  0594                     	;# 
   210  0595                     	;# 
   211  0596                     	;# 
   212  0596                     	;# 
   213  0597                     	;# 
   214  0598                     	;# 
   215  0599                     	;# 
   216  059A                     	;# 
   217  059B                     	;# 
   218  059B                     	;# 
   219  059C                     	;# 
   220  059D                     	;# 
   221  060C                     	;# 
   222  060C                     	;# 
   223  060D                     	;# 
   224  060E                     	;# 
   225  060F                     	;# 
   226  060F                     	;# 
   227  0610                     	;# 
   228  0611                     	;# 
   229  0612                     	;# 
   230  0613                     	;# 
   231  0614                     	;# 
   232  0617                     	;# 
   233  0618                     	;# 
   234  0619                     	;# 
   235  061A                     	;# 
   236  061B                     	;# 
   237  061C                     	;# 
   238  0691                     	;# 
   239  0692                     	;# 
   240  0693                     	;# 
   241  0694                     	;# 
   242  0695                     	;# 
   243  0696                     	;# 
   244  0697                     	;# 
   245  0699                     	;# 
   246  069A                     	;# 
   247  0711                     	;# 
   248  0712                     	;# 
   249  0713                     	;# 
   250  0714                     	;# 
   251  0715                     	;# 
   252  0718                     	;# 
   253  0718                     	;# 
   254  0719                     	;# 
   255  071A                     	;# 
   256  071A                     	;# 
   257  071B                     	;# 
   258  071C                     	;# 
   259  071D                     	;# 
   260  0791                     	;# 
   261  0791                     	;# 
   262  0792                     	;# 
   263  0793                     	;# 
   264  0793                     	;# 
   265  0794                     	;# 
   266  0795                     	;# 
   267  0795                     	;# 
   268  0796                     	;# 
   269  0797                     	;# 
   270  0797                     	;# 
   271  0798                     	;# 
   272  0799                     	;# 
   273  079A                     	;# 
   274  080C                     	;# 
   275  080C                     	;# 
   276  080D                     	;# 
   277  080E                     	;# 
   278  080E                     	;# 
   279  080F                     	;# 
   280  0810                     	;# 
   281  0810                     	;# 
   282  0811                     	;# 
   283  0812                     	;# 
   284  0812                     	;# 
   285  0813                     	;# 
   286  0814                     	;# 
   287  0815                     	;# 
   288  0816                     	;# 
   289  0817                     	;# 
   290  0818                     	;# 
   291  0819                     	;# 
   292  081A                     	;# 
   293  081A                     	;# 
   294  081B                     	;# 
   295  081C                     	;# 
   296  081C                     	;# 
   297  081D                     	;# 
   298  088C                     	;# 
   299  088D                     	;# 
   300  088E                     	;# 
   301  088F                     	;# 
   302  088F                     	;# 
   303  0890                     	;# 
   304  0891                     	;# 
   305  0892                     	;# 
   306  0893                     	;# 
   307  0893                     	;# 
   308  0894                     	;# 
   309  0895                     	;# 
   310  0896                     	;# 
   311  0897                     	;# 
   312  0897                     	;# 
   313  0898                     	;# 
   314  0899                     	;# 
   315  0D8C                     	;# 
   316  0D8C                     	;# 
   317  0D8D                     	;# 
   318  0D8E                     	;# 
   319  0D8F                     	;# 
   320  0D8F                     	;# 
   321  0D90                     	;# 
   322  0D91                     	;# 
   323  0D92                     	;# 
   324  0D92                     	;# 
   325  0D93                     	;# 
   326  0D94                     	;# 
   327  0D95                     	;# 
   328  0D95                     	;# 
   329  0D96                     	;# 
   330  0D97                     	;# 
   331  0D98                     	;# 
   332  0D99                     	;# 
   333  0D9A                     	;# 
   334  0D9B                     	;# 
   335  0D9C                     	;# 
   336  0D9D                     	;# 
   337  0D9E                     	;# 
   338  0D9E                     	;# 
   339  0D9F                     	;# 
   340  0DA0                     	;# 
   341  0DA1                     	;# 
   342  0DA1                     	;# 
   343  0DA2                     	;# 
   344  0DA3                     	;# 
   345  0DA4                     	;# 
   346  0DA4                     	;# 
   347  0DA5                     	;# 
   348  0DA6                     	;# 
   349  0DA7                     	;# 
   350  0DA7                     	;# 
   351  0DA8                     	;# 
   352  0DA9                     	;# 
   353  0DAA                     	;# 
   354  0DAB                     	;# 
   355  0DAC                     	;# 
   356  0DAD                     	;# 
   357  0DAE                     	;# 
   358  0DAF                     	;# 
   359  0E0F                     	;# 
   360  0E10                     	;# 
   361  0E11                     	;# 
   362  0E12                     	;# 
   363  0E13                     	;# 
   364  0E14                     	;# 
   365  0E15                     	;# 
   366  0E16                     	;# 
   367  0E17                     	;# 
   368  0E18                     	;# 
   369  0E19                     	;# 
   370  0E1A                     	;# 
   371  0E1B                     	;# 
   372  0E1C                     	;# 
   373  0E1D                     	;# 
   374  0E1E                     	;# 
   375  0E1F                     	;# 
   376  0E20                     	;# 
   377  0E21                     	;# 
   378  0E22                     	;# 
   379  0E23                     	;# 
   380  0E24                     	;# 
   381  0E25                     	;# 
   382  0E26                     	;# 
   383  0E27                     	;# 
   384  0E28                     	;# 
   385  0E29                     	;# 
   386  0E2A                     	;# 
   387  0E2B                     	;# 
   388  0E2C                     	;# 
   389  0E2D                     	;# 
   390  0E2E                     	;# 
   391  0E90                     	;# 
   392  0E91                     	;# 
   393  0E92                     	;# 
   394  0E94                     	;# 
   395  0E95                     	;# 
   396  0E9C                     	;# 
   397  0E9D                     	;# 
   398  0E9E                     	;# 
   399  0E9F                     	;# 
   400  0EA0                     	;# 
   401  0EA1                     	;# 
   402  0EA2                     	;# 
   403  0EA3                     	;# 
   404  0EA4                     	;# 
   405  0EA5                     	;# 
   406  0EA6                     	;# 
   407  0EA7                     	;# 
   408  0F0F                     	;# 
   409  0F10                     	;# 
   410  0F11                     	;# 
   411  0F12                     	;# 
   412  0F13                     	;# 
   413  0F14                     	;# 
   414  0F15                     	;# 
   415  0F16                     	;# 
   416  0F17                     	;# 
   417  0F18                     	;# 
   418  0F19                     	;# 
   419  0F1A                     	;# 
   420  0F1B                     	;# 
   421  0F1C                     	;# 
   422  0F1D                     	;# 
   423  0F1E                     	;# 
   424  0F1F                     	;# 
   425  0F20                     	;# 
   426  0F21                     	;# 
   427  0F22                     	;# 
   428  0F23                     	;# 
   429  0FE4                     	;# 
   430  0FE5                     	;# 
   431  0FE6                     	;# 
   432  0FE7                     	;# 
   433  0FE8                     	;# 
   434  0FE9                     	;# 
   435  0FEA                     	;# 
   436  0FEB                     	;# 
   437  0FED                     	;# 
   438  0FEE                     	;# 
   439  0FEF                     	;# 
   440  0000                     	;# 
   441  0001                     	;# 
   442  0002                     	;# 
   443  0003                     	;# 
   444  0004                     	;# 
   445  0005                     	;# 
   446  0006                     	;# 
   447  0007                     	;# 
   448  0008                     	;# 
   449  0009                     	;# 
   450  000A                     	;# 
   451  000B                     	;# 
   452  000C                     	;# 
   453  000D                     	;# 
   454  000E                     	;# 
   455  0010                     	;# 
   456  0011                     	;# 
   457  0012                     	;# 
   458  0013                     	;# 
   459  0014                     	;# 
   460  0015                     	;# 
   461  0016                     	;# 
   462  0016                     	;# 
   463  0017                     	;# 
   464  0018                     	;# 
   465  0019                     	;# 
   466  001A                     	;# 
   467  001A                     	;# 
   468  001B                     	;# 
   469  001B                     	;# 
   470  001C                     	;# 
   471  001D                     	;# 
   472  001E                     	;# 
   473  001F                     	;# 
   474  008C                     	;# 
   475  008D                     	;# 
   476  008E                     	;# 
   477  0090                     	;# 
   478  0091                     	;# 
   479  0092                     	;# 
   480  0093                     	;# 
   481  0094                     	;# 
   482  0095                     	;# 
   483  0096                     	;# 
   484  0098                     	;# 
   485  0099                     	;# 
   486  009A                     	;# 
   487  009B                     	;# 
   488  009B                     	;# 
   489  009C                     	;# 
   490  009D                     	;# 
   491  009E                     	;# 
   492  009F                     	;# 
   493  010C                     	;# 
   494  010D                     	;# 
   495  010E                     	;# 
   496  0111                     	;# 
   497  0112                     	;# 
   498  0113                     	;# 
   499  0114                     	;# 
   500  0115                     	;# 
   501  0116                     	;# 
   502  0117                     	;# 
   503  0118                     	;# 
   504  0119                     	;# 
   505  011C                     	;# 
   506  018C                     	;# 
   507  018D                     	;# 
   508  018E                     	;# 
   509  0191                     	;# 
   510  0191                     	;# 
   511  0192                     	;# 
   512  0193                     	;# 
   513  0193                     	;# 
   514  0194                     	;# 
   515  0195                     	;# 
   516  0196                     	;# 
   517  0199                     	;# 
   518  0199                     	;# 
   519  0199                     	;# 
   520  019A                     	;# 
   521  019A                     	;# 
   522  019A                     	;# 
   523  019B                     	;# 
   524  019B                     	;# 
   525  019B                     	;# 
   526  019B                     	;# 
   527  019B                     	;# 
   528  019C                     	;# 
   529  019C                     	;# 
   530  019C                     	;# 
   531  019D                     	;# 
   532  019D                     	;# 
   533  019D                     	;# 
   534  019E                     	;# 
   535  019E                     	;# 
   536  019E                     	;# 
   537  019F                     	;# 
   538  019F                     	;# 
   539  019F                     	;# 
   540  019F                     	;# 
   541  019F                     	;# 
   542  020C                     	;# 
   543  020D                     	;# 
   544  020E                     	;# 
   545  0211                     	;# 
   546  0211                     	;# 
   547  0212                     	;# 
   548  0212                     	;# 
   549  0213                     	;# 
   550  0213                     	;# 
   551  0214                     	;# 
   552  0214                     	;# 
   553  0215                     	;# 
   554  0215                     	;# 
   555  0215                     	;# 
   556  0215                     	;# 
   557  0216                     	;# 
   558  0216                     	;# 
   559  0217                     	;# 
   560  0217                     	;# 
   561  028C                     	;# 
   562  028D                     	;# 
   563  028E                     	;# 
   564  0291                     	;# 
   565  0291                     	;# 
   566  0292                     	;# 
   567  0293                     	;# 
   568  0294                     	;# 
   569  0298                     	;# 
   570  0298                     	;# 
   571  0299                     	;# 
   572  029A                     	;# 
   573  029B                     	;# 
   574  029E                     	;# 
   575  030C                     	;# 
   576  030D                     	;# 
   577  030E                     	;# 
   578  038C                     	;# 
   579  038D                     	;# 
   580  038E                     	;# 
   581  0391                     	;# 
   582  0392                     	;# 
   583  0393                     	;# 
   584  0394                     	;# 
   585  0395                     	;# 
   586  0396                     	;# 
   587  0397                     	;# 
   588  0398                     	;# 
   589  0399                     	;# 
   590  040E                     	;# 
   591  0413                     	;# 
   592  0413                     	;# 
   593  0414                     	;# 
   594  0414                     	;# 
   595  0415                     	;# 
   596  0416                     	;# 
   597  0417                     	;# 
   598  0418                     	;# 
   599  041A                     	;# 
   600  041A                     	;# 
   601  041B                     	;# 
   602  041B                     	;# 
   603  041C                     	;# 
   604  041D                     	;# 
   605  041E                     	;# 
   606  041F                     	;# 
   607  0493                     	;# 
   608  0494                     	;# 
   609  0495                     	;# 
   610  0496                     	;# 
   611  049A                     	;# 
   612  049B                     	;# 
   613  049C                     	;# 
   614  049D                     	;# 
   615  058C                     	;# 
   616  058C                     	;# 
   617  058D                     	;# 
   618  058E                     	;# 
   619  058E                     	;# 
   620  058F                     	;# 
   621  0590                     	;# 
   622  0590                     	;# 
   623  0591                     	;# 
   624  0592                     	;# 
   625  0592                     	;# 
   626  0593                     	;# 
   627  0594                     	;# 
   628  0594                     	;# 
   629  0595                     	;# 
   630  0596                     	;# 
   631  0596                     	;# 
   632  0597                     	;# 
   633  0598                     	;# 
   634  0599                     	;# 
   635  059A                     	;# 
   636  059B                     	;# 
   637  059B                     	;# 
   638  059C                     	;# 
   639  059D                     	;# 
   640  060C                     	;# 
   641  060C                     	;# 
   642  060D                     	;# 
   643  060E                     	;# 
   644  060F                     	;# 
   645  060F                     	;# 
   646  0610                     	;# 
   647  0611                     	;# 
   648  0612                     	;# 
   649  0613                     	;# 
   650  0614                     	;# 
   651  0617                     	;# 
   652  0618                     	;# 
   653  0619                     	;# 
   654  061A                     	;# 
   655  061B                     	;# 
   656  061C                     	;# 
   657  0691                     	;# 
   658  0692                     	;# 
   659  0693                     	;# 
   660  0694                     	;# 
   661  0695                     	;# 
   662  0696                     	;# 
   663  0697                     	;# 
   664  0699                     	;# 
   665  069A                     	;# 
   666  0711                     	;# 
   667  0712                     	;# 
   668  0713                     	;# 
   669  0714                     	;# 
   670  0715                     	;# 
   671  0718                     	;# 
   672  0718                     	;# 
   673  0719                     	;# 
   674  071A                     	;# 
   675  071A                     	;# 
   676  071B                     	;# 
   677  071C                     	;# 
   678  071D                     	;# 
   679  0791                     	;# 
   680  0791                     	;# 
   681  0792                     	;# 
   682  0793                     	;# 
   683  0793                     	;# 
   684  0794                     	;# 
   685  0795                     	;# 
   686  0795                     	;# 
   687  0796                     	;# 
   688  0797                     	;# 
   689  0797                     	;# 
   690  0798                     	;# 
   691  0799                     	;# 
   692  079A                     	;# 
   693  080C                     	;# 
   694  080C                     	;# 
   695  080D                     	;# 
   696  080E                     	;# 
   697  080E                     	;# 
   698  080F                     	;# 
   699  0810                     	;# 
   700  0810                     	;# 
   701  0811                     	;# 
   702  0812                     	;# 
   703  0812                     	;# 
   704  0813                     	;# 
   705  0814                     	;# 
   706  0815                     	;# 
   707  0816                     	;# 
   708  0817                     	;# 
   709  0818                     	;# 
   710  0819                     	;# 
   711  081A                     	;# 
   712  081A                     	;# 
   713  081B                     	;# 
   714  081C                     	;# 
   715  081C                     	;# 
   716  081D                     	;# 
   717  088C                     	;# 
   718  088D                     	;# 
   719  088E                     	;# 
   720  088F                     	;# 
   721  088F                     	;# 
   722  0890                     	;# 
   723  0891                     	;# 
   724  0892                     	;# 
   725  0893                     	;# 
   726  0893                     	;# 
   727  0894                     	;# 
   728  0895                     	;# 
   729  0896                     	;# 
   730  0897                     	;# 
   731  0897                     	;# 
   732  0898                     	;# 
   733  0899                     	;# 
   734  0D8C                     	;# 
   735  0D8C                     	;# 
   736  0D8D                     	;# 
   737  0D8E                     	;# 
   738  0D8F                     	;# 
   739  0D8F                     	;# 
   740  0D90                     	;# 
   741  0D91                     	;# 
   742  0D92                     	;# 
   743  0D92                     	;# 
   744  0D93                     	;# 
   745  0D94                     	;# 
   746  0D95                     	;# 
   747  0D95                     	;# 
   748  0D96                     	;# 
   749  0D97                     	;# 
   750  0D98                     	;# 
   751  0D99                     	;# 
   752  0D9A                     	;# 
   753  0D9B                     	;# 
   754  0D9C                     	;# 
   755  0D9D                     	;# 
   756  0D9E                     	;# 
   757  0D9E                     	;# 
   758  0D9F                     	;# 
   759  0DA0                     	;# 
   760  0DA1                     	;# 
   761  0DA1                     	;# 
   762  0DA2                     	;# 
   763  0DA3                     	;# 
   764  0DA4                     	;# 
   765  0DA4                     	;# 
   766  0DA5                     	;# 
   767  0DA6                     	;# 
   768  0DA7                     	;# 
   769  0DA7                     	;# 
   770  0DA8                     	;# 
   771  0DA9                     	;# 
   772  0DAA                     	;# 
   773  0DAB                     	;# 
   774  0DAC                     	;# 
   775  0DAD                     	;# 
   776  0DAE                     	;# 
   777  0DAF                     	;# 
   778  0E0F                     	;# 
   779  0E10                     	;# 
   780  0E11                     	;# 
   781  0E12                     	;# 
   782  0E13                     	;# 
   783  0E14                     	;# 
   784  0E15                     	;# 
   785  0E16                     	;# 
   786  0E17                     	;# 
   787  0E18                     	;# 
   788  0E19                     	;# 
   789  0E1A                     	;# 
   790  0E1B                     	;# 
   791  0E1C                     	;# 
   792  0E1D                     	;# 
   793  0E1E                     	;# 
   794  0E1F                     	;# 
   795  0E20                     	;# 
   796  0E21                     	;# 
   797  0E22                     	;# 
   798  0E23                     	;# 
   799  0E24                     	;# 
   800  0E25                     	;# 
   801  0E26                     	;# 
   802  0E27                     	;# 
   803  0E28                     	;# 
   804  0E29                     	;# 
   805  0E2A                     	;# 
   806  0E2B                     	;# 
   807  0E2C                     	;# 
   808  0E2D                     	;# 
   809  0E2E                     	;# 
   810  0E90                     	;# 
   811  0E91                     	;# 
   812  0E92                     	;# 
   813  0E94                     	;# 
   814  0E95                     	;# 
   815  0E9C                     	;# 
   816  0E9D                     	;# 
   817  0E9E                     	;# 
   818  0E9F                     	;# 
   819  0EA0                     	;# 
   820  0EA1                     	;# 
   821  0EA2                     	;# 
   822  0EA3                     	;# 
   823  0EA4                     	;# 
   824  0EA5                     	;# 
   825  0EA6                     	;# 
   826  0EA7                     	;# 
   827  0F0F                     	;# 
   828  0F10                     	;# 
   829  0F11                     	;# 
   830  0F12                     	;# 
   831  0F13                     	;# 
   832  0F14                     	;# 
   833  0F15                     	;# 
   834  0F16                     	;# 
   835  0F17                     	;# 
   836  0F18                     	;# 
   837  0F19                     	;# 
   838  0F1A                     	;# 
   839  0F1B                     	;# 
   840  0F1C                     	;# 
   841  0F1D                     	;# 
   842  0F1E                     	;# 
   843  0F1F                     	;# 
   844  0F20                     	;# 
   845  0F21                     	;# 
   846  0F22                     	;# 
   847  0F23                     	;# 
   848  0FE4                     	;# 
   849  0FE5                     	;# 
   850  0FE6                     	;# 
   851  0FE7                     	;# 
   852  0FE8                     	;# 
   853  0FE9                     	;# 
   854  0FEA                     	;# 
   855  0FEB                     	;# 
   856  0FED                     	;# 
   857  0FEE                     	;# 
   858  0FEF                     	;# 
   859  0000                     	;# 
   860  0001                     	;# 
   861  0002                     	;# 
   862  0003                     	;# 
   863  0004                     	;# 
   864  0005                     	;# 
   865  0006                     	;# 
   866  0007                     	;# 
   867  0008                     	;# 
   868  0009                     	;# 
   869  000A                     	;# 
   870  000B                     	;# 
   871  000C                     	;# 
   872  000D                     	;# 
   873  000E                     	;# 
   874  0010                     	;# 
   875  0011                     	;# 
   876  0012                     	;# 
   877  0013                     	;# 
   878  0014                     	;# 
   879  0015                     	;# 
   880  0016                     	;# 
   881  0016                     	;# 
   882  0017                     	;# 
   883  0018                     	;# 
   884  0019                     	;# 
   885  001A                     	;# 
   886  001A                     	;# 
   887  001B                     	;# 
   888  001B                     	;# 
   889  001C                     	;# 
   890  001D                     	;# 
   891  001E                     	;# 
   892  001F                     	;# 
   893  008C                     	;# 
   894  008D                     	;# 
   895  008E                     	;# 
   896  0090                     	;# 
   897  0091                     	;# 
   898  0092                     	;# 
   899  0093                     	;# 
   900  0094                     	;# 
   901  0095                     	;# 
   902  0096                     	;# 
   903  0098                     	;# 
   904  0099                     	;# 
   905  009A                     	;# 
   906  009B                     	;# 
   907  009B                     	;# 
   908  009C                     	;# 
   909  009D                     	;# 
   910  009E                     	;# 
   911  009F                     	;# 
   912  010C                     	;# 
   913  010D                     	;# 
   914  010E                     	;# 
   915  0111                     	;# 
   916  0112                     	;# 
   917  0113                     	;# 
   918  0114                     	;# 
   919  0115                     	;# 
   920  0116                     	;# 
   921  0117                     	;# 
   922  0118                     	;# 
   923  0119                     	;# 
   924  011C                     	;# 
   925  018C                     	;# 
   926  018D                     	;# 
   927  018E                     	;# 
   928  0191                     	;# 
   929  0191                     	;# 
   930  0192                     	;# 
   931  0193                     	;# 
   932  0193                     	;# 
   933  0194                     	;# 
   934  0195                     	;# 
   935  0196                     	;# 
   936  0199                     	;# 
   937  0199                     	;# 
   938  0199                     	;# 
   939  019A                     	;# 
   940  019A                     	;# 
   941  019A                     	;# 
   942  019B                     	;# 
   943  019B                     	;# 
   944  019B                     	;# 
   945  019B                     	;# 
   946  019B                     	;# 
   947  019C                     	;# 
   948  019C                     	;# 
   949  019C                     	;# 
   950  019D                     	;# 
   951  019D                     	;# 
   952  019D                     	;# 
   953  019E                     	;# 
   954  019E                     	;# 
   955  019E                     	;# 
   956  019F                     	;# 
   957  019F                     	;# 
   958  019F                     	;# 
   959  019F                     	;# 
   960  019F                     	;# 
   961  020C                     	;# 
   962  020D                     	;# 
   963  020E                     	;# 
   964  0211                     	;# 
   965  0211                     	;# 
   966  0212                     	;# 
   967  0212                     	;# 
   968  0213                     	;# 
   969  0213                     	;# 
   970  0214                     	;# 
   971  0214                     	;# 
   972  0215                     	;# 
   973  0215                     	;# 
   974  0215                     	;# 
   975  0215                     	;# 
   976  0216                     	;# 
   977  0216                     	;# 
   978  0217                     	;# 
   979  0217                     	;# 
   980  028C                     	;# 
   981  028D                     	;# 
   982  028E                     	;# 
   983  0291                     	;# 
   984  0291                     	;# 
   985  0292                     	;# 
   986  0293                     	;# 
   987  0294                     	;# 
   988  0298                     	;# 
   989  0298                     	;# 
   990  0299                     	;# 
   991  029A                     	;# 
   992  029B                     	;# 
   993  029E                     	;# 
   994  030C                     	;# 
   995  030D                     	;# 
   996  030E                     	;# 
   997  038C                     	;# 
   998  038D                     	;# 
   999  038E                     	;# 
  1000  0391                     	;# 
  1001  0392                     	;# 
  1002  0393                     	;# 
  1003  0394                     	;# 
  1004  0395                     	;# 
  1005  0396                     	;# 
  1006  0397                     	;# 
  1007  0398                     	;# 
  1008  0399                     	;# 
  1009  040E                     	;# 
  1010  0413                     	;# 
  1011  0413                     	;# 
  1012  0414                     	;# 
  1013  0414                     	;# 
  1014  0415                     	;# 
  1015  0416                     	;# 
  1016  0417                     	;# 
  1017  0418                     	;# 
  1018  041A                     	;# 
  1019  041A                     	;# 
  1020  041B                     	;# 
  1021  041B                     	;# 
  1022  041C                     	;# 
  1023  041D                     	;# 
  1024  041E                     	;# 
  1025  041F                     	;# 
  1026  0493                     	;# 
  1027  0494                     	;# 
  1028  0495                     	;# 
  1029  0496                     	;# 
  1030  049A                     	;# 
  1031  049B                     	;# 
  1032  049C                     	;# 
  1033  049D                     	;# 
  1034  058C                     	;# 
  1035  058C                     	;# 
  1036  058D                     	;# 
  1037  058E                     	;# 
  1038  058E                     	;# 
  1039  058F                     	;# 
  1040  0590                     	;# 
  1041  0590                     	;# 
  1042  0591                     	;# 
  1043  0592                     	;# 
  1044  0592                     	;# 
  1045  0593                     	;# 
  1046  0594                     	;# 
  1047  0594                     	;# 
  1048  0595                     	;# 
  1049  0596                     	;# 
  1050  0596                     	;# 
  1051  0597                     	;# 
  1052  0598                     	;# 
  1053  0599                     	;# 
  1054  059A                     	;# 
  1055  059B                     	;# 
  1056  059B                     	;# 
  1057  059C                     	;# 
  1058  059D                     	;# 
  1059  060C                     	;# 
  1060  060C                     	;# 
  1061  060D                     	;# 
  1062  060E                     	;# 
  1063  060F                     	;# 
  1064  060F                     	;# 
  1065  0610                     	;# 
  1066  0611                     	;# 
  1067  0612                     	;# 
  1068  0613                     	;# 
  1069  0614                     	;# 
  1070  0617                     	;# 
  1071  0618                     	;# 
  1072  0619                     	;# 
  1073  061A                     	;# 
  1074  061B                     	;# 
  1075  061C                     	;# 
  1076  0691                     	;# 
  1077  0692                     	;# 
  1078  0693                     	;# 
  1079  0694                     	;# 
  1080  0695                     	;# 
  1081  0696                     	;# 
  1082  0697                     	;# 
  1083  0699                     	;# 
  1084  069A                     	;# 
  1085  0711                     	;# 
  1086  0712                     	;# 
  1087  0713                     	;# 
  1088  0714                     	;# 
  1089  0715                     	;# 
  1090  0718                     	;# 
  1091  0718                     	;# 
  1092  0719                     	;# 
  1093  071A                     	;# 
  1094  071A                     	;# 
  1095  071B                     	;# 
  1096  071C                     	;# 
  1097  071D                     	;# 
  1098  0791                     	;# 
  1099  0791                     	;# 
  1100  0792                     	;# 
  1101  0793                     	;# 
  1102  0793                     	;# 
  1103  0794                     	;# 
  1104  0795                     	;# 
  1105  0795                     	;# 
  1106  0796                     	;# 
  1107  0797                     	;# 
  1108  0797                     	;# 
  1109  0798                     	;# 
  1110  0799                     	;# 
  1111  079A                     	;# 
  1112  080C                     	;# 
  1113  080C                     	;# 
  1114  080D                     	;# 
  1115  080E                     	;# 
  1116  080E                     	;# 
  1117  080F                     	;# 
  1118  0810                     	;# 
  1119  0810                     	;# 
  1120  0811                     	;# 
  1121  0812                     	;# 
  1122  0812                     	;# 
  1123  0813                     	;# 
  1124  0814                     	;# 
  1125  0815                     	;# 
  1126  0816                     	;# 
  1127  0817                     	;# 
  1128  0818                     	;# 
  1129  0819                     	;# 
  1130  081A                     	;# 
  1131  081A                     	;# 
  1132  081B                     	;# 
  1133  081C                     	;# 
  1134  081C                     	;# 
  1135  081D                     	;# 
  1136  088C                     	;# 
  1137  088D                     	;# 
  1138  088E                     	;# 
  1139  088F                     	;# 
  1140  088F                     	;# 
  1141  0890                     	;# 
  1142  0891                     	;# 
  1143  0892                     	;# 
  1144  0893                     	;# 
  1145  0893                     	;# 
  1146  0894                     	;# 
  1147  0895                     	;# 
  1148  0896                     	;# 
  1149  0897                     	;# 
  1150  0897                     	;# 
  1151  0898                     	;# 
  1152  0899                     	;# 
  1153  0D8C                     	;# 
  1154  0D8C                     	;# 
  1155  0D8D                     	;# 
  1156  0D8E                     	;# 
  1157  0D8F                     	;# 
  1158  0D8F                     	;# 
  1159  0D90                     	;# 
  1160  0D91                     	;# 
  1161  0D92                     	;# 
  1162  0D92                     	;# 
  1163  0D93                     	;# 
  1164  0D94                     	;# 
  1165  0D95                     	;# 
  1166  0D95                     	;# 
  1167  0D96                     	;# 
  1168  0D97                     	;# 
  1169  0D98                     	;# 
  1170  0D99                     	;# 
  1171  0D9A                     	;# 
  1172  0D9B                     	;# 
  1173  0D9C                     	;# 
  1174  0D9D                     	;# 
  1175  0D9E                     	;# 
  1176  0D9E                     	;# 
  1177  0D9F                     	;# 
  1178  0DA0                     	;# 
  1179  0DA1                     	;# 
  1180  0DA1                     	;# 
  1181  0DA2                     	;# 
  1182  0DA3                     	;# 
  1183  0DA4                     	;# 
  1184  0DA4                     	;# 
  1185  0DA5                     	;# 
  1186  0DA6                     	;# 
  1187  0DA7                     	;# 
  1188  0DA7                     	;# 
  1189  0DA8                     	;# 
  1190  0DA9                     	;# 
  1191  0DAA                     	;# 
  1192  0DAB                     	;# 
  1193  0DAC                     	;# 
  1194  0DAD                     	;# 
  1195  0DAE                     	;# 
  1196  0DAF                     	;# 
  1197  0E0F                     	;# 
  1198  0E10                     	;# 
  1199  0E11                     	;# 
  1200  0E12                     	;# 
  1201  0E13                     	;# 
  1202  0E14                     	;# 
  1203  0E15                     	;# 
  1204  0E16                     	;# 
  1205  0E17                     	;# 
  1206  0E18                     	;# 
  1207  0E19                     	;# 
  1208  0E1A                     	;# 
  1209  0E1B                     	;# 
  1210  0E1C                     	;# 
  1211  0E1D                     	;# 
  1212  0E1E                     	;# 
  1213  0E1F                     	;# 
  1214  0E20                     	;# 
  1215  0E21                     	;# 
  1216  0E22                     	;# 
  1217  0E23                     	;# 
  1218  0E24                     	;# 
  1219  0E25                     	;# 
  1220  0E26                     	;# 
  1221  0E27                     	;# 
  1222  0E28                     	;# 
  1223  0E29                     	;# 
  1224  0E2A                     	;# 
  1225  0E2B                     	;# 
  1226  0E2C                     	;# 
  1227  0E2D                     	;# 
  1228  0E2E                     	;# 
  1229  0E90                     	;# 
  1230  0E91                     	;# 
  1231  0E92                     	;# 
  1232  0E94                     	;# 
  1233  0E95                     	;# 
  1234  0E9C                     	;# 
  1235  0E9D                     	;# 
  1236  0E9E                     	;# 
  1237  0E9F                     	;# 
  1238  0EA0                     	;# 
  1239  0EA1                     	;# 
  1240  0EA2                     	;# 
  1241  0EA3                     	;# 
  1242  0EA4                     	;# 
  1243  0EA5                     	;# 
  1244  0EA6                     	;# 
  1245  0EA7                     	;# 
  1246  0F0F                     	;# 
  1247  0F10                     	;# 
  1248  0F11                     	;# 
  1249  0F12                     	;# 
  1250  0F13                     	;# 
  1251  0F14                     	;# 
  1252  0F15                     	;# 
  1253  0F16                     	;# 
  1254  0F17                     	;# 
  1255  0F18                     	;# 
  1256  0F19                     	;# 
  1257  0F1A                     	;# 
  1258  0F1B                     	;# 
  1259  0F1C                     	;# 
  1260  0F1D                     	;# 
  1261  0F1E                     	;# 
  1262  0F1F                     	;# 
  1263  0F20                     	;# 
  1264  0F21                     	;# 
  1265  0F22                     	;# 
  1266  0F23                     	;# 
  1267  0FE4                     	;# 
  1268  0FE5                     	;# 
  1269  0FE6                     	;# 
  1270  0FE7                     	;# 
  1271  0FE8                     	;# 
  1272  0FE9                     	;# 
  1273  0FEA                     	;# 
  1274  0FEB                     	;# 
  1275  0FED                     	;# 
  1276  0FEE                     	;# 
  1277  0FEF                     	;# 
  1278  0000                     	;# 
  1279  0001                     	;# 
  1280  0002                     	;# 
  1281  0003                     	;# 
  1282  0004                     	;# 
  1283  0005                     	;# 
  1284  0006                     	;# 
  1285  0007                     	;# 
  1286  0008                     	;# 
  1287  0009                     	;# 
  1288  000A                     	;# 
  1289  000B                     	;# 
  1290  000C                     	;# 
  1291  000D                     	;# 
  1292  000E                     	;# 
  1293  0010                     	;# 
  1294  0011                     	;# 
  1295  0012                     	;# 
  1296  0013                     	;# 
  1297  0014                     	;# 
  1298  0015                     	;# 
  1299  0016                     	;# 
  1300  0016                     	;# 
  1301  0017                     	;# 
  1302  0018                     	;# 
  1303  0019                     	;# 
  1304  001A                     	;# 
  1305  001A                     	;# 
  1306  001B                     	;# 
  1307  001B                     	;# 
  1308  001C                     	;# 
  1309  001D                     	;# 
  1310  001E                     	;# 
  1311  001F                     	;# 
  1312  008C                     	;# 
  1313  008D                     	;# 
  1314  008E                     	;# 
  1315  0090                     	;# 
  1316  0091                     	;# 
  1317  0092                     	;# 
  1318  0093                     	;# 
  1319  0094                     	;# 
  1320  0095                     	;# 
  1321  0096                     	;# 
  1322  0098                     	;# 
  1323  0099                     	;# 
  1324  009A                     	;# 
  1325  009B                     	;# 
  1326  009B                     	;# 
  1327  009C                     	;# 
  1328  009D                     	;# 
  1329  009E                     	;# 
  1330  009F                     	;# 
  1331  010C                     	;# 
  1332  010D                     	;# 
  1333  010E                     	;# 
  1334  0111                     	;# 
  1335  0112                     	;# 
  1336  0113                     	;# 
  1337  0114                     	;# 
  1338  0115                     	;# 
  1339  0116                     	;# 
  1340  0117                     	;# 
  1341  0118                     	;# 
  1342  0119                     	;# 
  1343  011C                     	;# 
  1344  018C                     	;# 
  1345  018D                     	;# 
  1346  018E                     	;# 
  1347  0191                     	;# 
  1348  0191                     	;# 
  1349  0192                     	;# 
  1350  0193                     	;# 
  1351  0193                     	;# 
  1352  0194                     	;# 
  1353  0195                     	;# 
  1354  0196                     	;# 
  1355  0199                     	;# 
  1356  0199                     	;# 
  1357  0199                     	;# 
  1358  019A                     	;# 
  1359  019A                     	;# 
  1360  019A                     	;# 
  1361  019B                     	;# 
  1362  019B                     	;# 
  1363  019B                     	;# 
  1364  019B                     	;# 
  1365  019B                     	;# 
  1366  019C                     	;# 
  1367  019C                     	;# 
  1368  019C                     	;# 
  1369  019D                     	;# 
  1370  019D                     	;# 
  1371  019D                     	;# 
  1372  019E                     	;# 
  1373  019E                     	;# 
  1374  019E                     	;# 
  1375  019F                     	;# 
  1376  019F                     	;# 
  1377  019F                     	;# 
  1378  019F                     	;# 
  1379  019F                     	;# 
  1380  020C                     	;# 
  1381  020D                     	;# 
  1382  020E                     	;# 
  1383  0211                     	;# 
  1384  0211                     	;# 
  1385  0212                     	;# 
  1386  0212                     	;# 
  1387  0213                     	;# 
  1388  0213                     	;# 
  1389  0214                     	;# 
  1390  0214                     	;# 
  1391  0215                     	;# 
  1392  0215                     	;# 
  1393  0215                     	;# 
  1394  0215                     	;# 
  1395  0216                     	;# 
  1396  0216                     	;# 
  1397  0217                     	;# 
  1398  0217                     	;# 
  1399  028C                     	;# 
  1400  028D                     	;# 
  1401  028E                     	;# 
  1402  0291                     	;# 
  1403  0291                     	;# 
  1404  0292                     	;# 
  1405  0293                     	;# 
  1406  0294                     	;# 
  1407  0298                     	;# 
  1408  0298                     	;# 
  1409  0299                     	;# 
  1410  029A                     	;# 
  1411  029B                     	;# 
  1412  029E                     	;# 
  1413  030C                     	;# 
  1414  030D                     	;# 
  1415  030E                     	;# 
  1416  038C                     	;# 
  1417  038D                     	;# 
  1418  038E                     	;# 
  1419  0391                     	;# 
  1420  0392                     	;# 
  1421  0393                     	;# 
  1422  0394                     	;# 
  1423  0395                     	;# 
  1424  0396                     	;# 
  1425  0397                     	;# 
  1426  0398                     	;# 
  1427  0399                     	;# 
  1428  040E                     	;# 
  1429  0413                     	;# 
  1430  0413                     	;# 
  1431  0414                     	;# 
  1432  0414                     	;# 
  1433  0415                     	;# 
  1434  0416                     	;# 
  1435  0417                     	;# 
  1436  0418                     	;# 
  1437  041A                     	;# 
  1438  041A                     	;# 
  1439  041B                     	;# 
  1440  041B                     	;# 
  1441  041C                     	;# 
  1442  041D                     	;# 
  1443  041E                     	;# 
  1444  041F                     	;# 
  1445  0493                     	;# 
  1446  0494                     	;# 
  1447  0495                     	;# 
  1448  0496                     	;# 
  1449  049A                     	;# 
  1450  049B                     	;# 
  1451  049C                     	;# 
  1452  049D                     	;# 
  1453  058C                     	;# 
  1454  058C                     	;# 
  1455  058D                     	;# 
  1456  058E                     	;# 
  1457  058E                     	;# 
  1458  058F                     	;# 
  1459  0590                     	;# 
  1460  0590                     	;# 
  1461  0591                     	;# 
  1462  0592                     	;# 
  1463  0592                     	;# 
  1464  0593                     	;# 
  1465  0594                     	;# 
  1466  0594                     	;# 
  1467  0595                     	;# 
  1468  0596                     	;# 
  1469  0596                     	;# 
  1470  0597                     	;# 
  1471  0598                     	;# 
  1472  0599                     	;# 
  1473  059A                     	;# 
  1474  059B                     	;# 
  1475  059B                     	;# 
  1476  059C                     	;# 
  1477  059D                     	;# 
  1478  060C                     	;# 
  1479  060C                     	;# 
  1480  060D                     	;# 
  1481  060E                     	;# 
  1482  060F                     	;# 
  1483  060F                     	;# 
  1484  0610                     	;# 
  1485  0611                     	;# 
  1486  0612                     	;# 
  1487  0613                     	;# 
  1488  0614                     	;# 
  1489  0617                     	;# 
  1490  0618                     	;# 
  1491  0619                     	;# 
  1492  061A                     	;# 
  1493  061B                     	;# 
  1494  061C                     	;# 
  1495  0691                     	;# 
  1496  0692                     	;# 
  1497  0693                     	;# 
  1498  0694                     	;# 
  1499  0695                     	;# 
  1500  0696                     	;# 
  1501  0697                     	;# 
  1502  0699                     	;# 
  1503  069A                     	;# 
  1504  0711                     	;# 
  1505  0712                     	;# 
  1506  0713                     	;# 
  1507  0714                     	;# 
  1508  0715                     	;# 
  1509  0718                     	;# 
  1510  0718                     	;# 
  1511  0719                     	;# 
  1512  071A                     	;# 
  1513  071A                     	;# 
  1514  071B                     	;# 
  1515  071C                     	;# 
  1516  071D                     	;# 
  1517  0791                     	;# 
  1518  0791                     	;# 
  1519  0792                     	;# 
  1520  0793                     	;# 
  1521  0793                     	;# 
  1522  0794                     	;# 
  1523  0795                     	;# 
  1524  0795                     	;# 
  1525  0796                     	;# 
  1526  0797                     	;# 
  1527  0797                     	;# 
  1528  0798                     	;# 
  1529  0799                     	;# 
  1530  079A                     	;# 
  1531  080C                     	;# 
  1532  080C                     	;# 
  1533  080D                     	;# 
  1534  080E                     	;# 
  1535  080E                     	;# 
  1536  080F                     	;# 
  1537  0810                     	;# 
  1538  0810                     	;# 
  1539  0811                     	;# 
  1540  0812                     	;# 
  1541  0812                     	;# 
  1542  0813                     	;# 
  1543  0814                     	;# 
  1544  0815                     	;# 
  1545  0816                     	;# 
  1546  0817                     	;# 
  1547  0818                     	;# 
  1548  0819                     	;# 
  1549  081A                     	;# 
  1550  081A                     	;# 
  1551  081B                     	;# 
  1552  081C                     	;# 
  1553  081C                     	;# 
  1554  081D                     	;# 
  1555  088C                     	;# 
  1556  088D                     	;# 
  1557  088E                     	;# 
  1558  088F                     	;# 
  1559  088F                     	;# 
  1560  0890                     	;# 
  1561  0891                     	;# 
  1562  0892                     	;# 
  1563  0893                     	;# 
  1564  0893                     	;# 
  1565  0894                     	;# 
  1566  0895                     	;# 
  1567  0896                     	;# 
  1568  0897                     	;# 
  1569  0897                     	;# 
  1570  0898                     	;# 
  1571  0899                     	;# 
  1572  0D8C                     	;# 
  1573  0D8C                     	;# 
  1574  0D8D                     	;# 
  1575  0D8E                     	;# 
  1576  0D8F                     	;# 
  1577  0D8F                     	;# 
  1578  0D90                     	;# 
  1579  0D91                     	;# 
  1580  0D92                     	;# 
  1581  0D92                     	;# 
  1582  0D93                     	;# 
  1583  0D94                     	;# 
  1584  0D95                     	;# 
  1585  0D95                     	;# 
  1586  0D96                     	;# 
  1587  0D97                     	;# 
  1588  0D98                     	;# 
  1589  0D99                     	;# 
  1590  0D9A                     	;# 
  1591  0D9B                     	;# 
  1592  0D9C                     	;# 
  1593  0D9D                     	;# 
  1594  0D9E                     	;# 
  1595  0D9E                     	;# 
  1596  0D9F                     	;# 
  1597  0DA0                     	;# 
  1598  0DA1                     	;# 
  1599  0DA1                     	;# 
  1600  0DA2                     	;# 
  1601  0DA3                     	;# 
  1602  0DA4                     	;# 
  1603  0DA4                     	;# 
  1604  0DA5                     	;# 
  1605  0DA6                     	;# 
  1606  0DA7                     	;# 
  1607  0DA7                     	;# 
  1608  0DA8                     	;# 
  1609  0DA9                     	;# 
  1610  0DAA                     	;# 
  1611  0DAB                     	;# 
  1612  0DAC                     	;# 
  1613  0DAD                     	;# 
  1614  0DAE                     	;# 
  1615  0DAF                     	;# 
  1616  0E0F                     	;# 
  1617  0E10                     	;# 
  1618  0E11                     	;# 
  1619  0E12                     	;# 
  1620  0E13                     	;# 
  1621  0E14                     	;# 
  1622  0E15                     	;# 
  1623  0E16                     	;# 
  1624  0E17                     	;# 
  1625  0E18                     	;# 
  1626  0E19                     	;# 
  1627  0E1A                     	;# 
  1628  0E1B                     	;# 
  1629  0E1C                     	;# 
  1630  0E1D                     	;# 
  1631  0E1E                     	;# 
  1632  0E1F                     	;# 
  1633  0E20                     	;# 
  1634  0E21                     	;# 
  1635  0E22                     	;# 
  1636  0E23                     	;# 
  1637  0E24                     	;# 
  1638  0E25                     	;# 
  1639  0E26                     	;# 
  1640  0E27                     	;# 
  1641  0E28                     	;# 
  1642  0E29                     	;# 
  1643  0E2A                     	;# 
  1644  0E2B                     	;# 
  1645  0E2C                     	;# 
  1646  0E2D                     	;# 
  1647  0E2E                     	;# 
  1648  0E90                     	;# 
  1649  0E91                     	;# 
  1650  0E92                     	;# 
  1651  0E94                     	;# 
  1652  0E95                     	;# 
  1653  0E9C                     	;# 
  1654  0E9D                     	;# 
  1655  0E9E                     	;# 
  1656  0E9F                     	;# 
  1657  0EA0                     	;# 
  1658  0EA1                     	;# 
  1659  0EA2                     	;# 
  1660  0EA3                     	;# 
  1661  0EA4                     	;# 
  1662  0EA5                     	;# 
  1663  0EA6                     	;# 
  1664  0EA7                     	;# 
  1665  0F0F                     	;# 
  1666  0F10                     	;# 
  1667  0F11                     	;# 
  1668  0F12                     	;# 
  1669  0F13                     	;# 
  1670  0F14                     	;# 
  1671  0F15                     	;# 
  1672  0F16                     	;# 
  1673  0F17                     	;# 
  1674  0F18                     	;# 
  1675  0F19                     	;# 
  1676  0F1A                     	;# 
  1677  0F1B                     	;# 
  1678  0F1C                     	;# 
  1679  0F1D                     	;# 
  1680  0F1E                     	;# 
  1681  0F1F                     	;# 
  1682  0F20                     	;# 
  1683  0F21                     	;# 
  1684  0F22                     	;# 
  1685  0F23                     	;# 
  1686  0FE4                     	;# 
  1687  0FE5                     	;# 
  1688  0FE6                     	;# 
  1689  0FE7                     	;# 
  1690  0FE8                     	;# 
  1691  0FE9                     	;# 
  1692  0FEA                     	;# 
  1693  0FEB                     	;# 
  1694  0FED                     	;# 
  1695  0FEE                     	;# 
  1696  0FEF                     	;# 
  1697                           
  1698                           	psect	stringtext
  1699  0800                     __pstringtext:	
  1700  0800                     _USIDHIGHREV:	
  1701  0800  345C               	retlw	92
  1702  0801  3407               	retlw	7
  1703  0802  3440               	retlw	64
  1704  0803  345C               	retlw	92
  1705  0804  3490               	retlw	144
  1706  0805  3441               	retlw	65
  1707  0806  345C               	retlw	92
  1708  0807  3410               	retlw	16
  1709  0808  347F               	retlw	127
  1710  0809  345C               	retlw	92
  1711  080A  3490               	retlw	144
  1712  080B  3400               	retlw	0
  1713  080C  345C               	retlw	92
  1714  080D  3410               	retlw	16
  1715  080E  3401               	retlw	1
  1716  080F  345C               	retlw	92
  1717  0810  3410               	retlw	16
  1718  0811  3402               	retlw	2
  1719  0812  345C               	retlw	92
  1720  0813  3410               	retlw	16
  1721  0814  3404               	retlw	4
  1722  0815  345C               	retlw	92
  1723  0816  3410               	retlw	16
  1724  0817  3408               	retlw	8
  1725  0818  345C               	retlw	92
  1726  0819  3410               	retlw	16
  1727  081A  3410               	retlw	16
  1728  081B  345C               	retlw	92
  1729  081C  3410               	retlw	16
  1730  081D  3420               	retlw	32
  1731  081E  345C               	retlw	92
  1732  081F  3410               	retlw	16
  1733  0820  3440               	retlw	64
  1734  0821  345C               	retlw	92
  1735  0822  3410               	retlw	16
  1736  0823  3454               	retlw	84
  1737  0824                     __end_of_USIDHIGHREV:	
  1738  0824                     _USIDLOWREV:	
  1739  0824  344C               	retlw	76
  1740  0825  3427               	retlw	39
  1741  0826  3440               	retlw	64
  1742  0827  344C               	retlw	76
  1743  0828  34B0               	retlw	176
  1744  0829  3441               	retlw	65
  1745  082A  344C               	retlw	76
  1746  082B  3430               	retlw	48
  1747  082C  347F               	retlw	127
  1748  082D  344C               	retlw	76
  1749  082E  34B0               	retlw	176
  1750  082F  3400               	retlw	0
  1751  0830  344C               	retlw	76
  1752  0831  3430               	retlw	48
  1753  0832  3401               	retlw	1
  1754  0833  344C               	retlw	76
  1755  0834  3430               	retlw	48
  1756  0835  3402               	retlw	2
  1757  0836  344C               	retlw	76
  1758  0837  3430               	retlw	48
  1759  0838  3404               	retlw	4
  1760  0839  344C               	retlw	76
  1761  083A  3430               	retlw	48
  1762  083B  3408               	retlw	8
  1763  083C  344C               	retlw	76
  1764  083D  3430               	retlw	48
  1765  083E  3410               	retlw	16
  1766  083F  344C               	retlw	76
  1767  0840  3430               	retlw	48
  1768  0841  3420               	retlw	32
  1769  0842  344C               	retlw	76
  1770  0843  3430               	retlw	48
  1771  0844  3440               	retlw	64
  1772  0845  344C               	retlw	76
  1773  0846  3430               	retlw	48
  1774  0847  3454               	retlw	84
  1775  0848                     __end_of_USIDLOWREV:	
  1776  0848                     _DacOutput:	
  1777  0848  342B               	retlw	43
  1778  0849  3448               	retlw	72
  1779  084A  3456               	retlw	86
  1780  084B  3464               	retlw	100
  1781  084C                     __end_of_DacOutput:	
  1782  000E                     _PORTC	set	14
  1783  0095                     _OPTION_REGbits	set	149
  1784  0099                     _OSCCON	set	153
  1785  009A                     _OSCSTAT	set	154
  1786  0098                     _OSCTUNE	set	152
  1787  008C                     _TRISA	set	140
  1788  008D                     _TRISB	set	141
  1789  008E                     _TRISC	set	142
  1790  0118                     _DAC1CON0	set	280
  1791  0119                     _DAC1CON1	set	281
  1792  010C                     _LATA	set	268
  1793  010D                     _LATB	set	269
  1794  010E                     _LATC	set	270
  1795  0861                     _LATA1	set	2145
  1796  0862                     _LATA2	set	2146
  1797  0864                     _LATA4	set	2148
  1798  086C                     _LATB4	set	2156
  1799  086D                     _LATB5	set	2157
  1800  086E                     _LATB6	set	2158
  1801  086F                     _LATB7	set	2159
  1802  018C                     _ANSELA	set	396
  1803  018D                     _ANSELB	set	397
  1804  018E                     _ANSELC	set	398
  1805  020D                     _WPUB	set	525
  1806  020E                     _WPUC	set	526
  1807                           
  1808                           ; #config settings
  1809  0000                     
  1810                           	psect	cinit
  1811  07F9                     start_initialization:	
  1812  07F9                     __initialization:	
  1813                           
  1814                           ; Clear objects allocated to COMMON
  1815  07F9  01FC               	clrf	__pbssCOMMON& (0+127)
  1816  07FA  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
  1817                           
  1818                           ; Clear objects allocated to BANK0
  1819  07FB  01A0               	clrf	__pbssBANK0& (0+127)
  1820  07FC  01A1               	clrf	(__pbssBANK0+1)& (0+127)
  1821  07FD                     end_of_initialization:	
  1822                           ;End of C runtime variable initialization code
  1823                           
  1824  07FD                     __end_of__initialization:	
  1825  07FD  0020               	movlb	0
  1826  07FE  3186  2EEC         	ljmp	_main	;jump to C main() function
  1827                           
  1828                           	psect	bssCOMMON
  1829  007C                     __pbssCOMMON:	
  1830  007C                     _Byte2:	
  1831  007C                     	ds	1
  1832  007D                     _Byte3:	
  1833  007D                     	ds	1
  1834                           
  1835                           	psect	bssBANK0
  1836  0020                     __pbssBANK0:	
  1837  0020                     _Byte1:	
  1838  0020                     	ds	1
  1839  0021                     _readDummy:	
  1840  0021                     	ds	1
  1841                           
  1842                           	psect	cstackCOMMON
  1843  0070                     __pcstackCOMMON:	
  1844  0070                     ?_OSCILLATOR_Initialize:	
  1845  0070                     ??_OSCILLATOR_Initialize:	
  1846                           ; 0 bytes @ 0x0
  1847                           
  1848  0070                     ?_DAC1_Initialize:	
  1849                           ; 0 bytes @ 0x0
  1850                           
  1851  0070                     ??_DAC1_Initialize:	
  1852                           ; 0 bytes @ 0x0
  1853                           
  1854  0070                     ?_DAC1_SetOutput:	
  1855                           ; 0 bytes @ 0x0
  1856                           
  1857  0070                     ??_DAC1_SetOutput:	
  1858                           ; 0 bytes @ 0x0
  1859                           
  1860  0070                     ?_PIN_MANAGER_Initialize:	
  1861                           ; 0 bytes @ 0x0
  1862                           
  1863  0070                     ??_PIN_MANAGER_Initialize:	
  1864                           ; 0 bytes @ 0x0
  1865                           
  1866  0070                     ?_SYSTEM_Initialize:	
  1867                           ; 0 bytes @ 0x0
  1868                           
  1869  0070                     ??_SYSTEM_Initialize:	
  1870                           ; 0 bytes @ 0x0
  1871                           
  1872  0070                     ?_MIPITRANSFER1:	
  1873                           ; 0 bytes @ 0x0
  1874                           
  1875  0070                     ??_MIPITRANSFER1:	
  1876                           ; 0 bytes @ 0x0
  1877                           
  1878  0070                     ?_MIPITRANSFER2:	
  1879                           ; 0 bytes @ 0x0
  1880                           
  1881  0070                     ??_MIPITRANSFER2:	
  1882                           ; 0 bytes @ 0x0
  1883                           
  1884  0070                     ?_SSCtest:	
  1885                           ; 0 bytes @ 0x0
  1886                           
  1887  0070                     ?_ConfigureShiftRegister:	
  1888                           ; 0 bytes @ 0x0
  1889                           
  1890  0070                     ??_ConfigureShiftRegister:	
  1891                           ; 0 bytes @ 0x0
  1892                           
  1893  0070                     ?_main:	
  1894                           ; 0 bytes @ 0x0
  1895                           
  1896  0070                     DAC1_SetOutput@inputData:	
  1897                           ; 0 bytes @ 0x0
  1898                           
  1899                           
  1900                           ; 1 bytes @ 0x0
  1901  0070                     	ds	1
  1902  0071                     ConfigureShiftRegister@i:	
  1903                           
  1904                           ; 1 bytes @ 0x1
  1905  0071                     	ds	1
  1906  0072                     ConfigureShiftRegister@ReverseReg:	
  1907                           
  1908                           ; 1 bytes @ 0x2
  1909  0072                     	ds	1
  1910  0073                     MIPITRANSFER1@k:	
  1911  0073                     MIPITRANSFER2@k:	
  1912                           ; 1 bytes @ 0x3
  1913                           
  1914                           
  1915                           ; 1 bytes @ 0x3
  1916  0073                     	ds	1
  1917  0074                     MIPITRANSFER1@j:	
  1918  0074                     MIPITRANSFER2@j:	
  1919                           ; 1 bytes @ 0x4
  1920                           
  1921                           
  1922                           ; 1 bytes @ 0x4
  1923  0074                     	ds	1
  1924  0075                     MIPITRANSFER1@j_110:	
  1925  0075                     MIPITRANSFER2@j_118:	
  1926                           ; 1 bytes @ 0x5
  1927                           
  1928                           
  1929                           ; 1 bytes @ 0x5
  1930  0075                     	ds	1
  1931  0076                     MIPITRANSFER1@j_111:	
  1932  0076                     MIPITRANSFER2@j_119:	
  1933                           ; 1 bytes @ 0x6
  1934                           
  1935                           
  1936                           ; 1 bytes @ 0x6
  1937  0076                     	ds	1
  1938  0077                     MIPITRANSFER1@j_113:	
  1939  0077                     MIPITRANSFER2@j_121:	
  1940                           ; 1 bytes @ 0x7
  1941                           
  1942                           
  1943                           ; 1 bytes @ 0x7
  1944  0077                     	ds	1
  1945  0078                     MIPITRANSFER1@i:	
  1946  0078                     MIPITRANSFER2@i:	
  1947                           ; 1 bytes @ 0x8
  1948                           
  1949                           
  1950                           ; 1 bytes @ 0x8
  1951  0078                     	ds	1
  1952  0079                     MIPITRANSFER1@i_112:	
  1953  0079                     MIPITRANSFER2@i_120:	
  1954                           ; 1 bytes @ 0x9
  1955                           
  1956                           
  1957                           ; 1 bytes @ 0x9
  1958  0079                     	ds	1
  1959  007A                     ??_SSCtest:	
  1960  007A                     SSCtest@CABAND:	
  1961                           ; 0 bytes @ 0xA
  1962                           
  1963                           
  1964                           ; 1 bytes @ 0xA
  1965  007A                     	ds	1
  1966  007B                     ??_main:	
  1967                           
  1968                           ; 0 bytes @ 0xB
  1969  007B                     	ds	1
  1970                           
  1971                           	psect	maintext
  1972  06EC                     __pmaintext:	
  1973 ;;
  1974 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1975 ;;
  1976 ;; *************** function _main *****************
  1977 ;; Defined at:
  1978 ;;		line 294 in file "main.c"
  1979 ;; Parameters:    Size  Location     Type
  1980 ;;		None
  1981 ;; Auto vars:     Size  Location     Type
  1982 ;;		None
  1983 ;; Return value:  Size  Location     Type
  1984 ;;		None               void
  1985 ;; Registers used:
  1986 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1987 ;; Tracked objects:
  1988 ;;		On entry : B1F/0
  1989 ;;		On exit  : 0/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1992 ;;      Params:         0       0       0       0       0       0       0       0
  1993 ;;      Locals:         0       0       0       0       0       0       0       0
  1994 ;;      Temps:          1       0       0       0       0       0       0       0
  1995 ;;      Totals:         1       0       0       0       0       0       0       0
  1996 ;;Total ram usage:        1 bytes
  1997 ;; Hardware stack levels required when called:    2
  1998 ;; This function calls:
  1999 ;;		_ConfigureShiftRegister
  2000 ;;		_DAC1_Initialize
  2001 ;;		_DAC1_SetOutput
  2002 ;;		_MIPITRANSFER1
  2003 ;;		_MIPITRANSFER2
  2004 ;;		_PIN_MANAGER_Initialize
  2005 ;;		_SSCtest
  2006 ;;		_SYSTEM_Initialize
  2007 ;; This function is called by:
  2008 ;;		Startup code after reset
  2009 ;; This function uses a non-reentrant model
  2010 ;;
  2011                           
  2012                           
  2013                           ;psect for function _main
  2014  06EC                     _main:	
  2015                           
  2016                           ;main.c: 296: SYSTEM_Initialize();
  2017                           
  2018                           ;incstack = 0
  2019                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2020  06EC  3184  2426  3186   	fcall	_SYSTEM_Initialize
  2021                           
  2022                           ;main.c: 297: DAC1_Initialize();
  2023  06EF  3184  241B  3186   	fcall	_DAC1_Initialize
  2024                           
  2025                           ;main.c: 298: PIN_MANAGER_Initialize();
  2026  06F2  3184  242F  3186   	fcall	_PIN_MANAGER_Initialize
  2027                           
  2028                           ;main.c: 300: DAC1_SetOutput(0);
  2029  06F5  3000               	movlw	0
  2030  06F6  3184  2416  3186   	fcall	_DAC1_SetOutput
  2031                           
  2032                           ;main.c: 301: do { LATA1 = 0; } while(0);
  2033  06F9  0022               	movlb	2	; select bank2
  2034  06FA  108C               	bcf	12,1	;volatile
  2035                           
  2036                           ;main.c: 302: do { LATA4 = 0; } while(0);
  2037  06FB  120C               	bcf	12,4	;volatile
  2038                           
  2039                           ;main.c: 303: do { LATA2 = 0; } while(0);
  2040  06FC  110C               	bcf	12,2	;volatile
  2041                           
  2042                           ;main.c: 304: do { LATB4 = 0; } while(0);
  2043  06FD  120D               	bcf	13,4	;volatile
  2044  06FE                     l1346:	
  2045                           ;main.c: 306: while ((PORTC & 0xC0) != 0xC0){}
  2046                           
  2047                           ;main.c: 305: while (1) {
  2048                           
  2049  06FE  30C0               	movlw	192
  2050  06FF  0020               	movlb	0	; select bank0
  2051  0700  050E               	andwf	14,w	;volatile
  2052  0701  00FB               	movwf	??_main
  2053  0702  30C0               	movlw	192
  2054  0703  067B               	xorwf	??_main,w
  2055  0704  1D03               	btfss	3,2
  2056  0705  2EFE               	goto	l1346
  2057                           
  2058                           ;main.c: 307: Byte1 = PORTC;
  2059  0706  080E               	movf	14,w	;volatile
  2060  0707  00FB               	movwf	??_main
  2061  0708  087B               	movf	??_main,w
  2062  0709  00A0               	movwf	_Byte1
  2063  070A                     l1350:	
  2064                           ;main.c: 308: while ((PORTC & 0xC0) != 0x40){}
  2065                           
  2066  070A  30C0               	movlw	192
  2067  070B  050E               	andwf	14,w	;volatile
  2068  070C  00FB               	movwf	??_main
  2069  070D  3040               	movlw	64
  2070  070E  067B               	xorwf	??_main,w
  2071  070F  1D03               	btfss	3,2
  2072  0710  2F0A               	goto	l1350
  2073                           
  2074                           ;main.c: 309: Byte2 = PORTC & 0x3F;
  2075  0711  080E               	movf	14,w	;volatile
  2076  0712  393F               	andlw	63
  2077  0713  00FB               	movwf	??_main
  2078  0714  087B               	movf	??_main,w
  2079  0715  00FC               	movwf	_Byte2
  2080  0716                     l1354:	
  2081                           ;main.c: 310: while ((PORTC & 0xC0) != 0x80){}
  2082                           
  2083  0716  30C0               	movlw	192
  2084  0717  050E               	andwf	14,w	;volatile
  2085  0718  00FB               	movwf	??_main
  2086  0719  3080               	movlw	128
  2087  071A  067B               	xorwf	??_main,w
  2088  071B  1D03               	btfss	3,2
  2089  071C  2F16               	goto	l1354
  2090                           
  2091                           ;main.c: 311: Byte3 = PORTC & 0x3F;
  2092  071D  080E               	movf	14,w	;volatile
  2093  071E  393F               	andlw	63
  2094  071F  00FB               	movwf	??_main
  2095  0720  087B               	movf	??_main,w
  2096  0721  00FD               	movwf	_Byte3
  2097                           
  2098                           ;main.c: 312: if (((Byte1 & 0x10) == 0x10) && ((Byte1 & 0x0C) != 0x00))
  2099  0722  1E20               	btfss	_Byte1,4
  2100  0723  2F32               	goto	l1364
  2101  0724  0820               	movf	_Byte1,w
  2102  0725  390C               	andlw	12
  2103  0726  1903               	btfsc	3,2
  2104  0727  2F32               	goto	l1364
  2105                           
  2106                           ;main.c: 313: DAC1_SetOutput(DacOutput[(Byte1 & 0x03)]);
  2107  0728  0820               	movf	_Byte1,w
  2108  0729  3903               	andlw	3
  2109  072A  3E48               	addlw	low (_DacOutput| (0+32768))
  2110  072B  0084               	movwf	4
  2111  072C  3088               	movlw	high (_DacOutput| (0+32768))
  2112  072D  1803               	skipnc
  2113  072E  3E01               	addlw	1
  2114  072F  0085               	movwf	5
  2115  0730  0800               	movf	0,w	;code access
  2116  0731  2F33               	goto	L1
  2117  0732                     l1364:	
  2118                           
  2119                           ;main.c: 314: else
  2120                           ;main.c: 315: DAC1_SetOutput(0);
  2121  0732  3000               	movlw	0
  2122  0733                     L1:	
  2123  0733  3184  2416  3186   	fcall	_DAC1_SetOutput
  2124                           
  2125                           ;main.c: 317: if ((Byte1 & 0x3C) == 0x20){
  2126  0736  303C               	movlw	60
  2127  0737  0020               	movlb	0	; select bank0
  2128  0738  0520               	andwf	_Byte1,w
  2129  0739  00FB               	movwf	??_main
  2130  073A  3020               	movlw	32
  2131  073B  067B               	xorwf	??_main,w
  2132  073C  1903               	btfsc	3,2
  2133  073D  2F82               	goto	l265
  2134                           
  2135                           ;main.c: 320: }else{ if (((Byte1 & 0x30) != 0x00) && ((Byte1 & 0x0C) != 0x00)){
  2136                           
  2137                           ;main.c: 319: do { LATB4 = 1; } while(0);
  2138                           
  2139                           ;main.c: 318: do { LATA2 = 0; } while(0);
  2140  073E  0020               	movlb	0	; select bank0
  2141  073F  0820               	movf	_Byte1,w
  2142  0740  3930               	andlw	48
  2143  0741  1903               	btfsc	3,2
  2144  0742  2F86               	goto	l270
  2145  0743  0820               	movf	_Byte1,w
  2146  0744  390C               	andlw	12
  2147  0745  1903               	btfsc	3,2
  2148  0746  2F86               	goto	l270
  2149                           
  2150                           ;main.c: 321: if ((Byte2 == 5) || (Byte2 == 8) || (Byte2 == 12) || (Byte2 == 13) || (Byt
      +                          e2 == 20) || (Byte2 == 26) || (Byte2 == 29) || (Byte3 == 5) || (Byte3 == 8) || (Byte3 ==
      +                           12) || (Byte3 == 13) || (Byte3 == 20) || (Byte3 == 26) || (Byte3 == 29)){
  2151  0747  3005               	movlw	5
  2152  0748  067C               	xorwf	_Byte2,w
  2153  0749  1903               	btfsc	3,2
  2154  074A  2F7F               	goto	l260
  2155  074B  3008               	movlw	8
  2156  074C  067C               	xorwf	_Byte2,w
  2157  074D  1903               	btfsc	3,2
  2158  074E  2F7F               	goto	l260
  2159  074F  300C               	movlw	12
  2160  0750  067C               	xorwf	_Byte2,w
  2161  0751  1903               	btfsc	3,2
  2162  0752  2F7F               	goto	l260
  2163  0753  300D               	movlw	13
  2164  0754  067C               	xorwf	_Byte2,w
  2165  0755  1903               	btfsc	3,2
  2166  0756  2F7F               	goto	l260
  2167  0757  3014               	movlw	20
  2168  0758  067C               	xorwf	_Byte2,w
  2169  0759  1903               	btfsc	3,2
  2170  075A  2F7F               	goto	l260
  2171  075B  301A               	movlw	26
  2172  075C  067C               	xorwf	_Byte2,w
  2173  075D  1903               	btfsc	3,2
  2174  075E  2F7F               	goto	l260
  2175  075F  301D               	movlw	29
  2176  0760  067C               	xorwf	_Byte2,w
  2177  0761  1903               	btfsc	3,2
  2178  0762  2F7F               	goto	l260
  2179  0763  3005               	movlw	5
  2180  0764  067D               	xorwf	_Byte3,w
  2181  0765  1903               	btfsc	3,2
  2182  0766  2F7F               	goto	l260
  2183  0767  3008               	movlw	8
  2184  0768  067D               	xorwf	_Byte3,w
  2185  0769  1903               	btfsc	3,2
  2186  076A  2F7F               	goto	l260
  2187  076B  300C               	movlw	12
  2188  076C  067D               	xorwf	_Byte3,w
  2189  076D  1903               	btfsc	3,2
  2190  076E  2F7F               	goto	l260
  2191  076F  300D               	movlw	13
  2192  0770  067D               	xorwf	_Byte3,w
  2193  0771  1903               	btfsc	3,2
  2194  0772  2F7F               	goto	l260
  2195  0773  3014               	movlw	20
  2196  0774  067D               	xorwf	_Byte3,w
  2197  0775  1903               	btfsc	3,2
  2198  0776  2F7F               	goto	l260
  2199  0777  301A               	movlw	26
  2200  0778  067D               	xorwf	_Byte3,w
  2201  0779  1903               	btfsc	3,2
  2202  077A  2F7F               	goto	l260
  2203  077B  301D               	movlw	29
  2204  077C  067D               	xorwf	_Byte3,w
  2205  077D  1D03               	btfss	3,2
  2206  077E  2F82               	goto	l265
  2207  077F                     l260:	
  2208                           ;main.c: 322: do { LATA2 = 1; } while(0);
  2209                           
  2210  077F  0022               	movlb	2	; select bank2
  2211  0780  150C               	bsf	12,2	;volatile
  2212                           
  2213                           ;main.c: 323: do { LATB4 = 1; } while(0);
  2214  0781  2F84               	goto	l267
  2215  0782                     l265:	
  2216                           ;main.c: 325: do { LATA2 = 0; } while(0);
  2217                           
  2218                           ;main.c: 324: }else{
  2219                           
  2220  0782  0022               	movlb	2	; select bank2
  2221  0783  110C               	bcf	12,2	;volatile
  2222  0784                     l267:	
  2223                           ;main.c: 326: do { LATB4 = 1; } while(0);
  2224                           
  2225  0784  160D               	bsf	13,4	;volatile
  2226                           
  2227                           ;main.c: 327: }
  2228                           ;main.c: 328: }else{
  2229  0785  2F89               	goto	l1400
  2230  0786                     l270:	
  2231                           ;main.c: 329: do { LATA2 = 0; } while(0);
  2232                           
  2233  0786  0022               	movlb	2	; select bank2
  2234  0787  110C               	bcf	12,2	;volatile
  2235                           
  2236                           ;main.c: 330: do { LATB4 = 0; } while(0);
  2237  0788  120D               	bcf	13,4	;volatile
  2238  0789                     l1400:	
  2239                           
  2240                           ;main.c: 331: }
  2241                           ;main.c: 332: }
  2242                           ;main.c: 350: if (Byte2 == 5){
  2243  0789  3005               	movlw	5
  2244  078A  067C               	xorwf	_Byte2,w
  2245  078B  1D03               	btfss	3,2
  2246  078C  2F92               	goto	l1404
  2247                           
  2248                           ;main.c: 351: SSCtest (Byte3);
  2249  078D  087D               	movf	_Byte3,w
  2250  078E  3184  24B5  3186   	fcall	_SSCtest
  2251                           
  2252                           ;main.c: 352: }else{ if (Byte3 == 5){
  2253  0791  2FF1               	goto	l1446
  2254  0792                     l1404:	
  2255  0792  3005               	movlw	5
  2256  0793  067D               	xorwf	_Byte3,w
  2257  0794  1D03               	btfss	3,2
  2258  0795  2F9B               	goto	l1408
  2259                           
  2260                           ;main.c: 353: MIPITRANSFER1 (3);
  2261  0796  3003               	movlw	3
  2262  0797  3185  253A  3186   	fcall	_MIPITRANSFER1
  2263                           
  2264                           ;main.c: 354: }else{ if ((Byte2 == 8) || (Byte3 == 8)){
  2265  079A  2FF1               	goto	l1446
  2266  079B                     l1408:	
  2267  079B  3008               	movlw	8
  2268  079C  067C               	xorwf	_Byte2,w
  2269  079D  1903               	btfsc	3,2
  2270  079E  2FA3               	goto	l1412
  2271  079F  3008               	movlw	8
  2272  07A0  067D               	xorwf	_Byte3,w
  2273  07A1  1D03               	btfss	3,2
  2274  07A2  2FA8               	goto	l1414
  2275  07A3                     l1412:	
  2276                           
  2277                           ;main.c: 355: MIPITRANSFER1 (6);
  2278  07A3  3006               	movlw	6
  2279  07A4  3185  253A  3186   	fcall	_MIPITRANSFER1
  2280                           
  2281                           ;main.c: 356: }else{ if ((Byte2 == 12) || (Byte3 == 12)){
  2282  07A7  2FF1               	goto	l1446
  2283  07A8                     l1414:	
  2284  07A8  300C               	movlw	12
  2285  07A9  067C               	xorwf	_Byte2,w
  2286  07AA  1903               	btfsc	3,2
  2287  07AB  2FB0               	goto	l1418
  2288  07AC  300C               	movlw	12
  2289  07AD  067D               	xorwf	_Byte3,w
  2290  07AE  1D03               	btfss	3,2
  2291  07AF  2FB5               	goto	l1420
  2292  07B0                     l1418:	
  2293                           
  2294                           ;main.c: 357: MIPITRANSFER1 (9);
  2295  07B0  3009               	movlw	9
  2296  07B1  3185  253A  3186   	fcall	_MIPITRANSFER1
  2297                           
  2298                           ;main.c: 358: }else{ if ((Byte2 == 13) || (Byte3 == 13)){
  2299  07B4  2FF1               	goto	l1446
  2300  07B5                     l1420:	
  2301  07B5  300D               	movlw	13
  2302  07B6  067C               	xorwf	_Byte2,w
  2303  07B7  1903               	btfsc	3,2
  2304  07B8  2FBD               	goto	l1424
  2305  07B9  300D               	movlw	13
  2306  07BA  067D               	xorwf	_Byte3,w
  2307  07BB  1D03               	btfss	3,2
  2308  07BC  2FC2               	goto	l1426
  2309  07BD                     l1424:	
  2310                           
  2311                           ;main.c: 359: MIPITRANSFER1 (12);
  2312  07BD  300C               	movlw	12
  2313  07BE  3185  253A  3186   	fcall	_MIPITRANSFER1
  2314                           
  2315                           ;main.c: 360: }else{ if ((Byte2 == 20) || (Byte3 == 20)){
  2316  07C1  2FF1               	goto	l1446
  2317  07C2                     l1426:	
  2318  07C2  3014               	movlw	20
  2319  07C3  067C               	xorwf	_Byte2,w
  2320  07C4  1903               	btfsc	3,2
  2321  07C5  2FCA               	goto	l1430
  2322  07C6  3014               	movlw	20
  2323  07C7  067D               	xorwf	_Byte3,w
  2324  07C8  1D03               	btfss	3,2
  2325  07C9  2FCF               	goto	l1432
  2326  07CA                     l1430:	
  2327                           
  2328                           ;main.c: 361: MIPITRANSFER1 (15);
  2329  07CA  300F               	movlw	15
  2330  07CB  3185  253A  3186   	fcall	_MIPITRANSFER1
  2331                           
  2332                           ;main.c: 362: }else{ if ((Byte2 == 26) || (Byte3 == 26)){
  2333  07CE  2FF1               	goto	l1446
  2334  07CF                     l1432:	
  2335  07CF  301A               	movlw	26
  2336  07D0  067C               	xorwf	_Byte2,w
  2337  07D1  1903               	btfsc	3,2
  2338  07D2  2FD7               	goto	l1436
  2339  07D3  301A               	movlw	26
  2340  07D4  067D               	xorwf	_Byte3,w
  2341  07D5  1D03               	btfss	3,2
  2342  07D6  2FDC               	goto	l1438
  2343  07D7                     l1436:	
  2344                           
  2345                           ;main.c: 363: MIPITRANSFER1 (18);
  2346  07D7  3012               	movlw	18
  2347  07D8  3185  253A  3186   	fcall	_MIPITRANSFER1
  2348                           
  2349                           ;main.c: 364: }else{ if ((Byte2 == 29) || (Byte3 == 29)){
  2350  07DB  2FF1               	goto	l1446
  2351  07DC                     l1438:	
  2352  07DC  301D               	movlw	29
  2353  07DD  067C               	xorwf	_Byte2,w
  2354  07DE  1903               	btfsc	3,2
  2355  07DF  2FE4               	goto	l1442
  2356  07E0  301D               	movlw	29
  2357  07E1  067D               	xorwf	_Byte3,w
  2358  07E2  1D03               	btfss	3,2
  2359  07E3  2FE9               	goto	l1444
  2360  07E4                     l1442:	
  2361                           
  2362                           ;main.c: 365: MIPITRANSFER1 (21);
  2363  07E4  3015               	movlw	21
  2364  07E5  3185  253A  3186   	fcall	_MIPITRANSFER1
  2365                           
  2366                           ;main.c: 366: }else{
  2367  07E8  2FF1               	goto	l1446
  2368  07E9                     l1444:	
  2369                           
  2370                           ;main.c: 367: MIPITRANSFER1 (30);
  2371  07E9  301E               	movlw	30
  2372  07EA  3185  253A  3186   	fcall	_MIPITRANSFER1
  2373                           
  2374                           ;main.c: 368: MIPITRANSFER2 (30);
  2375  07ED  301E               	movlw	30
  2376  07EE  3186  2613  3186   	fcall	_MIPITRANSFER2
  2377  07F1                     l1446:	
  2378                           ;main.c: 369: }
  2379                           ;main.c: 370: }
  2380                           ;main.c: 371: }
  2381                           ;main.c: 372: }
  2382                           ;main.c: 373: }
  2383                           ;main.c: 374: }
  2384                           ;main.c: 375: }
  2385                           ;main.c: 376: }
  2386                           ;main.c: 377: do { LATA1 = 1; } while(0);
  2387                           
  2388  07F1  0022               	movlb	2	; select bank2
  2389  07F2  148C               	bsf	12,1	;volatile
  2390                           
  2391                           ;main.c: 378: ConfigureShiftRegister();
  2392  07F3  3184  244B  3186   	fcall	_ConfigureShiftRegister
  2393                           
  2394                           ;main.c: 379: do { LATA1 = 0; } while(0);
  2395  07F6  0022               	movlb	2	; select bank2
  2396  07F7  108C               	bcf	12,1	;volatile
  2397  07F8  2EFE               	goto	l1346
  2398  07F9                     __end_of_main:	
  2399                           
  2400                           	psect	text1
  2401  0426                     __ptext1:	
  2402 ;; *************** function _SYSTEM_Initialize *****************
  2403 ;; Defined at:
  2404 ;;		line 75 in file "mcc_generated_files/mcc.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;		None
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;		None
  2409 ;; Return value:  Size  Location     Type
  2410 ;;		None               void
  2411 ;; Registers used:
  2412 ;;		wreg, status,2, status,0, pclath, cstack
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2418 ;;      Params:         0       0       0       0       0       0       0       0
  2419 ;;      Locals:         0       0       0       0       0       0       0       0
  2420 ;;      Temps:          0       0       0       0       0       0       0       0
  2421 ;;      Totals:         0       0       0       0       0       0       0       0
  2422 ;;Total ram usage:        0 bytes
  2423 ;; Hardware stack levels used:    1
  2424 ;; Hardware stack levels required when called:    1
  2425 ;; This function calls:
  2426 ;;		_DAC1_Initialize
  2427 ;;		_OSCILLATOR_Initialize
  2428 ;;		_PIN_MANAGER_Initialize
  2429 ;; This function is called by:
  2430 ;;		_main
  2431 ;; This function uses a non-reentrant model
  2432 ;;
  2433                           
  2434                           
  2435                           ;psect for function _SYSTEM_Initialize
  2436  0426                     _SYSTEM_Initialize:	
  2437                           
  2438                           ;mcc.c: 76: OSCILLATOR_Initialize();
  2439                           
  2440                           ;incstack = 0
  2441                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2442  0426  3184  2420  3184   	fcall	_OSCILLATOR_Initialize
  2443                           
  2444                           ;mcc.c: 77: PIN_MANAGER_Initialize();
  2445  0429  3184  242F  3184   	fcall	_PIN_MANAGER_Initialize
  2446                           
  2447                           ;mcc.c: 78: DAC1_Initialize();
  2448  042C  3184  241B         	fcall	_DAC1_Initialize
  2449  042E  0008               	return
  2450  042F                     __end_of_SYSTEM_Initialize:	
  2451                           
  2452                           	psect	text2
  2453  042F                     __ptext2:	
  2454 ;; *************** function _PIN_MANAGER_Initialize *****************
  2455 ;; Defined at:
  2456 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  2457 ;; Parameters:    Size  Location     Type
  2458 ;;		None
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;		None
  2461 ;; Return value:  Size  Location     Type
  2462 ;;		None               void
  2463 ;; Registers used:
  2464 ;;		wreg, status,2
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2470 ;;      Params:         0       0       0       0       0       0       0       0
  2471 ;;      Locals:         0       0       0       0       0       0       0       0
  2472 ;;      Temps:          0       0       0       0       0       0       0       0
  2473 ;;      Totals:         0       0       0       0       0       0       0       0
  2474 ;;Total ram usage:        0 bytes
  2475 ;; Hardware stack levels used:    1
  2476 ;; This function calls:
  2477 ;;		Nothing
  2478 ;; This function is called by:
  2479 ;;		_SYSTEM_Initialize
  2480 ;;		_main
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           
  2485                           ;psect for function _PIN_MANAGER_Initialize
  2486  042F                     _PIN_MANAGER_Initialize:	
  2487                           
  2488                           ;pin_manager.c: 51: LATA = 0x00;
  2489                           
  2490                           ;incstack = 0
  2491                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2492  042F  0022               	movlb	2	; select bank2
  2493  0430  018C               	clrf	12	;volatile
  2494                           
  2495                           ;pin_manager.c: 52: TRISA = 0x28;
  2496  0431  3028               	movlw	40
  2497  0432  0021               	movlb	1	; select bank1
  2498  0433  008C               	movwf	12	;volatile
  2499                           
  2500                           ;pin_manager.c: 53: ANSELA = 0x01;
  2501  0434  3001               	movlw	1
  2502  0435  0023               	movlb	3	; select bank3
  2503  0436  008C               	movwf	12	;volatile
  2504                           
  2505                           ;pin_manager.c: 55: LATB = 0x00;
  2506  0437  0022               	movlb	2	; select bank2
  2507  0438  018D               	clrf	13	;volatile
  2508                           
  2509                           ;pin_manager.c: 56: TRISB = 0x00;
  2510  0439  0021               	movlb	1	; select bank1
  2511  043A  018D               	clrf	13	;volatile
  2512                           
  2513                           ;pin_manager.c: 57: ANSELB = 0x00;
  2514  043B  0023               	movlb	3	; select bank3
  2515  043C  018D               	clrf	13	;volatile
  2516                           
  2517                           ;pin_manager.c: 58: WPUB = 0x00;
  2518  043D  0024               	movlb	4	; select bank4
  2519  043E  018D               	clrf	13	;volatile
  2520                           
  2521                           ;pin_manager.c: 60: LATC = 0x00;
  2522  043F  0022               	movlb	2	; select bank2
  2523  0440  018E               	clrf	14	;volatile
  2524                           
  2525                           ;pin_manager.c: 61: TRISC = 0xFF;
  2526  0441  30FF               	movlw	255
  2527  0442  0021               	movlb	1	; select bank1
  2528  0443  008E               	movwf	14	;volatile
  2529                           
  2530                           ;pin_manager.c: 62: ANSELC = 0x00;
  2531  0444  0023               	movlb	3	; select bank3
  2532  0445  018E               	clrf	14	;volatile
  2533                           
  2534                           ;pin_manager.c: 63: WPUC = 0x00;
  2535  0446  0024               	movlb	4	; select bank4
  2536  0447  018E               	clrf	14	;volatile
  2537                           
  2538                           ;pin_manager.c: 65: OPTION_REGbits.nWPUEN = 0x01;
  2539  0448  0021               	movlb	1	; select bank1
  2540  0449  1795               	bsf	21,7	;volatile
  2541  044A  0008               	return
  2542  044B                     __end_of_PIN_MANAGER_Initialize:	
  2543                           
  2544                           	psect	text3
  2545  0420                     __ptext3:	
  2546 ;; *************** function _OSCILLATOR_Initialize *****************
  2547 ;; Defined at:
  2548 ;;		line 81 in file "mcc_generated_files/mcc.c"
  2549 ;; Parameters:    Size  Location     Type
  2550 ;;		None
  2551 ;; Auto vars:     Size  Location     Type
  2552 ;;		None
  2553 ;; Return value:  Size  Location     Type
  2554 ;;		None               void
  2555 ;; Registers used:
  2556 ;;		wreg, status,2
  2557 ;; Tracked objects:
  2558 ;;		On entry : 0/0
  2559 ;;		On exit  : 0/0
  2560 ;;		Unchanged: 0/0
  2561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2562 ;;      Params:         0       0       0       0       0       0       0       0
  2563 ;;      Locals:         0       0       0       0       0       0       0       0
  2564 ;;      Temps:          0       0       0       0       0       0       0       0
  2565 ;;      Totals:         0       0       0       0       0       0       0       0
  2566 ;;Total ram usage:        0 bytes
  2567 ;; Hardware stack levels used:    1
  2568 ;; This function calls:
  2569 ;;		Nothing
  2570 ;; This function is called by:
  2571 ;;		_SYSTEM_Initialize
  2572 ;; This function uses a non-reentrant model
  2573 ;;
  2574                           
  2575                           
  2576                           ;psect for function _OSCILLATOR_Initialize
  2577  0420                     _OSCILLATOR_Initialize:	
  2578                           
  2579                           ;mcc.c: 83: OSCCON = 0x7A;
  2580                           
  2581                           ;incstack = 0
  2582                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2583  0420  307A               	movlw	122
  2584  0421  0021               	movlb	1	; select bank1
  2585  0422  0099               	movwf	25	;volatile
  2586                           
  2587                           ;mcc.c: 85: OSCSTAT = 0x00;
  2588  0423  019A               	clrf	26	;volatile
  2589                           
  2590                           ;mcc.c: 87: OSCTUNE = 0x00;
  2591  0424  0198               	clrf	24	;volatile
  2592  0425  0008               	return
  2593  0426                     __end_of_OSCILLATOR_Initialize:	
  2594                           
  2595                           	psect	text4
  2596  041B                     __ptext4:	
  2597 ;; *************** function _DAC1_Initialize *****************
  2598 ;; Defined at:
  2599 ;;		line 58 in file "mcc_generated_files/dac1.c"
  2600 ;; Parameters:    Size  Location     Type
  2601 ;;		None
  2602 ;; Auto vars:     Size  Location     Type
  2603 ;;		None
  2604 ;; Return value:  Size  Location     Type
  2605 ;;		None               void
  2606 ;; Registers used:
  2607 ;;		wreg, status,2
  2608 ;; Tracked objects:
  2609 ;;		On entry : 0/0
  2610 ;;		On exit  : 0/0
  2611 ;;		Unchanged: 0/0
  2612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2613 ;;      Params:         0       0       0       0       0       0       0       0
  2614 ;;      Locals:         0       0       0       0       0       0       0       0
  2615 ;;      Temps:          0       0       0       0       0       0       0       0
  2616 ;;      Totals:         0       0       0       0       0       0       0       0
  2617 ;;Total ram usage:        0 bytes
  2618 ;; Hardware stack levels used:    1
  2619 ;; This function calls:
  2620 ;;		Nothing
  2621 ;; This function is called by:
  2622 ;;		_SYSTEM_Initialize
  2623 ;;		_main
  2624 ;; This function uses a non-reentrant model
  2625 ;;
  2626                           
  2627                           
  2628                           ;psect for function _DAC1_Initialize
  2629  041B                     _DAC1_Initialize:	
  2630                           
  2631                           ;dac1.c: 60: DAC1CON0 = 0xA0;
  2632                           
  2633                           ;incstack = 0
  2634                           ; Regs used in _DAC1_Initialize: [wreg+status,2]
  2635  041B  30A0               	movlw	160
  2636  041C  0022               	movlb	2	; select bank2
  2637  041D  0098               	movwf	24	;volatile
  2638                           
  2639                           ;dac1.c: 62: DAC1CON1 = 0x00;
  2640  041E  0199               	clrf	25	;volatile
  2641  041F  0008               	return
  2642  0420                     __end_of_DAC1_Initialize:	
  2643                           
  2644                           	psect	text5
  2645  04B5                     __ptext5:	
  2646 ;; *************** function _SSCtest *****************
  2647 ;; Defined at:
  2648 ;;		line 182 in file "main.c"
  2649 ;; Parameters:    Size  Location     Type
  2650 ;;  CABAND          1    wreg     unsigned char 
  2651 ;; Auto vars:     Size  Location     Type
  2652 ;;  CABAND          1   10[COMMON] unsigned char 
  2653 ;; Return value:  Size  Location     Type
  2654 ;;		None               void
  2655 ;; Registers used:
  2656 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2657 ;; Tracked objects:
  2658 ;;		On entry : 0/0
  2659 ;;		On exit  : 0/0
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2662 ;;      Params:         0       0       0       0       0       0       0       0
  2663 ;;      Locals:         1       0       0       0       0       0       0       0
  2664 ;;      Temps:          0       0       0       0       0       0       0       0
  2665 ;;      Totals:         1       0       0       0       0       0       0       0
  2666 ;;Total ram usage:        1 bytes
  2667 ;; Hardware stack levels used:    1
  2668 ;; Hardware stack levels required when called:    1
  2669 ;; This function calls:
  2670 ;;		_MIPITRANSFER1
  2671 ;;		_MIPITRANSFER2
  2672 ;; This function is called by:
  2673 ;;		_main
  2674 ;; This function uses a non-reentrant model
  2675 ;;
  2676                           
  2677                           
  2678                           ;psect for function _SSCtest
  2679  04B5                     _SSCtest:	
  2680                           
  2681                           ;incstack = 0
  2682                           ; Regs used in _SSCtest: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2683                           ;SSCtest@CABAND stored from wreg
  2684  04B5  00FA               	movwf	SSCtest@CABAND
  2685                           
  2686                           ;main.c: 183: switch (CABAND){
  2687  04B6  2D2F               	goto	l1276
  2688  04B7                     l1244:	
  2689                           ;main.c: 184: case 0:
  2690                           
  2691                           
  2692                           ;main.c: 185: MIPITRANSFER1 (33);
  2693  04B7  3021               	movlw	33
  2694  04B8  3185  253A  3184   	fcall	_MIPITRANSFER1
  2695                           
  2696                           ;main.c: 186: MIPITRANSFER2 (3);
  2697  04BB  3003               	movlw	3
  2698  04BC  3186  2613         	fcall	_MIPITRANSFER2
  2699                           
  2700                           ;main.c: 187: break;
  2701  04BE  0008               	return
  2702  04BF                     l1246:	
  2703                           ;main.c: 188: case 1:
  2704                           
  2705                           
  2706                           ;main.c: 189: MIPITRANSFER1 (3);
  2707  04BF  3003               	movlw	3
  2708  04C0  3185  253A  3184   	fcall	_MIPITRANSFER1
  2709                           
  2710                           ;main.c: 190: MIPITRANSFER2 (33);
  2711  04C3  3021               	movlw	33
  2712  04C4  3186  2613         	fcall	_MIPITRANSFER2
  2713                           
  2714                           ;main.c: 191: break;
  2715  04C6  0008               	return
  2716  04C7                     l1248:	
  2717                           ;main.c: 192: case 2:
  2718                           
  2719                           
  2720                           ;main.c: 193: MIPITRANSFER1 (6);
  2721  04C7  3006               	movlw	6
  2722  04C8  3185  253A  3184   	fcall	_MIPITRANSFER1
  2723                           
  2724                           ;main.c: 194: MIPITRANSFER2 (30);
  2725  04CB  301E               	movlw	30
  2726  04CC  3186  2613         	fcall	_MIPITRANSFER2
  2727                           
  2728                           ;main.c: 195: break;
  2729  04CE  0008               	return
  2730  04CF                     l1250:	
  2731                           ;main.c: 196: case 3:
  2732                           
  2733                           
  2734                           ;main.c: 197: MIPITRANSFER1 (30);
  2735  04CF  301E               	movlw	30
  2736  04D0  3185  253A  3184   	fcall	_MIPITRANSFER1
  2737                           
  2738                           ;main.c: 198: MIPITRANSFER2 (6);
  2739  04D3  3006               	movlw	6
  2740  04D4  3186  2613         	fcall	_MIPITRANSFER2
  2741                           
  2742                           ;main.c: 199: break;
  2743  04D6  0008               	return
  2744  04D7                     l1252:	
  2745                           ;main.c: 200: case 4:
  2746                           
  2747                           
  2748                           ;main.c: 201: MIPITRANSFER1 (3);
  2749  04D7  3003               	movlw	3
  2750  04D8  3185  253A  3184   	fcall	_MIPITRANSFER1
  2751                           
  2752                           ;main.c: 202: MIPITRANSFER2 (3);
  2753  04DB  3003               	movlw	3
  2754  04DC  3186  2613         	fcall	_MIPITRANSFER2
  2755                           
  2756                           ;main.c: 205: break;
  2757                           
  2758                           ;main.c: 204: case 5:
  2759                           
  2760                           ;main.c: 203: break;
  2761  04DE  0008               	return
  2762  04DF                     l1254:	
  2763                           ;main.c: 206: case 6:
  2764                           
  2765                           
  2766                           ;main.c: 207: MIPITRANSFER1 (33);
  2767  04DF  3021               	movlw	33
  2768  04E0  3185  253A  3184   	fcall	_MIPITRANSFER1
  2769                           
  2770                           ;main.c: 208: MIPITRANSFER2 (30);
  2771  04E3  301E               	movlw	30
  2772  04E4  3186  2613         	fcall	_MIPITRANSFER2
  2773                           
  2774                           ;main.c: 209: break;
  2775  04E6  0008               	return
  2776  04E7                     l1256:	
  2777                           ;main.c: 210: case 7:
  2778                           
  2779                           
  2780                           ;main.c: 211: MIPITRANSFER1 (30);
  2781  04E7  301E               	movlw	30
  2782  04E8  3185  253A  3184   	fcall	_MIPITRANSFER1
  2783                           
  2784                           ;main.c: 212: MIPITRANSFER2 (33);
  2785  04EB  3021               	movlw	33
  2786  04EC  3186  2613         	fcall	_MIPITRANSFER2
  2787                           
  2788                           ;main.c: 213: break;
  2789  04EE  0008               	return
  2790  04EF                     l1258:	
  2791                           ;main.c: 214: case 8:
  2792                           
  2793                           
  2794                           ;main.c: 215: MIPITRANSFER1 (27);
  2795  04EF  301B               	movlw	27
  2796  04F0  3185  253A  3184   	fcall	_MIPITRANSFER1
  2797                           
  2798                           ;main.c: 216: MIPITRANSFER2 (30);
  2799  04F3  301E               	movlw	30
  2800  04F4  3186  2613         	fcall	_MIPITRANSFER2
  2801                           
  2802                           ;main.c: 217: break;
  2803  04F6  0008               	return
  2804  04F7                     l1260:	
  2805                           ;main.c: 218: case 9:
  2806                           
  2807                           
  2808                           ;main.c: 219: MIPITRANSFER1 (24);
  2809  04F7  3018               	movlw	24
  2810  04F8  3185  253A  3184   	fcall	_MIPITRANSFER1
  2811                           
  2812                           ;main.c: 220: MIPITRANSFER2 (30);
  2813  04FB  301E               	movlw	30
  2814  04FC  3186  2613         	fcall	_MIPITRANSFER2
  2815                           
  2816                           ;main.c: 221: break;
  2817  04FE  0008               	return
  2818  04FF                     l1262:	
  2819                           ;main.c: 222: case 10:
  2820                           
  2821                           
  2822                           ;main.c: 223: MIPITRANSFER1 (21);
  2823  04FF  3015               	movlw	21
  2824  0500  3185  253A  3184   	fcall	_MIPITRANSFER1
  2825                           
  2826                           ;main.c: 224: MIPITRANSFER2 (30);
  2827  0503  301E               	movlw	30
  2828  0504  3186  2613         	fcall	_MIPITRANSFER2
  2829                           
  2830                           ;main.c: 225: break;
  2831  0506  0008               	return
  2832  0507                     l1264:	
  2833                           ;main.c: 226: case 11:
  2834                           
  2835                           
  2836                           ;main.c: 227: MIPITRANSFER1 (18);
  2837  0507  3012               	movlw	18
  2838  0508  3185  253A  3184   	fcall	_MIPITRANSFER1
  2839                           
  2840                           ;main.c: 228: MIPITRANSFER2 (30);
  2841  050B  301E               	movlw	30
  2842  050C  3186  2613         	fcall	_MIPITRANSFER2
  2843                           
  2844                           ;main.c: 229: break;
  2845  050E  0008               	return
  2846  050F                     l1266:	
  2847                           ;main.c: 230: case 12:
  2848                           
  2849                           
  2850                           ;main.c: 231: MIPITRANSFER1 (15);
  2851  050F  300F               	movlw	15
  2852  0510  3185  253A  3184   	fcall	_MIPITRANSFER1
  2853                           
  2854                           ;main.c: 232: MIPITRANSFER2 (30);
  2855  0513  301E               	movlw	30
  2856  0514  3186  2613         	fcall	_MIPITRANSFER2
  2857                           
  2858                           ;main.c: 233: break;
  2859  0516  0008               	return
  2860  0517                     l1268:	
  2861                           ;main.c: 234: case 13:
  2862                           
  2863                           
  2864                           ;main.c: 235: MIPITRANSFER1 (12);
  2865  0517  300C               	movlw	12
  2866  0518  3185  253A  3184   	fcall	_MIPITRANSFER1
  2867                           
  2868                           ;main.c: 236: MIPITRANSFER2 (30);
  2869  051B  301E               	movlw	30
  2870  051C  3186  2613         	fcall	_MIPITRANSFER2
  2871                           
  2872                           ;main.c: 237: break;
  2873  051E  0008               	return
  2874  051F                     l1270:	
  2875                           ;main.c: 238: case 14:
  2876                           
  2877                           
  2878                           ;main.c: 239: MIPITRANSFER1 (9);
  2879  051F  3009               	movlw	9
  2880  0520  3185  253A  3184   	fcall	_MIPITRANSFER1
  2881                           
  2882                           ;main.c: 240: MIPITRANSFER2 (30);
  2883  0523  301E               	movlw	30
  2884  0524  3186  2613         	fcall	_MIPITRANSFER2
  2885                           
  2886                           ;main.c: 241: break;
  2887  0526  0008               	return
  2888  0527                     l1272:	
  2889                           ;main.c: 242: default:
  2890                           
  2891                           
  2892                           ;main.c: 243: MIPITRANSFER1 (6);
  2893  0527  3006               	movlw	6
  2894  0528  3185  253A  3184   	fcall	_MIPITRANSFER1
  2895                           
  2896                           ;main.c: 244: MIPITRANSFER2 (6);
  2897  052B  3006               	movlw	6
  2898  052C  3186  2613         	fcall	_MIPITRANSFER2
  2899                           
  2900                           ;main.c: 246: }
  2901                           
  2902                           ;main.c: 245: break;
  2903  052E  0008               	return
  2904  052F                     l1276:	
  2905  052F  087A               	movf	SSCtest@CABAND,w
  2906                           
  2907                           ; Switch size 1, requested type "space"
  2908                           ; Number of cases is 15, Range of values is 0 to 14
  2909                           ; switch strategies available:
  2910                           ; Name         Instructions Cycles
  2911                           ; direct_byte           36     6 (fixed)
  2912                           ; simple_byte           46    24 (average)
  2913                           ; jumptable            260     6 (fixed)
  2914                           ;	Chosen strategy is direct_byte
  2915  0530  0084               	movwf	4
  2916  0531  300F               	movlw	15
  2917  0532  0204               	subwf	4,w
  2918  0533  1803               	skipnc
  2919  0534  2D27               	goto	l1272
  2920  0535  3180               	movlp	high S1472
  2921  0536  3504               	lslf	4,w
  2922  0537  3E04               	addlw	low S1472
  2923  0538  0082               	movwf	2
  2924  0539                     l192:	
  2925  0539  0008               	return
  2926  053A                     __end_of_SSCtest:	
  2927                           
  2928                           	psect	swtext1
  2929  0004                     __pswtext1:	
  2930  0004                     S1472:	
  2931  0004  3184  2CB7         	ljmp	l1244
  2932  0006  3184  2CBF         	ljmp	l1246
  2933  0008  3184  2CC7         	ljmp	l1248
  2934  000A  3184  2CCF         	ljmp	l1250
  2935  000C  3184  2CD7         	ljmp	l1252
  2936  000E  3185  2D39         	ljmp	l192
  2937  0010  3184  2CDF         	ljmp	l1254
  2938  0012  3184  2CE7         	ljmp	l1256
  2939  0014  3184  2CEF         	ljmp	l1258
  2940  0016  3184  2CF7         	ljmp	l1260
  2941  0018  3184  2CFF         	ljmp	l1262
  2942  001A  3185  2D07         	ljmp	l1264
  2943  001C  3185  2D0F         	ljmp	l1266
  2944  001E  3185  2D17         	ljmp	l1268
  2945  0020  3185  2D1F         	ljmp	l1270
  2946                           
  2947                           	psect	text6
  2948  0613                     __ptext6:	
  2949 ;; *************** function _MIPITRANSFER2 *****************
  2950 ;; Defined at:
  2951 ;;		line 133 in file "main.c"
  2952 ;; Parameters:    Size  Location     Type
  2953 ;;  k               1    wreg     unsigned char 
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;  k               1    3[COMMON] unsigned char 
  2956 ;;  j               1    7[COMMON] unsigned char 
  2957 ;;  j               1    5[COMMON] unsigned char 
  2958 ;;  i               1    9[COMMON] unsigned char 
  2959 ;;  j               1    6[COMMON] unsigned char 
  2960 ;;  i               1    8[COMMON] unsigned char 
  2961 ;;  j               1    4[COMMON] unsigned char 
  2962 ;; Return value:  Size  Location     Type
  2963 ;;		None               void
  2964 ;; Registers used:
  2965 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2966 ;; Tracked objects:
  2967 ;;		On entry : 0/0
  2968 ;;		On exit  : 0/0
  2969 ;;		Unchanged: 0/0
  2970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2971 ;;      Params:         0       0       0       0       0       0       0       0
  2972 ;;      Locals:         7       0       0       0       0       0       0       0
  2973 ;;      Temps:          3       0       0       0       0       0       0       0
  2974 ;;      Totals:        10       0       0       0       0       0       0       0
  2975 ;;Total ram usage:       10 bytes
  2976 ;; Hardware stack levels used:    1
  2977 ;; This function calls:
  2978 ;;		Nothing
  2979 ;; This function is called by:
  2980 ;;		_SSCtest
  2981 ;;		_main
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984                           
  2985                           
  2986                           ;psect for function _MIPITRANSFER2
  2987  0613                     _MIPITRANSFER2:	
  2988                           
  2989                           ;incstack = 0
  2990                           ; Regs used in _MIPITRANSFER2: [wreg-fsr0h+status,2+status,0+pclath]
  2991                           ;MIPITRANSFER2@k stored from wreg
  2992  0613  00F3               	movwf	MIPITRANSFER2@k
  2993                           
  2994                           ;main.c: 134: do { LATB5 = 1; } while(0);
  2995  0614  0022               	movlb	2	; select bank2
  2996  0615  168D               	bsf	13,5	;volatile
  2997  0616  0000               	nop	;# 
  2998                           
  2999                           ;main.c: 136: do { LATB5 = 0; } while(0);
  3000  0617  0022               	movlb	2	; select bank2
  3001  0618  128D               	bcf	13,5	;volatile
  3002                           
  3003                           ;main.c: 137: readDummy = USIDLOWREV[0];
  3004  0619  3024               	movlw	low (_USIDLOWREV| (0+32768))
  3005  061A  0084               	movwf	4
  3006  061B  3088               	movlw	high (_USIDLOWREV| (0+32768))
  3007  061C  0085               	movwf	5
  3008  061D  0800               	movf	0,w	;code access
  3009  061E  00F0               	movwf	??_MIPITRANSFER2
  3010  061F  0870               	movf	??_MIPITRANSFER2,w
  3011  0620  0020               	movlb	0	; select bank0
  3012  0621  00A1               	movwf	_readDummy
  3013                           
  3014                           ;main.c: 138: readDummy = readDummy >> 1;
  3015  0622  3621               	lsrf	_readDummy,w
  3016  0623  00F0               	movwf	??_MIPITRANSFER2
  3017  0624  0870               	movf	??_MIPITRANSFER2,w
  3018  0625  00A1               	movwf	_readDummy
  3019                           
  3020                           ;main.c: 139: for (uint8_t j=0; j<7; j++){
  3021  0626  01F4               	clrf	MIPITRANSFER2@j
  3022  0627  3007               	movlw	7
  3023  0628  0274               	subwf	MIPITRANSFER2@j,w
  3024  0629  1803               	btfsc	3,0
  3025  062A  2E45               	goto	l140
  3026  062B                     l141:	
  3027                           ;main.c: 140: do { LATB6 = 1; } while(0);
  3028                           
  3029  062B  0022               	movlb	2	; select bank2
  3030  062C  170D               	bsf	13,6	;volatile
  3031                           
  3032                           ;main.c: 141: LATB5 = readDummy & 0x01;
  3033  062D  0020               	movlb	0	; select bank0
  3034  062E  1C21               	btfss	_readDummy,0
  3035  062F  2E33               	goto	u1180
  3036  0630  0022               	movlb	2	; select bank2
  3037  0631  168D               	bsf	13,5	;volatile
  3038  0632  2E35               	goto	u1194
  3039  0633                     u1180:	
  3040  0633  0022               	movlb	2	; select bank2
  3041  0634  128D               	bcf	13,5	;volatile
  3042  0635                     u1194:	
  3043  0635  0000               	nop	;# 
  3044                           
  3045                           ;main.c: 143: do { LATB6 = 0; } while(0);
  3046  0636  0022               	movlb	2	; select bank2
  3047  0637  130D               	bcf	13,6	;volatile
  3048                           
  3049                           ;main.c: 144: readDummy = readDummy >> 1;
  3050  0638  0020               	movlb	0	; select bank0
  3051  0639  3621               	lsrf	_readDummy,w
  3052  063A  00F0               	movwf	??_MIPITRANSFER2
  3053  063B  0870               	movf	??_MIPITRANSFER2,w
  3054  063C  00A1               	movwf	_readDummy
  3055  063D  3001               	movlw	1
  3056  063E  00F0               	movwf	??_MIPITRANSFER2
  3057  063F  0870               	movf	??_MIPITRANSFER2,w
  3058  0640  07F4               	addwf	MIPITRANSFER2@j,f
  3059  0641  3007               	movlw	7
  3060  0642  0274               	subwf	MIPITRANSFER2@j,w
  3061  0643  1C03               	skipc
  3062  0644  2E2B               	goto	l141
  3063  0645                     l140:	
  3064                           
  3065                           ;main.c: 145: }
  3066                           ;main.c: 146: for (uint8_t i=1; i<3; i++){
  3067  0645  01F8               	clrf	MIPITRANSFER2@i
  3068  0646  0AF8               	incf	MIPITRANSFER2@i,f
  3069  0647  3003               	movlw	3
  3070  0648  0278               	subwf	MIPITRANSFER2@i,w
  3071  0649  1803               	btfsc	3,0
  3072  064A  2E7D               	goto	l146
  3073  064B                     l1188:	
  3074                           
  3075                           ;main.c: 147: readDummy = USIDLOWREV[i];
  3076  064B  0878               	movf	MIPITRANSFER2@i,w
  3077  064C  3E24               	addlw	low (_USIDLOWREV| (0+32768))
  3078  064D  0084               	movwf	4
  3079  064E  3088               	movlw	high (_USIDLOWREV| (0+32768))
  3080  064F  1803               	skipnc
  3081  0650  3E01               	addlw	1
  3082  0651  0085               	movwf	5
  3083  0652  0800               	movf	0,w	;code access
  3084  0653  00F0               	movwf	??_MIPITRANSFER2
  3085  0654  0870               	movf	??_MIPITRANSFER2,w
  3086  0655  00A1               	movwf	_readDummy
  3087                           
  3088                           ;main.c: 148: for (uint8_t j=0; j<8; j++){
  3089  0656  01F5               	clrf	MIPITRANSFER2@j_118
  3090  0657  3008               	movlw	8
  3091  0658  0275               	subwf	MIPITRANSFER2@j_118,w
  3092  0659  1803               	btfsc	3,0
  3093  065A  2E75               	goto	l1200
  3094  065B                     l149:	
  3095                           ;main.c: 149: do { LATB6 = 1; } while(0);
  3096                           
  3097  065B  0022               	movlb	2	; select bank2
  3098  065C  170D               	bsf	13,6	;volatile
  3099                           
  3100                           ;main.c: 150: LATB5 = readDummy & 0x01;
  3101  065D  0020               	movlb	0	; select bank0
  3102  065E  1C21               	btfss	_readDummy,0
  3103  065F  2E63               	goto	u1230
  3104  0660  0022               	movlb	2	; select bank2
  3105  0661  168D               	bsf	13,5	;volatile
  3106  0662  2E65               	goto	u1244
  3107  0663                     u1230:	
  3108  0663  0022               	movlb	2	; select bank2
  3109  0664  128D               	bcf	13,5	;volatile
  3110  0665                     u1244:	
  3111  0665  0000               	nop	;# 
  3112                           
  3113                           ;main.c: 152: do { LATB6 = 0; } while(0);
  3114  0666  0022               	movlb	2	; select bank2
  3115  0667  130D               	bcf	13,6	;volatile
  3116                           
  3117                           ;main.c: 153: readDummy = readDummy >> 1;
  3118  0668  0020               	movlb	0	; select bank0
  3119  0669  3621               	lsrf	_readDummy,w
  3120  066A  00F0               	movwf	??_MIPITRANSFER2
  3121  066B  0870               	movf	??_MIPITRANSFER2,w
  3122  066C  00A1               	movwf	_readDummy
  3123  066D  3001               	movlw	1
  3124  066E  00F0               	movwf	??_MIPITRANSFER2
  3125  066F  0870               	movf	??_MIPITRANSFER2,w
  3126  0670  07F5               	addwf	MIPITRANSFER2@j_118,f
  3127  0671  3008               	movlw	8
  3128  0672  0275               	subwf	MIPITRANSFER2@j_118,w
  3129  0673  1C03               	skipc
  3130  0674  2E5B               	goto	l149
  3131  0675                     l1200:	
  3132  0675  3001               	movlw	1
  3133  0676  00F0               	movwf	??_MIPITRANSFER2
  3134  0677  0870               	movf	??_MIPITRANSFER2,w
  3135  0678  07F8               	addwf	MIPITRANSFER2@i,f
  3136  0679  3003               	movlw	3
  3137  067A  0278               	subwf	MIPITRANSFER2@i,w
  3138  067B  1C03               	skipc
  3139  067C  2E4B               	goto	l1188
  3140  067D                     l146:	
  3141  067D  0000               	nop	;# 
  3142  067E  0000               	nop	;# 
  3143                           
  3144                           ;main.c: 158: do { LATB5 = 1; } while(0);
  3145  067F  0022               	movlb	2	; select bank2
  3146  0680  168D               	bsf	13,5	;volatile
  3147  0681  0000               	nop	;# 
  3148                           
  3149                           ;main.c: 160: do { LATB5 = 0; } while(0);
  3150  0682  0022               	movlb	2	; select bank2
  3151  0683  128D               	bcf	13,5	;volatile
  3152                           
  3153                           ;main.c: 161: readDummy = USIDLOWREV[k];
  3154  0684  0873               	movf	MIPITRANSFER2@k,w
  3155  0685  3E24               	addlw	low (_USIDLOWREV| (0+32768))
  3156  0686  0084               	movwf	4
  3157  0687  3088               	movlw	high (_USIDLOWREV| (0+32768))
  3158  0688  1803               	skipnc
  3159  0689  3E01               	addlw	1
  3160  068A  0085               	movwf	5
  3161  068B  0800               	movf	0,w	;code access
  3162  068C  00F0               	movwf	??_MIPITRANSFER2
  3163  068D  0870               	movf	??_MIPITRANSFER2,w
  3164  068E  0020               	movlb	0	; select bank0
  3165  068F  00A1               	movwf	_readDummy
  3166                           
  3167                           ;main.c: 162: readDummy = readDummy >> 1;
  3168  0690  3621               	lsrf	_readDummy,w
  3169  0691  00F0               	movwf	??_MIPITRANSFER2
  3170  0692  0870               	movf	??_MIPITRANSFER2,w
  3171  0693  00A1               	movwf	_readDummy
  3172                           
  3173                           ;main.c: 163: for (uint8_t j=0; j<7; j++){
  3174  0694  01F6               	clrf	MIPITRANSFER2@j_119
  3175  0695  3007               	movlw	7
  3176  0696  0276               	subwf	MIPITRANSFER2@j_119,w
  3177  0697  1803               	btfsc	3,0
  3178  0698  2EB3               	goto	l158
  3179  0699                     l159:	
  3180                           ;main.c: 164: do { LATB6 = 1; } while(0);
  3181                           
  3182  0699  0022               	movlb	2	; select bank2
  3183  069A  170D               	bsf	13,6	;volatile
  3184                           
  3185                           ;main.c: 165: LATB5 = readDummy & 0x01;
  3186  069B  0020               	movlb	0	; select bank0
  3187  069C  1C21               	btfss	_readDummy,0
  3188  069D  2EA1               	goto	u1280
  3189  069E  0022               	movlb	2	; select bank2
  3190  069F  168D               	bsf	13,5	;volatile
  3191  06A0  2EA3               	goto	u1294
  3192  06A1                     u1280:	
  3193  06A1  0022               	movlb	2	; select bank2
  3194  06A2  128D               	bcf	13,5	;volatile
  3195  06A3                     u1294:	
  3196  06A3  0000               	nop	;# 
  3197                           
  3198                           ;main.c: 167: do { LATB6 = 0; } while(0);
  3199  06A4  0022               	movlb	2	; select bank2
  3200  06A5  130D               	bcf	13,6	;volatile
  3201                           
  3202                           ;main.c: 168: readDummy = readDummy >> 1;
  3203  06A6  0020               	movlb	0	; select bank0
  3204  06A7  3621               	lsrf	_readDummy,w
  3205  06A8  00F0               	movwf	??_MIPITRANSFER2
  3206  06A9  0870               	movf	??_MIPITRANSFER2,w
  3207  06AA  00A1               	movwf	_readDummy
  3208  06AB  3001               	movlw	1
  3209  06AC  00F0               	movwf	??_MIPITRANSFER2
  3210  06AD  0870               	movf	??_MIPITRANSFER2,w
  3211  06AE  07F6               	addwf	MIPITRANSFER2@j_119,f
  3212  06AF  3007               	movlw	7
  3213  06B0  0276               	subwf	MIPITRANSFER2@j_119,w
  3214  06B1  1C03               	skipc
  3215  06B2  2E99               	goto	l159
  3216  06B3                     l158:	
  3217                           
  3218                           ;main.c: 169: }
  3219                           ;main.c: 170: for (uint8_t i=1; i<3; i++){
  3220  06B3  01F9               	clrf	MIPITRANSFER2@i_120
  3221  06B4  0AF9               	incf	MIPITRANSFER2@i_120,f
  3222  06B5                     L2:	
  3223  06B5  3003               	movlw	3
  3224  06B6  0279               	subwf	MIPITRANSFER2@i_120,w
  3225  06B7  1803               	btfsc	3,0
  3226  06B8  0008               	return
  3227                           
  3228                           ;main.c: 171: readDummy = USIDLOWREV[(k+i)];
  3229  06B9  0873               	movf	MIPITRANSFER2@k,w
  3230  06BA  0779               	addwf	MIPITRANSFER2@i_120,w
  3231  06BB  00F0               	movwf	??_MIPITRANSFER2
  3232  06BC  01F1               	clrf	??_MIPITRANSFER2+1
  3233  06BD  0DF1               	rlf	??_MIPITRANSFER2+1,f
  3234  06BE  3024               	movlw	low (_USIDLOWREV| (0+32768))
  3235  06BF  0770               	addwf	??_MIPITRANSFER2,w
  3236  06C0  0084               	movwf	4
  3237  06C1  3088               	movlw	high (_USIDLOWREV| (0+32768))
  3238  06C2  3D71               	addwfc	??_MIPITRANSFER2+1,w
  3239  06C3  0085               	movwf	5
  3240  06C4  0800               	movf	0,w	;code access
  3241  06C5  00F2               	movwf	??_MIPITRANSFER2+2
  3242  06C6  0872               	movf	??_MIPITRANSFER2+2,w
  3243  06C7  00A1               	movwf	_readDummy
  3244                           
  3245                           ;main.c: 172: for (uint8_t j=0; j<8; j++){
  3246  06C8  01F7               	clrf	MIPITRANSFER2@j_121
  3247  06C9  3008               	movlw	8
  3248  06CA  0277               	subwf	MIPITRANSFER2@j_121,w
  3249  06CB  1803               	btfsc	3,0
  3250  06CC  2EE7               	goto	l1234
  3251  06CD                     l167:	
  3252                           ;main.c: 173: do { LATB6 = 1; } while(0);
  3253                           
  3254  06CD  0022               	movlb	2	; select bank2
  3255  06CE  170D               	bsf	13,6	;volatile
  3256                           
  3257                           ;main.c: 174: LATB5 = readDummy & 0x01;
  3258  06CF  0020               	movlb	0	; select bank0
  3259  06D0  1C21               	btfss	_readDummy,0
  3260  06D1  2ED5               	goto	u1330
  3261  06D2  0022               	movlb	2	; select bank2
  3262  06D3  168D               	bsf	13,5	;volatile
  3263  06D4  2ED7               	goto	u1344
  3264  06D5                     u1330:	
  3265  06D5  0022               	movlb	2	; select bank2
  3266  06D6  128D               	bcf	13,5	;volatile
  3267  06D7                     u1344:	
  3268  06D7  0000               	nop	;# 
  3269                           
  3270                           ;main.c: 176: do { LATB6 = 0; } while(0);
  3271  06D8  0022               	movlb	2	; select bank2
  3272  06D9  130D               	bcf	13,6	;volatile
  3273                           
  3274                           ;main.c: 177: readDummy = readDummy >> 1;
  3275  06DA  0020               	movlb	0	; select bank0
  3276  06DB  3621               	lsrf	_readDummy,w
  3277  06DC  00F0               	movwf	??_MIPITRANSFER2
  3278  06DD  0870               	movf	??_MIPITRANSFER2,w
  3279  06DE  00A1               	movwf	_readDummy
  3280  06DF  3001               	movlw	1
  3281  06E0  00F0               	movwf	??_MIPITRANSFER2
  3282  06E1  0870               	movf	??_MIPITRANSFER2,w
  3283  06E2  07F7               	addwf	MIPITRANSFER2@j_121,f
  3284  06E3  3008               	movlw	8
  3285  06E4  0277               	subwf	MIPITRANSFER2@j_121,w
  3286  06E5  1C03               	skipc
  3287  06E6  2ECD               	goto	l167
  3288  06E7                     l1234:	
  3289  06E7  3001               	movlw	1
  3290  06E8  00F0               	movwf	??_MIPITRANSFER2
  3291  06E9  0870               	movf	??_MIPITRANSFER2,w
  3292  06EA  07F9               	addwf	MIPITRANSFER2@i_120,f
  3293  06EB  2EB5               	goto	L2
  3294  06EC                     __end_of_MIPITRANSFER2:	
  3295                           
  3296                           	psect	text7
  3297  053A                     __ptext7:	
  3298 ;; *************** function _MIPITRANSFER1 *****************
  3299 ;; Defined at:
  3300 ;;		line 84 in file "main.c"
  3301 ;; Parameters:    Size  Location     Type
  3302 ;;  k               1    wreg     unsigned char 
  3303 ;; Auto vars:     Size  Location     Type
  3304 ;;  k               1    3[COMMON] unsigned char 
  3305 ;;  j               1    7[COMMON] unsigned char 
  3306 ;;  j               1    5[COMMON] unsigned char 
  3307 ;;  i               1    9[COMMON] unsigned char 
  3308 ;;  j               1    6[COMMON] unsigned char 
  3309 ;;  i               1    8[COMMON] unsigned char 
  3310 ;;  j               1    4[COMMON] unsigned char 
  3311 ;; Return value:  Size  Location     Type
  3312 ;;		None               void
  3313 ;; Registers used:
  3314 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3315 ;; Tracked objects:
  3316 ;;		On entry : 0/0
  3317 ;;		On exit  : 0/0
  3318 ;;		Unchanged: 0/0
  3319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3320 ;;      Params:         0       0       0       0       0       0       0       0
  3321 ;;      Locals:         7       0       0       0       0       0       0       0
  3322 ;;      Temps:          3       0       0       0       0       0       0       0
  3323 ;;      Totals:        10       0       0       0       0       0       0       0
  3324 ;;Total ram usage:       10 bytes
  3325 ;; Hardware stack levels used:    1
  3326 ;; This function calls:
  3327 ;;		Nothing
  3328 ;; This function is called by:
  3329 ;;		_SSCtest
  3330 ;;		_main
  3331 ;; This function uses a non-reentrant model
  3332 ;;
  3333                           
  3334                           
  3335                           ;psect for function _MIPITRANSFER1
  3336  053A                     _MIPITRANSFER1:	
  3337                           
  3338                           ;incstack = 0
  3339                           ; Regs used in _MIPITRANSFER1: [wreg-fsr0h+status,2+status,0+pclath]
  3340                           ;MIPITRANSFER1@k stored from wreg
  3341  053A  00F3               	movwf	MIPITRANSFER1@k
  3342                           
  3343                           ;main.c: 85: do { LATB7 = 1; } while(0);
  3344  053B  0022               	movlb	2	; select bank2
  3345  053C  178D               	bsf	13,7	;volatile
  3346  053D  0000               	nop	;# 
  3347                           
  3348                           ;main.c: 87: do { LATB7 = 0; } while(0);
  3349  053E  0022               	movlb	2	; select bank2
  3350  053F  138D               	bcf	13,7	;volatile
  3351                           
  3352                           ;main.c: 88: readDummy = USIDLOWREV[0];
  3353  0540  3024               	movlw	low (_USIDLOWREV| (0+32768))
  3354  0541  0084               	movwf	4
  3355  0542  3088               	movlw	high (_USIDLOWREV| (0+32768))
  3356  0543  0085               	movwf	5
  3357  0544  0800               	movf	0,w	;code access
  3358  0545  00F0               	movwf	??_MIPITRANSFER1
  3359  0546  0870               	movf	??_MIPITRANSFER1,w
  3360  0547  0020               	movlb	0	; select bank0
  3361  0548  00A1               	movwf	_readDummy
  3362                           
  3363                           ;main.c: 89: readDummy = readDummy >> 1;
  3364  0549  3621               	lsrf	_readDummy,w
  3365  054A  00F0               	movwf	??_MIPITRANSFER1
  3366  054B  0870               	movf	??_MIPITRANSFER1,w
  3367  054C  00A1               	movwf	_readDummy
  3368                           
  3369                           ;main.c: 90: for (uint8_t j=0; j<7; j++){
  3370  054D  01F4               	clrf	MIPITRANSFER1@j
  3371  054E  3007               	movlw	7
  3372  054F  0274               	subwf	MIPITRANSFER1@j,w
  3373  0550  1803               	btfsc	3,0
  3374  0551  2D6C               	goto	l101
  3375  0552                     l102:	
  3376                           ;main.c: 91: do { LATB6 = 1; } while(0);
  3377                           
  3378  0552  0022               	movlb	2	; select bank2
  3379  0553  170D               	bsf	13,6	;volatile
  3380                           
  3381                           ;main.c: 92: LATB7 = readDummy & 0x01;
  3382  0554  0020               	movlb	0	; select bank0
  3383  0555  1C21               	btfss	_readDummy,0
  3384  0556  2D5A               	goto	u980
  3385  0557  0022               	movlb	2	; select bank2
  3386  0558  178D               	bsf	13,7	;volatile
  3387  0559  2D5C               	goto	u994
  3388  055A                     u980:	
  3389  055A  0022               	movlb	2	; select bank2
  3390  055B  138D               	bcf	13,7	;volatile
  3391  055C                     u994:	
  3392  055C  0000               	nop	;# 
  3393                           
  3394                           ;main.c: 94: do { LATB6 = 0; } while(0);
  3395  055D  0022               	movlb	2	; select bank2
  3396  055E  130D               	bcf	13,6	;volatile
  3397                           
  3398                           ;main.c: 95: readDummy = readDummy >> 1;
  3399  055F  0020               	movlb	0	; select bank0
  3400  0560  3621               	lsrf	_readDummy,w
  3401  0561  00F0               	movwf	??_MIPITRANSFER1
  3402  0562  0870               	movf	??_MIPITRANSFER1,w
  3403  0563  00A1               	movwf	_readDummy
  3404  0564  3001               	movlw	1
  3405  0565  00F0               	movwf	??_MIPITRANSFER1
  3406  0566  0870               	movf	??_MIPITRANSFER1,w
  3407  0567  07F4               	addwf	MIPITRANSFER1@j,f
  3408  0568  3007               	movlw	7
  3409  0569  0274               	subwf	MIPITRANSFER1@j,w
  3410  056A  1C03               	skipc
  3411  056B  2D52               	goto	l102
  3412  056C                     l101:	
  3413                           
  3414                           ;main.c: 96: }
  3415                           ;main.c: 97: for (uint8_t i=1; i<3; i++){
  3416  056C  01F8               	clrf	MIPITRANSFER1@i
  3417  056D  0AF8               	incf	MIPITRANSFER1@i,f
  3418  056E  3003               	movlw	3
  3419  056F  0278               	subwf	MIPITRANSFER1@i,w
  3420  0570  1803               	btfsc	3,0
  3421  0571  2DA4               	goto	l107
  3422  0572                     l1120:	
  3423                           
  3424                           ;main.c: 98: readDummy = USIDLOWREV[i];
  3425  0572  0878               	movf	MIPITRANSFER1@i,w
  3426  0573  3E24               	addlw	low (_USIDLOWREV| (0+32768))
  3427  0574  0084               	movwf	4
  3428  0575  3088               	movlw	high (_USIDLOWREV| (0+32768))
  3429  0576  1803               	skipnc
  3430  0577  3E01               	addlw	1
  3431  0578  0085               	movwf	5
  3432  0579  0800               	movf	0,w	;code access
  3433  057A  00F0               	movwf	??_MIPITRANSFER1
  3434  057B  0870               	movf	??_MIPITRANSFER1,w
  3435  057C  00A1               	movwf	_readDummy
  3436                           
  3437                           ;main.c: 99: for (uint8_t j=0; j<8; j++){
  3438  057D  01F5               	clrf	MIPITRANSFER1@j_110
  3439  057E  3008               	movlw	8
  3440  057F  0275               	subwf	MIPITRANSFER1@j_110,w
  3441  0580  1803               	btfsc	3,0
  3442  0581  2D9C               	goto	l1132
  3443  0582                     l110:	
  3444                           ;main.c: 100: do { LATB6 = 1; } while(0);
  3445                           
  3446  0582  0022               	movlb	2	; select bank2
  3447  0583  170D               	bsf	13,6	;volatile
  3448                           
  3449                           ;main.c: 101: LATB7 = readDummy & 0x01;
  3450  0584  0020               	movlb	0	; select bank0
  3451  0585  1C21               	btfss	_readDummy,0
  3452  0586  2D8A               	goto	u1030
  3453  0587  0022               	movlb	2	; select bank2
  3454  0588  178D               	bsf	13,7	;volatile
  3455  0589  2D8C               	goto	u1044
  3456  058A                     u1030:	
  3457  058A  0022               	movlb	2	; select bank2
  3458  058B  138D               	bcf	13,7	;volatile
  3459  058C                     u1044:	
  3460  058C  0000               	nop	;# 
  3461                           
  3462                           ;main.c: 103: do { LATB6 = 0; } while(0);
  3463  058D  0022               	movlb	2	; select bank2
  3464  058E  130D               	bcf	13,6	;volatile
  3465                           
  3466                           ;main.c: 104: readDummy = readDummy >> 1;
  3467  058F  0020               	movlb	0	; select bank0
  3468  0590  3621               	lsrf	_readDummy,w
  3469  0591  00F0               	movwf	??_MIPITRANSFER1
  3470  0592  0870               	movf	??_MIPITRANSFER1,w
  3471  0593  00A1               	movwf	_readDummy
  3472  0594  3001               	movlw	1
  3473  0595  00F0               	movwf	??_MIPITRANSFER1
  3474  0596  0870               	movf	??_MIPITRANSFER1,w
  3475  0597  07F5               	addwf	MIPITRANSFER1@j_110,f
  3476  0598  3008               	movlw	8
  3477  0599  0275               	subwf	MIPITRANSFER1@j_110,w
  3478  059A  1C03               	skipc
  3479  059B  2D82               	goto	l110
  3480  059C                     l1132:	
  3481  059C  3001               	movlw	1
  3482  059D  00F0               	movwf	??_MIPITRANSFER1
  3483  059E  0870               	movf	??_MIPITRANSFER1,w
  3484  059F  07F8               	addwf	MIPITRANSFER1@i,f
  3485  05A0  3003               	movlw	3
  3486  05A1  0278               	subwf	MIPITRANSFER1@i,w
  3487  05A2  1C03               	skipc
  3488  05A3  2D72               	goto	l1120
  3489  05A4                     l107:	
  3490  05A4  0000               	nop	;# 
  3491  05A5  0000               	nop	;# 
  3492                           
  3493                           ;main.c: 109: do { LATB7 = 1; } while(0);
  3494  05A6  0022               	movlb	2	; select bank2
  3495  05A7  178D               	bsf	13,7	;volatile
  3496  05A8  0000               	nop	;# 
  3497                           
  3498                           ;main.c: 111: do { LATB7 = 0; } while(0);
  3499  05A9  0022               	movlb	2	; select bank2
  3500  05AA  138D               	bcf	13,7	;volatile
  3501                           
  3502                           ;main.c: 112: readDummy = USIDLOWREV[k];
  3503  05AB  0873               	movf	MIPITRANSFER1@k,w
  3504  05AC  3E24               	addlw	low (_USIDLOWREV| (0+32768))
  3505  05AD  0084               	movwf	4
  3506  05AE  3088               	movlw	high (_USIDLOWREV| (0+32768))
  3507  05AF  1803               	skipnc
  3508  05B0  3E01               	addlw	1
  3509  05B1  0085               	movwf	5
  3510  05B2  0800               	movf	0,w	;code access
  3511  05B3  00F0               	movwf	??_MIPITRANSFER1
  3512  05B4  0870               	movf	??_MIPITRANSFER1,w
  3513  05B5  0020               	movlb	0	; select bank0
  3514  05B6  00A1               	movwf	_readDummy
  3515                           
  3516                           ;main.c: 113: readDummy = readDummy >> 1;
  3517  05B7  3621               	lsrf	_readDummy,w
  3518  05B8  00F0               	movwf	??_MIPITRANSFER1
  3519  05B9  0870               	movf	??_MIPITRANSFER1,w
  3520  05BA  00A1               	movwf	_readDummy
  3521                           
  3522                           ;main.c: 114: for (uint8_t j=0; j<7; j++){
  3523  05BB  01F6               	clrf	MIPITRANSFER1@j_111
  3524  05BC  3007               	movlw	7
  3525  05BD  0276               	subwf	MIPITRANSFER1@j_111,w
  3526  05BE  1803               	btfsc	3,0
  3527  05BF  2DDA               	goto	l119
  3528  05C0                     l120:	
  3529                           ;main.c: 115: do { LATB6 = 1; } while(0);
  3530                           
  3531  05C0  0022               	movlb	2	; select bank2
  3532  05C1  170D               	bsf	13,6	;volatile
  3533                           
  3534                           ;main.c: 116: LATB7 = readDummy & 0x01;
  3535  05C2  0020               	movlb	0	; select bank0
  3536  05C3  1C21               	btfss	_readDummy,0
  3537  05C4  2DC8               	goto	u1080
  3538  05C5  0022               	movlb	2	; select bank2
  3539  05C6  178D               	bsf	13,7	;volatile
  3540  05C7  2DCA               	goto	u1094
  3541  05C8                     u1080:	
  3542  05C8  0022               	movlb	2	; select bank2
  3543  05C9  138D               	bcf	13,7	;volatile
  3544  05CA                     u1094:	
  3545  05CA  0000               	nop	;# 
  3546                           
  3547                           ;main.c: 118: do { LATB6 = 0; } while(0);
  3548  05CB  0022               	movlb	2	; select bank2
  3549  05CC  130D               	bcf	13,6	;volatile
  3550                           
  3551                           ;main.c: 119: readDummy = readDummy >> 1;
  3552  05CD  0020               	movlb	0	; select bank0
  3553  05CE  3621               	lsrf	_readDummy,w
  3554  05CF  00F0               	movwf	??_MIPITRANSFER1
  3555  05D0  0870               	movf	??_MIPITRANSFER1,w
  3556  05D1  00A1               	movwf	_readDummy
  3557  05D2  3001               	movlw	1
  3558  05D3  00F0               	movwf	??_MIPITRANSFER1
  3559  05D4  0870               	movf	??_MIPITRANSFER1,w
  3560  05D5  07F6               	addwf	MIPITRANSFER1@j_111,f
  3561  05D6  3007               	movlw	7
  3562  05D7  0276               	subwf	MIPITRANSFER1@j_111,w
  3563  05D8  1C03               	skipc
  3564  05D9  2DC0               	goto	l120
  3565  05DA                     l119:	
  3566                           
  3567                           ;main.c: 120: }
  3568                           ;main.c: 121: for (uint8_t i=1; i<3; i++){
  3569  05DA  01F9               	clrf	MIPITRANSFER1@i_112
  3570  05DB  0AF9               	incf	MIPITRANSFER1@i_112,f
  3571  05DC                     L3:	
  3572  05DC  3003               	movlw	3
  3573  05DD  0279               	subwf	MIPITRANSFER1@i_112,w
  3574  05DE  1803               	btfsc	3,0
  3575  05DF  0008               	return
  3576                           
  3577                           ;main.c: 122: readDummy = USIDLOWREV[(k+i)];
  3578  05E0  0873               	movf	MIPITRANSFER1@k,w
  3579  05E1  0779               	addwf	MIPITRANSFER1@i_112,w
  3580  05E2  00F0               	movwf	??_MIPITRANSFER1
  3581  05E3  01F1               	clrf	??_MIPITRANSFER1+1
  3582  05E4  0DF1               	rlf	??_MIPITRANSFER1+1,f
  3583  05E5  3024               	movlw	low (_USIDLOWREV| (0+32768))
  3584  05E6  0770               	addwf	??_MIPITRANSFER1,w
  3585  05E7  0084               	movwf	4
  3586  05E8  3088               	movlw	high (_USIDLOWREV| (0+32768))
  3587  05E9  3D71               	addwfc	??_MIPITRANSFER1+1,w
  3588  05EA  0085               	movwf	5
  3589  05EB  0800               	movf	0,w	;code access
  3590  05EC  00F2               	movwf	??_MIPITRANSFER1+2
  3591  05ED  0872               	movf	??_MIPITRANSFER1+2,w
  3592  05EE  00A1               	movwf	_readDummy
  3593                           
  3594                           ;main.c: 123: for (uint8_t j=0; j<8; j++){
  3595  05EF  01F7               	clrf	MIPITRANSFER1@j_113
  3596  05F0  3008               	movlw	8
  3597  05F1  0277               	subwf	MIPITRANSFER1@j_113,w
  3598  05F2  1803               	btfsc	3,0
  3599  05F3  2E0E               	goto	l1166
  3600  05F4                     l128:	
  3601                           ;main.c: 124: do { LATB6 = 1; } while(0);
  3602                           
  3603  05F4  0022               	movlb	2	; select bank2
  3604  05F5  170D               	bsf	13,6	;volatile
  3605                           
  3606                           ;main.c: 125: LATB7 = readDummy & 0x01;
  3607  05F6  0020               	movlb	0	; select bank0
  3608  05F7  1C21               	btfss	_readDummy,0
  3609  05F8  2DFC               	goto	u1130
  3610  05F9  0022               	movlb	2	; select bank2
  3611  05FA  178D               	bsf	13,7	;volatile
  3612  05FB  2DFE               	goto	u1144
  3613  05FC                     u1130:	
  3614  05FC  0022               	movlb	2	; select bank2
  3615  05FD  138D               	bcf	13,7	;volatile
  3616  05FE                     u1144:	
  3617  05FE  0000               	nop	;# 
  3618                           
  3619                           ;main.c: 127: do { LATB6 = 0; } while(0);
  3620  05FF  0022               	movlb	2	; select bank2
  3621  0600  130D               	bcf	13,6	;volatile
  3622                           
  3623                           ;main.c: 128: readDummy = readDummy >> 1;
  3624  0601  0020               	movlb	0	; select bank0
  3625  0602  3621               	lsrf	_readDummy,w
  3626  0603  00F0               	movwf	??_MIPITRANSFER1
  3627  0604  0870               	movf	??_MIPITRANSFER1,w
  3628  0605  00A1               	movwf	_readDummy
  3629  0606  3001               	movlw	1
  3630  0607  00F0               	movwf	??_MIPITRANSFER1
  3631  0608  0870               	movf	??_MIPITRANSFER1,w
  3632  0609  07F7               	addwf	MIPITRANSFER1@j_113,f
  3633  060A  3008               	movlw	8
  3634  060B  0277               	subwf	MIPITRANSFER1@j_113,w
  3635  060C  1C03               	skipc
  3636  060D  2DF4               	goto	l128
  3637  060E                     l1166:	
  3638  060E  3001               	movlw	1
  3639  060F  00F0               	movwf	??_MIPITRANSFER1
  3640  0610  0870               	movf	??_MIPITRANSFER1,w
  3641  0611  07F9               	addwf	MIPITRANSFER1@i_112,f
  3642  0612  2DDC               	goto	L3
  3643  0613                     __end_of_MIPITRANSFER1:	
  3644                           
  3645                           	psect	text8
  3646  0416                     __ptext8:	
  3647 ;; *************** function _DAC1_SetOutput *****************
  3648 ;; Defined at:
  3649 ;;		line 65 in file "mcc_generated_files/dac1.c"
  3650 ;; Parameters:    Size  Location     Type
  3651 ;;  inputData       1    wreg     unsigned char 
  3652 ;; Auto vars:     Size  Location     Type
  3653 ;;  inputData       1    0[COMMON] unsigned char 
  3654 ;; Return value:  Size  Location     Type
  3655 ;;		None               void
  3656 ;; Registers used:
  3657 ;;		wreg
  3658 ;; Tracked objects:
  3659 ;;		On entry : 0/0
  3660 ;;		On exit  : 0/0
  3661 ;;		Unchanged: 0/0
  3662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3663 ;;      Params:         0       0       0       0       0       0       0       0
  3664 ;;      Locals:         1       0       0       0       0       0       0       0
  3665 ;;      Temps:          0       0       0       0       0       0       0       0
  3666 ;;      Totals:         1       0       0       0       0       0       0       0
  3667 ;;Total ram usage:        1 bytes
  3668 ;; Hardware stack levels used:    1
  3669 ;; This function calls:
  3670 ;;		Nothing
  3671 ;; This function is called by:
  3672 ;;		_main
  3673 ;; This function uses a non-reentrant model
  3674 ;;
  3675                           
  3676                           
  3677                           ;psect for function _DAC1_SetOutput
  3678  0416                     _DAC1_SetOutput:	
  3679                           
  3680                           ;incstack = 0
  3681                           ; Regs used in _DAC1_SetOutput: [wreg]
  3682                           ;DAC1_SetOutput@inputData stored from wreg
  3683  0416  00F0               	movwf	DAC1_SetOutput@inputData
  3684                           
  3685                           ;dac1.c: 66: DAC1CON1 = inputData;
  3686  0417  0870               	movf	DAC1_SetOutput@inputData,w
  3687  0418  0022               	movlb	2	; select bank2
  3688  0419  0099               	movwf	25	;volatile
  3689  041A  0008               	return
  3690  041B                     __end_of_DAC1_SetOutput:	
  3691                           
  3692                           	psect	text9
  3693  044B                     __ptext9:	
  3694 ;; *************** function _ConfigureShiftRegister *****************
  3695 ;; Defined at:
  3696 ;;		line 249 in file "main.c"
  3697 ;; Parameters:    Size  Location     Type
  3698 ;;		None
  3699 ;; Auto vars:     Size  Location     Type
  3700 ;;  ReverseReg      1    2[COMMON] unsigned char 
  3701 ;;  i               1    1[COMMON] unsigned char 
  3702 ;; Return value:  Size  Location     Type
  3703 ;;		None               void
  3704 ;; Registers used:
  3705 ;;		wreg, status,2, status,0
  3706 ;; Tracked objects:
  3707 ;;		On entry : 0/0
  3708 ;;		On exit  : 0/0
  3709 ;;		Unchanged: 0/0
  3710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3711 ;;      Params:         0       0       0       0       0       0       0       0
  3712 ;;      Locals:         2       0       0       0       0       0       0       0
  3713 ;;      Temps:          1       0       0       0       0       0       0       0
  3714 ;;      Totals:         3       0       0       0       0       0       0       0
  3715 ;;Total ram usage:        3 bytes
  3716 ;; Hardware stack levels used:    1
  3717 ;; This function calls:
  3718 ;;		Nothing
  3719 ;; This function is called by:
  3720 ;;		_main
  3721 ;; This function uses a non-reentrant model
  3722 ;;
  3723                           
  3724                           
  3725                           ;psect for function _ConfigureShiftRegister
  3726  044B                     _ConfigureShiftRegister:	
  3727                           
  3728                           ;main.c: 250: uint8_t ReverseReg, i;
  3729                           ;main.c: 253: if (Byte2 == 3 && Byte3 == 7){
  3730                           
  3731                           ;incstack = 0
  3732                           ; Regs used in _ConfigureShiftRegister: [wreg+status,2+status,0]
  3733  044B  3003               	movlw	3
  3734  044C  067C               	xorwf	_Byte2,w
  3735  044D  1D03               	btfss	3,2
  3736  044E  2C55               	goto	l1288
  3737  044F  3007               	movlw	7
  3738  0450  067D               	xorwf	_Byte3,w
  3739  0451  1D03               	btfss	3,2
  3740  0452  2C55               	goto	l1288
  3741                           
  3742                           ;main.c: 254: ReverseReg = 0x50;
  3743  0453  3050               	movlw	80
  3744  0454  2C8A               	goto	L5
  3745  0455                     l1288:	
  3746                           ;main.c: 255: }
  3747                           
  3748                           
  3749                           ;main.c: 257: else if ((Byte2 == 7 && Byte3 == 0) ||
  3750                           ;main.c: 258: (Byte2 == 30 && Byte3 == 0) ||
  3751                           ;main.c: 259: (Byte2 == 41 && Byte3 == 0) ||
  3752                           ;main.c: 260: (Byte2 == 5 && Byte3 == 30) ||
  3753                           ;main.c: 261: (Byte2 == 7 && Byte3 == 20) ||
  3754                           ;main.c: 262: (Byte2 == 12 && Byte3 == 30) ||
  3755                           ;main.c: 263: (Byte2 == 41 && Byte3 == 41)
  3756                           ;main.c: 264: ){
  3757  0455  3007               	movlw	7
  3758  0456  067C               	xorwf	_Byte2,w
  3759  0457  1903               	btfsc	3,2
  3760  0458  087D               	movf	_Byte3,w
  3761  0459  1903               	btfsc	3,2
  3762  045A  2C87               	goto	l1316
  3763  045B  301E               	movlw	30
  3764  045C  067C               	xorwf	_Byte2,w
  3765  045D  1903               	btfsc	3,2
  3766  045E  087D               	movf	_Byte3,w
  3767  045F  1903               	btfsc	3,2
  3768  0460  2C87               	goto	l1316
  3769  0461  3029               	movlw	41
  3770  0462  067C               	xorwf	_Byte2,w
  3771  0463  1903               	btfsc	3,2
  3772  0464  087D               	movf	_Byte3,w
  3773  0465  1903               	btfsc	3,2
  3774  0466  2C87               	goto	l1316
  3775  0467  3005               	movlw	5
  3776  0468  067C               	xorwf	_Byte2,w
  3777  0469  1D03               	btfss	3,2
  3778  046A  2C6F               	goto	l1304
  3779  046B  301E               	movlw	30
  3780  046C  067D               	xorwf	_Byte3,w
  3781  046D  1903               	btfsc	3,2
  3782  046E  2C87               	goto	l1316
  3783  046F                     l1304:	
  3784  046F  3007               	movlw	7
  3785  0470  067C               	xorwf	_Byte2,w
  3786  0471  1D03               	btfss	3,2
  3787  0472  2C77               	goto	l1308
  3788  0473  3014               	movlw	20
  3789  0474  067D               	xorwf	_Byte3,w
  3790  0475  1903               	btfsc	3,2
  3791  0476  2C87               	goto	l1316
  3792  0477                     l1308:	
  3793  0477  300C               	movlw	12
  3794  0478  067C               	xorwf	_Byte2,w
  3795  0479  1D03               	btfss	3,2
  3796  047A  2C7F               	goto	l1312
  3797  047B  301E               	movlw	30
  3798  047C  067D               	xorwf	_Byte3,w
  3799  047D  1903               	btfsc	3,2
  3800  047E  2C87               	goto	l1316
  3801  047F                     l1312:	
  3802  047F  3029               	movlw	41
  3803  0480  067C               	xorwf	_Byte2,w
  3804  0481  1D03               	btfss	3,2
  3805  0482  2C89               	goto	l1318
  3806  0483  3029               	movlw	41
  3807  0484  067D               	xorwf	_Byte3,w
  3808  0485  1D03               	btfss	3,2
  3809  0486  2C89               	goto	l1318
  3810  0487                     l1316:	
  3811                           
  3812                           ;main.c: 265: ReverseReg = 0x90;
  3813  0487  3090               	movlw	144
  3814  0488  2C8A               	goto	L5
  3815  0489                     l1318:	
  3816                           ;main.c: 266: }
  3817                           
  3818                           
  3819                           ;main.c: 268: else{
  3820                           ;main.c: 269: ReverseReg = 0x10;
  3821  0489  3010               	movlw	16
  3822  048A                     L5:	
  3823  048A  00F0               	movwf	??_ConfigureShiftRegister
  3824  048B  0870               	movf	??_ConfigureShiftRegister,w
  3825  048C  00F2               	movwf	ConfigureShiftRegister@ReverseReg
  3826                           
  3827                           ;main.c: 270: }
  3828                           ;main.c: 273: LATA4 = 0;
  3829  048D  0022               	movlb	2	; select bank2
  3830  048E  120C               	bcf	12,4	;volatile
  3831                           
  3832                           ;main.c: 274: do { LATB6 = 1; } while(0);
  3833  048F  170D               	bsf	13,6	;volatile
  3834  0490  0000               	nop	;# 
  3835                           
  3836                           ;main.c: 276: do { LATB6 = 0; } while(0);
  3837  0491  0022               	movlb	2	; select bank2
  3838  0492  130D               	bcf	13,6	;volatile
  3839                           
  3840                           ;main.c: 278: for (i=0; i<8; i++) {
  3841  0493  01F1               	clrf	ConfigureShiftRegister@i
  3842  0494  3008               	movlw	8
  3843  0495  0271               	subwf	ConfigureShiftRegister@i,w
  3844  0496  1803               	btfsc	3,0
  3845  0497  2CAF               	goto	l218
  3846  0498                     l217:	
  3847                           
  3848                           ;main.c: 279: LATA4 = ReverseReg & 0x01;
  3849  0498  1C72               	btfss	ConfigureShiftRegister@ReverseReg,0
  3850  0499  2C9D               	goto	u1540
  3851  049A  0022               	movlb	2	; select bank2
  3852  049B  160C               	bsf	12,4	;volatile
  3853  049C  2C9F               	goto	l219
  3854  049D                     u1540:	
  3855  049D  0022               	movlb	2	; select bank2
  3856  049E  120C               	bcf	12,4	;volatile
  3857  049F                     l219:	
  3858                           ;main.c: 280: do { LATB6 = 1; } while(0);
  3859                           
  3860  049F  170D               	bsf	13,6	;volatile
  3861  04A0  0000               	nop	;# 
  3862                           
  3863                           ;main.c: 282: do { LATB6 = 0; } while(0);
  3864  04A1  0022               	movlb	2	; select bank2
  3865  04A2  130D               	bcf	13,6	;volatile
  3866                           
  3867                           ;main.c: 283: ReverseReg = ReverseReg >> 1;
  3868  04A3  3672               	lsrf	ConfigureShiftRegister@ReverseReg,w
  3869  04A4  00F0               	movwf	??_ConfigureShiftRegister
  3870  04A5  0870               	movf	??_ConfigureShiftRegister,w
  3871  04A6  00F2               	movwf	ConfigureShiftRegister@ReverseReg
  3872  04A7  3001               	movlw	1
  3873  04A8  00F0               	movwf	??_ConfigureShiftRegister
  3874  04A9  0870               	movf	??_ConfigureShiftRegister,w
  3875  04AA  07F1               	addwf	ConfigureShiftRegister@i,f
  3876  04AB  3008               	movlw	8
  3877  04AC  0271               	subwf	ConfigureShiftRegister@i,w
  3878  04AD  1C03               	skipc
  3879  04AE  2C98               	goto	l217
  3880  04AF                     l218:	
  3881                           
  3882                           ;main.c: 284: }
  3883                           ;main.c: 287: LATA4 = 0;
  3884  04AF  120C               	bcf	12,4	;volatile
  3885                           
  3886                           ;main.c: 288: do { LATB6 = 1; } while(0);
  3887  04B0  170D               	bsf	13,6	;volatile
  3888  04B1  0000               	nop	;# 
  3889                           
  3890                           ;main.c: 290: do { LATB6 = 0; } while(0);
  3891  04B2  0022               	movlb	2	; select bank2
  3892  04B3  130D               	bcf	13,6	;volatile
  3893  04B4  0008               	return
  3894  04B5                     __end_of_ConfigureShiftRegister:	
  3895  007E                     btemp	set	126	;btemp
  3896  007E                     wtemp	set	126
  3897  007E                     wtemp0	set	126
  3898  0080                     wtemp1	set	128
  3899  0082                     wtemp2	set	130
  3900  0084                     wtemp3	set	132
  3901  0086                     wtemp4	set	134
  3902  0088                     wtemp5	set	136
  3903  007F                     wtemp6	set	127
  3904  007E                     ttemp	set	126
  3905  007E                     ttemp0	set	126
  3906  0081                     ttemp1	set	129
  3907  0084                     ttemp2	set	132
  3908  0087                     ttemp3	set	135
  3909  007F                     ttemp4	set	127
  3910  007E                     ltemp	set	126
  3911  007E                     ltemp0	set	126
  3912  0082                     ltemp1	set	130
  3913  0086                     ltemp2	set	134
  3914  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    76
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80      0       2
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SSCtest
    _SSCtest->_MIPITRANSFER1
    _SSCtest->_MIPITRANSFER2

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1594
                                             11 COMMON     1     1      0
             _ConfigureShiftRegister
                    _DAC1_Initialize
                     _DAC1_SetOutput
                      _MIPITRANSFER1
                      _MIPITRANSFER2
             _PIN_MANAGER_Initialize
                            _SSCtest
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _DAC1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DAC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SSCtest                                              1     1      0     750
                                             10 COMMON     1     1      0
                      _MIPITRANSFER1
                      _MIPITRANSFER2
 ---------------------------------------------------------------------------------
 (2) _MIPITRANSFER2                                       10    10      0     364
                                              0 COMMON    10    10      0
 ---------------------------------------------------------------------------------
 (2) _MIPITRANSFER1                                       10    10      0     364
                                              0 COMMON    10    10      0
 ---------------------------------------------------------------------------------
 (1) _DAC1_SetOutput                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureShiftRegister                               3     3      0      94
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureShiftRegister
   _DAC1_Initialize
   _DAC1_SetOutput
   _MIPITRANSFER1
   _MIPITRANSFER2
   _PIN_MANAGER_Initialize
   _SSCtest
     _MIPITRANSFER1
     _MIPITRANSFER2
   _SYSTEM_Initialize
     _DAC1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      10       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       2       6        2.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      10      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Mon Dec 21 14:12:18 2015

                               pc 0002                       __CFG_CP$OFF 0000                       __CFG_LVP$ON 0000  
                 _DAC1_Initialize 041B                               l101 056C                               l110 0582  
                             l102 0552                               l120 05C0                               l107 05A4  
                             l140 0645                               l141 062B                               l119 05DA  
                             l128 05F4                               l217 0498                               l218 04AF  
                             l146 067D                               l219 049F                               l260 077F  
                             l149 065B                               l158 06B3                               l270 0786  
                             l167 06CD                               l159 0699                               l192 0539  
                             l265 0782                               l267 0784                               u980 055A  
                             u994 055C    __end_of_ConfigureShiftRegister 04B5                      __CFG_BORV$LO 0000  
                  _DAC1_SetOutput 0416                              S1472 0004                      __CFG_ZCD$OFF 0000  
                            l1120 0572                              l1200 0675                              l1132 059C  
                            l1312 047F                              l1304 046F                              l1400 0789  
                            l1234 06E7                              l1250 04CF                              l1308 0477  
                            l1316 0487                              l1260 04F7                              l1252 04D7  
                            l1244 04B7                              l1420 07B5                              l1412 07A3  
                            l1404 0792                              l1318 0489                              l1166 060E  
                            l1270 051F                              l1262 04FF                              l1254 04DF  
                            l1246 04BF                              l1430 07CA                              l1414 07A8  
                            l1350 070A                              l1272 0527                              l1264 0507  
                            l1256 04E7                              l1248 04C7                              l1432 07CF  
                            l1424 07BD                              l1408 079B                              l1266 050F  
                            l1258 04EF                              l1442 07E4                              l1426 07C2  
                            l1418 07B0                              l1354 0716                              l1346 06FE  
                            l1188 064B                              l1268 0517                              l1276 052F  
                            l1444 07E9                              l1436 07D7                              l1364 0732  
                            l1438 07DC                              l1446 07F1                              l1288 0455  
                            u1030 058A                              u1130 05FC                              u1044 058C  
                            u1230 0663                              u1144 05FE                              u1080 05C8  
                            u1330 06D5                              u1244 0665                              u1180 0633  
                            _LATA 010C                              u1094 05CA                              _LATB 010D  
                            _LATC 010E                              u1344 06D7                              u1280 06A1  
                            u1194 0635                              u1540 049D                              u1294 06A3  
                            _WPUB 020D                              _WPUC 020E                      __CFG_WRT$OFF 0000  
                            _main 06EC                              fsr0h 0005                              fsr0l 0004  
                            indf0 0000                              btemp 007E                              ltemp 007E  
                            start 0002                              ttemp 007E                   __end_of_SSCtest 053A  
                            wtemp 007E    __size_of_OSCILLATOR_Initialize 0006     __end_of_OSCILLATOR_Initialize 0426  
                           ?_main 0070                     __CFG_WDTE$OFF 0000                             _LATA1 0861  
                           _LATA2 0862                             _LATA4 0864                             _LATB4 086C  
                           _LATB5 086D                             _LATB6 086E                             _LATB7 086F  
          __end_of_DAC1_SetOutput 041B                             _PORTC 000E                             _TRISA 008C  
                           _TRISB 008D                             _TRISC 008E                             _Byte1 0020  
                           _Byte2 007C                             _Byte3 007D                     __CFG_PWRTE$ON 0000  
          __size_of_MIPITRANSFER1 00D9            __size_of_MIPITRANSFER2 00D9                    __CFG_BOREN$OFF 0000  
                           ltemp0 007E                             ltemp1 0082                             ltemp2 0086  
                           ltemp3 0080                             ttemp0 007E                             ttemp1 0081  
                           ttemp2 0084                             ttemp3 0087                             ttemp4 007F  
                           status 0003                             wtemp0 007E                             wtemp1 0080  
                           wtemp2 0082                             wtemp3 0084                             wtemp4 0086  
                           wtemp5 0088                             wtemp6 007F                    __CFG_MCLRE$OFF 0000  
                 __initialization 07F9                      __end_of_main 07F9           __end_of_DAC1_Initialize 0420  
                  __CFG_LPBOR$OFF 0000                            ??_main 007B                   ?_DAC1_SetOutput 0070  
                  __CFG_PLLEN$OFF 0000                            _ANSELA 018C                            _ANSELB 018D  
                          _ANSELC 018E                         ??_SSCtest 007A                            _OSCCON 0099  
         DAC1_SetOutput@inputData 0070                     _MIPITRANSFER1 053A                     _MIPITRANSFER2 0613  
                  __CFG_STVREN$ON 0000                 __end_of_DacOutput 084C                 _SYSTEM_Initialize 0426  
         __end_of__initialization 07FD                ?_SYSTEM_Initialize 0070                    ?_MIPITRANSFER1 0070  
                  ?_MIPITRANSFER2 0070                    __pcstackCOMMON 0070               ??_SYSTEM_Initialize 0070  
                ?_DAC1_Initialize 0070                    _OPTION_REGbits 0095         __end_of_SYSTEM_Initialize 042F  
                      __pbssBANK0 0020                        __pmaintext 06EC                   __CFG_PPS1WAY$ON 0000  
                  MIPITRANSFER1@i 0078                    MIPITRANSFER1@j 0074                    MIPITRANSFER1@k 0073  
                  MIPITRANSFER2@i 0078                    MIPITRANSFER2@j 0074                    MIPITRANSFER2@k 0073  
                 __CFG_WDTCCS$SWC 0000                           _OSCSTAT 009A                           _OSCTUNE 0098  
                         _SSCtest 04B5                   ??_MIPITRANSFER1 0070                   ??_MIPITRANSFER2 0070  
                ??_DAC1_SetOutput 0070           ConfigureShiftRegister@i 0071                           __ptext1 0426  
                         __ptext2 042F                           __ptext3 0420                           __ptext4 041B  
                         __ptext5 04B5                           __ptext6 0613                           __ptext7 053A  
                         __ptext8 0416                           __ptext9 044B             _OSCILLATOR_Initialize 0420  
              __end_of_USIDLOWREV 0848          ??_PIN_MANAGER_Initialize 0070        __size_of_SYSTEM_Initialize 0009  
            end_of_initialization 07FD                      __pstringtext 0800          ??_ConfigureShiftRegister 0070  
                __CFG_FOSC$INTOSC 0000                         _DacOutput 0848                MIPITRANSFER1@i_112 0079  
          ?_OSCILLATOR_Initialize 0070                MIPITRANSFER1@j_110 0075                MIPITRANSFER1@j_111 0076  
              MIPITRANSFER1@j_113 0077                MIPITRANSFER2@i_120 0079                MIPITRANSFER2@j_121 0077  
              MIPITRANSFER2@j_118 0075                MIPITRANSFER2@j_119 0076               start_initialization 07F9  
 __size_of_PIN_MANAGER_Initialize 001C   __size_of_ConfigureShiftRegister 006A          __size_of_DAC1_Initialize 0005  
                     __pbssCOMMON 007C                         ___latbits 0001                          ?_SSCtest 0070  
          _PIN_MANAGER_Initialize 042F                          _DAC1CON0 0118                          _DAC1CON1 0119  
                       __pswtext1 0004                         _readDummy 0021            _ConfigureShiftRegister 044B  
           __end_of_MIPITRANSFER1 0613             __end_of_MIPITRANSFER2 06EC              __CFG_WDTCPS$WDTCPS1F 0000  
               ??_DAC1_Initialize 0070                  __size_of_SSCtest 0085           ??_OSCILLATOR_Initialize 0070  
                   SSCtest@CABAND 007A           __size_of_DAC1_SetOutput 0005               __end_of_USIDHIGHREV 0824  
                   __size_of_main 010D              __CFG_WDTCWS$WDTCWSSW 0000  ConfigureShiftRegister@ReverseReg 0072  
         ?_PIN_MANAGER_Initialize 0070                 __CFG_CLKOUTEN$OFF 0000                       _USIDHIGHREV 0800  
         ?_ConfigureShiftRegister 0070    __end_of_PIN_MANAGER_Initialize 044B                        _USIDLOWREV 0824  
