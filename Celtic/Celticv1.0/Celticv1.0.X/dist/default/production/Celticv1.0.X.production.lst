

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Dec 17 18:25:36 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16LF1618
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     	;# 
    19  0001                     	;# 
    20  0002                     	;# 
    21  0003                     	;# 
    22  0004                     	;# 
    23  0005                     	;# 
    24  0006                     	;# 
    25  0007                     	;# 
    26  0008                     	;# 
    27  0009                     	;# 
    28  000A                     	;# 
    29  000B                     	;# 
    30  000C                     	;# 
    31  000D                     	;# 
    32  000E                     	;# 
    33  0010                     	;# 
    34  0011                     	;# 
    35  0012                     	;# 
    36  0013                     	;# 
    37  0014                     	;# 
    38  0015                     	;# 
    39  0016                     	;# 
    40  0016                     	;# 
    41  0017                     	;# 
    42  0018                     	;# 
    43  0019                     	;# 
    44  001A                     	;# 
    45  001A                     	;# 
    46  001B                     	;# 
    47  001B                     	;# 
    48  001C                     	;# 
    49  001D                     	;# 
    50  001E                     	;# 
    51  001F                     	;# 
    52  008C                     	;# 
    53  008D                     	;# 
    54  008E                     	;# 
    55  0090                     	;# 
    56  0091                     	;# 
    57  0092                     	;# 
    58  0093                     	;# 
    59  0094                     	;# 
    60  0095                     	;# 
    61  0096                     	;# 
    62  0098                     	;# 
    63  0099                     	;# 
    64  009A                     	;# 
    65  009B                     	;# 
    66  009B                     	;# 
    67  009C                     	;# 
    68  009D                     	;# 
    69  009E                     	;# 
    70  009F                     	;# 
    71  010C                     	;# 
    72  010D                     	;# 
    73  010E                     	;# 
    74  0111                     	;# 
    75  0112                     	;# 
    76  0113                     	;# 
    77  0114                     	;# 
    78  0115                     	;# 
    79  0116                     	;# 
    80  0117                     	;# 
    81  0118                     	;# 
    82  0119                     	;# 
    83  011C                     	;# 
    84  018C                     	;# 
    85  018D                     	;# 
    86  018E                     	;# 
    87  0191                     	;# 
    88  0191                     	;# 
    89  0192                     	;# 
    90  0193                     	;# 
    91  0193                     	;# 
    92  0194                     	;# 
    93  0195                     	;# 
    94  0196                     	;# 
    95  0199                     	;# 
    96  0199                     	;# 
    97  0199                     	;# 
    98  019A                     	;# 
    99  019A                     	;# 
   100  019A                     	;# 
   101  019B                     	;# 
   102  019B                     	;# 
   103  019B                     	;# 
   104  019B                     	;# 
   105  019B                     	;# 
   106  019C                     	;# 
   107  019C                     	;# 
   108  019C                     	;# 
   109  019D                     	;# 
   110  019D                     	;# 
   111  019D                     	;# 
   112  019E                     	;# 
   113  019E                     	;# 
   114  019E                     	;# 
   115  019F                     	;# 
   116  019F                     	;# 
   117  019F                     	;# 
   118  019F                     	;# 
   119  019F                     	;# 
   120  020C                     	;# 
   121  020D                     	;# 
   122  020E                     	;# 
   123  0211                     	;# 
   124  0211                     	;# 
   125  0212                     	;# 
   126  0212                     	;# 
   127  0213                     	;# 
   128  0213                     	;# 
   129  0214                     	;# 
   130  0214                     	;# 
   131  0215                     	;# 
   132  0215                     	;# 
   133  0215                     	;# 
   134  0215                     	;# 
   135  0216                     	;# 
   136  0216                     	;# 
   137  0217                     	;# 
   138  0217                     	;# 
   139  028C                     	;# 
   140  028D                     	;# 
   141  028E                     	;# 
   142  0291                     	;# 
   143  0291                     	;# 
   144  0292                     	;# 
   145  0293                     	;# 
   146  0294                     	;# 
   147  0298                     	;# 
   148  0298                     	;# 
   149  0299                     	;# 
   150  029A                     	;# 
   151  029B                     	;# 
   152  029E                     	;# 
   153  030C                     	;# 
   154  030D                     	;# 
   155  030E                     	;# 
   156  038C                     	;# 
   157  038D                     	;# 
   158  038E                     	;# 
   159  0391                     	;# 
   160  0392                     	;# 
   161  0393                     	;# 
   162  0394                     	;# 
   163  0395                     	;# 
   164  0396                     	;# 
   165  0397                     	;# 
   166  0398                     	;# 
   167  0399                     	;# 
   168  040E                     	;# 
   169  0413                     	;# 
   170  0413                     	;# 
   171  0414                     	;# 
   172  0414                     	;# 
   173  0415                     	;# 
   174  0416                     	;# 
   175  0417                     	;# 
   176  0418                     	;# 
   177  041A                     	;# 
   178  041A                     	;# 
   179  041B                     	;# 
   180  041B                     	;# 
   181  041C                     	;# 
   182  041D                     	;# 
   183  041E                     	;# 
   184  041F                     	;# 
   185  0493                     	;# 
   186  0494                     	;# 
   187  0495                     	;# 
   188  0496                     	;# 
   189  049A                     	;# 
   190  049B                     	;# 
   191  049C                     	;# 
   192  049D                     	;# 
   193  058C                     	;# 
   194  058C                     	;# 
   195  058D                     	;# 
   196  058E                     	;# 
   197  058E                     	;# 
   198  058F                     	;# 
   199  0590                     	;# 
   200  0590                     	;# 
   201  0591                     	;# 
   202  0592                     	;# 
   203  0592                     	;# 
   204  0593                     	;# 
   205  0594                     	;# 
   206  0594                     	;# 
   207  0595                     	;# 
   208  0596                     	;# 
   209  0596                     	;# 
   210  0597                     	;# 
   211  0598                     	;# 
   212  0599                     	;# 
   213  059A                     	;# 
   214  059B                     	;# 
   215  059B                     	;# 
   216  059C                     	;# 
   217  059D                     	;# 
   218  060C                     	;# 
   219  060C                     	;# 
   220  060D                     	;# 
   221  060E                     	;# 
   222  060F                     	;# 
   223  060F                     	;# 
   224  0610                     	;# 
   225  0611                     	;# 
   226  0612                     	;# 
   227  0613                     	;# 
   228  0614                     	;# 
   229  0617                     	;# 
   230  0618                     	;# 
   231  0619                     	;# 
   232  061A                     	;# 
   233  061B                     	;# 
   234  061C                     	;# 
   235  0691                     	;# 
   236  0692                     	;# 
   237  0693                     	;# 
   238  0694                     	;# 
   239  0695                     	;# 
   240  0696                     	;# 
   241  0697                     	;# 
   242  0699                     	;# 
   243  069A                     	;# 
   244  0711                     	;# 
   245  0712                     	;# 
   246  0713                     	;# 
   247  0714                     	;# 
   248  0715                     	;# 
   249  0718                     	;# 
   250  0718                     	;# 
   251  0719                     	;# 
   252  071A                     	;# 
   253  071A                     	;# 
   254  071B                     	;# 
   255  071C                     	;# 
   256  071D                     	;# 
   257  0791                     	;# 
   258  0791                     	;# 
   259  0792                     	;# 
   260  0793                     	;# 
   261  0793                     	;# 
   262  0794                     	;# 
   263  0795                     	;# 
   264  0795                     	;# 
   265  0796                     	;# 
   266  0797                     	;# 
   267  0797                     	;# 
   268  0798                     	;# 
   269  0799                     	;# 
   270  079A                     	;# 
   271  080C                     	;# 
   272  080C                     	;# 
   273  080D                     	;# 
   274  080E                     	;# 
   275  080E                     	;# 
   276  080F                     	;# 
   277  0810                     	;# 
   278  0810                     	;# 
   279  0811                     	;# 
   280  0812                     	;# 
   281  0812                     	;# 
   282  0813                     	;# 
   283  0814                     	;# 
   284  0815                     	;# 
   285  0816                     	;# 
   286  0817                     	;# 
   287  0818                     	;# 
   288  0819                     	;# 
   289  081A                     	;# 
   290  081A                     	;# 
   291  081B                     	;# 
   292  081C                     	;# 
   293  081C                     	;# 
   294  081D                     	;# 
   295  088C                     	;# 
   296  088D                     	;# 
   297  088E                     	;# 
   298  088F                     	;# 
   299  088F                     	;# 
   300  0890                     	;# 
   301  0891                     	;# 
   302  0892                     	;# 
   303  0893                     	;# 
   304  0893                     	;# 
   305  0894                     	;# 
   306  0895                     	;# 
   307  0896                     	;# 
   308  0897                     	;# 
   309  0897                     	;# 
   310  0898                     	;# 
   311  0899                     	;# 
   312  0D8C                     	;# 
   313  0D8C                     	;# 
   314  0D8D                     	;# 
   315  0D8E                     	;# 
   316  0D8F                     	;# 
   317  0D8F                     	;# 
   318  0D90                     	;# 
   319  0D91                     	;# 
   320  0D92                     	;# 
   321  0D92                     	;# 
   322  0D93                     	;# 
   323  0D94                     	;# 
   324  0D95                     	;# 
   325  0D95                     	;# 
   326  0D96                     	;# 
   327  0D97                     	;# 
   328  0D98                     	;# 
   329  0D99                     	;# 
   330  0D9A                     	;# 
   331  0D9B                     	;# 
   332  0D9C                     	;# 
   333  0D9D                     	;# 
   334  0D9E                     	;# 
   335  0D9E                     	;# 
   336  0D9F                     	;# 
   337  0DA0                     	;# 
   338  0DA1                     	;# 
   339  0DA1                     	;# 
   340  0DA2                     	;# 
   341  0DA3                     	;# 
   342  0DA4                     	;# 
   343  0DA4                     	;# 
   344  0DA5                     	;# 
   345  0DA6                     	;# 
   346  0DA7                     	;# 
   347  0DA7                     	;# 
   348  0DA8                     	;# 
   349  0DA9                     	;# 
   350  0DAA                     	;# 
   351  0DAB                     	;# 
   352  0DAC                     	;# 
   353  0DAD                     	;# 
   354  0DAE                     	;# 
   355  0DAF                     	;# 
   356  0E0F                     	;# 
   357  0E10                     	;# 
   358  0E11                     	;# 
   359  0E12                     	;# 
   360  0E13                     	;# 
   361  0E14                     	;# 
   362  0E15                     	;# 
   363  0E16                     	;# 
   364  0E17                     	;# 
   365  0E18                     	;# 
   366  0E19                     	;# 
   367  0E1A                     	;# 
   368  0E1B                     	;# 
   369  0E1C                     	;# 
   370  0E1D                     	;# 
   371  0E1E                     	;# 
   372  0E1F                     	;# 
   373  0E20                     	;# 
   374  0E21                     	;# 
   375  0E22                     	;# 
   376  0E23                     	;# 
   377  0E24                     	;# 
   378  0E25                     	;# 
   379  0E26                     	;# 
   380  0E27                     	;# 
   381  0E28                     	;# 
   382  0E29                     	;# 
   383  0E2A                     	;# 
   384  0E2B                     	;# 
   385  0E2C                     	;# 
   386  0E2D                     	;# 
   387  0E2E                     	;# 
   388  0E90                     	;# 
   389  0E91                     	;# 
   390  0E92                     	;# 
   391  0E94                     	;# 
   392  0E95                     	;# 
   393  0E9C                     	;# 
   394  0E9D                     	;# 
   395  0E9E                     	;# 
   396  0E9F                     	;# 
   397  0EA0                     	;# 
   398  0EA1                     	;# 
   399  0EA2                     	;# 
   400  0EA3                     	;# 
   401  0EA4                     	;# 
   402  0EA5                     	;# 
   403  0EA6                     	;# 
   404  0EA7                     	;# 
   405  0F0F                     	;# 
   406  0F10                     	;# 
   407  0F11                     	;# 
   408  0F12                     	;# 
   409  0F13                     	;# 
   410  0F14                     	;# 
   411  0F15                     	;# 
   412  0F16                     	;# 
   413  0F17                     	;# 
   414  0F18                     	;# 
   415  0F19                     	;# 
   416  0F1A                     	;# 
   417  0F1B                     	;# 
   418  0F1C                     	;# 
   419  0F1D                     	;# 
   420  0F1E                     	;# 
   421  0F1F                     	;# 
   422  0F20                     	;# 
   423  0F21                     	;# 
   424  0F22                     	;# 
   425  0F23                     	;# 
   426  0FE4                     	;# 
   427  0FE5                     	;# 
   428  0FE6                     	;# 
   429  0FE7                     	;# 
   430  0FE8                     	;# 
   431  0FE9                     	;# 
   432  0FEA                     	;# 
   433  0FEB                     	;# 
   434  0FED                     	;# 
   435  0FEE                     	;# 
   436  0FEF                     	;# 
   437  0000                     	;# 
   438  0001                     	;# 
   439  0002                     	;# 
   440  0003                     	;# 
   441  0004                     	;# 
   442  0005                     	;# 
   443  0006                     	;# 
   444  0007                     	;# 
   445  0008                     	;# 
   446  0009                     	;# 
   447  000A                     	;# 
   448  000B                     	;# 
   449  000C                     	;# 
   450  000D                     	;# 
   451  000E                     	;# 
   452  0010                     	;# 
   453  0011                     	;# 
   454  0012                     	;# 
   455  0013                     	;# 
   456  0014                     	;# 
   457  0015                     	;# 
   458  0016                     	;# 
   459  0016                     	;# 
   460  0017                     	;# 
   461  0018                     	;# 
   462  0019                     	;# 
   463  001A                     	;# 
   464  001A                     	;# 
   465  001B                     	;# 
   466  001B                     	;# 
   467  001C                     	;# 
   468  001D                     	;# 
   469  001E                     	;# 
   470  001F                     	;# 
   471  008C                     	;# 
   472  008D                     	;# 
   473  008E                     	;# 
   474  0090                     	;# 
   475  0091                     	;# 
   476  0092                     	;# 
   477  0093                     	;# 
   478  0094                     	;# 
   479  0095                     	;# 
   480  0096                     	;# 
   481  0098                     	;# 
   482  0099                     	;# 
   483  009A                     	;# 
   484  009B                     	;# 
   485  009B                     	;# 
   486  009C                     	;# 
   487  009D                     	;# 
   488  009E                     	;# 
   489  009F                     	;# 
   490  010C                     	;# 
   491  010D                     	;# 
   492  010E                     	;# 
   493  0111                     	;# 
   494  0112                     	;# 
   495  0113                     	;# 
   496  0114                     	;# 
   497  0115                     	;# 
   498  0116                     	;# 
   499  0117                     	;# 
   500  0118                     	;# 
   501  0119                     	;# 
   502  011C                     	;# 
   503  018C                     	;# 
   504  018D                     	;# 
   505  018E                     	;# 
   506  0191                     	;# 
   507  0191                     	;# 
   508  0192                     	;# 
   509  0193                     	;# 
   510  0193                     	;# 
   511  0194                     	;# 
   512  0195                     	;# 
   513  0196                     	;# 
   514  0199                     	;# 
   515  0199                     	;# 
   516  0199                     	;# 
   517  019A                     	;# 
   518  019A                     	;# 
   519  019A                     	;# 
   520  019B                     	;# 
   521  019B                     	;# 
   522  019B                     	;# 
   523  019B                     	;# 
   524  019B                     	;# 
   525  019C                     	;# 
   526  019C                     	;# 
   527  019C                     	;# 
   528  019D                     	;# 
   529  019D                     	;# 
   530  019D                     	;# 
   531  019E                     	;# 
   532  019E                     	;# 
   533  019E                     	;# 
   534  019F                     	;# 
   535  019F                     	;# 
   536  019F                     	;# 
   537  019F                     	;# 
   538  019F                     	;# 
   539  020C                     	;# 
   540  020D                     	;# 
   541  020E                     	;# 
   542  0211                     	;# 
   543  0211                     	;# 
   544  0212                     	;# 
   545  0212                     	;# 
   546  0213                     	;# 
   547  0213                     	;# 
   548  0214                     	;# 
   549  0214                     	;# 
   550  0215                     	;# 
   551  0215                     	;# 
   552  0215                     	;# 
   553  0215                     	;# 
   554  0216                     	;# 
   555  0216                     	;# 
   556  0217                     	;# 
   557  0217                     	;# 
   558  028C                     	;# 
   559  028D                     	;# 
   560  028E                     	;# 
   561  0291                     	;# 
   562  0291                     	;# 
   563  0292                     	;# 
   564  0293                     	;# 
   565  0294                     	;# 
   566  0298                     	;# 
   567  0298                     	;# 
   568  0299                     	;# 
   569  029A                     	;# 
   570  029B                     	;# 
   571  029E                     	;# 
   572  030C                     	;# 
   573  030D                     	;# 
   574  030E                     	;# 
   575  038C                     	;# 
   576  038D                     	;# 
   577  038E                     	;# 
   578  0391                     	;# 
   579  0392                     	;# 
   580  0393                     	;# 
   581  0394                     	;# 
   582  0395                     	;# 
   583  0396                     	;# 
   584  0397                     	;# 
   585  0398                     	;# 
   586  0399                     	;# 
   587  040E                     	;# 
   588  0413                     	;# 
   589  0413                     	;# 
   590  0414                     	;# 
   591  0414                     	;# 
   592  0415                     	;# 
   593  0416                     	;# 
   594  0417                     	;# 
   595  0418                     	;# 
   596  041A                     	;# 
   597  041A                     	;# 
   598  041B                     	;# 
   599  041B                     	;# 
   600  041C                     	;# 
   601  041D                     	;# 
   602  041E                     	;# 
   603  041F                     	;# 
   604  0493                     	;# 
   605  0494                     	;# 
   606  0495                     	;# 
   607  0496                     	;# 
   608  049A                     	;# 
   609  049B                     	;# 
   610  049C                     	;# 
   611  049D                     	;# 
   612  058C                     	;# 
   613  058C                     	;# 
   614  058D                     	;# 
   615  058E                     	;# 
   616  058E                     	;# 
   617  058F                     	;# 
   618  0590                     	;# 
   619  0590                     	;# 
   620  0591                     	;# 
   621  0592                     	;# 
   622  0592                     	;# 
   623  0593                     	;# 
   624  0594                     	;# 
   625  0594                     	;# 
   626  0595                     	;# 
   627  0596                     	;# 
   628  0596                     	;# 
   629  0597                     	;# 
   630  0598                     	;# 
   631  0599                     	;# 
   632  059A                     	;# 
   633  059B                     	;# 
   634  059B                     	;# 
   635  059C                     	;# 
   636  059D                     	;# 
   637  060C                     	;# 
   638  060C                     	;# 
   639  060D                     	;# 
   640  060E                     	;# 
   641  060F                     	;# 
   642  060F                     	;# 
   643  0610                     	;# 
   644  0611                     	;# 
   645  0612                     	;# 
   646  0613                     	;# 
   647  0614                     	;# 
   648  0617                     	;# 
   649  0618                     	;# 
   650  0619                     	;# 
   651  061A                     	;# 
   652  061B                     	;# 
   653  061C                     	;# 
   654  0691                     	;# 
   655  0692                     	;# 
   656  0693                     	;# 
   657  0694                     	;# 
   658  0695                     	;# 
   659  0696                     	;# 
   660  0697                     	;# 
   661  0699                     	;# 
   662  069A                     	;# 
   663  0711                     	;# 
   664  0712                     	;# 
   665  0713                     	;# 
   666  0714                     	;# 
   667  0715                     	;# 
   668  0718                     	;# 
   669  0718                     	;# 
   670  0719                     	;# 
   671  071A                     	;# 
   672  071A                     	;# 
   673  071B                     	;# 
   674  071C                     	;# 
   675  071D                     	;# 
   676  0791                     	;# 
   677  0791                     	;# 
   678  0792                     	;# 
   679  0793                     	;# 
   680  0793                     	;# 
   681  0794                     	;# 
   682  0795                     	;# 
   683  0795                     	;# 
   684  0796                     	;# 
   685  0797                     	;# 
   686  0797                     	;# 
   687  0798                     	;# 
   688  0799                     	;# 
   689  079A                     	;# 
   690  080C                     	;# 
   691  080C                     	;# 
   692  080D                     	;# 
   693  080E                     	;# 
   694  080E                     	;# 
   695  080F                     	;# 
   696  0810                     	;# 
   697  0810                     	;# 
   698  0811                     	;# 
   699  0812                     	;# 
   700  0812                     	;# 
   701  0813                     	;# 
   702  0814                     	;# 
   703  0815                     	;# 
   704  0816                     	;# 
   705  0817                     	;# 
   706  0818                     	;# 
   707  0819                     	;# 
   708  081A                     	;# 
   709  081A                     	;# 
   710  081B                     	;# 
   711  081C                     	;# 
   712  081C                     	;# 
   713  081D                     	;# 
   714  088C                     	;# 
   715  088D                     	;# 
   716  088E                     	;# 
   717  088F                     	;# 
   718  088F                     	;# 
   719  0890                     	;# 
   720  0891                     	;# 
   721  0892                     	;# 
   722  0893                     	;# 
   723  0893                     	;# 
   724  0894                     	;# 
   725  0895                     	;# 
   726  0896                     	;# 
   727  0897                     	;# 
   728  0897                     	;# 
   729  0898                     	;# 
   730  0899                     	;# 
   731  0D8C                     	;# 
   732  0D8C                     	;# 
   733  0D8D                     	;# 
   734  0D8E                     	;# 
   735  0D8F                     	;# 
   736  0D8F                     	;# 
   737  0D90                     	;# 
   738  0D91                     	;# 
   739  0D92                     	;# 
   740  0D92                     	;# 
   741  0D93                     	;# 
   742  0D94                     	;# 
   743  0D95                     	;# 
   744  0D95                     	;# 
   745  0D96                     	;# 
   746  0D97                     	;# 
   747  0D98                     	;# 
   748  0D99                     	;# 
   749  0D9A                     	;# 
   750  0D9B                     	;# 
   751  0D9C                     	;# 
   752  0D9D                     	;# 
   753  0D9E                     	;# 
   754  0D9E                     	;# 
   755  0D9F                     	;# 
   756  0DA0                     	;# 
   757  0DA1                     	;# 
   758  0DA1                     	;# 
   759  0DA2                     	;# 
   760  0DA3                     	;# 
   761  0DA4                     	;# 
   762  0DA4                     	;# 
   763  0DA5                     	;# 
   764  0DA6                     	;# 
   765  0DA7                     	;# 
   766  0DA7                     	;# 
   767  0DA8                     	;# 
   768  0DA9                     	;# 
   769  0DAA                     	;# 
   770  0DAB                     	;# 
   771  0DAC                     	;# 
   772  0DAD                     	;# 
   773  0DAE                     	;# 
   774  0DAF                     	;# 
   775  0E0F                     	;# 
   776  0E10                     	;# 
   777  0E11                     	;# 
   778  0E12                     	;# 
   779  0E13                     	;# 
   780  0E14                     	;# 
   781  0E15                     	;# 
   782  0E16                     	;# 
   783  0E17                     	;# 
   784  0E18                     	;# 
   785  0E19                     	;# 
   786  0E1A                     	;# 
   787  0E1B                     	;# 
   788  0E1C                     	;# 
   789  0E1D                     	;# 
   790  0E1E                     	;# 
   791  0E1F                     	;# 
   792  0E20                     	;# 
   793  0E21                     	;# 
   794  0E22                     	;# 
   795  0E23                     	;# 
   796  0E24                     	;# 
   797  0E25                     	;# 
   798  0E26                     	;# 
   799  0E27                     	;# 
   800  0E28                     	;# 
   801  0E29                     	;# 
   802  0E2A                     	;# 
   803  0E2B                     	;# 
   804  0E2C                     	;# 
   805  0E2D                     	;# 
   806  0E2E                     	;# 
   807  0E90                     	;# 
   808  0E91                     	;# 
   809  0E92                     	;# 
   810  0E94                     	;# 
   811  0E95                     	;# 
   812  0E9C                     	;# 
   813  0E9D                     	;# 
   814  0E9E                     	;# 
   815  0E9F                     	;# 
   816  0EA0                     	;# 
   817  0EA1                     	;# 
   818  0EA2                     	;# 
   819  0EA3                     	;# 
   820  0EA4                     	;# 
   821  0EA5                     	;# 
   822  0EA6                     	;# 
   823  0EA7                     	;# 
   824  0F0F                     	;# 
   825  0F10                     	;# 
   826  0F11                     	;# 
   827  0F12                     	;# 
   828  0F13                     	;# 
   829  0F14                     	;# 
   830  0F15                     	;# 
   831  0F16                     	;# 
   832  0F17                     	;# 
   833  0F18                     	;# 
   834  0F19                     	;# 
   835  0F1A                     	;# 
   836  0F1B                     	;# 
   837  0F1C                     	;# 
   838  0F1D                     	;# 
   839  0F1E                     	;# 
   840  0F1F                     	;# 
   841  0F20                     	;# 
   842  0F21                     	;# 
   843  0F22                     	;# 
   844  0F23                     	;# 
   845  0FE4                     	;# 
   846  0FE5                     	;# 
   847  0FE6                     	;# 
   848  0FE7                     	;# 
   849  0FE8                     	;# 
   850  0FE9                     	;# 
   851  0FEA                     	;# 
   852  0FEB                     	;# 
   853  0FED                     	;# 
   854  0FEE                     	;# 
   855  0FEF                     	;# 
   856  0000                     	;# 
   857  0001                     	;# 
   858  0002                     	;# 
   859  0003                     	;# 
   860  0004                     	;# 
   861  0005                     	;# 
   862  0006                     	;# 
   863  0007                     	;# 
   864  0008                     	;# 
   865  0009                     	;# 
   866  000A                     	;# 
   867  000B                     	;# 
   868  000C                     	;# 
   869  000D                     	;# 
   870  000E                     	;# 
   871  0010                     	;# 
   872  0011                     	;# 
   873  0012                     	;# 
   874  0013                     	;# 
   875  0014                     	;# 
   876  0015                     	;# 
   877  0016                     	;# 
   878  0016                     	;# 
   879  0017                     	;# 
   880  0018                     	;# 
   881  0019                     	;# 
   882  001A                     	;# 
   883  001A                     	;# 
   884  001B                     	;# 
   885  001B                     	;# 
   886  001C                     	;# 
   887  001D                     	;# 
   888  001E                     	;# 
   889  001F                     	;# 
   890  008C                     	;# 
   891  008D                     	;# 
   892  008E                     	;# 
   893  0090                     	;# 
   894  0091                     	;# 
   895  0092                     	;# 
   896  0093                     	;# 
   897  0094                     	;# 
   898  0095                     	;# 
   899  0096                     	;# 
   900  0098                     	;# 
   901  0099                     	;# 
   902  009A                     	;# 
   903  009B                     	;# 
   904  009B                     	;# 
   905  009C                     	;# 
   906  009D                     	;# 
   907  009E                     	;# 
   908  009F                     	;# 
   909  010C                     	;# 
   910  010D                     	;# 
   911  010E                     	;# 
   912  0111                     	;# 
   913  0112                     	;# 
   914  0113                     	;# 
   915  0114                     	;# 
   916  0115                     	;# 
   917  0116                     	;# 
   918  0117                     	;# 
   919  0118                     	;# 
   920  0119                     	;# 
   921  011C                     	;# 
   922  018C                     	;# 
   923  018D                     	;# 
   924  018E                     	;# 
   925  0191                     	;# 
   926  0191                     	;# 
   927  0192                     	;# 
   928  0193                     	;# 
   929  0193                     	;# 
   930  0194                     	;# 
   931  0195                     	;# 
   932  0196                     	;# 
   933  0199                     	;# 
   934  0199                     	;# 
   935  0199                     	;# 
   936  019A                     	;# 
   937  019A                     	;# 
   938  019A                     	;# 
   939  019B                     	;# 
   940  019B                     	;# 
   941  019B                     	;# 
   942  019B                     	;# 
   943  019B                     	;# 
   944  019C                     	;# 
   945  019C                     	;# 
   946  019C                     	;# 
   947  019D                     	;# 
   948  019D                     	;# 
   949  019D                     	;# 
   950  019E                     	;# 
   951  019E                     	;# 
   952  019E                     	;# 
   953  019F                     	;# 
   954  019F                     	;# 
   955  019F                     	;# 
   956  019F                     	;# 
   957  019F                     	;# 
   958  020C                     	;# 
   959  020D                     	;# 
   960  020E                     	;# 
   961  0211                     	;# 
   962  0211                     	;# 
   963  0212                     	;# 
   964  0212                     	;# 
   965  0213                     	;# 
   966  0213                     	;# 
   967  0214                     	;# 
   968  0214                     	;# 
   969  0215                     	;# 
   970  0215                     	;# 
   971  0215                     	;# 
   972  0215                     	;# 
   973  0216                     	;# 
   974  0216                     	;# 
   975  0217                     	;# 
   976  0217                     	;# 
   977  028C                     	;# 
   978  028D                     	;# 
   979  028E                     	;# 
   980  0291                     	;# 
   981  0291                     	;# 
   982  0292                     	;# 
   983  0293                     	;# 
   984  0294                     	;# 
   985  0298                     	;# 
   986  0298                     	;# 
   987  0299                     	;# 
   988  029A                     	;# 
   989  029B                     	;# 
   990  029E                     	;# 
   991  030C                     	;# 
   992  030D                     	;# 
   993  030E                     	;# 
   994  038C                     	;# 
   995  038D                     	;# 
   996  038E                     	;# 
   997  0391                     	;# 
   998  0392                     	;# 
   999  0393                     	;# 
  1000  0394                     	;# 
  1001  0395                     	;# 
  1002  0396                     	;# 
  1003  0397                     	;# 
  1004  0398                     	;# 
  1005  0399                     	;# 
  1006  040E                     	;# 
  1007  0413                     	;# 
  1008  0413                     	;# 
  1009  0414                     	;# 
  1010  0414                     	;# 
  1011  0415                     	;# 
  1012  0416                     	;# 
  1013  0417                     	;# 
  1014  0418                     	;# 
  1015  041A                     	;# 
  1016  041A                     	;# 
  1017  041B                     	;# 
  1018  041B                     	;# 
  1019  041C                     	;# 
  1020  041D                     	;# 
  1021  041E                     	;# 
  1022  041F                     	;# 
  1023  0493                     	;# 
  1024  0494                     	;# 
  1025  0495                     	;# 
  1026  0496                     	;# 
  1027  049A                     	;# 
  1028  049B                     	;# 
  1029  049C                     	;# 
  1030  049D                     	;# 
  1031  058C                     	;# 
  1032  058C                     	;# 
  1033  058D                     	;# 
  1034  058E                     	;# 
  1035  058E                     	;# 
  1036  058F                     	;# 
  1037  0590                     	;# 
  1038  0590                     	;# 
  1039  0591                     	;# 
  1040  0592                     	;# 
  1041  0592                     	;# 
  1042  0593                     	;# 
  1043  0594                     	;# 
  1044  0594                     	;# 
  1045  0595                     	;# 
  1046  0596                     	;# 
  1047  0596                     	;# 
  1048  0597                     	;# 
  1049  0598                     	;# 
  1050  0599                     	;# 
  1051  059A                     	;# 
  1052  059B                     	;# 
  1053  059B                     	;# 
  1054  059C                     	;# 
  1055  059D                     	;# 
  1056  060C                     	;# 
  1057  060C                     	;# 
  1058  060D                     	;# 
  1059  060E                     	;# 
  1060  060F                     	;# 
  1061  060F                     	;# 
  1062  0610                     	;# 
  1063  0611                     	;# 
  1064  0612                     	;# 
  1065  0613                     	;# 
  1066  0614                     	;# 
  1067  0617                     	;# 
  1068  0618                     	;# 
  1069  0619                     	;# 
  1070  061A                     	;# 
  1071  061B                     	;# 
  1072  061C                     	;# 
  1073  0691                     	;# 
  1074  0692                     	;# 
  1075  0693                     	;# 
  1076  0694                     	;# 
  1077  0695                     	;# 
  1078  0696                     	;# 
  1079  0697                     	;# 
  1080  0699                     	;# 
  1081  069A                     	;# 
  1082  0711                     	;# 
  1083  0712                     	;# 
  1084  0713                     	;# 
  1085  0714                     	;# 
  1086  0715                     	;# 
  1087  0718                     	;# 
  1088  0718                     	;# 
  1089  0719                     	;# 
  1090  071A                     	;# 
  1091  071A                     	;# 
  1092  071B                     	;# 
  1093  071C                     	;# 
  1094  071D                     	;# 
  1095  0791                     	;# 
  1096  0791                     	;# 
  1097  0792                     	;# 
  1098  0793                     	;# 
  1099  0793                     	;# 
  1100  0794                     	;# 
  1101  0795                     	;# 
  1102  0795                     	;# 
  1103  0796                     	;# 
  1104  0797                     	;# 
  1105  0797                     	;# 
  1106  0798                     	;# 
  1107  0799                     	;# 
  1108  079A                     	;# 
  1109  080C                     	;# 
  1110  080C                     	;# 
  1111  080D                     	;# 
  1112  080E                     	;# 
  1113  080E                     	;# 
  1114  080F                     	;# 
  1115  0810                     	;# 
  1116  0810                     	;# 
  1117  0811                     	;# 
  1118  0812                     	;# 
  1119  0812                     	;# 
  1120  0813                     	;# 
  1121  0814                     	;# 
  1122  0815                     	;# 
  1123  0816                     	;# 
  1124  0817                     	;# 
  1125  0818                     	;# 
  1126  0819                     	;# 
  1127  081A                     	;# 
  1128  081A                     	;# 
  1129  081B                     	;# 
  1130  081C                     	;# 
  1131  081C                     	;# 
  1132  081D                     	;# 
  1133  088C                     	;# 
  1134  088D                     	;# 
  1135  088E                     	;# 
  1136  088F                     	;# 
  1137  088F                     	;# 
  1138  0890                     	;# 
  1139  0891                     	;# 
  1140  0892                     	;# 
  1141  0893                     	;# 
  1142  0893                     	;# 
  1143  0894                     	;# 
  1144  0895                     	;# 
  1145  0896                     	;# 
  1146  0897                     	;# 
  1147  0897                     	;# 
  1148  0898                     	;# 
  1149  0899                     	;# 
  1150  0D8C                     	;# 
  1151  0D8C                     	;# 
  1152  0D8D                     	;# 
  1153  0D8E                     	;# 
  1154  0D8F                     	;# 
  1155  0D8F                     	;# 
  1156  0D90                     	;# 
  1157  0D91                     	;# 
  1158  0D92                     	;# 
  1159  0D92                     	;# 
  1160  0D93                     	;# 
  1161  0D94                     	;# 
  1162  0D95                     	;# 
  1163  0D95                     	;# 
  1164  0D96                     	;# 
  1165  0D97                     	;# 
  1166  0D98                     	;# 
  1167  0D99                     	;# 
  1168  0D9A                     	;# 
  1169  0D9B                     	;# 
  1170  0D9C                     	;# 
  1171  0D9D                     	;# 
  1172  0D9E                     	;# 
  1173  0D9E                     	;# 
  1174  0D9F                     	;# 
  1175  0DA0                     	;# 
  1176  0DA1                     	;# 
  1177  0DA1                     	;# 
  1178  0DA2                     	;# 
  1179  0DA3                     	;# 
  1180  0DA4                     	;# 
  1181  0DA4                     	;# 
  1182  0DA5                     	;# 
  1183  0DA6                     	;# 
  1184  0DA7                     	;# 
  1185  0DA7                     	;# 
  1186  0DA8                     	;# 
  1187  0DA9                     	;# 
  1188  0DAA                     	;# 
  1189  0DAB                     	;# 
  1190  0DAC                     	;# 
  1191  0DAD                     	;# 
  1192  0DAE                     	;# 
  1193  0DAF                     	;# 
  1194  0E0F                     	;# 
  1195  0E10                     	;# 
  1196  0E11                     	;# 
  1197  0E12                     	;# 
  1198  0E13                     	;# 
  1199  0E14                     	;# 
  1200  0E15                     	;# 
  1201  0E16                     	;# 
  1202  0E17                     	;# 
  1203  0E18                     	;# 
  1204  0E19                     	;# 
  1205  0E1A                     	;# 
  1206  0E1B                     	;# 
  1207  0E1C                     	;# 
  1208  0E1D                     	;# 
  1209  0E1E                     	;# 
  1210  0E1F                     	;# 
  1211  0E20                     	;# 
  1212  0E21                     	;# 
  1213  0E22                     	;# 
  1214  0E23                     	;# 
  1215  0E24                     	;# 
  1216  0E25                     	;# 
  1217  0E26                     	;# 
  1218  0E27                     	;# 
  1219  0E28                     	;# 
  1220  0E29                     	;# 
  1221  0E2A                     	;# 
  1222  0E2B                     	;# 
  1223  0E2C                     	;# 
  1224  0E2D                     	;# 
  1225  0E2E                     	;# 
  1226  0E90                     	;# 
  1227  0E91                     	;# 
  1228  0E92                     	;# 
  1229  0E94                     	;# 
  1230  0E95                     	;# 
  1231  0E9C                     	;# 
  1232  0E9D                     	;# 
  1233  0E9E                     	;# 
  1234  0E9F                     	;# 
  1235  0EA0                     	;# 
  1236  0EA1                     	;# 
  1237  0EA2                     	;# 
  1238  0EA3                     	;# 
  1239  0EA4                     	;# 
  1240  0EA5                     	;# 
  1241  0EA6                     	;# 
  1242  0EA7                     	;# 
  1243  0F0F                     	;# 
  1244  0F10                     	;# 
  1245  0F11                     	;# 
  1246  0F12                     	;# 
  1247  0F13                     	;# 
  1248  0F14                     	;# 
  1249  0F15                     	;# 
  1250  0F16                     	;# 
  1251  0F17                     	;# 
  1252  0F18                     	;# 
  1253  0F19                     	;# 
  1254  0F1A                     	;# 
  1255  0F1B                     	;# 
  1256  0F1C                     	;# 
  1257  0F1D                     	;# 
  1258  0F1E                     	;# 
  1259  0F1F                     	;# 
  1260  0F20                     	;# 
  1261  0F21                     	;# 
  1262  0F22                     	;# 
  1263  0F23                     	;# 
  1264  0FE4                     	;# 
  1265  0FE5                     	;# 
  1266  0FE6                     	;# 
  1267  0FE7                     	;# 
  1268  0FE8                     	;# 
  1269  0FE9                     	;# 
  1270  0FEA                     	;# 
  1271  0FEB                     	;# 
  1272  0FED                     	;# 
  1273  0FEE                     	;# 
  1274  0FEF                     	;# 
  1275  0000                     	;# 
  1276  0001                     	;# 
  1277  0002                     	;# 
  1278  0003                     	;# 
  1279  0004                     	;# 
  1280  0005                     	;# 
  1281  0006                     	;# 
  1282  0007                     	;# 
  1283  0008                     	;# 
  1284  0009                     	;# 
  1285  000A                     	;# 
  1286  000B                     	;# 
  1287  000C                     	;# 
  1288  000D                     	;# 
  1289  000E                     	;# 
  1290  0010                     	;# 
  1291  0011                     	;# 
  1292  0012                     	;# 
  1293  0013                     	;# 
  1294  0014                     	;# 
  1295  0015                     	;# 
  1296  0016                     	;# 
  1297  0016                     	;# 
  1298  0017                     	;# 
  1299  0018                     	;# 
  1300  0019                     	;# 
  1301  001A                     	;# 
  1302  001A                     	;# 
  1303  001B                     	;# 
  1304  001B                     	;# 
  1305  001C                     	;# 
  1306  001D                     	;# 
  1307  001E                     	;# 
  1308  001F                     	;# 
  1309  008C                     	;# 
  1310  008D                     	;# 
  1311  008E                     	;# 
  1312  0090                     	;# 
  1313  0091                     	;# 
  1314  0092                     	;# 
  1315  0093                     	;# 
  1316  0094                     	;# 
  1317  0095                     	;# 
  1318  0096                     	;# 
  1319  0098                     	;# 
  1320  0099                     	;# 
  1321  009A                     	;# 
  1322  009B                     	;# 
  1323  009B                     	;# 
  1324  009C                     	;# 
  1325  009D                     	;# 
  1326  009E                     	;# 
  1327  009F                     	;# 
  1328  010C                     	;# 
  1329  010D                     	;# 
  1330  010E                     	;# 
  1331  0111                     	;# 
  1332  0112                     	;# 
  1333  0113                     	;# 
  1334  0114                     	;# 
  1335  0115                     	;# 
  1336  0116                     	;# 
  1337  0117                     	;# 
  1338  0118                     	;# 
  1339  0119                     	;# 
  1340  011C                     	;# 
  1341  018C                     	;# 
  1342  018D                     	;# 
  1343  018E                     	;# 
  1344  0191                     	;# 
  1345  0191                     	;# 
  1346  0192                     	;# 
  1347  0193                     	;# 
  1348  0193                     	;# 
  1349  0194                     	;# 
  1350  0195                     	;# 
  1351  0196                     	;# 
  1352  0199                     	;# 
  1353  0199                     	;# 
  1354  0199                     	;# 
  1355  019A                     	;# 
  1356  019A                     	;# 
  1357  019A                     	;# 
  1358  019B                     	;# 
  1359  019B                     	;# 
  1360  019B                     	;# 
  1361  019B                     	;# 
  1362  019B                     	;# 
  1363  019C                     	;# 
  1364  019C                     	;# 
  1365  019C                     	;# 
  1366  019D                     	;# 
  1367  019D                     	;# 
  1368  019D                     	;# 
  1369  019E                     	;# 
  1370  019E                     	;# 
  1371  019E                     	;# 
  1372  019F                     	;# 
  1373  019F                     	;# 
  1374  019F                     	;# 
  1375  019F                     	;# 
  1376  019F                     	;# 
  1377  020C                     	;# 
  1378  020D                     	;# 
  1379  020E                     	;# 
  1380  0211                     	;# 
  1381  0211                     	;# 
  1382  0212                     	;# 
  1383  0212                     	;# 
  1384  0213                     	;# 
  1385  0213                     	;# 
  1386  0214                     	;# 
  1387  0214                     	;# 
  1388  0215                     	;# 
  1389  0215                     	;# 
  1390  0215                     	;# 
  1391  0215                     	;# 
  1392  0216                     	;# 
  1393  0216                     	;# 
  1394  0217                     	;# 
  1395  0217                     	;# 
  1396  028C                     	;# 
  1397  028D                     	;# 
  1398  028E                     	;# 
  1399  0291                     	;# 
  1400  0291                     	;# 
  1401  0292                     	;# 
  1402  0293                     	;# 
  1403  0294                     	;# 
  1404  0298                     	;# 
  1405  0298                     	;# 
  1406  0299                     	;# 
  1407  029A                     	;# 
  1408  029B                     	;# 
  1409  029E                     	;# 
  1410  030C                     	;# 
  1411  030D                     	;# 
  1412  030E                     	;# 
  1413  038C                     	;# 
  1414  038D                     	;# 
  1415  038E                     	;# 
  1416  0391                     	;# 
  1417  0392                     	;# 
  1418  0393                     	;# 
  1419  0394                     	;# 
  1420  0395                     	;# 
  1421  0396                     	;# 
  1422  0397                     	;# 
  1423  0398                     	;# 
  1424  0399                     	;# 
  1425  040E                     	;# 
  1426  0413                     	;# 
  1427  0413                     	;# 
  1428  0414                     	;# 
  1429  0414                     	;# 
  1430  0415                     	;# 
  1431  0416                     	;# 
  1432  0417                     	;# 
  1433  0418                     	;# 
  1434  041A                     	;# 
  1435  041A                     	;# 
  1436  041B                     	;# 
  1437  041B                     	;# 
  1438  041C                     	;# 
  1439  041D                     	;# 
  1440  041E                     	;# 
  1441  041F                     	;# 
  1442  0493                     	;# 
  1443  0494                     	;# 
  1444  0495                     	;# 
  1445  0496                     	;# 
  1446  049A                     	;# 
  1447  049B                     	;# 
  1448  049C                     	;# 
  1449  049D                     	;# 
  1450  058C                     	;# 
  1451  058C                     	;# 
  1452  058D                     	;# 
  1453  058E                     	;# 
  1454  058E                     	;# 
  1455  058F                     	;# 
  1456  0590                     	;# 
  1457  0590                     	;# 
  1458  0591                     	;# 
  1459  0592                     	;# 
  1460  0592                     	;# 
  1461  0593                     	;# 
  1462  0594                     	;# 
  1463  0594                     	;# 
  1464  0595                     	;# 
  1465  0596                     	;# 
  1466  0596                     	;# 
  1467  0597                     	;# 
  1468  0598                     	;# 
  1469  0599                     	;# 
  1470  059A                     	;# 
  1471  059B                     	;# 
  1472  059B                     	;# 
  1473  059C                     	;# 
  1474  059D                     	;# 
  1475  060C                     	;# 
  1476  060C                     	;# 
  1477  060D                     	;# 
  1478  060E                     	;# 
  1479  060F                     	;# 
  1480  060F                     	;# 
  1481  0610                     	;# 
  1482  0611                     	;# 
  1483  0612                     	;# 
  1484  0613                     	;# 
  1485  0614                     	;# 
  1486  0617                     	;# 
  1487  0618                     	;# 
  1488  0619                     	;# 
  1489  061A                     	;# 
  1490  061B                     	;# 
  1491  061C                     	;# 
  1492  0691                     	;# 
  1493  0692                     	;# 
  1494  0693                     	;# 
  1495  0694                     	;# 
  1496  0695                     	;# 
  1497  0696                     	;# 
  1498  0697                     	;# 
  1499  0699                     	;# 
  1500  069A                     	;# 
  1501  0711                     	;# 
  1502  0712                     	;# 
  1503  0713                     	;# 
  1504  0714                     	;# 
  1505  0715                     	;# 
  1506  0718                     	;# 
  1507  0718                     	;# 
  1508  0719                     	;# 
  1509  071A                     	;# 
  1510  071A                     	;# 
  1511  071B                     	;# 
  1512  071C                     	;# 
  1513  071D                     	;# 
  1514  0791                     	;# 
  1515  0791                     	;# 
  1516  0792                     	;# 
  1517  0793                     	;# 
  1518  0793                     	;# 
  1519  0794                     	;# 
  1520  0795                     	;# 
  1521  0795                     	;# 
  1522  0796                     	;# 
  1523  0797                     	;# 
  1524  0797                     	;# 
  1525  0798                     	;# 
  1526  0799                     	;# 
  1527  079A                     	;# 
  1528  080C                     	;# 
  1529  080C                     	;# 
  1530  080D                     	;# 
  1531  080E                     	;# 
  1532  080E                     	;# 
  1533  080F                     	;# 
  1534  0810                     	;# 
  1535  0810                     	;# 
  1536  0811                     	;# 
  1537  0812                     	;# 
  1538  0812                     	;# 
  1539  0813                     	;# 
  1540  0814                     	;# 
  1541  0815                     	;# 
  1542  0816                     	;# 
  1543  0817                     	;# 
  1544  0818                     	;# 
  1545  0819                     	;# 
  1546  081A                     	;# 
  1547  081A                     	;# 
  1548  081B                     	;# 
  1549  081C                     	;# 
  1550  081C                     	;# 
  1551  081D                     	;# 
  1552  088C                     	;# 
  1553  088D                     	;# 
  1554  088E                     	;# 
  1555  088F                     	;# 
  1556  088F                     	;# 
  1557  0890                     	;# 
  1558  0891                     	;# 
  1559  0892                     	;# 
  1560  0893                     	;# 
  1561  0893                     	;# 
  1562  0894                     	;# 
  1563  0895                     	;# 
  1564  0896                     	;# 
  1565  0897                     	;# 
  1566  0897                     	;# 
  1567  0898                     	;# 
  1568  0899                     	;# 
  1569  0D8C                     	;# 
  1570  0D8C                     	;# 
  1571  0D8D                     	;# 
  1572  0D8E                     	;# 
  1573  0D8F                     	;# 
  1574  0D8F                     	;# 
  1575  0D90                     	;# 
  1576  0D91                     	;# 
  1577  0D92                     	;# 
  1578  0D92                     	;# 
  1579  0D93                     	;# 
  1580  0D94                     	;# 
  1581  0D95                     	;# 
  1582  0D95                     	;# 
  1583  0D96                     	;# 
  1584  0D97                     	;# 
  1585  0D98                     	;# 
  1586  0D99                     	;# 
  1587  0D9A                     	;# 
  1588  0D9B                     	;# 
  1589  0D9C                     	;# 
  1590  0D9D                     	;# 
  1591  0D9E                     	;# 
  1592  0D9E                     	;# 
  1593  0D9F                     	;# 
  1594  0DA0                     	;# 
  1595  0DA1                     	;# 
  1596  0DA1                     	;# 
  1597  0DA2                     	;# 
  1598  0DA3                     	;# 
  1599  0DA4                     	;# 
  1600  0DA4                     	;# 
  1601  0DA5                     	;# 
  1602  0DA6                     	;# 
  1603  0DA7                     	;# 
  1604  0DA7                     	;# 
  1605  0DA8                     	;# 
  1606  0DA9                     	;# 
  1607  0DAA                     	;# 
  1608  0DAB                     	;# 
  1609  0DAC                     	;# 
  1610  0DAD                     	;# 
  1611  0DAE                     	;# 
  1612  0DAF                     	;# 
  1613  0E0F                     	;# 
  1614  0E10                     	;# 
  1615  0E11                     	;# 
  1616  0E12                     	;# 
  1617  0E13                     	;# 
  1618  0E14                     	;# 
  1619  0E15                     	;# 
  1620  0E16                     	;# 
  1621  0E17                     	;# 
  1622  0E18                     	;# 
  1623  0E19                     	;# 
  1624  0E1A                     	;# 
  1625  0E1B                     	;# 
  1626  0E1C                     	;# 
  1627  0E1D                     	;# 
  1628  0E1E                     	;# 
  1629  0E1F                     	;# 
  1630  0E20                     	;# 
  1631  0E21                     	;# 
  1632  0E22                     	;# 
  1633  0E23                     	;# 
  1634  0E24                     	;# 
  1635  0E25                     	;# 
  1636  0E26                     	;# 
  1637  0E27                     	;# 
  1638  0E28                     	;# 
  1639  0E29                     	;# 
  1640  0E2A                     	;# 
  1641  0E2B                     	;# 
  1642  0E2C                     	;# 
  1643  0E2D                     	;# 
  1644  0E2E                     	;# 
  1645  0E90                     	;# 
  1646  0E91                     	;# 
  1647  0E92                     	;# 
  1648  0E94                     	;# 
  1649  0E95                     	;# 
  1650  0E9C                     	;# 
  1651  0E9D                     	;# 
  1652  0E9E                     	;# 
  1653  0E9F                     	;# 
  1654  0EA0                     	;# 
  1655  0EA1                     	;# 
  1656  0EA2                     	;# 
  1657  0EA3                     	;# 
  1658  0EA4                     	;# 
  1659  0EA5                     	;# 
  1660  0EA6                     	;# 
  1661  0EA7                     	;# 
  1662  0F0F                     	;# 
  1663  0F10                     	;# 
  1664  0F11                     	;# 
  1665  0F12                     	;# 
  1666  0F13                     	;# 
  1667  0F14                     	;# 
  1668  0F15                     	;# 
  1669  0F16                     	;# 
  1670  0F17                     	;# 
  1671  0F18                     	;# 
  1672  0F19                     	;# 
  1673  0F1A                     	;# 
  1674  0F1B                     	;# 
  1675  0F1C                     	;# 
  1676  0F1D                     	;# 
  1677  0F1E                     	;# 
  1678  0F1F                     	;# 
  1679  0F20                     	;# 
  1680  0F21                     	;# 
  1681  0F22                     	;# 
  1682  0F23                     	;# 
  1683  0FE4                     	;# 
  1684  0FE5                     	;# 
  1685  0FE6                     	;# 
  1686  0FE7                     	;# 
  1687  0FE8                     	;# 
  1688  0FE9                     	;# 
  1689  0FEA                     	;# 
  1690  0FEB                     	;# 
  1691  0FED                     	;# 
  1692  0FEE                     	;# 
  1693  0FEF                     	;# 
  1694                           
  1695                           	psect	stringtext
  1696  0800                     __pstringtext:	
  1697  0800                     _DATA:	
  1698  0800  3400               	retlw	0
  1699  0801  3480               	retlw	128
  1700  0802  3440               	retlw	64
  1701  0803  34C0               	retlw	192
  1702  0804  3420               	retlw	32
  1703  0805  34A0               	retlw	160
  1704  0806  3460               	retlw	96
  1705  0807  34E0               	retlw	224
  1706  0808  3410               	retlw	16
  1707  0809  3490               	retlw	144
  1708  080A  3450               	retlw	80
  1709  080B  34D0               	retlw	208
  1710  080C  3430               	retlw	48
  1711  080D  34B0               	retlw	176
  1712  080E  3470               	retlw	112
  1713  080F  34F0               	retlw	240
  1714  0810  3408               	retlw	8
  1715  0811  3488               	retlw	136
  1716  0812  3448               	retlw	72
  1717  0813  34C8               	retlw	200
  1718  0814  3428               	retlw	40
  1719  0815  34A8               	retlw	168
  1720  0816  3468               	retlw	104
  1721  0817  34E8               	retlw	232
  1722  0818  3418               	retlw	24
  1723  0819  3498               	retlw	152
  1724  081A  3458               	retlw	88
  1725  081B  34D8               	retlw	216
  1726  081C  3438               	retlw	56
  1727  081D  34B8               	retlw	184
  1728  081E  3478               	retlw	120
  1729  081F  34F8               	retlw	248
  1730  0820  3404               	retlw	4
  1731  0821  3484               	retlw	132
  1732  0822  3444               	retlw	68
  1733  0823  34C4               	retlw	196
  1734  0824  3424               	retlw	36
  1735  0825  34A4               	retlw	164
  1736  0826  3464               	retlw	100
  1737  0827  34E4               	retlw	228
  1738  0828  3414               	retlw	20
  1739  0829  3494               	retlw	148
  1740  082A  3454               	retlw	84
  1741  082B  34D4               	retlw	212
  1742  082C  3434               	retlw	52
  1743  082D  34B4               	retlw	180
  1744  082E  3474               	retlw	116
  1745  082F  34F4               	retlw	244
  1746  0830  340C               	retlw	12
  1747  0831  348C               	retlw	140
  1748  0832  344C               	retlw	76
  1749  0833  34CC               	retlw	204
  1750  0834  342C               	retlw	44
  1751  0835  34AC               	retlw	172
  1752  0836  346C               	retlw	108
  1753  0837  34EC               	retlw	236
  1754  0838  341C               	retlw	28
  1755  0839  349C               	retlw	156
  1756  083A  345C               	retlw	92
  1757  083B  34DC               	retlw	220
  1758  083C  343C               	retlw	60
  1759  083D  34BC               	retlw	188
  1760  083E  347C               	retlw	124
  1761  083F  34FC               	retlw	252
  1762  0840  3406               	retlw	6
  1763  0841                     __end_of_DATA:	
  1764  0841                     _DacOutput:	
  1765  0841  342B               	retlw	43
  1766  0842  3448               	retlw	72
  1767  0843  3456               	retlw	86
  1768  0844  3464               	retlw	100
  1769  0845                     __end_of_DacOutput:	
  1770  0845                     _REGADD:	
  1771  0845  3407               	retlw	7
  1772  0846  3410               	retlw	16
  1773  0847                     __end_of_REGADD:	
  1774  0847                     _SLAVEADD:	
  1775  0847  3406               	retlw	6
  1776  0848  340E               	retlw	14
  1777  0849                     __end_of_SLAVEADD:	
  1778  000E                     _PORTC	set	14
  1779  0095                     _OPTION_REGbits	set	149
  1780  0099                     _OSCCON	set	153
  1781  009A                     _OSCSTAT	set	154
  1782  0098                     _OSCTUNE	set	152
  1783  008C                     _TRISA	set	140
  1784  008D                     _TRISB	set	141
  1785  008E                     _TRISC	set	142
  1786  0118                     _DAC1CON0	set	280
  1787  0119                     _DAC1CON1	set	281
  1788  010C                     _LATA	set	268
  1789  010D                     _LATB	set	269
  1790  010E                     _LATC	set	270
  1791  0861                     _LATA1	set	2145
  1792  0862                     _LATA2	set	2146
  1793  0864                     _LATA4	set	2148
  1794  086C                     _LATB4	set	2156
  1795  086D                     _LATB5	set	2157
  1796  086E                     _LATB6	set	2158
  1797  086F                     _LATB7	set	2159
  1798  018C                     _ANSELA	set	396
  1799  018D                     _ANSELB	set	397
  1800  018E                     _ANSELC	set	398
  1801  020D                     _WPUB	set	525
  1802  020E                     _WPUC	set	526
  1803                           
  1804                           ; #config settings
  1805  0000                     
  1806                           	psect	cinit
  1807  07F6                     start_initialization:	
  1808  07F6                     __initialization:	
  1809                           
  1810                           ; Clear objects allocated to BANK0
  1811  07F6  01A0               	clrf	__pbssBANK0& (0+127)
  1812  07F7  01A1               	clrf	(__pbssBANK0+1)& (0+127)
  1813  07F8  01A2               	clrf	(__pbssBANK0+2)& (0+127)
  1814  07F9  01A3               	clrf	(__pbssBANK0+3)& (0+127)
  1815  07FA  01A4               	clrf	(__pbssBANK0+4)& (0+127)
  1816  07FB  01A5               	clrf	(__pbssBANK0+5)& (0+127)
  1817  07FC  01A6               	clrf	(__pbssBANK0+6)& (0+127)
  1818  07FD                     end_of_initialization:	
  1819                           ;End of C runtime variable initialization code
  1820                           
  1821  07FD                     __end_of__initialization:	
  1822  07FD  0020               	movlb	0
  1823  07FE  3185  2DF0         	ljmp	_main	;jump to C main() function
  1824                           
  1825                           	psect	bssBANK0
  1826  0020                     __pbssBANK0:	
  1827  0020                     _Byte1:	
  1828  0020                     	ds	1
  1829  0021                     _Byte2:	
  1830  0021                     	ds	1
  1831  0022                     _Byte3:	
  1832  0022                     	ds	1
  1833  0023                     _parity1:	
  1834  0023                     	ds	1
  1835  0024                     _parity2:	
  1836  0024                     	ds	1
  1837  0025                     _parity3:	
  1838  0025                     	ds	1
  1839  0026                     _parity4:	
  1840  0026                     	ds	1
  1841                           
  1842                           	psect	cstackCOMMON
  1843  0070                     __pcstackCOMMON:	
  1844  0070                     ?_OSCILLATOR_Initialize:	
  1845  0070                     ??_OSCILLATOR_Initialize:	
  1846                           ; 0 bytes @ 0x0
  1847                           
  1848  0070                     ?_DAC1_Initialize:	
  1849                           ; 0 bytes @ 0x0
  1850                           
  1851  0070                     ??_DAC1_Initialize:	
  1852                           ; 0 bytes @ 0x0
  1853                           
  1854  0070                     ?_DAC1_SetOutput:	
  1855                           ; 0 bytes @ 0x0
  1856                           
  1857  0070                     ??_DAC1_SetOutput:	
  1858                           ; 0 bytes @ 0x0
  1859                           
  1860  0070                     ?_PIN_MANAGER_Initialize:	
  1861                           ; 0 bytes @ 0x0
  1862                           
  1863  0070                     ??_PIN_MANAGER_Initialize:	
  1864                           ; 0 bytes @ 0x0
  1865                           
  1866  0070                     ?_SYSTEM_Initialize:	
  1867                           ; 0 bytes @ 0x0
  1868                           
  1869  0070                     ??_SYSTEM_Initialize:	
  1870                           ; 0 bytes @ 0x0
  1871                           
  1872  0070                     ?_shiftRegister:	
  1873                           ; 0 bytes @ 0x0
  1874                           
  1875  0070                     ??_paritycheck:	
  1876                           ; 0 bytes @ 0x0
  1877                           
  1878  0070                     ?_main:	
  1879                           ; 0 bytes @ 0x0
  1880                           
  1881  0070                     ?_paritycheck:	
  1882                           ; 0 bytes @ 0x0
  1883                           
  1884  0070                     DAC1_SetOutput@inputData:	
  1885                           ; 1 bytes @ 0x0
  1886                           
  1887  0070                     shiftRegister@Dummy2:	
  1888                           ; 1 bytes @ 0x0
  1889                           
  1890                           
  1891                           ; 1 bytes @ 0x0
  1892  0070                     	ds	1
  1893  0071                     shiftRegister@y:	
  1894  0071                     paritycheck@parity:	
  1895                           ; 1 bytes @ 0x1
  1896                           
  1897                           
  1898                           ; 1 bytes @ 0x1
  1899  0071                     	ds	1
  1900  0072                     ??_shiftRegister:	
  1901  0072                     paritycheck@Dummy:	
  1902                           ; 0 bytes @ 0x2
  1903                           
  1904                           
  1905                           ; 1 bytes @ 0x2
  1906  0072                     	ds	1
  1907  0073                     shiftRegister@m:	
  1908                           
  1909                           ; 1 bytes @ 0x3
  1910  0073                     	ds	1
  1911  0074                     shiftRegister@Dummy1:	
  1912                           
  1913                           ; 1 bytes @ 0x4
  1914  0074                     	ds	1
  1915  0075                     ?_MIPI:	
  1916  0075                     MIPI@b:	
  1917                           ; 0 bytes @ 0x5
  1918                           
  1919                           
  1920                           ; 1 bytes @ 0x5
  1921  0075                     	ds	1
  1922  0076                     MIPI@c:	
  1923                           
  1924                           ; 1 bytes @ 0x6
  1925  0076                     	ds	1
  1926  0077                     MIPI@d:	
  1927                           
  1928                           ; 1 bytes @ 0x7
  1929  0077                     	ds	1
  1930  0078                     ??_MIPI:	
  1931                           
  1932                           ; 0 bytes @ 0x8
  1933  0078                     	ds	2
  1934  007A                     MIPI@a:	
  1935                           
  1936                           ; 1 bytes @ 0xA
  1937  007A                     	ds	1
  1938  007B                     MIPI@j:	
  1939                           
  1940                           ; 1 bytes @ 0xB
  1941  007B                     	ds	1
  1942  007C                     MIPI@i:	
  1943                           
  1944                           ; 1 bytes @ 0xC
  1945  007C                     	ds	1
  1946  007D                     ??_main:	
  1947                           
  1948                           ; 0 bytes @ 0xD
  1949  007D                     	ds	1
  1950                           
  1951                           	psect	maintext
  1952  05F0                     __pmaintext:	
  1953 ;;
  1954 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1955 ;;
  1956 ;; *************** function _main *****************
  1957 ;; Defined at:
  1958 ;;		line 193 in file "main.c"
  1959 ;; Parameters:    Size  Location     Type
  1960 ;;		None
  1961 ;; Auto vars:     Size  Location     Type
  1962 ;;		None
  1963 ;; Return value:  Size  Location     Type
  1964 ;;		None               void
  1965 ;; Registers used:
  1966 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1967 ;; Tracked objects:
  1968 ;;		On entry : B1F/0
  1969 ;;		On exit  : 0/0
  1970 ;;		Unchanged: 0/0
  1971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1972 ;;      Params:         0       0       0       0       0       0       0       0
  1973 ;;      Locals:         0       0       0       0       0       0       0       0
  1974 ;;      Temps:          1       0       0       0       0       0       0       0
  1975 ;;      Totals:         1       0       0       0       0       0       0       0
  1976 ;;Total ram usage:        1 bytes
  1977 ;; Hardware stack levels required when called:    2
  1978 ;; This function calls:
  1979 ;;		_DAC1_Initialize
  1980 ;;		_DAC1_SetOutput
  1981 ;;		_MIPI
  1982 ;;		_PIN_MANAGER_Initialize
  1983 ;;		_SYSTEM_Initialize
  1984 ;; This function is called by:
  1985 ;;		Startup code after reset
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989                           
  1990                           ;psect for function _main
  1991  05F0                     _main:	
  1992                           
  1993                           ;main.c: 195: SYSTEM_Initialize();
  1994                           
  1995                           ;incstack = 0
  1996                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1997  05F0  3185  2589  3185   	fcall	_SYSTEM_Initialize
  1998                           
  1999                           ;main.c: 196: DAC1_Initialize();
  2000  05F3  3185  257E  3185   	fcall	_DAC1_Initialize
  2001                           
  2002                           ;main.c: 197: PIN_MANAGER_Initialize();
  2003  05F6  3185  25AE  3185   	fcall	_PIN_MANAGER_Initialize
  2004                           
  2005                           ;main.c: 199: DAC1_SetOutput(0);
  2006  05F9  3000               	movlw	0
  2007  05FA  3185  2579  3185   	fcall	_DAC1_SetOutput
  2008                           
  2009                           ;main.c: 200: do { LATA1 = 0; } while(0);
  2010  05FD  0022               	movlb	2	; select bank2
  2011  05FE  108C               	bcf	12,1	;volatile
  2012                           
  2013                           ;main.c: 201: do { LATA4 = 0; } while(0);
  2014  05FF  120C               	bcf	12,4	;volatile
  2015                           
  2016                           ;main.c: 202: do { LATA2 = 0; } while(0);
  2017  0600  110C               	bcf	12,2	;volatile
  2018                           
  2019                           ;main.c: 203: do { LATB4 = 0; } while(0);
  2020  0601  120D               	bcf	13,4	;volatile
  2021  0602                     l981:	
  2022                           ;main.c: 205: while ((PORTC & 0xC0) != 0xC0) {
  2023                           
  2024                           ;main.c: 204: while (1) {
  2025                           
  2026  0602  30C0               	movlw	192
  2027  0603  0020               	movlb	0	; select bank0
  2028  0604  050E               	andwf	14,w	;volatile
  2029  0605  00FD               	movwf	??_main
  2030  0606  30C0               	movlw	192
  2031  0607  067D               	xorwf	??_main,w
  2032  0608  1D03               	btfss	3,2
  2033  0609  2E02               	goto	l981
  2034                           
  2035                           ;main.c: 206: }
  2036                           ;main.c: 207: Byte1 = PORTC;
  2037  060A  080E               	movf	14,w	;volatile
  2038  060B  00FD               	movwf	??_main
  2039  060C  087D               	movf	??_main,w
  2040  060D  00A0               	movwf	_Byte1
  2041  060E                     l985:	
  2042                           ;main.c: 208: while ((PORTC & 0xC0) != 0x40) {
  2043                           
  2044  060E  30C0               	movlw	192
  2045  060F  050E               	andwf	14,w	;volatile
  2046  0610  00FD               	movwf	??_main
  2047  0611  3040               	movlw	64
  2048  0612  067D               	xorwf	??_main,w
  2049  0613  1D03               	btfss	3,2
  2050  0614  2E0E               	goto	l985
  2051                           
  2052                           ;main.c: 209: }
  2053                           ;main.c: 210: Byte2 = PORTC & 0x3F;
  2054  0615  080E               	movf	14,w	;volatile
  2055  0616  393F               	andlw	63
  2056  0617  00FD               	movwf	??_main
  2057  0618  087D               	movf	??_main,w
  2058  0619  00A1               	movwf	_Byte2
  2059  061A                     l989:	
  2060                           ;main.c: 211: while ((PORTC & 0xC0) != 0x80) {
  2061                           
  2062  061A  30C0               	movlw	192
  2063  061B  050E               	andwf	14,w	;volatile
  2064  061C  00FD               	movwf	??_main
  2065  061D  3080               	movlw	128
  2066  061E  067D               	xorwf	??_main,w
  2067  061F  1D03               	btfss	3,2
  2068  0620  2E1A               	goto	l989
  2069                           
  2070                           ;main.c: 212: }
  2071                           ;main.c: 213: Byte3 = PORTC & 0x3F;
  2072  0621  080E               	movf	14,w	;volatile
  2073  0622  393F               	andlw	63
  2074  0623  00FD               	movwf	??_main
  2075  0624  087D               	movf	??_main,w
  2076  0625  00A2               	movwf	_Byte3
  2077                           
  2078                           ;main.c: 214: if (((Byte1 & 0x10) == 0x10) && ((Byte1 & 0x0C) != 0x00))
  2079  0626  1E20               	btfss	_Byte1,4
  2080  0627  2E36               	goto	l999
  2081  0628  0820               	movf	_Byte1,w
  2082  0629  390C               	andlw	12
  2083  062A  1903               	btfsc	3,2
  2084  062B  2E36               	goto	l999
  2085                           
  2086                           ;main.c: 215: DAC1_SetOutput(DacOutput[(Byte1 & 0x03)]);
  2087  062C  0820               	movf	_Byte1,w
  2088  062D  3903               	andlw	3
  2089  062E  3E41               	addlw	low (_DacOutput| (0+32768))
  2090  062F  0084               	movwf	4
  2091  0630  3088               	movlw	high (_DacOutput| (0+32768))
  2092  0631  1803               	skipnc
  2093  0632  3E01               	addlw	1
  2094  0633  0085               	movwf	5
  2095  0634  0800               	movf	0,w	;code access
  2096  0635  2E37               	goto	L1
  2097  0636                     l999:	
  2098                           
  2099                           ;main.c: 216: else
  2100                           ;main.c: 217: DAC1_SetOutput(0);
  2101  0636  3000               	movlw	0
  2102  0637                     L1:	
  2103  0637  3185  2579  3185   	fcall	_DAC1_SetOutput
  2104                           
  2105                           ;main.c: 219: if ((Byte1 & 0x3C) == 0x20) {
  2106  063A  303C               	movlw	60
  2107  063B  0020               	movlb	0	; select bank0
  2108  063C  0520               	andwf	_Byte1,w
  2109  063D  00FD               	movwf	??_main
  2110  063E  3020               	movlw	32
  2111  063F  067D               	xorwf	??_main,w
  2112  0640  1903               	btfsc	3,2
  2113  0641  2E86               	goto	l178
  2114                           
  2115                           ;main.c: 223: if (((Byte1 & 0x30) != 0x00) && ((Byte1 & 0x0C) != 0x00)) {
  2116                           
  2117                           ;main.c: 222: } else {
  2118                           
  2119                           ;main.c: 221: do { LATB4 = 1; } while(0);
  2120                           
  2121                           ;main.c: 220: do { LATA2 = 0; } while(0);
  2122  0642  0020               	movlb	0	; select bank0
  2123  0643  0820               	movf	_Byte1,w
  2124  0644  3930               	andlw	48
  2125  0645  1903               	btfsc	3,2
  2126  0646  2E8A               	goto	l183
  2127  0647  0820               	movf	_Byte1,w
  2128  0648  390C               	andlw	12
  2129  0649  1903               	btfsc	3,2
  2130  064A  2E8A               	goto	l183
  2131                           
  2132                           ;main.c: 224: if ((Byte2 == 5) || (Byte2 == 8) || (Byte2 == 12) || (Byte2 == 13) || (Byt
      +                          e2 == 20) || (Byte2 == 26) || (Byte2 == 29) || (Byte3 == 5) || (Byte3 == 8) || (Byte3 ==
      +                           12) || (Byte3 == 13) || (Byte3 == 20) || (Byte3 == 26) || (Byte3 == 29)) {
  2133  064B  3005               	movlw	5
  2134  064C  0621               	xorwf	_Byte2,w
  2135  064D  1903               	btfsc	3,2
  2136  064E  2E83               	goto	l173
  2137  064F  3008               	movlw	8
  2138  0650  0621               	xorwf	_Byte2,w
  2139  0651  1903               	btfsc	3,2
  2140  0652  2E83               	goto	l173
  2141  0653  300C               	movlw	12
  2142  0654  0621               	xorwf	_Byte2,w
  2143  0655  1903               	btfsc	3,2
  2144  0656  2E83               	goto	l173
  2145  0657  300D               	movlw	13
  2146  0658  0621               	xorwf	_Byte2,w
  2147  0659  1903               	btfsc	3,2
  2148  065A  2E83               	goto	l173
  2149  065B  3014               	movlw	20
  2150  065C  0621               	xorwf	_Byte2,w
  2151  065D  1903               	btfsc	3,2
  2152  065E  2E83               	goto	l173
  2153  065F  301A               	movlw	26
  2154  0660  0621               	xorwf	_Byte2,w
  2155  0661  1903               	btfsc	3,2
  2156  0662  2E83               	goto	l173
  2157  0663  301D               	movlw	29
  2158  0664  0621               	xorwf	_Byte2,w
  2159  0665  1903               	btfsc	3,2
  2160  0666  2E83               	goto	l173
  2161  0667  3005               	movlw	5
  2162  0668  0622               	xorwf	_Byte3,w
  2163  0669  1903               	btfsc	3,2
  2164  066A  2E83               	goto	l173
  2165  066B  3008               	movlw	8
  2166  066C  0622               	xorwf	_Byte3,w
  2167  066D  1903               	btfsc	3,2
  2168  066E  2E83               	goto	l173
  2169  066F  300C               	movlw	12
  2170  0670  0622               	xorwf	_Byte3,w
  2171  0671  1903               	btfsc	3,2
  2172  0672  2E83               	goto	l173
  2173  0673  300D               	movlw	13
  2174  0674  0622               	xorwf	_Byte3,w
  2175  0675  1903               	btfsc	3,2
  2176  0676  2E83               	goto	l173
  2177  0677  3014               	movlw	20
  2178  0678  0622               	xorwf	_Byte3,w
  2179  0679  1903               	btfsc	3,2
  2180  067A  2E83               	goto	l173
  2181  067B  301A               	movlw	26
  2182  067C  0622               	xorwf	_Byte3,w
  2183  067D  1903               	btfsc	3,2
  2184  067E  2E83               	goto	l173
  2185  067F  301D               	movlw	29
  2186  0680  0622               	xorwf	_Byte3,w
  2187  0681  1D03               	btfss	3,2
  2188  0682  2E86               	goto	l178
  2189  0683                     l173:	
  2190                           ;main.c: 225: do { LATA2 = 1; } while(0);
  2191                           
  2192  0683  0022               	movlb	2	; select bank2
  2193  0684  150C               	bsf	12,2	;volatile
  2194                           
  2195                           ;main.c: 226: do { LATB4 = 1; } while(0);
  2196  0685  2E88               	goto	l180
  2197  0686                     l178:	
  2198                           ;main.c: 228: do { LATA2 = 0; } while(0);
  2199                           
  2200                           ;main.c: 227: } else {
  2201                           
  2202  0686  0022               	movlb	2	; select bank2
  2203  0687  110C               	bcf	12,2	;volatile
  2204  0688                     l180:	
  2205                           ;main.c: 229: do { LATB4 = 1; } while(0);
  2206                           
  2207  0688  160D               	bsf	13,4	;volatile
  2208                           
  2209                           ;main.c: 230: }
  2210                           ;main.c: 231: } else {
  2211  0689  2E8D               	goto	l1035
  2212  068A                     l183:	
  2213                           ;main.c: 232: do { LATA2 = 0; } while(0);
  2214                           
  2215  068A  0022               	movlb	2	; select bank2
  2216  068B  110C               	bcf	12,2	;volatile
  2217                           
  2218                           ;main.c: 233: do { LATB4 = 0; } while(0);
  2219  068C  120D               	bcf	13,4	;volatile
  2220  068D                     l1035:	
  2221                           
  2222                           ;main.c: 234: }
  2223                           ;main.c: 235: }
  2224                           ;main.c: 237: if (Byte2 == 3 && Byte3 == 7) {
  2225  068D  3003               	movlw	3
  2226  068E  0020               	movlb	0	; select bank0
  2227  068F  0621               	xorwf	_Byte2,w
  2228  0690  1D03               	btfss	3,2
  2229  0691  2E9A               	goto	l1039
  2230  0692  3007               	movlw	7
  2231  0693  0622               	xorwf	_Byte3,w
  2232  0694  1D03               	btfss	3,2
  2233  0695  2E9A               	goto	l1039
  2234                           
  2235                           ;main.c: 238: do { LATA1 = 0; } while(0);
  2236  0696  0022               	movlb	2	; select bank2
  2237  0697  108C               	bcf	12,1	;volatile
  2238                           
  2239                           ;main.c: 239: do { LATA4 = 1; } while(0);
  2240  0698  160C               	bsf	12,4	;volatile
  2241                           
  2242                           ;main.c: 240: } else {
  2243  0699  2ED3               	goto	l1067
  2244  069A                     l1039:	
  2245                           
  2246                           ;main.c: 241: if ((Byte2 == 7 && Byte3 == 0) || (Byte2 == 30 && Byte3 == 0) || (Byte2 ==
      +                           41 && Byte3 == 0) || (Byte2 == 5 && Byte3 == 30) || (Byte2 == 7 && Byte3 == 20) || (Byt
      +                          e2 == 12 && Byte3 == 30) || (Byte2 == 41 && Byte3 == 41)) {
  2247  069A  3007               	movlw	7
  2248  069B  0020               	movlb	0	; select bank0
  2249  069C  0621               	xorwf	_Byte2,w
  2250  069D  1903               	btfsc	3,2
  2251  069E  0822               	movf	_Byte3,w
  2252  069F  1903               	btfsc	3,2
  2253  06A0  2ECD               	goto	l208
  2254  06A1  301E               	movlw	30
  2255  06A2  0621               	xorwf	_Byte2,w
  2256  06A3  1903               	btfsc	3,2
  2257  06A4  0822               	movf	_Byte3,w
  2258  06A5  1903               	btfsc	3,2
  2259  06A6  2ECD               	goto	l208
  2260  06A7  3029               	movlw	41
  2261  06A8  0621               	xorwf	_Byte2,w
  2262  06A9  1903               	btfsc	3,2
  2263  06AA  0822               	movf	_Byte3,w
  2264  06AB  1903               	btfsc	3,2
  2265  06AC  2ECD               	goto	l208
  2266  06AD  3005               	movlw	5
  2267  06AE  0621               	xorwf	_Byte2,w
  2268  06AF  1D03               	btfss	3,2
  2269  06B0  2EB5               	goto	l1055
  2270  06B1  301E               	movlw	30
  2271  06B2  0622               	xorwf	_Byte3,w
  2272  06B3  1903               	btfsc	3,2
  2273  06B4  2ECD               	goto	l208
  2274  06B5                     l1055:	
  2275  06B5  3007               	movlw	7
  2276  06B6  0621               	xorwf	_Byte2,w
  2277  06B7  1D03               	btfss	3,2
  2278  06B8  2EBD               	goto	l1059
  2279  06B9  3014               	movlw	20
  2280  06BA  0622               	xorwf	_Byte3,w
  2281  06BB  1903               	btfsc	3,2
  2282  06BC  2ECD               	goto	l208
  2283  06BD                     l1059:	
  2284  06BD  300C               	movlw	12
  2285  06BE  0621               	xorwf	_Byte2,w
  2286  06BF  1D03               	btfss	3,2
  2287  06C0  2EC5               	goto	l1063
  2288  06C1  301E               	movlw	30
  2289  06C2  0622               	xorwf	_Byte3,w
  2290  06C3  1903               	btfsc	3,2
  2291  06C4  2ECD               	goto	l208
  2292  06C5                     l1063:	
  2293  06C5  3029               	movlw	41
  2294  06C6  0621               	xorwf	_Byte2,w
  2295  06C7  1D03               	btfss	3,2
  2296  06C8  2ED0               	goto	l213
  2297  06C9  3029               	movlw	41
  2298  06CA  0622               	xorwf	_Byte3,w
  2299  06CB  1D03               	btfss	3,2
  2300  06CC  2ED0               	goto	l213
  2301  06CD                     l208:	
  2302                           ;main.c: 242: do { LATA1 = 1; } while(0);
  2303                           
  2304  06CD  0022               	movlb	2	; select bank2
  2305  06CE  148C               	bsf	12,1	;volatile
  2306  06CF  2ED2               	goto	l215
  2307  06D0                     l213:	
  2308                           ;main.c: 245: do { LATA1 = 0; } while(0);
  2309                           
  2310                           ;main.c: 244: } else {
  2311                           
  2312                           ;main.c: 243: do { LATA4 = 0; } while(0);
  2313                           
  2314  06D0  0022               	movlb	2	; select bank2
  2315  06D1  108C               	bcf	12,1	;volatile
  2316  06D2                     l215:	
  2317                           ;main.c: 246: do { LATA4 = 0; } while(0);
  2318                           
  2319  06D2  120C               	bcf	12,4	;volatile
  2320  06D3                     l1067:	
  2321                           
  2322                           ;main.c: 247: }
  2323                           ;main.c: 248: }
  2324                           ;main.c: 252: if ((Byte2 == 5) && (Byte3 == 0)) {
  2325  06D3  3005               	movlw	5
  2326  06D4  0020               	movlb	0	; select bank0
  2327  06D5  0621               	xorwf	_Byte2,w
  2328  06D6  1D03               	btfss	3,2
  2329  06D7  2E02               	goto	l981
  2330  06D8  0822               	movf	_Byte3,w
  2331  06D9  1D03               	btfss	3,2
  2332  06DA  2E02               	goto	l981
  2333                           
  2334                           ;main.c: 253: MIPI(10,64,0,0);
  2335  06DB  3040               	movlw	64
  2336  06DC  00FD               	movwf	??_main
  2337  06DD  087D               	movf	??_main,w
  2338  06DE  00F5               	movwf	MIPI@b
  2339  06DF  01F6               	clrf	MIPI@c
  2340  06E0  01F7               	clrf	MIPI@d
  2341  06E1  300A               	movlw	10
  2342  06E2  3186  26E6  3185   	fcall	_MIPI
  2343                           
  2344                           ;main.c: 277: } else {
  2345                           
  2346                           ;main.c: 274: } else {
  2347                           
  2348                           ;main.c: 271: } else {
  2349                           
  2350                           ;main.c: 268: } else {
  2351                           
  2352                           ;main.c: 265: } else {
  2353                           
  2354                           ;main.c: 262: } else {
  2355                           
  2356                           ;main.c: 259: } else {
  2357                           
  2358                           ;main.c: 256: } else {
  2359  06E5  2E02               	goto	l981
  2360  06E6                     __end_of_main:	
  2361                           
  2362                           	psect	text1
  2363  0589                     __ptext1:	
  2364 ;; *************** function _SYSTEM_Initialize *****************
  2365 ;; Defined at:
  2366 ;;		line 75 in file "mcc_generated_files/mcc.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;		None
  2369 ;; Auto vars:     Size  Location     Type
  2370 ;;		None
  2371 ;; Return value:  Size  Location     Type
  2372 ;;		None               void
  2373 ;; Registers used:
  2374 ;;		wreg, status,2, status,0, pclath, cstack
  2375 ;; Tracked objects:
  2376 ;;		On entry : 0/0
  2377 ;;		On exit  : 0/0
  2378 ;;		Unchanged: 0/0
  2379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2380 ;;      Params:         0       0       0       0       0       0       0       0
  2381 ;;      Locals:         0       0       0       0       0       0       0       0
  2382 ;;      Temps:          0       0       0       0       0       0       0       0
  2383 ;;      Totals:         0       0       0       0       0       0       0       0
  2384 ;;Total ram usage:        0 bytes
  2385 ;; Hardware stack levels used:    1
  2386 ;; Hardware stack levels required when called:    1
  2387 ;; This function calls:
  2388 ;;		_DAC1_Initialize
  2389 ;;		_OSCILLATOR_Initialize
  2390 ;;		_PIN_MANAGER_Initialize
  2391 ;; This function is called by:
  2392 ;;		_main
  2393 ;; This function uses a non-reentrant model
  2394 ;;
  2395                           
  2396                           
  2397                           ;psect for function _SYSTEM_Initialize
  2398  0589                     _SYSTEM_Initialize:	
  2399                           
  2400                           ;mcc.c: 76: OSCILLATOR_Initialize();
  2401                           
  2402                           ;incstack = 0
  2403                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2404  0589  3185  2583  3185   	fcall	_OSCILLATOR_Initialize
  2405                           
  2406                           ;mcc.c: 77: PIN_MANAGER_Initialize();
  2407  058C  3185  25AE  3185   	fcall	_PIN_MANAGER_Initialize
  2408                           
  2409                           ;mcc.c: 78: DAC1_Initialize();
  2410  058F  3185  257E         	fcall	_DAC1_Initialize
  2411  0591  0008               	return
  2412  0592                     __end_of_SYSTEM_Initialize:	
  2413                           
  2414                           	psect	text2
  2415  05AE                     __ptext2:	
  2416 ;; *************** function _PIN_MANAGER_Initialize *****************
  2417 ;; Defined at:
  2418 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  2419 ;; Parameters:    Size  Location     Type
  2420 ;;		None
  2421 ;; Auto vars:     Size  Location     Type
  2422 ;;		None
  2423 ;; Return value:  Size  Location     Type
  2424 ;;		None               void
  2425 ;; Registers used:
  2426 ;;		wreg, status,2
  2427 ;; Tracked objects:
  2428 ;;		On entry : 0/0
  2429 ;;		On exit  : 0/0
  2430 ;;		Unchanged: 0/0
  2431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2432 ;;      Params:         0       0       0       0       0       0       0       0
  2433 ;;      Locals:         0       0       0       0       0       0       0       0
  2434 ;;      Temps:          0       0       0       0       0       0       0       0
  2435 ;;      Totals:         0       0       0       0       0       0       0       0
  2436 ;;Total ram usage:        0 bytes
  2437 ;; Hardware stack levels used:    1
  2438 ;; This function calls:
  2439 ;;		Nothing
  2440 ;; This function is called by:
  2441 ;;		_SYSTEM_Initialize
  2442 ;;		_main
  2443 ;; This function uses a non-reentrant model
  2444 ;;
  2445                           
  2446                           
  2447                           ;psect for function _PIN_MANAGER_Initialize
  2448  05AE                     _PIN_MANAGER_Initialize:	
  2449                           
  2450                           ;pin_manager.c: 51: LATA = 0x00;
  2451                           
  2452                           ;incstack = 0
  2453                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2454  05AE  0022               	movlb	2	; select bank2
  2455  05AF  018C               	clrf	12	;volatile
  2456                           
  2457                           ;pin_manager.c: 52: TRISA = 0x28;
  2458  05B0  3028               	movlw	40
  2459  05B1  0021               	movlb	1	; select bank1
  2460  05B2  008C               	movwf	12	;volatile
  2461                           
  2462                           ;pin_manager.c: 53: ANSELA = 0x01;
  2463  05B3  3001               	movlw	1
  2464  05B4  0023               	movlb	3	; select bank3
  2465  05B5  008C               	movwf	12	;volatile
  2466                           
  2467                           ;pin_manager.c: 55: LATB = 0x00;
  2468  05B6  0022               	movlb	2	; select bank2
  2469  05B7  018D               	clrf	13	;volatile
  2470                           
  2471                           ;pin_manager.c: 56: TRISB = 0x00;
  2472  05B8  0021               	movlb	1	; select bank1
  2473  05B9  018D               	clrf	13	;volatile
  2474                           
  2475                           ;pin_manager.c: 57: ANSELB = 0x00;
  2476  05BA  0023               	movlb	3	; select bank3
  2477  05BB  018D               	clrf	13	;volatile
  2478                           
  2479                           ;pin_manager.c: 58: WPUB = 0x00;
  2480  05BC  0024               	movlb	4	; select bank4
  2481  05BD  018D               	clrf	13	;volatile
  2482                           
  2483                           ;pin_manager.c: 60: LATC = 0x00;
  2484  05BE  0022               	movlb	2	; select bank2
  2485  05BF  018E               	clrf	14	;volatile
  2486                           
  2487                           ;pin_manager.c: 61: TRISC = 0xFF;
  2488  05C0  30FF               	movlw	255
  2489  05C1  0021               	movlb	1	; select bank1
  2490  05C2  008E               	movwf	14	;volatile
  2491                           
  2492                           ;pin_manager.c: 62: ANSELC = 0x00;
  2493  05C3  0023               	movlb	3	; select bank3
  2494  05C4  018E               	clrf	14	;volatile
  2495                           
  2496                           ;pin_manager.c: 63: WPUC = 0x00;
  2497  05C5  0024               	movlb	4	; select bank4
  2498  05C6  018E               	clrf	14	;volatile
  2499                           
  2500                           ;pin_manager.c: 65: OPTION_REGbits.nWPUEN = 0x01;
  2501  05C7  0021               	movlb	1	; select bank1
  2502  05C8  1795               	bsf	21,7	;volatile
  2503  05C9  0008               	return
  2504  05CA                     __end_of_PIN_MANAGER_Initialize:	
  2505                           
  2506                           	psect	text3
  2507  0583                     __ptext3:	
  2508 ;; *************** function _OSCILLATOR_Initialize *****************
  2509 ;; Defined at:
  2510 ;;		line 81 in file "mcc_generated_files/mcc.c"
  2511 ;; Parameters:    Size  Location     Type
  2512 ;;		None
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;		None
  2515 ;; Return value:  Size  Location     Type
  2516 ;;		None               void
  2517 ;; Registers used:
  2518 ;;		wreg, status,2
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2524 ;;      Params:         0       0       0       0       0       0       0       0
  2525 ;;      Locals:         0       0       0       0       0       0       0       0
  2526 ;;      Temps:          0       0       0       0       0       0       0       0
  2527 ;;      Totals:         0       0       0       0       0       0       0       0
  2528 ;;Total ram usage:        0 bytes
  2529 ;; Hardware stack levels used:    1
  2530 ;; This function calls:
  2531 ;;		Nothing
  2532 ;; This function is called by:
  2533 ;;		_SYSTEM_Initialize
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537                           
  2538                           ;psect for function _OSCILLATOR_Initialize
  2539  0583                     _OSCILLATOR_Initialize:	
  2540                           
  2541                           ;mcc.c: 83: OSCCON = 0x7A;
  2542                           
  2543                           ;incstack = 0
  2544                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2545  0583  307A               	movlw	122
  2546  0584  0021               	movlb	1	; select bank1
  2547  0585  0099               	movwf	25	;volatile
  2548                           
  2549                           ;mcc.c: 85: OSCSTAT = 0x00;
  2550  0586  019A               	clrf	26	;volatile
  2551                           
  2552                           ;mcc.c: 87: OSCTUNE = 0x00;
  2553  0587  0198               	clrf	24	;volatile
  2554  0588  0008               	return
  2555  0589                     __end_of_OSCILLATOR_Initialize:	
  2556                           
  2557                           	psect	text4
  2558  057E                     __ptext4:	
  2559 ;; *************** function _DAC1_Initialize *****************
  2560 ;; Defined at:
  2561 ;;		line 58 in file "mcc_generated_files/dac1.c"
  2562 ;; Parameters:    Size  Location     Type
  2563 ;;		None
  2564 ;; Auto vars:     Size  Location     Type
  2565 ;;		None
  2566 ;; Return value:  Size  Location     Type
  2567 ;;		None               void
  2568 ;; Registers used:
  2569 ;;		wreg, status,2
  2570 ;; Tracked objects:
  2571 ;;		On entry : 0/0
  2572 ;;		On exit  : 0/0
  2573 ;;		Unchanged: 0/0
  2574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2575 ;;      Params:         0       0       0       0       0       0       0       0
  2576 ;;      Locals:         0       0       0       0       0       0       0       0
  2577 ;;      Temps:          0       0       0       0       0       0       0       0
  2578 ;;      Totals:         0       0       0       0       0       0       0       0
  2579 ;;Total ram usage:        0 bytes
  2580 ;; Hardware stack levels used:    1
  2581 ;; This function calls:
  2582 ;;		Nothing
  2583 ;; This function is called by:
  2584 ;;		_SYSTEM_Initialize
  2585 ;;		_main
  2586 ;; This function uses a non-reentrant model
  2587 ;;
  2588                           
  2589                           
  2590                           ;psect for function _DAC1_Initialize
  2591  057E                     _DAC1_Initialize:	
  2592                           
  2593                           ;dac1.c: 60: DAC1CON0 = 0xA0;
  2594                           
  2595                           ;incstack = 0
  2596                           ; Regs used in _DAC1_Initialize: [wreg+status,2]
  2597  057E  30A0               	movlw	160
  2598  057F  0022               	movlb	2	; select bank2
  2599  0580  0098               	movwf	24	;volatile
  2600                           
  2601                           ;dac1.c: 62: DAC1CON1 = 0x00;
  2602  0581  0199               	clrf	25	;volatile
  2603  0582  0008               	return
  2604  0583                     __end_of_DAC1_Initialize:	
  2605                           
  2606                           	psect	text5
  2607  06E6                     __ptext5:	
  2608 ;; *************** function _MIPI *****************
  2609 ;; Defined at:
  2610 ;;		line 155 in file "main.c"
  2611 ;; Parameters:    Size  Location     Type
  2612 ;;  a               1    wreg     unsigned char 
  2613 ;;  b               1    5[COMMON] unsigned char 
  2614 ;;  c               1    6[COMMON] unsigned char 
  2615 ;;  d               1    7[COMMON] unsigned char 
  2616 ;; Auto vars:     Size  Location     Type
  2617 ;;  a               1   10[COMMON] unsigned char 
  2618 ;;  j               1   11[COMMON] unsigned char 
  2619 ;;  i               1   12[COMMON] unsigned char 
  2620 ;; Return value:  Size  Location     Type
  2621 ;;		None               void
  2622 ;; Registers used:
  2623 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2624 ;; Tracked objects:
  2625 ;;		On entry : 0/0
  2626 ;;		On exit  : 0/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2629 ;;      Params:         3       0       0       0       0       0       0       0
  2630 ;;      Locals:         3       0       0       0       0       0       0       0
  2631 ;;      Temps:          2       0       0       0       0       0       0       0
  2632 ;;      Totals:         8       0       0       0       0       0       0       0
  2633 ;;Total ram usage:        8 bytes
  2634 ;; Hardware stack levels used:    1
  2635 ;; Hardware stack levels required when called:    1
  2636 ;; This function calls:
  2637 ;;		_paritycheck
  2638 ;;		_shiftRegister
  2639 ;; This function is called by:
  2640 ;;		_main
  2641 ;; This function uses a non-reentrant model
  2642 ;;
  2643                           
  2644                           
  2645                           ;psect for function _MIPI
  2646  06E6                     _MIPI:	
  2647                           
  2648                           ;incstack = 0
  2649                           ; Regs used in _MIPI: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2650                           ;MIPI@a stored from wreg
  2651  06E6  00FA               	movwf	MIPI@a
  2652                           
  2653                           ;main.c: 156: parity1 = paritycheck(DATA[a]);
  2654  06E7  087A               	movf	MIPI@a,w
  2655  06E8  3E00               	addlw	low (_DATA| (0+32768))
  2656  06E9  0084               	movwf	4
  2657  06EA  3088               	movlw	high (_DATA| (0+32768))
  2658  06EB  1803               	skipnc
  2659  06EC  3E01               	addlw	1
  2660  06ED  0085               	movwf	5
  2661  06EE  0800               	movf	0,w	;code access
  2662  06EF  3185  2592  3186   	fcall	_paritycheck
  2663  06F2  00F8               	movwf	??_MIPI
  2664  06F3  0878               	movf	??_MIPI,w
  2665  06F4  0020               	movlb	0	; select bank0
  2666  06F5  00A3               	movwf	_parity1
  2667                           
  2668                           ;main.c: 157: parity2 = paritycheck(DATA[b]);
  2669  06F6  0875               	movf	MIPI@b,w
  2670  06F7  3E00               	addlw	low (_DATA| (0+32768))
  2671  06F8  0084               	movwf	4
  2672  06F9  3088               	movlw	high (_DATA| (0+32768))
  2673  06FA  1803               	skipnc
  2674  06FB  3E01               	addlw	1
  2675  06FC  0085               	movwf	5
  2676  06FD  0800               	movf	0,w	;code access
  2677  06FE  3185  2592  3186   	fcall	_paritycheck
  2678  0701  00F8               	movwf	??_MIPI
  2679  0702  0878               	movf	??_MIPI,w
  2680  0703  0020               	movlb	0	; select bank0
  2681  0704  00A4               	movwf	_parity2
  2682                           
  2683                           ;main.c: 158: parity3 = paritycheck(DATA[c]);
  2684  0705  0876               	movf	MIPI@c,w
  2685  0706  3E00               	addlw	low (_DATA| (0+32768))
  2686  0707  0084               	movwf	4
  2687  0708  3088               	movlw	high (_DATA| (0+32768))
  2688  0709  1803               	skipnc
  2689  070A  3E01               	addlw	1
  2690  070B  0085               	movwf	5
  2691  070C  0800               	movf	0,w	;code access
  2692  070D  3185  2592  3186   	fcall	_paritycheck
  2693  0710  00F8               	movwf	??_MIPI
  2694  0711  0878               	movf	??_MIPI,w
  2695  0712  0020               	movlb	0	; select bank0
  2696  0713  00A5               	movwf	_parity3
  2697                           
  2698                           ;main.c: 159: parity4 = paritycheck(DATA[d]);
  2699  0714  0877               	movf	MIPI@d,w
  2700  0715  3E00               	addlw	low (_DATA| (0+32768))
  2701  0716  0084               	movwf	4
  2702  0717  3088               	movlw	high (_DATA| (0+32768))
  2703  0718  1803               	skipnc
  2704  0719  3E01               	addlw	1
  2705  071A  0085               	movwf	5
  2706  071B  0800               	movf	0,w	;code access
  2707  071C  3185  2592  3186   	fcall	_paritycheck
  2708  071F  00F8               	movwf	??_MIPI
  2709  0720  0878               	movf	??_MIPI,w
  2710  0721  0020               	movlb	0	; select bank0
  2711  0722  00A6               	movwf	_parity4
  2712                           
  2713                           ;main.c: 160: for (uint8_t i=0; i<2; i++){
  2714  0723  01FC               	clrf	MIPI@i
  2715  0724                     L4:	
  2716  0724  3002               	movlw	2
  2717  0725  027C               	subwf	MIPI@i,w
  2718  0726  1803               	btfsc	3,0
  2719  0727  0008               	return
  2720                           
  2721                           ;main.c: 161: for (uint8_t j=0; j<2; j++){
  2722  0728  01FB               	clrf	MIPI@j
  2723  0729  3002               	movlw	2
  2724  072A  027B               	subwf	MIPI@j,w
  2725  072B  1803               	btfsc	3,0
  2726  072C  2FF1               	goto	l967
  2727  072D                     l126:	
  2728                           ;main.c: 162: do { LATB7 = 1; } while(0);
  2729                           
  2730  072D  0022               	movlb	2	; select bank2
  2731  072E  178D               	bsf	13,7	;volatile
  2732                           
  2733                           ;main.c: 163: do { LATB5 = 1; } while(0);
  2734  072F  168D               	bsf	13,5	;volatile
  2735  0730  0000               	nop	;# 
  2736                           
  2737                           ;main.c: 165: do { LATB7 = 0; } while(0);
  2738  0731  0022               	movlb	2	; select bank2
  2739  0732  138D               	bcf	13,7	;volatile
  2740                           
  2741                           ;main.c: 166: do { LATB5 = 0; } while(0);
  2742  0733  128D               	bcf	13,5	;volatile
  2743                           
  2744                           ;main.c: 167: shiftRegister (SLAVEADD[i],SLAVEADD[i],4);
  2745  0734  087C               	movf	MIPI@i,w
  2746  0735  3E47               	addlw	low (_SLAVEADD| (0+32768))
  2747  0736  0084               	movwf	4
  2748  0737  3088               	movlw	high (_SLAVEADD| (0+32768))
  2749  0738  1803               	skipnc
  2750  0739  3E01               	addlw	1
  2751  073A  0085               	movwf	5
  2752  073B  0800               	movf	0,w	;code access
  2753  073C  00F8               	movwf	??_MIPI
  2754  073D  0878               	movf	??_MIPI,w
  2755  073E  00F0               	movwf	shiftRegister@Dummy2
  2756  073F  3004               	movlw	4
  2757  0740  00F9               	movwf	??_MIPI+1
  2758  0741  0879               	movf	??_MIPI+1,w
  2759  0742  00F1               	movwf	shiftRegister@y
  2760  0743  087C               	movf	MIPI@i,w
  2761  0744  3E47               	addlw	low (_SLAVEADD| (0+32768))
  2762  0745  0084               	movwf	4
  2763  0746  3088               	movlw	high (_SLAVEADD| (0+32768))
  2764  0747  1803               	skipnc
  2765  0748  3E01               	addlw	1
  2766  0749  0085               	movwf	5
  2767  074A  0800               	movf	0,w	;code access
  2768  074B  3185  25CA  3186   	fcall	_shiftRegister
  2769                           
  2770                           ;main.c: 168: shiftRegister (0x02,0x02,3);
  2771  074E  3002               	movlw	2
  2772  074F  00F8               	movwf	??_MIPI
  2773  0750  0878               	movf	??_MIPI,w
  2774  0751  00F0               	movwf	shiftRegister@Dummy2
  2775  0752  3003               	movlw	3
  2776  0753  00F9               	movwf	??_MIPI+1
  2777  0754  0879               	movf	??_MIPI+1,w
  2778  0755  00F1               	movwf	shiftRegister@y
  2779  0756  3002               	movlw	2
  2780  0757  3185  25CA  3186   	fcall	_shiftRegister
  2781                           
  2782                           ;main.c: 169: shiftRegister (REGADD[j],REGADD[j],5);
  2783  075A  087B               	movf	MIPI@j,w
  2784  075B  3E45               	addlw	low (_REGADD| (0+32768))
  2785  075C  0084               	movwf	4
  2786  075D  3088               	movlw	high (_REGADD| (0+32768))
  2787  075E  1803               	skipnc
  2788  075F  3E01               	addlw	1
  2789  0760  0085               	movwf	5
  2790  0761  0800               	movf	0,w	;code access
  2791  0762  00F8               	movwf	??_MIPI
  2792  0763  0878               	movf	??_MIPI,w
  2793  0764  00F0               	movwf	shiftRegister@Dummy2
  2794  0765  3005               	movlw	5
  2795  0766  00F9               	movwf	??_MIPI+1
  2796  0767  0879               	movf	??_MIPI+1,w
  2797  0768  00F1               	movwf	shiftRegister@y
  2798  0769  087B               	movf	MIPI@j,w
  2799  076A  3E45               	addlw	low (_REGADD| (0+32768))
  2800  076B  0084               	movwf	4
  2801  076C  3088               	movlw	high (_REGADD| (0+32768))
  2802  076D  1803               	skipnc
  2803  076E  3E01               	addlw	1
  2804  076F  0085               	movwf	5
  2805  0770  0800               	movf	0,w	;code access
  2806  0771  3185  25CA  3186   	fcall	_shiftRegister
  2807                           
  2808                           ;main.c: 170: if (i==0)
  2809  0774  087C               	movf	MIPI@i,w
  2810  0775  1D03               	btfss	3,2
  2811  0776  2F7D               	goto	l947
  2812                           
  2813                           ;main.c: 171: shiftRegister (0x01,0x01,1);
  2814  0777  01F0               	clrf	shiftRegister@Dummy2
  2815  0778  0AF0               	incf	shiftRegister@Dummy2,f
  2816  0779  01F1               	clrf	shiftRegister@y
  2817  077A  0AF1               	incf	shiftRegister@y,f
  2818  077B  3001               	movlw	1
  2819  077C  2F81               	goto	L2
  2820  077D                     l947:	
  2821                           
  2822                           ;main.c: 172: else
  2823                           ;main.c: 173: shiftRegister (0x00,0x00,1);
  2824  077D  01F0               	clrf	shiftRegister@Dummy2
  2825  077E  01F1               	clrf	shiftRegister@y
  2826  077F  0AF1               	incf	shiftRegister@y,f
  2827  0780  3000               	movlw	0
  2828  0781                     L2:	
  2829  0781  3185  25CA  3186   	fcall	_shiftRegister
  2830                           
  2831                           ;main.c: 174: if (j==0){
  2832  0784  087B               	movf	MIPI@j,w
  2833  0785  1D03               	btfss	3,2
  2834  0786  2F98               	goto	l953
  2835                           
  2836                           ;main.c: 175: shiftRegister (0x00,0x00,8);
  2837  0787  01F0               	clrf	shiftRegister@Dummy2
  2838  0788  3008               	movlw	8
  2839  0789  00F8               	movwf	??_MIPI
  2840  078A  0878               	movf	??_MIPI,w
  2841  078B  00F1               	movwf	shiftRegister@y
  2842  078C  3000               	movlw	0
  2843  078D  3185  25CA  3186   	fcall	_shiftRegister
  2844                           
  2845                           ;main.c: 176: shiftRegister (0x01,0x01,2);
  2846  0790  01F0               	clrf	shiftRegister@Dummy2
  2847  0791  0AF0               	incf	shiftRegister@Dummy2,f
  2848  0792  3002               	movlw	2
  2849  0793  00F8               	movwf	??_MIPI
  2850  0794  0878               	movf	??_MIPI,w
  2851  0795  00F1               	movwf	shiftRegister@y
  2852  0796  3001               	movlw	1
  2853  0797  2FE4               	goto	L3
  2854  0798                     l953:	
  2855                           ;main.c: 177: }
  2856                           
  2857                           
  2858                           ;main.c: 178: else{
  2859                           ;main.c: 179: if (i==0){
  2860  0798  087C               	movf	MIPI@i,w
  2861  0799  1D03               	btfss	3,2
  2862  079A  2FC0               	goto	l959
  2863                           
  2864                           ;main.c: 180: shiftRegister (DATA[a],DATA[b],8);
  2865  079B  0875               	movf	MIPI@b,w
  2866  079C  3E00               	addlw	low (_DATA| (0+32768))
  2867  079D  0084               	movwf	4
  2868  079E  3088               	movlw	high (_DATA| (0+32768))
  2869  079F  1803               	skipnc
  2870  07A0  3E01               	addlw	1
  2871  07A1  0085               	movwf	5
  2872  07A2  0800               	movf	0,w	;code access
  2873  07A3  00F8               	movwf	??_MIPI
  2874  07A4  0878               	movf	??_MIPI,w
  2875  07A5  00F0               	movwf	shiftRegister@Dummy2
  2876  07A6  3008               	movlw	8
  2877  07A7  00F9               	movwf	??_MIPI+1
  2878  07A8  0879               	movf	??_MIPI+1,w
  2879  07A9  00F1               	movwf	shiftRegister@y
  2880  07AA  087A               	movf	MIPI@a,w
  2881  07AB  3E00               	addlw	low (_DATA| (0+32768))
  2882  07AC  0084               	movwf	4
  2883  07AD  3088               	movlw	high (_DATA| (0+32768))
  2884  07AE  1803               	skipnc
  2885  07AF  3E01               	addlw	1
  2886  07B0  0085               	movwf	5
  2887  07B1  0800               	movf	0,w	;code access
  2888  07B2  3185  25CA  3186   	fcall	_shiftRegister
  2889                           
  2890                           ;main.c: 181: shiftRegister (parity1,parity2,2);
  2891  07B5  0020               	movlb	0	; select bank0
  2892  07B6  0824               	movf	_parity2,w
  2893  07B7  00F8               	movwf	??_MIPI
  2894  07B8  0878               	movf	??_MIPI,w
  2895  07B9  00F0               	movwf	shiftRegister@Dummy2
  2896  07BA  3002               	movlw	2
  2897  07BB  00F9               	movwf	??_MIPI+1
  2898  07BC  0879               	movf	??_MIPI+1,w
  2899  07BD  00F1               	movwf	shiftRegister@y
  2900  07BE  0823               	movf	_parity1,w
  2901  07BF  2FE4               	goto	L3
  2902  07C0                     l959:	
  2903                           ;main.c: 182: }else{
  2904                           
  2905                           
  2906                           ;main.c: 183: shiftRegister (DATA[c],DATA[d],8);
  2907  07C0  0877               	movf	MIPI@d,w
  2908  07C1  3E00               	addlw	low (_DATA| (0+32768))
  2909  07C2  0084               	movwf	4
  2910  07C3  3088               	movlw	high (_DATA| (0+32768))
  2911  07C4  1803               	skipnc
  2912  07C5  3E01               	addlw	1
  2913  07C6  0085               	movwf	5
  2914  07C7  0800               	movf	0,w	;code access
  2915  07C8  00F8               	movwf	??_MIPI
  2916  07C9  0878               	movf	??_MIPI,w
  2917  07CA  00F0               	movwf	shiftRegister@Dummy2
  2918  07CB  3008               	movlw	8
  2919  07CC  00F9               	movwf	??_MIPI+1
  2920  07CD  0879               	movf	??_MIPI+1,w
  2921  07CE  00F1               	movwf	shiftRegister@y
  2922  07CF  0876               	movf	MIPI@c,w
  2923  07D0  3E00               	addlw	low (_DATA| (0+32768))
  2924  07D1  0084               	movwf	4
  2925  07D2  3088               	movlw	high (_DATA| (0+32768))
  2926  07D3  1803               	skipnc
  2927  07D4  3E01               	addlw	1
  2928  07D5  0085               	movwf	5
  2929  07D6  0800               	movf	0,w	;code access
  2930  07D7  3185  25CA  3186   	fcall	_shiftRegister
  2931                           
  2932                           ;main.c: 184: shiftRegister (parity3,parity4,2);
  2933  07DA  0020               	movlb	0	; select bank0
  2934  07DB  0826               	movf	_parity4,w
  2935  07DC  00F8               	movwf	??_MIPI
  2936  07DD  0878               	movf	??_MIPI,w
  2937  07DE  00F0               	movwf	shiftRegister@Dummy2
  2938  07DF  3002               	movlw	2
  2939  07E0  00F9               	movwf	??_MIPI+1
  2940  07E1  0879               	movf	??_MIPI+1,w
  2941  07E2  00F1               	movwf	shiftRegister@y
  2942  07E3  0825               	movf	_parity3,w
  2943  07E4                     L3:	
  2944  07E4  3185  25CA  3186   	fcall	_shiftRegister
  2945  07E7  0000               	nop	;# 
  2946  07E8  0000               	nop	;# 
  2947  07E9  3001               	movlw	1
  2948  07EA  00F8               	movwf	??_MIPI
  2949  07EB  0878               	movf	??_MIPI,w
  2950  07EC  07FB               	addwf	MIPI@j,f
  2951  07ED  3002               	movlw	2
  2952  07EE  027B               	subwf	MIPI@j,w
  2953  07EF  1C03               	skipc
  2954  07F0  2F2D               	goto	l126
  2955  07F1                     l967:	
  2956  07F1  3001               	movlw	1
  2957  07F2  00F8               	movwf	??_MIPI
  2958  07F3  0878               	movf	??_MIPI,w
  2959  07F4  07FC               	addwf	MIPI@i,f
  2960  07F5  2F24               	goto	L4
  2961  07F6                     __end_of_MIPI:	
  2962                           
  2963                           	psect	text6
  2964  05CA                     __ptext6:	
  2965 ;; *************** function _shiftRegister *****************
  2966 ;; Defined at:
  2967 ;;		line 132 in file "main.c"
  2968 ;; Parameters:    Size  Location     Type
  2969 ;;  Dummy1          1    wreg     unsigned char 
  2970 ;;  Dummy2          1    0[COMMON] unsigned char 
  2971 ;;  y               1    1[COMMON] unsigned char 
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;  Dummy1          1    4[COMMON] unsigned char 
  2974 ;;  m               1    3[COMMON] unsigned char 
  2975 ;; Return value:  Size  Location     Type
  2976 ;;		None               void
  2977 ;; Registers used:
  2978 ;;		wreg, status,2, status,0
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/0
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2984 ;;      Params:         2       0       0       0       0       0       0       0
  2985 ;;      Locals:         2       0       0       0       0       0       0       0
  2986 ;;      Temps:          1       0       0       0       0       0       0       0
  2987 ;;      Totals:         5       0       0       0       0       0       0       0
  2988 ;;Total ram usage:        5 bytes
  2989 ;; Hardware stack levels used:    1
  2990 ;; This function calls:
  2991 ;;		Nothing
  2992 ;; This function is called by:
  2993 ;;		_MIPI
  2994 ;; This function uses a non-reentrant model
  2995 ;;
  2996                           
  2997                           
  2998                           ;psect for function _shiftRegister
  2999  05CA                     _shiftRegister:	
  3000                           
  3001                           ;incstack = 0
  3002                           ; Regs used in _shiftRegister: [wreg+status,2+status,0]
  3003                           ;shiftRegister@Dummy1 stored from wreg
  3004  05CA  00F4               	movwf	shiftRegister@Dummy1
  3005                           
  3006                           ;main.c: 133: for (uint8_t m=0; m<y; m++){
  3007  05CB  01F3               	clrf	shiftRegister@m
  3008  05CC                     l901:	
  3009  05CC  0871               	movf	shiftRegister@y,w
  3010  05CD  0273               	subwf	shiftRegister@m,w
  3011  05CE  1803               	btfsc	3,0
  3012  05CF  0008               	return
  3013                           
  3014                           ;main.c: 134: do { LATB6 = 1; } while(0);
  3015  05D0  0022               	movlb	2	; select bank2
  3016  05D1  170D               	bsf	13,6	;volatile
  3017                           
  3018                           ;main.c: 135: LATB7 = Dummy1 & 0x01;
  3019  05D2  1C74               	btfss	shiftRegister@Dummy1,0
  3020  05D3  2DD7               	goto	u570
  3021  05D4  0022               	movlb	2	; select bank2
  3022  05D5  178D               	bsf	13,7	;volatile
  3023  05D6  2DD9               	goto	l891
  3024  05D7                     u570:	
  3025  05D7  0022               	movlb	2	; select bank2
  3026  05D8  138D               	bcf	13,7	;volatile
  3027  05D9                     l891:	
  3028                           
  3029                           ;main.c: 136: LATB5 = Dummy2 & 0x01;
  3030  05D9  1C70               	btfss	shiftRegister@Dummy2,0
  3031  05DA  2DDE               	goto	u590
  3032  05DB  0022               	movlb	2	; select bank2
  3033  05DC  168D               	bsf	13,5	;volatile
  3034  05DD  2DE0               	goto	u604
  3035  05DE                     u590:	
  3036  05DE  0022               	movlb	2	; select bank2
  3037  05DF  128D               	bcf	13,5	;volatile
  3038  05E0                     u604:	
  3039  05E0  0000               	nop	;# 
  3040                           
  3041                           ;main.c: 138: do { LATB6 = 0; } while(0);
  3042  05E1  0022               	movlb	2	; select bank2
  3043  05E2  130D               	bcf	13,6	;volatile
  3044                           
  3045                           ;main.c: 139: Dummy1 = Dummy1 >> 1;
  3046  05E3  3674               	lsrf	shiftRegister@Dummy1,w
  3047  05E4  00F2               	movwf	??_shiftRegister
  3048  05E5  0872               	movf	??_shiftRegister,w
  3049  05E6  00F4               	movwf	shiftRegister@Dummy1
  3050                           
  3051                           ;main.c: 140: Dummy2 = Dummy2 >> 1;
  3052  05E7  3670               	lsrf	shiftRegister@Dummy2,w
  3053  05E8  00F2               	movwf	??_shiftRegister
  3054  05E9  0872               	movf	??_shiftRegister,w
  3055  05EA  00F0               	movwf	shiftRegister@Dummy2
  3056  05EB  3001               	movlw	1
  3057  05EC  00F2               	movwf	??_shiftRegister
  3058  05ED  0872               	movf	??_shiftRegister,w
  3059  05EE  07F3               	addwf	shiftRegister@m,f
  3060  05EF  2DCC               	goto	l901
  3061  05F0                     __end_of_shiftRegister:	
  3062                           
  3063                           	psect	text7
  3064  0592                     __ptext7:	
  3065 ;; *************** function _paritycheck *****************
  3066 ;; Defined at:
  3067 ;;		line 144 in file "main.c"
  3068 ;; Parameters:    Size  Location     Type
  3069 ;;  Dummy           1    wreg     unsigned char 
  3070 ;; Auto vars:     Size  Location     Type
  3071 ;;  Dummy           1    2[COMMON] unsigned char 
  3072 ;;  parity          1    1[COMMON] unsigned char 
  3073 ;; Return value:  Size  Location     Type
  3074 ;;                  1    wreg      unsigned char 
  3075 ;; Registers used:
  3076 ;;		wreg, status,2, status,0
  3077 ;; Tracked objects:
  3078 ;;		On entry : 0/0
  3079 ;;		On exit  : 0/0
  3080 ;;		Unchanged: 0/0
  3081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3082 ;;      Params:         0       0       0       0       0       0       0       0
  3083 ;;      Locals:         2       0       0       0       0       0       0       0
  3084 ;;      Temps:          1       0       0       0       0       0       0       0
  3085 ;;      Totals:         3       0       0       0       0       0       0       0
  3086 ;;Total ram usage:        3 bytes
  3087 ;; Hardware stack levels used:    1
  3088 ;; This function calls:
  3089 ;;		Nothing
  3090 ;; This function is called by:
  3091 ;;		_MIPI
  3092 ;; This function uses a non-reentrant model
  3093 ;;
  3094                           
  3095                           
  3096                           ;psect for function _paritycheck
  3097  0592                     _paritycheck:	
  3098                           
  3099                           ;incstack = 0
  3100                           ; Regs used in _paritycheck: [wreg+status,2+status,0]
  3101                           ;paritycheck@Dummy stored from wreg
  3102  0592  00F2               	movwf	paritycheck@Dummy
  3103                           
  3104                           ;main.c: 145: bool parity = 0;
  3105  0593  01F1               	clrf	paritycheck@parity
  3106  0594                     l114:	
  3107                           ;main.c: 146: while (Dummy)
  3108                           
  3109  0594  0872               	movf	paritycheck@Dummy,w
  3110  0595  1903               	btfsc	3,2
  3111  0596  2DA7               	goto	l907
  3112                           
  3113                           ;main.c: 147: {
  3114                           ;main.c: 148: parity = !parity;
  3115  0597  0871               	movf	paritycheck@parity,w
  3116  0598  1D03               	btfss	3,2
  3117  0599  2D9C               	goto	u620
  3118  059A  3001               	movlw	1
  3119  059B  2D9D               	goto	u630
  3120  059C                     u620:	
  3121  059C  3000               	movlw	0
  3122  059D                     u630:	
  3123  059D  00F0               	movwf	??_paritycheck
  3124  059E  0870               	movf	??_paritycheck,w
  3125  059F  00F1               	movwf	paritycheck@parity
  3126                           
  3127                           ;main.c: 149: Dummy = Dummy & (Dummy - 1);
  3128  05A0  0872               	movf	paritycheck@Dummy,w
  3129  05A1  3EFF               	addlw	255
  3130  05A2  0572               	andwf	paritycheck@Dummy,w
  3131  05A3  00F0               	movwf	??_paritycheck
  3132  05A4  0870               	movf	??_paritycheck,w
  3133  05A5  00F2               	movwf	paritycheck@Dummy
  3134  05A6  2D94               	goto	l114
  3135  05A7                     l907:	
  3136                           
  3137                           ;main.c: 150: }
  3138                           ;main.c: 151: if (parity) return 0;
  3139  05A7  0871               	movf	paritycheck@parity,w
  3140  05A8  1903               	btfsc	3,2
  3141  05A9  2DAC               	goto	l915
  3142  05AA  3000               	movlw	0
  3143  05AB  0008               	return
  3144  05AC                     l915:	
  3145                           
  3146                           ;main.c: 152: else return 1;
  3147  05AC  3001               	movlw	1
  3148  05AD  0008               	return
  3149  05AE                     __end_of_paritycheck:	
  3150                           
  3151                           	psect	text8
  3152  0579                     __ptext8:	
  3153 ;; *************** function _DAC1_SetOutput *****************
  3154 ;; Defined at:
  3155 ;;		line 65 in file "mcc_generated_files/dac1.c"
  3156 ;; Parameters:    Size  Location     Type
  3157 ;;  inputData       1    wreg     unsigned char 
  3158 ;; Auto vars:     Size  Location     Type
  3159 ;;  inputData       1    0[COMMON] unsigned char 
  3160 ;; Return value:  Size  Location     Type
  3161 ;;		None               void
  3162 ;; Registers used:
  3163 ;;		wreg
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3169 ;;      Params:         0       0       0       0       0       0       0       0
  3170 ;;      Locals:         1       0       0       0       0       0       0       0
  3171 ;;      Temps:          0       0       0       0       0       0       0       0
  3172 ;;      Totals:         1       0       0       0       0       0       0       0
  3173 ;;Total ram usage:        1 bytes
  3174 ;; Hardware stack levels used:    1
  3175 ;; This function calls:
  3176 ;;		Nothing
  3177 ;; This function is called by:
  3178 ;;		_main
  3179 ;; This function uses a non-reentrant model
  3180 ;;
  3181                           
  3182                           
  3183                           ;psect for function _DAC1_SetOutput
  3184  0579                     _DAC1_SetOutput:	
  3185                           
  3186                           ;incstack = 0
  3187                           ; Regs used in _DAC1_SetOutput: [wreg]
  3188                           ;DAC1_SetOutput@inputData stored from wreg
  3189  0579  00F0               	movwf	DAC1_SetOutput@inputData
  3190                           
  3191                           ;dac1.c: 66: DAC1CON1 = inputData;
  3192  057A  0870               	movf	DAC1_SetOutput@inputData,w
  3193  057B  0022               	movlb	2	; select bank2
  3194  057C  0099               	movwf	25	;volatile
  3195  057D  0008               	return
  3196  057E                     __end_of_DAC1_SetOutput:	
  3197  007E                     btemp	set	126	;btemp
  3198  007E                     wtemp	set	126
  3199  007E                     wtemp0	set	126
  3200  0080                     wtemp1	set	128
  3201  0082                     wtemp2	set	130
  3202  0084                     wtemp3	set	132
  3203  0086                     wtemp4	set	134
  3204  0088                     wtemp5	set	136
  3205  007F                     wtemp6	set	127
  3206  007E                     ttemp	set	126
  3207  007E                     ttemp0	set	126
  3208  0081                     ttemp1	set	129
  3209  0084                     ttemp2	set	132
  3210  0087                     ttemp3	set	135
  3211  007F                     ttemp4	set	127
  3212  007E                     ltemp	set	126
  3213  007E                     ltemp0	set	126
  3214  0082                     ltemp1	set	130
  3215  0086                     ltemp2	set	134
  3216  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    73
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0       7
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_MIPI
    _MIPI->_shiftRegister

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1768
                                             13 COMMON     1     1      0
                    _DAC1_Initialize
                     _DAC1_SetOutput
                               _MIPI
             _PIN_MANAGER_Initialize
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _DAC1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DAC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MIPI                                                 8     5      3    1746
                                              5 COMMON     8     5      3
                        _paritycheck
                      _shiftRegister
 ---------------------------------------------------------------------------------
 (2) _shiftRegister                                        5     3      2    1082
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) _paritycheck                                          3     3      0     113
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _DAC1_SetOutput                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DAC1_Initialize
   _DAC1_SetOutput
   _MIPI
     _paritycheck
     _shiftRegister
   _PIN_MANAGER_Initialize
   _SYSTEM_Initialize
     _DAC1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      15       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       7       6        8.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      15      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Dec 17 18:25:36 2015

                    __CFG_CP$OFF 0000                      __CFG_LVP$ON 0000                  _DAC1_Initialize 057E  
                            l114 0594                              l213 06D0                              l126 072D  
                            l215 06D2                              l208 06CD                              l180 0688  
                            l173 0683                              l183 068A                              l178 0686  
                            l901 05CC                              l915 05AC                              l907 05A7  
                            l953 0798                              l891 05D9                              l947 077D  
                            l981 0602                              l959 07C0                              l967 07F1  
                            l985 060E                              l989 061A                              l999 0636  
                            u620 059C                              u604 05E0                              u630 059D  
                            u570 05D7                              u590 05DE                     __CFG_BORV$LO 0000  
                 _DAC1_SetOutput 0579                     __CFG_ZCD$OFF 0000                             l1035 068D  
                           l1063 06C5                             l1055 06B5                             l1039 069A  
                           l1059 06BD                             l1067 06D3                             _DATA 0800  
                           _LATA 010C                             _LATB 010D                             _LATC 010E  
                           _MIPI 06E6                             _WPUB 020D                             _WPUC 020E  
                   __CFG_WRT$OFF 0000                             _main 05F0                             fsr0h 0005  
                           fsr0l 0004                             indf0 0000                             btemp 007E  
                           ltemp 007E                             start 0002                             ttemp 007E  
                           wtemp 007E                            ?_MIPI 0075                            MIPI@a 007A  
                          MIPI@b 0075                            MIPI@c 0076                            MIPI@d 0077  
                          MIPI@i 007C                            MIPI@j 007B   __size_of_OSCILLATOR_Initialize 0006  
  __end_of_OSCILLATOR_Initialize 0589                            ?_main 0070                    __CFG_WDTE$OFF 0000  
                          _LATA1 0861                            _LATA2 0862                            _LATA4 0864  
                          _LATB4 086C                            _LATB5 086D                            _LATB6 086E  
                          _LATB7 086F           __end_of_DAC1_SetOutput 057E                            _PORTC 000E  
                          _TRISA 008C                            _TRISB 008D                            _TRISC 008E  
               __end_of_SLAVEADD 0849                            _Byte1 0020                            _Byte2 0021  
                          _Byte3 0022                    __CFG_PWRTE$ON 0000                   __CFG_BOREN$OFF 0000  
                          ltemp0 007E                            ltemp1 0082                            ltemp2 0086  
                          ltemp3 0080                            ttemp0 007E                            ttemp1 0081  
                          ttemp2 0084                            ttemp3 0087                            ttemp4 007F  
                          status 0003                            wtemp0 007E                            wtemp1 0080  
                          wtemp2 0082                            wtemp3 0084                            wtemp4 0086  
                          wtemp5 0088                            wtemp6 007F                     __end_of_DATA 0841  
                   __end_of_MIPI 07F6                   __CFG_MCLRE$OFF 0000                  __initialization 07F6  
                   __end_of_main 06E6          __end_of_DAC1_Initialize 0583                     ?_paritycheck 0070  
                         ??_MIPI 0078                   __CFG_LPBOR$OFF 0000                           ??_main 007D  
                ?_DAC1_SetOutput 0070                   __CFG_PLLEN$OFF 0000                           _ANSELA 018C  
                         _ANSELB 018D                           _ANSELC 018E                           _REGADD 0845  
                         _OSCCON 0099          DAC1_SetOutput@inputData 0070                   __CFG_STVREN$ON 0000  
              __end_of_DacOutput 0845            __end_of_shiftRegister 05F0                _SYSTEM_Initialize 0589  
        __end_of__initialization 07FD               ?_SYSTEM_Initialize 0070                   __pcstackCOMMON 0070  
            ??_SYSTEM_Initialize 0070                 ?_DAC1_Initialize 0070                   _OPTION_REGbits 0095  
      __end_of_SYSTEM_Initialize 0592                       __pbssBANK0 0020                 paritycheck@Dummy 0072  
                 shiftRegister@m 0073                   shiftRegister@y 0071                       __pmaintext 05F0  
                __CFG_PPS1WAY$ON 0000             __size_of_paritycheck 001C                  __CFG_WDTCCS$SWC 0000  
                        _OSCSTAT 009A                          _OSCTUNE 0098              shiftRegister@Dummy1 0074  
            shiftRegister@Dummy2 0070                 ??_DAC1_SetOutput 0070                          __ptext1 0589  
                        __ptext2 05AE                          __ptext3 0583                          __ptext4 057E  
                        __ptext5 06E6                          __ptext6 05CA                          __ptext7 0592  
                        __ptext8 0579            _OSCILLATOR_Initialize 0583                          _parity1 0023  
                        _parity2 0024                          _parity3 0025                          _parity4 0026  
       ??_PIN_MANAGER_Initialize 0070       __size_of_SYSTEM_Initialize 0009             end_of_initialization 07FD  
                   __pstringtext 0800                 __CFG_FOSC$INTOSC 0000                        _DacOutput 0841  
                 __end_of_REGADD 0847           ?_OSCILLATOR_Initialize 0070              start_initialization 07F6  
__size_of_PIN_MANAGER_Initialize 001C           __size_of_shiftRegister 0026         __size_of_DAC1_Initialize 0005  
                      ___latbits 0001                paritycheck@parity 0071           _PIN_MANAGER_Initialize 05AE  
                  ??_paritycheck 0070                         _DAC1CON0 0118                         _DAC1CON1 0119  
                  _shiftRegister 05CA                         _SLAVEADD 0847             __CFG_WDTCPS$WDTCPS1F 0000  
                 ?_shiftRegister 0070              __end_of_paritycheck 05AE                ??_DAC1_Initialize 0070  
        ??_OSCILLATOR_Initialize 0070          __size_of_DAC1_SetOutput 0005                    __size_of_MIPI 0110  
                  __size_of_main 00F6             __CFG_WDTCWS$WDTCWSSW 0000                      _paritycheck 0592  
                ??_shiftRegister 0072          ?_PIN_MANAGER_Initialize 0070                __CFG_CLKOUTEN$OFF 0000  
 __end_of_PIN_MANAGER_Initialize 05CA  
