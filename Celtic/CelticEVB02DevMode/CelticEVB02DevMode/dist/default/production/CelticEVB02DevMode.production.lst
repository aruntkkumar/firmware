

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Jan 28 11:46:23 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16LF1618
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     	;# 
    21  0001                     	;# 
    22  0002                     	;# 
    23  0003                     	;# 
    24  0004                     	;# 
    25  0005                     	;# 
    26  0006                     	;# 
    27  0007                     	;# 
    28  0008                     	;# 
    29  0009                     	;# 
    30  000A                     	;# 
    31  000B                     	;# 
    32  000C                     	;# 
    33  000D                     	;# 
    34  000E                     	;# 
    35  0010                     	;# 
    36  0011                     	;# 
    37  0012                     	;# 
    38  0013                     	;# 
    39  0014                     	;# 
    40  0015                     	;# 
    41  0016                     	;# 
    42  0016                     	;# 
    43  0017                     	;# 
    44  0018                     	;# 
    45  0019                     	;# 
    46  001A                     	;# 
    47  001A                     	;# 
    48  001B                     	;# 
    49  001B                     	;# 
    50  001C                     	;# 
    51  001D                     	;# 
    52  001E                     	;# 
    53  001F                     	;# 
    54  008C                     	;# 
    55  008D                     	;# 
    56  008E                     	;# 
    57  0090                     	;# 
    58  0091                     	;# 
    59  0092                     	;# 
    60  0093                     	;# 
    61  0094                     	;# 
    62  0095                     	;# 
    63  0096                     	;# 
    64  0098                     	;# 
    65  0099                     	;# 
    66  009A                     	;# 
    67  009B                     	;# 
    68  009B                     	;# 
    69  009C                     	;# 
    70  009D                     	;# 
    71  009E                     	;# 
    72  009F                     	;# 
    73  010C                     	;# 
    74  010D                     	;# 
    75  010E                     	;# 
    76  0111                     	;# 
    77  0112                     	;# 
    78  0113                     	;# 
    79  0114                     	;# 
    80  0115                     	;# 
    81  0116                     	;# 
    82  0117                     	;# 
    83  0118                     	;# 
    84  0119                     	;# 
    85  011C                     	;# 
    86  018C                     	;# 
    87  018D                     	;# 
    88  018E                     	;# 
    89  0191                     	;# 
    90  0191                     	;# 
    91  0192                     	;# 
    92  0193                     	;# 
    93  0193                     	;# 
    94  0194                     	;# 
    95  0195                     	;# 
    96  0196                     	;# 
    97  0199                     	;# 
    98  0199                     	;# 
    99  0199                     	;# 
   100  019A                     	;# 
   101  019A                     	;# 
   102  019A                     	;# 
   103  019B                     	;# 
   104  019B                     	;# 
   105  019B                     	;# 
   106  019B                     	;# 
   107  019B                     	;# 
   108  019C                     	;# 
   109  019C                     	;# 
   110  019C                     	;# 
   111  019D                     	;# 
   112  019D                     	;# 
   113  019D                     	;# 
   114  019E                     	;# 
   115  019E                     	;# 
   116  019E                     	;# 
   117  019F                     	;# 
   118  019F                     	;# 
   119  019F                     	;# 
   120  019F                     	;# 
   121  019F                     	;# 
   122  020C                     	;# 
   123  020D                     	;# 
   124  020E                     	;# 
   125  0211                     	;# 
   126  0211                     	;# 
   127  0212                     	;# 
   128  0212                     	;# 
   129  0213                     	;# 
   130  0213                     	;# 
   131  0214                     	;# 
   132  0214                     	;# 
   133  0215                     	;# 
   134  0215                     	;# 
   135  0215                     	;# 
   136  0215                     	;# 
   137  0216                     	;# 
   138  0216                     	;# 
   139  0217                     	;# 
   140  0217                     	;# 
   141  028C                     	;# 
   142  028D                     	;# 
   143  028E                     	;# 
   144  0291                     	;# 
   145  0291                     	;# 
   146  0292                     	;# 
   147  0293                     	;# 
   148  0294                     	;# 
   149  0298                     	;# 
   150  0298                     	;# 
   151  0299                     	;# 
   152  029A                     	;# 
   153  029B                     	;# 
   154  029E                     	;# 
   155  030C                     	;# 
   156  030D                     	;# 
   157  030E                     	;# 
   158  038C                     	;# 
   159  038D                     	;# 
   160  038E                     	;# 
   161  0391                     	;# 
   162  0392                     	;# 
   163  0393                     	;# 
   164  0394                     	;# 
   165  0395                     	;# 
   166  0396                     	;# 
   167  0397                     	;# 
   168  0398                     	;# 
   169  0399                     	;# 
   170  040E                     	;# 
   171  0413                     	;# 
   172  0413                     	;# 
   173  0414                     	;# 
   174  0414                     	;# 
   175  0415                     	;# 
   176  0416                     	;# 
   177  0417                     	;# 
   178  0418                     	;# 
   179  041A                     	;# 
   180  041A                     	;# 
   181  041B                     	;# 
   182  041B                     	;# 
   183  041C                     	;# 
   184  041D                     	;# 
   185  041E                     	;# 
   186  041F                     	;# 
   187  0493                     	;# 
   188  0494                     	;# 
   189  0495                     	;# 
   190  0496                     	;# 
   191  049A                     	;# 
   192  049B                     	;# 
   193  049C                     	;# 
   194  049D                     	;# 
   195  058C                     	;# 
   196  058C                     	;# 
   197  058D                     	;# 
   198  058E                     	;# 
   199  058E                     	;# 
   200  058F                     	;# 
   201  0590                     	;# 
   202  0590                     	;# 
   203  0591                     	;# 
   204  0592                     	;# 
   205  0592                     	;# 
   206  0593                     	;# 
   207  0594                     	;# 
   208  0594                     	;# 
   209  0595                     	;# 
   210  0596                     	;# 
   211  0596                     	;# 
   212  0597                     	;# 
   213  0598                     	;# 
   214  0599                     	;# 
   215  059A                     	;# 
   216  059B                     	;# 
   217  059B                     	;# 
   218  059C                     	;# 
   219  059D                     	;# 
   220  060C                     	;# 
   221  060C                     	;# 
   222  060D                     	;# 
   223  060E                     	;# 
   224  060F                     	;# 
   225  060F                     	;# 
   226  0610                     	;# 
   227  0611                     	;# 
   228  0612                     	;# 
   229  0613                     	;# 
   230  0614                     	;# 
   231  0617                     	;# 
   232  0618                     	;# 
   233  0619                     	;# 
   234  061A                     	;# 
   235  061B                     	;# 
   236  061C                     	;# 
   237  0691                     	;# 
   238  0692                     	;# 
   239  0693                     	;# 
   240  0694                     	;# 
   241  0695                     	;# 
   242  0696                     	;# 
   243  0697                     	;# 
   244  0699                     	;# 
   245  069A                     	;# 
   246  0711                     	;# 
   247  0712                     	;# 
   248  0713                     	;# 
   249  0714                     	;# 
   250  0715                     	;# 
   251  0718                     	;# 
   252  0718                     	;# 
   253  0719                     	;# 
   254  071A                     	;# 
   255  071A                     	;# 
   256  071B                     	;# 
   257  071C                     	;# 
   258  071D                     	;# 
   259  0791                     	;# 
   260  0791                     	;# 
   261  0792                     	;# 
   262  0793                     	;# 
   263  0793                     	;# 
   264  0794                     	;# 
   265  0795                     	;# 
   266  0795                     	;# 
   267  0796                     	;# 
   268  0797                     	;# 
   269  0797                     	;# 
   270  0798                     	;# 
   271  0799                     	;# 
   272  079A                     	;# 
   273  080C                     	;# 
   274  080C                     	;# 
   275  080D                     	;# 
   276  080E                     	;# 
   277  080E                     	;# 
   278  080F                     	;# 
   279  0810                     	;# 
   280  0810                     	;# 
   281  0811                     	;# 
   282  0812                     	;# 
   283  0812                     	;# 
   284  0813                     	;# 
   285  0814                     	;# 
   286  0815                     	;# 
   287  0816                     	;# 
   288  0817                     	;# 
   289  0818                     	;# 
   290  0819                     	;# 
   291  081A                     	;# 
   292  081A                     	;# 
   293  081B                     	;# 
   294  081C                     	;# 
   295  081C                     	;# 
   296  081D                     	;# 
   297  088C                     	;# 
   298  088D                     	;# 
   299  088E                     	;# 
   300  088F                     	;# 
   301  088F                     	;# 
   302  0890                     	;# 
   303  0891                     	;# 
   304  0892                     	;# 
   305  0893                     	;# 
   306  0893                     	;# 
   307  0894                     	;# 
   308  0895                     	;# 
   309  0896                     	;# 
   310  0897                     	;# 
   311  0897                     	;# 
   312  0898                     	;# 
   313  0899                     	;# 
   314  0D8C                     	;# 
   315  0D8C                     	;# 
   316  0D8D                     	;# 
   317  0D8E                     	;# 
   318  0D8F                     	;# 
   319  0D8F                     	;# 
   320  0D90                     	;# 
   321  0D91                     	;# 
   322  0D92                     	;# 
   323  0D92                     	;# 
   324  0D93                     	;# 
   325  0D94                     	;# 
   326  0D95                     	;# 
   327  0D95                     	;# 
   328  0D96                     	;# 
   329  0D97                     	;# 
   330  0D98                     	;# 
   331  0D99                     	;# 
   332  0D9A                     	;# 
   333  0D9B                     	;# 
   334  0D9C                     	;# 
   335  0D9D                     	;# 
   336  0D9E                     	;# 
   337  0D9E                     	;# 
   338  0D9F                     	;# 
   339  0DA0                     	;# 
   340  0DA1                     	;# 
   341  0DA1                     	;# 
   342  0DA2                     	;# 
   343  0DA3                     	;# 
   344  0DA4                     	;# 
   345  0DA4                     	;# 
   346  0DA5                     	;# 
   347  0DA6                     	;# 
   348  0DA7                     	;# 
   349  0DA7                     	;# 
   350  0DA8                     	;# 
   351  0DA9                     	;# 
   352  0DAA                     	;# 
   353  0DAB                     	;# 
   354  0DAC                     	;# 
   355  0DAD                     	;# 
   356  0DAE                     	;# 
   357  0DAF                     	;# 
   358  0E0F                     	;# 
   359  0E10                     	;# 
   360  0E11                     	;# 
   361  0E12                     	;# 
   362  0E13                     	;# 
   363  0E14                     	;# 
   364  0E15                     	;# 
   365  0E16                     	;# 
   366  0E17                     	;# 
   367  0E18                     	;# 
   368  0E19                     	;# 
   369  0E1A                     	;# 
   370  0E1B                     	;# 
   371  0E1C                     	;# 
   372  0E1D                     	;# 
   373  0E1E                     	;# 
   374  0E1F                     	;# 
   375  0E20                     	;# 
   376  0E21                     	;# 
   377  0E22                     	;# 
   378  0E23                     	;# 
   379  0E24                     	;# 
   380  0E25                     	;# 
   381  0E26                     	;# 
   382  0E27                     	;# 
   383  0E28                     	;# 
   384  0E29                     	;# 
   385  0E2A                     	;# 
   386  0E2B                     	;# 
   387  0E2C                     	;# 
   388  0E2D                     	;# 
   389  0E2E                     	;# 
   390  0E90                     	;# 
   391  0E91                     	;# 
   392  0E92                     	;# 
   393  0E94                     	;# 
   394  0E95                     	;# 
   395  0E9C                     	;# 
   396  0E9D                     	;# 
   397  0E9E                     	;# 
   398  0E9F                     	;# 
   399  0EA0                     	;# 
   400  0EA1                     	;# 
   401  0EA2                     	;# 
   402  0EA3                     	;# 
   403  0EA4                     	;# 
   404  0EA5                     	;# 
   405  0EA6                     	;# 
   406  0EA7                     	;# 
   407  0F0F                     	;# 
   408  0F10                     	;# 
   409  0F11                     	;# 
   410  0F12                     	;# 
   411  0F13                     	;# 
   412  0F14                     	;# 
   413  0F15                     	;# 
   414  0F16                     	;# 
   415  0F17                     	;# 
   416  0F18                     	;# 
   417  0F19                     	;# 
   418  0F1A                     	;# 
   419  0F1B                     	;# 
   420  0F1C                     	;# 
   421  0F1D                     	;# 
   422  0F1E                     	;# 
   423  0F1F                     	;# 
   424  0F20                     	;# 
   425  0F21                     	;# 
   426  0F22                     	;# 
   427  0F23                     	;# 
   428  0FE4                     	;# 
   429  0FE5                     	;# 
   430  0FE6                     	;# 
   431  0FE7                     	;# 
   432  0FE8                     	;# 
   433  0FE9                     	;# 
   434  0FEA                     	;# 
   435  0FEB                     	;# 
   436  0FED                     	;# 
   437  0FEE                     	;# 
   438  0FEF                     	;# 
   439  0000                     	;# 
   440  0001                     	;# 
   441  0002                     	;# 
   442  0003                     	;# 
   443  0004                     	;# 
   444  0005                     	;# 
   445  0006                     	;# 
   446  0007                     	;# 
   447  0008                     	;# 
   448  0009                     	;# 
   449  000A                     	;# 
   450  000B                     	;# 
   451  000C                     	;# 
   452  000D                     	;# 
   453  000E                     	;# 
   454  0010                     	;# 
   455  0011                     	;# 
   456  0012                     	;# 
   457  0013                     	;# 
   458  0014                     	;# 
   459  0015                     	;# 
   460  0016                     	;# 
   461  0016                     	;# 
   462  0017                     	;# 
   463  0018                     	;# 
   464  0019                     	;# 
   465  001A                     	;# 
   466  001A                     	;# 
   467  001B                     	;# 
   468  001B                     	;# 
   469  001C                     	;# 
   470  001D                     	;# 
   471  001E                     	;# 
   472  001F                     	;# 
   473  008C                     	;# 
   474  008D                     	;# 
   475  008E                     	;# 
   476  0090                     	;# 
   477  0091                     	;# 
   478  0092                     	;# 
   479  0093                     	;# 
   480  0094                     	;# 
   481  0095                     	;# 
   482  0096                     	;# 
   483  0098                     	;# 
   484  0099                     	;# 
   485  009A                     	;# 
   486  009B                     	;# 
   487  009B                     	;# 
   488  009C                     	;# 
   489  009D                     	;# 
   490  009E                     	;# 
   491  009F                     	;# 
   492  010C                     	;# 
   493  010D                     	;# 
   494  010E                     	;# 
   495  0111                     	;# 
   496  0112                     	;# 
   497  0113                     	;# 
   498  0114                     	;# 
   499  0115                     	;# 
   500  0116                     	;# 
   501  0117                     	;# 
   502  0118                     	;# 
   503  0119                     	;# 
   504  011C                     	;# 
   505  018C                     	;# 
   506  018D                     	;# 
   507  018E                     	;# 
   508  0191                     	;# 
   509  0191                     	;# 
   510  0192                     	;# 
   511  0193                     	;# 
   512  0193                     	;# 
   513  0194                     	;# 
   514  0195                     	;# 
   515  0196                     	;# 
   516  0199                     	;# 
   517  0199                     	;# 
   518  0199                     	;# 
   519  019A                     	;# 
   520  019A                     	;# 
   521  019A                     	;# 
   522  019B                     	;# 
   523  019B                     	;# 
   524  019B                     	;# 
   525  019B                     	;# 
   526  019B                     	;# 
   527  019C                     	;# 
   528  019C                     	;# 
   529  019C                     	;# 
   530  019D                     	;# 
   531  019D                     	;# 
   532  019D                     	;# 
   533  019E                     	;# 
   534  019E                     	;# 
   535  019E                     	;# 
   536  019F                     	;# 
   537  019F                     	;# 
   538  019F                     	;# 
   539  019F                     	;# 
   540  019F                     	;# 
   541  020C                     	;# 
   542  020D                     	;# 
   543  020E                     	;# 
   544  0211                     	;# 
   545  0211                     	;# 
   546  0212                     	;# 
   547  0212                     	;# 
   548  0213                     	;# 
   549  0213                     	;# 
   550  0214                     	;# 
   551  0214                     	;# 
   552  0215                     	;# 
   553  0215                     	;# 
   554  0215                     	;# 
   555  0215                     	;# 
   556  0216                     	;# 
   557  0216                     	;# 
   558  0217                     	;# 
   559  0217                     	;# 
   560  028C                     	;# 
   561  028D                     	;# 
   562  028E                     	;# 
   563  0291                     	;# 
   564  0291                     	;# 
   565  0292                     	;# 
   566  0293                     	;# 
   567  0294                     	;# 
   568  0298                     	;# 
   569  0298                     	;# 
   570  0299                     	;# 
   571  029A                     	;# 
   572  029B                     	;# 
   573  029E                     	;# 
   574  030C                     	;# 
   575  030D                     	;# 
   576  030E                     	;# 
   577  038C                     	;# 
   578  038D                     	;# 
   579  038E                     	;# 
   580  0391                     	;# 
   581  0392                     	;# 
   582  0393                     	;# 
   583  0394                     	;# 
   584  0395                     	;# 
   585  0396                     	;# 
   586  0397                     	;# 
   587  0398                     	;# 
   588  0399                     	;# 
   589  040E                     	;# 
   590  0413                     	;# 
   591  0413                     	;# 
   592  0414                     	;# 
   593  0414                     	;# 
   594  0415                     	;# 
   595  0416                     	;# 
   596  0417                     	;# 
   597  0418                     	;# 
   598  041A                     	;# 
   599  041A                     	;# 
   600  041B                     	;# 
   601  041B                     	;# 
   602  041C                     	;# 
   603  041D                     	;# 
   604  041E                     	;# 
   605  041F                     	;# 
   606  0493                     	;# 
   607  0494                     	;# 
   608  0495                     	;# 
   609  0496                     	;# 
   610  049A                     	;# 
   611  049B                     	;# 
   612  049C                     	;# 
   613  049D                     	;# 
   614  058C                     	;# 
   615  058C                     	;# 
   616  058D                     	;# 
   617  058E                     	;# 
   618  058E                     	;# 
   619  058F                     	;# 
   620  0590                     	;# 
   621  0590                     	;# 
   622  0591                     	;# 
   623  0592                     	;# 
   624  0592                     	;# 
   625  0593                     	;# 
   626  0594                     	;# 
   627  0594                     	;# 
   628  0595                     	;# 
   629  0596                     	;# 
   630  0596                     	;# 
   631  0597                     	;# 
   632  0598                     	;# 
   633  0599                     	;# 
   634  059A                     	;# 
   635  059B                     	;# 
   636  059B                     	;# 
   637  059C                     	;# 
   638  059D                     	;# 
   639  060C                     	;# 
   640  060C                     	;# 
   641  060D                     	;# 
   642  060E                     	;# 
   643  060F                     	;# 
   644  060F                     	;# 
   645  0610                     	;# 
   646  0611                     	;# 
   647  0612                     	;# 
   648  0613                     	;# 
   649  0614                     	;# 
   650  0617                     	;# 
   651  0618                     	;# 
   652  0619                     	;# 
   653  061A                     	;# 
   654  061B                     	;# 
   655  061C                     	;# 
   656  0691                     	;# 
   657  0692                     	;# 
   658  0693                     	;# 
   659  0694                     	;# 
   660  0695                     	;# 
   661  0696                     	;# 
   662  0697                     	;# 
   663  0699                     	;# 
   664  069A                     	;# 
   665  0711                     	;# 
   666  0712                     	;# 
   667  0713                     	;# 
   668  0714                     	;# 
   669  0715                     	;# 
   670  0718                     	;# 
   671  0718                     	;# 
   672  0719                     	;# 
   673  071A                     	;# 
   674  071A                     	;# 
   675  071B                     	;# 
   676  071C                     	;# 
   677  071D                     	;# 
   678  0791                     	;# 
   679  0791                     	;# 
   680  0792                     	;# 
   681  0793                     	;# 
   682  0793                     	;# 
   683  0794                     	;# 
   684  0795                     	;# 
   685  0795                     	;# 
   686  0796                     	;# 
   687  0797                     	;# 
   688  0797                     	;# 
   689  0798                     	;# 
   690  0799                     	;# 
   691  079A                     	;# 
   692  080C                     	;# 
   693  080C                     	;# 
   694  080D                     	;# 
   695  080E                     	;# 
   696  080E                     	;# 
   697  080F                     	;# 
   698  0810                     	;# 
   699  0810                     	;# 
   700  0811                     	;# 
   701  0812                     	;# 
   702  0812                     	;# 
   703  0813                     	;# 
   704  0814                     	;# 
   705  0815                     	;# 
   706  0816                     	;# 
   707  0817                     	;# 
   708  0818                     	;# 
   709  0819                     	;# 
   710  081A                     	;# 
   711  081A                     	;# 
   712  081B                     	;# 
   713  081C                     	;# 
   714  081C                     	;# 
   715  081D                     	;# 
   716  088C                     	;# 
   717  088D                     	;# 
   718  088E                     	;# 
   719  088F                     	;# 
   720  088F                     	;# 
   721  0890                     	;# 
   722  0891                     	;# 
   723  0892                     	;# 
   724  0893                     	;# 
   725  0893                     	;# 
   726  0894                     	;# 
   727  0895                     	;# 
   728  0896                     	;# 
   729  0897                     	;# 
   730  0897                     	;# 
   731  0898                     	;# 
   732  0899                     	;# 
   733  0D8C                     	;# 
   734  0D8C                     	;# 
   735  0D8D                     	;# 
   736  0D8E                     	;# 
   737  0D8F                     	;# 
   738  0D8F                     	;# 
   739  0D90                     	;# 
   740  0D91                     	;# 
   741  0D92                     	;# 
   742  0D92                     	;# 
   743  0D93                     	;# 
   744  0D94                     	;# 
   745  0D95                     	;# 
   746  0D95                     	;# 
   747  0D96                     	;# 
   748  0D97                     	;# 
   749  0D98                     	;# 
   750  0D99                     	;# 
   751  0D9A                     	;# 
   752  0D9B                     	;# 
   753  0D9C                     	;# 
   754  0D9D                     	;# 
   755  0D9E                     	;# 
   756  0D9E                     	;# 
   757  0D9F                     	;# 
   758  0DA0                     	;# 
   759  0DA1                     	;# 
   760  0DA1                     	;# 
   761  0DA2                     	;# 
   762  0DA3                     	;# 
   763  0DA4                     	;# 
   764  0DA4                     	;# 
   765  0DA5                     	;# 
   766  0DA6                     	;# 
   767  0DA7                     	;# 
   768  0DA7                     	;# 
   769  0DA8                     	;# 
   770  0DA9                     	;# 
   771  0DAA                     	;# 
   772  0DAB                     	;# 
   773  0DAC                     	;# 
   774  0DAD                     	;# 
   775  0DAE                     	;# 
   776  0DAF                     	;# 
   777  0E0F                     	;# 
   778  0E10                     	;# 
   779  0E11                     	;# 
   780  0E12                     	;# 
   781  0E13                     	;# 
   782  0E14                     	;# 
   783  0E15                     	;# 
   784  0E16                     	;# 
   785  0E17                     	;# 
   786  0E18                     	;# 
   787  0E19                     	;# 
   788  0E1A                     	;# 
   789  0E1B                     	;# 
   790  0E1C                     	;# 
   791  0E1D                     	;# 
   792  0E1E                     	;# 
   793  0E1F                     	;# 
   794  0E20                     	;# 
   795  0E21                     	;# 
   796  0E22                     	;# 
   797  0E23                     	;# 
   798  0E24                     	;# 
   799  0E25                     	;# 
   800  0E26                     	;# 
   801  0E27                     	;# 
   802  0E28                     	;# 
   803  0E29                     	;# 
   804  0E2A                     	;# 
   805  0E2B                     	;# 
   806  0E2C                     	;# 
   807  0E2D                     	;# 
   808  0E2E                     	;# 
   809  0E90                     	;# 
   810  0E91                     	;# 
   811  0E92                     	;# 
   812  0E94                     	;# 
   813  0E95                     	;# 
   814  0E9C                     	;# 
   815  0E9D                     	;# 
   816  0E9E                     	;# 
   817  0E9F                     	;# 
   818  0EA0                     	;# 
   819  0EA1                     	;# 
   820  0EA2                     	;# 
   821  0EA3                     	;# 
   822  0EA4                     	;# 
   823  0EA5                     	;# 
   824  0EA6                     	;# 
   825  0EA7                     	;# 
   826  0F0F                     	;# 
   827  0F10                     	;# 
   828  0F11                     	;# 
   829  0F12                     	;# 
   830  0F13                     	;# 
   831  0F14                     	;# 
   832  0F15                     	;# 
   833  0F16                     	;# 
   834  0F17                     	;# 
   835  0F18                     	;# 
   836  0F19                     	;# 
   837  0F1A                     	;# 
   838  0F1B                     	;# 
   839  0F1C                     	;# 
   840  0F1D                     	;# 
   841  0F1E                     	;# 
   842  0F1F                     	;# 
   843  0F20                     	;# 
   844  0F21                     	;# 
   845  0F22                     	;# 
   846  0F23                     	;# 
   847  0FE4                     	;# 
   848  0FE5                     	;# 
   849  0FE6                     	;# 
   850  0FE7                     	;# 
   851  0FE8                     	;# 
   852  0FE9                     	;# 
   853  0FEA                     	;# 
   854  0FEB                     	;# 
   855  0FED                     	;# 
   856  0FEE                     	;# 
   857  0FEF                     	;# 
   858  0000                     	;# 
   859  0001                     	;# 
   860  0002                     	;# 
   861  0003                     	;# 
   862  0004                     	;# 
   863  0005                     	;# 
   864  0006                     	;# 
   865  0007                     	;# 
   866  0008                     	;# 
   867  0009                     	;# 
   868  000A                     	;# 
   869  000B                     	;# 
   870  000C                     	;# 
   871  000D                     	;# 
   872  000E                     	;# 
   873  0010                     	;# 
   874  0011                     	;# 
   875  0012                     	;# 
   876  0013                     	;# 
   877  0014                     	;# 
   878  0015                     	;# 
   879  0016                     	;# 
   880  0016                     	;# 
   881  0017                     	;# 
   882  0018                     	;# 
   883  0019                     	;# 
   884  001A                     	;# 
   885  001A                     	;# 
   886  001B                     	;# 
   887  001B                     	;# 
   888  001C                     	;# 
   889  001D                     	;# 
   890  001E                     	;# 
   891  001F                     	;# 
   892  008C                     	;# 
   893  008D                     	;# 
   894  008E                     	;# 
   895  0090                     	;# 
   896  0091                     	;# 
   897  0092                     	;# 
   898  0093                     	;# 
   899  0094                     	;# 
   900  0095                     	;# 
   901  0096                     	;# 
   902  0098                     	;# 
   903  0099                     	;# 
   904  009A                     	;# 
   905  009B                     	;# 
   906  009B                     	;# 
   907  009C                     	;# 
   908  009D                     	;# 
   909  009E                     	;# 
   910  009F                     	;# 
   911  010C                     	;# 
   912  010D                     	;# 
   913  010E                     	;# 
   914  0111                     	;# 
   915  0112                     	;# 
   916  0113                     	;# 
   917  0114                     	;# 
   918  0115                     	;# 
   919  0116                     	;# 
   920  0117                     	;# 
   921  0118                     	;# 
   922  0119                     	;# 
   923  011C                     	;# 
   924  018C                     	;# 
   925  018D                     	;# 
   926  018E                     	;# 
   927  0191                     	;# 
   928  0191                     	;# 
   929  0192                     	;# 
   930  0193                     	;# 
   931  0193                     	;# 
   932  0194                     	;# 
   933  0195                     	;# 
   934  0196                     	;# 
   935  0199                     	;# 
   936  0199                     	;# 
   937  0199                     	;# 
   938  019A                     	;# 
   939  019A                     	;# 
   940  019A                     	;# 
   941  019B                     	;# 
   942  019B                     	;# 
   943  019B                     	;# 
   944  019B                     	;# 
   945  019B                     	;# 
   946  019C                     	;# 
   947  019C                     	;# 
   948  019C                     	;# 
   949  019D                     	;# 
   950  019D                     	;# 
   951  019D                     	;# 
   952  019E                     	;# 
   953  019E                     	;# 
   954  019E                     	;# 
   955  019F                     	;# 
   956  019F                     	;# 
   957  019F                     	;# 
   958  019F                     	;# 
   959  019F                     	;# 
   960  020C                     	;# 
   961  020D                     	;# 
   962  020E                     	;# 
   963  0211                     	;# 
   964  0211                     	;# 
   965  0212                     	;# 
   966  0212                     	;# 
   967  0213                     	;# 
   968  0213                     	;# 
   969  0214                     	;# 
   970  0214                     	;# 
   971  0215                     	;# 
   972  0215                     	;# 
   973  0215                     	;# 
   974  0215                     	;# 
   975  0216                     	;# 
   976  0216                     	;# 
   977  0217                     	;# 
   978  0217                     	;# 
   979  028C                     	;# 
   980  028D                     	;# 
   981  028E                     	;# 
   982  0291                     	;# 
   983  0291                     	;# 
   984  0292                     	;# 
   985  0293                     	;# 
   986  0294                     	;# 
   987  0298                     	;# 
   988  0298                     	;# 
   989  0299                     	;# 
   990  029A                     	;# 
   991  029B                     	;# 
   992  029E                     	;# 
   993  030C                     	;# 
   994  030D                     	;# 
   995  030E                     	;# 
   996  038C                     	;# 
   997  038D                     	;# 
   998  038E                     	;# 
   999  0391                     	;# 
  1000  0392                     	;# 
  1001  0393                     	;# 
  1002  0394                     	;# 
  1003  0395                     	;# 
  1004  0396                     	;# 
  1005  0397                     	;# 
  1006  0398                     	;# 
  1007  0399                     	;# 
  1008  040E                     	;# 
  1009  0413                     	;# 
  1010  0413                     	;# 
  1011  0414                     	;# 
  1012  0414                     	;# 
  1013  0415                     	;# 
  1014  0416                     	;# 
  1015  0417                     	;# 
  1016  0418                     	;# 
  1017  041A                     	;# 
  1018  041A                     	;# 
  1019  041B                     	;# 
  1020  041B                     	;# 
  1021  041C                     	;# 
  1022  041D                     	;# 
  1023  041E                     	;# 
  1024  041F                     	;# 
  1025  0493                     	;# 
  1026  0494                     	;# 
  1027  0495                     	;# 
  1028  0496                     	;# 
  1029  049A                     	;# 
  1030  049B                     	;# 
  1031  049C                     	;# 
  1032  049D                     	;# 
  1033  058C                     	;# 
  1034  058C                     	;# 
  1035  058D                     	;# 
  1036  058E                     	;# 
  1037  058E                     	;# 
  1038  058F                     	;# 
  1039  0590                     	;# 
  1040  0590                     	;# 
  1041  0591                     	;# 
  1042  0592                     	;# 
  1043  0592                     	;# 
  1044  0593                     	;# 
  1045  0594                     	;# 
  1046  0594                     	;# 
  1047  0595                     	;# 
  1048  0596                     	;# 
  1049  0596                     	;# 
  1050  0597                     	;# 
  1051  0598                     	;# 
  1052  0599                     	;# 
  1053  059A                     	;# 
  1054  059B                     	;# 
  1055  059B                     	;# 
  1056  059C                     	;# 
  1057  059D                     	;# 
  1058  060C                     	;# 
  1059  060C                     	;# 
  1060  060D                     	;# 
  1061  060E                     	;# 
  1062  060F                     	;# 
  1063  060F                     	;# 
  1064  0610                     	;# 
  1065  0611                     	;# 
  1066  0612                     	;# 
  1067  0613                     	;# 
  1068  0614                     	;# 
  1069  0617                     	;# 
  1070  0618                     	;# 
  1071  0619                     	;# 
  1072  061A                     	;# 
  1073  061B                     	;# 
  1074  061C                     	;# 
  1075  0691                     	;# 
  1076  0692                     	;# 
  1077  0693                     	;# 
  1078  0694                     	;# 
  1079  0695                     	;# 
  1080  0696                     	;# 
  1081  0697                     	;# 
  1082  0699                     	;# 
  1083  069A                     	;# 
  1084  0711                     	;# 
  1085  0712                     	;# 
  1086  0713                     	;# 
  1087  0714                     	;# 
  1088  0715                     	;# 
  1089  0718                     	;# 
  1090  0718                     	;# 
  1091  0719                     	;# 
  1092  071A                     	;# 
  1093  071A                     	;# 
  1094  071B                     	;# 
  1095  071C                     	;# 
  1096  071D                     	;# 
  1097  0791                     	;# 
  1098  0791                     	;# 
  1099  0792                     	;# 
  1100  0793                     	;# 
  1101  0793                     	;# 
  1102  0794                     	;# 
  1103  0795                     	;# 
  1104  0795                     	;# 
  1105  0796                     	;# 
  1106  0797                     	;# 
  1107  0797                     	;# 
  1108  0798                     	;# 
  1109  0799                     	;# 
  1110  079A                     	;# 
  1111  080C                     	;# 
  1112  080C                     	;# 
  1113  080D                     	;# 
  1114  080E                     	;# 
  1115  080E                     	;# 
  1116  080F                     	;# 
  1117  0810                     	;# 
  1118  0810                     	;# 
  1119  0811                     	;# 
  1120  0812                     	;# 
  1121  0812                     	;# 
  1122  0813                     	;# 
  1123  0814                     	;# 
  1124  0815                     	;# 
  1125  0816                     	;# 
  1126  0817                     	;# 
  1127  0818                     	;# 
  1128  0819                     	;# 
  1129  081A                     	;# 
  1130  081A                     	;# 
  1131  081B                     	;# 
  1132  081C                     	;# 
  1133  081C                     	;# 
  1134  081D                     	;# 
  1135  088C                     	;# 
  1136  088D                     	;# 
  1137  088E                     	;# 
  1138  088F                     	;# 
  1139  088F                     	;# 
  1140  0890                     	;# 
  1141  0891                     	;# 
  1142  0892                     	;# 
  1143  0893                     	;# 
  1144  0893                     	;# 
  1145  0894                     	;# 
  1146  0895                     	;# 
  1147  0896                     	;# 
  1148  0897                     	;# 
  1149  0897                     	;# 
  1150  0898                     	;# 
  1151  0899                     	;# 
  1152  0D8C                     	;# 
  1153  0D8C                     	;# 
  1154  0D8D                     	;# 
  1155  0D8E                     	;# 
  1156  0D8F                     	;# 
  1157  0D8F                     	;# 
  1158  0D90                     	;# 
  1159  0D91                     	;# 
  1160  0D92                     	;# 
  1161  0D92                     	;# 
  1162  0D93                     	;# 
  1163  0D94                     	;# 
  1164  0D95                     	;# 
  1165  0D95                     	;# 
  1166  0D96                     	;# 
  1167  0D97                     	;# 
  1168  0D98                     	;# 
  1169  0D99                     	;# 
  1170  0D9A                     	;# 
  1171  0D9B                     	;# 
  1172  0D9C                     	;# 
  1173  0D9D                     	;# 
  1174  0D9E                     	;# 
  1175  0D9E                     	;# 
  1176  0D9F                     	;# 
  1177  0DA0                     	;# 
  1178  0DA1                     	;# 
  1179  0DA1                     	;# 
  1180  0DA2                     	;# 
  1181  0DA3                     	;# 
  1182  0DA4                     	;# 
  1183  0DA4                     	;# 
  1184  0DA5                     	;# 
  1185  0DA6                     	;# 
  1186  0DA7                     	;# 
  1187  0DA7                     	;# 
  1188  0DA8                     	;# 
  1189  0DA9                     	;# 
  1190  0DAA                     	;# 
  1191  0DAB                     	;# 
  1192  0DAC                     	;# 
  1193  0DAD                     	;# 
  1194  0DAE                     	;# 
  1195  0DAF                     	;# 
  1196  0E0F                     	;# 
  1197  0E10                     	;# 
  1198  0E11                     	;# 
  1199  0E12                     	;# 
  1200  0E13                     	;# 
  1201  0E14                     	;# 
  1202  0E15                     	;# 
  1203  0E16                     	;# 
  1204  0E17                     	;# 
  1205  0E18                     	;# 
  1206  0E19                     	;# 
  1207  0E1A                     	;# 
  1208  0E1B                     	;# 
  1209  0E1C                     	;# 
  1210  0E1D                     	;# 
  1211  0E1E                     	;# 
  1212  0E1F                     	;# 
  1213  0E20                     	;# 
  1214  0E21                     	;# 
  1215  0E22                     	;# 
  1216  0E23                     	;# 
  1217  0E24                     	;# 
  1218  0E25                     	;# 
  1219  0E26                     	;# 
  1220  0E27                     	;# 
  1221  0E28                     	;# 
  1222  0E29                     	;# 
  1223  0E2A                     	;# 
  1224  0E2B                     	;# 
  1225  0E2C                     	;# 
  1226  0E2D                     	;# 
  1227  0E2E                     	;# 
  1228  0E90                     	;# 
  1229  0E91                     	;# 
  1230  0E92                     	;# 
  1231  0E94                     	;# 
  1232  0E95                     	;# 
  1233  0E9C                     	;# 
  1234  0E9D                     	;# 
  1235  0E9E                     	;# 
  1236  0E9F                     	;# 
  1237  0EA0                     	;# 
  1238  0EA1                     	;# 
  1239  0EA2                     	;# 
  1240  0EA3                     	;# 
  1241  0EA4                     	;# 
  1242  0EA5                     	;# 
  1243  0EA6                     	;# 
  1244  0EA7                     	;# 
  1245  0F0F                     	;# 
  1246  0F10                     	;# 
  1247  0F11                     	;# 
  1248  0F12                     	;# 
  1249  0F13                     	;# 
  1250  0F14                     	;# 
  1251  0F15                     	;# 
  1252  0F16                     	;# 
  1253  0F17                     	;# 
  1254  0F18                     	;# 
  1255  0F19                     	;# 
  1256  0F1A                     	;# 
  1257  0F1B                     	;# 
  1258  0F1C                     	;# 
  1259  0F1D                     	;# 
  1260  0F1E                     	;# 
  1261  0F1F                     	;# 
  1262  0F20                     	;# 
  1263  0F21                     	;# 
  1264  0F22                     	;# 
  1265  0F23                     	;# 
  1266  0FE4                     	;# 
  1267  0FE5                     	;# 
  1268  0FE6                     	;# 
  1269  0FE7                     	;# 
  1270  0FE8                     	;# 
  1271  0FE9                     	;# 
  1272  0FEA                     	;# 
  1273  0FEB                     	;# 
  1274  0FED                     	;# 
  1275  0FEE                     	;# 
  1276  0FEF                     	;# 
  1277  0000                     	;# 
  1278  0001                     	;# 
  1279  0002                     	;# 
  1280  0003                     	;# 
  1281  0004                     	;# 
  1282  0005                     	;# 
  1283  0006                     	;# 
  1284  0007                     	;# 
  1285  0008                     	;# 
  1286  0009                     	;# 
  1287  000A                     	;# 
  1288  000B                     	;# 
  1289  000C                     	;# 
  1290  000D                     	;# 
  1291  000E                     	;# 
  1292  0010                     	;# 
  1293  0011                     	;# 
  1294  0012                     	;# 
  1295  0013                     	;# 
  1296  0014                     	;# 
  1297  0015                     	;# 
  1298  0016                     	;# 
  1299  0016                     	;# 
  1300  0017                     	;# 
  1301  0018                     	;# 
  1302  0019                     	;# 
  1303  001A                     	;# 
  1304  001A                     	;# 
  1305  001B                     	;# 
  1306  001B                     	;# 
  1307  001C                     	;# 
  1308  001D                     	;# 
  1309  001E                     	;# 
  1310  001F                     	;# 
  1311  008C                     	;# 
  1312  008D                     	;# 
  1313  008E                     	;# 
  1314  0090                     	;# 
  1315  0091                     	;# 
  1316  0092                     	;# 
  1317  0093                     	;# 
  1318  0094                     	;# 
  1319  0095                     	;# 
  1320  0096                     	;# 
  1321  0098                     	;# 
  1322  0099                     	;# 
  1323  009A                     	;# 
  1324  009B                     	;# 
  1325  009B                     	;# 
  1326  009C                     	;# 
  1327  009D                     	;# 
  1328  009E                     	;# 
  1329  009F                     	;# 
  1330  010C                     	;# 
  1331  010D                     	;# 
  1332  010E                     	;# 
  1333  0111                     	;# 
  1334  0112                     	;# 
  1335  0113                     	;# 
  1336  0114                     	;# 
  1337  0115                     	;# 
  1338  0116                     	;# 
  1339  0117                     	;# 
  1340  0118                     	;# 
  1341  0119                     	;# 
  1342  011C                     	;# 
  1343  018C                     	;# 
  1344  018D                     	;# 
  1345  018E                     	;# 
  1346  0191                     	;# 
  1347  0191                     	;# 
  1348  0192                     	;# 
  1349  0193                     	;# 
  1350  0193                     	;# 
  1351  0194                     	;# 
  1352  0195                     	;# 
  1353  0196                     	;# 
  1354  0199                     	;# 
  1355  0199                     	;# 
  1356  0199                     	;# 
  1357  019A                     	;# 
  1358  019A                     	;# 
  1359  019A                     	;# 
  1360  019B                     	;# 
  1361  019B                     	;# 
  1362  019B                     	;# 
  1363  019B                     	;# 
  1364  019B                     	;# 
  1365  019C                     	;# 
  1366  019C                     	;# 
  1367  019C                     	;# 
  1368  019D                     	;# 
  1369  019D                     	;# 
  1370  019D                     	;# 
  1371  019E                     	;# 
  1372  019E                     	;# 
  1373  019E                     	;# 
  1374  019F                     	;# 
  1375  019F                     	;# 
  1376  019F                     	;# 
  1377  019F                     	;# 
  1378  019F                     	;# 
  1379  020C                     	;# 
  1380  020D                     	;# 
  1381  020E                     	;# 
  1382  0211                     	;# 
  1383  0211                     	;# 
  1384  0212                     	;# 
  1385  0212                     	;# 
  1386  0213                     	;# 
  1387  0213                     	;# 
  1388  0214                     	;# 
  1389  0214                     	;# 
  1390  0215                     	;# 
  1391  0215                     	;# 
  1392  0215                     	;# 
  1393  0215                     	;# 
  1394  0216                     	;# 
  1395  0216                     	;# 
  1396  0217                     	;# 
  1397  0217                     	;# 
  1398  028C                     	;# 
  1399  028D                     	;# 
  1400  028E                     	;# 
  1401  0291                     	;# 
  1402  0291                     	;# 
  1403  0292                     	;# 
  1404  0293                     	;# 
  1405  0294                     	;# 
  1406  0298                     	;# 
  1407  0298                     	;# 
  1408  0299                     	;# 
  1409  029A                     	;# 
  1410  029B                     	;# 
  1411  029E                     	;# 
  1412  030C                     	;# 
  1413  030D                     	;# 
  1414  030E                     	;# 
  1415  038C                     	;# 
  1416  038D                     	;# 
  1417  038E                     	;# 
  1418  0391                     	;# 
  1419  0392                     	;# 
  1420  0393                     	;# 
  1421  0394                     	;# 
  1422  0395                     	;# 
  1423  0396                     	;# 
  1424  0397                     	;# 
  1425  0398                     	;# 
  1426  0399                     	;# 
  1427  040E                     	;# 
  1428  0413                     	;# 
  1429  0413                     	;# 
  1430  0414                     	;# 
  1431  0414                     	;# 
  1432  0415                     	;# 
  1433  0416                     	;# 
  1434  0417                     	;# 
  1435  0418                     	;# 
  1436  041A                     	;# 
  1437  041A                     	;# 
  1438  041B                     	;# 
  1439  041B                     	;# 
  1440  041C                     	;# 
  1441  041D                     	;# 
  1442  041E                     	;# 
  1443  041F                     	;# 
  1444  0493                     	;# 
  1445  0494                     	;# 
  1446  0495                     	;# 
  1447  0496                     	;# 
  1448  049A                     	;# 
  1449  049B                     	;# 
  1450  049C                     	;# 
  1451  049D                     	;# 
  1452  058C                     	;# 
  1453  058C                     	;# 
  1454  058D                     	;# 
  1455  058E                     	;# 
  1456  058E                     	;# 
  1457  058F                     	;# 
  1458  0590                     	;# 
  1459  0590                     	;# 
  1460  0591                     	;# 
  1461  0592                     	;# 
  1462  0592                     	;# 
  1463  0593                     	;# 
  1464  0594                     	;# 
  1465  0594                     	;# 
  1466  0595                     	;# 
  1467  0596                     	;# 
  1468  0596                     	;# 
  1469  0597                     	;# 
  1470  0598                     	;# 
  1471  0599                     	;# 
  1472  059A                     	;# 
  1473  059B                     	;# 
  1474  059B                     	;# 
  1475  059C                     	;# 
  1476  059D                     	;# 
  1477  060C                     	;# 
  1478  060C                     	;# 
  1479  060D                     	;# 
  1480  060E                     	;# 
  1481  060F                     	;# 
  1482  060F                     	;# 
  1483  0610                     	;# 
  1484  0611                     	;# 
  1485  0612                     	;# 
  1486  0613                     	;# 
  1487  0614                     	;# 
  1488  0617                     	;# 
  1489  0618                     	;# 
  1490  0619                     	;# 
  1491  061A                     	;# 
  1492  061B                     	;# 
  1493  061C                     	;# 
  1494  0691                     	;# 
  1495  0692                     	;# 
  1496  0693                     	;# 
  1497  0694                     	;# 
  1498  0695                     	;# 
  1499  0696                     	;# 
  1500  0697                     	;# 
  1501  0699                     	;# 
  1502  069A                     	;# 
  1503  0711                     	;# 
  1504  0712                     	;# 
  1505  0713                     	;# 
  1506  0714                     	;# 
  1507  0715                     	;# 
  1508  0718                     	;# 
  1509  0718                     	;# 
  1510  0719                     	;# 
  1511  071A                     	;# 
  1512  071A                     	;# 
  1513  071B                     	;# 
  1514  071C                     	;# 
  1515  071D                     	;# 
  1516  0791                     	;# 
  1517  0791                     	;# 
  1518  0792                     	;# 
  1519  0793                     	;# 
  1520  0793                     	;# 
  1521  0794                     	;# 
  1522  0795                     	;# 
  1523  0795                     	;# 
  1524  0796                     	;# 
  1525  0797                     	;# 
  1526  0797                     	;# 
  1527  0798                     	;# 
  1528  0799                     	;# 
  1529  079A                     	;# 
  1530  080C                     	;# 
  1531  080C                     	;# 
  1532  080D                     	;# 
  1533  080E                     	;# 
  1534  080E                     	;# 
  1535  080F                     	;# 
  1536  0810                     	;# 
  1537  0810                     	;# 
  1538  0811                     	;# 
  1539  0812                     	;# 
  1540  0812                     	;# 
  1541  0813                     	;# 
  1542  0814                     	;# 
  1543  0815                     	;# 
  1544  0816                     	;# 
  1545  0817                     	;# 
  1546  0818                     	;# 
  1547  0819                     	;# 
  1548  081A                     	;# 
  1549  081A                     	;# 
  1550  081B                     	;# 
  1551  081C                     	;# 
  1552  081C                     	;# 
  1553  081D                     	;# 
  1554  088C                     	;# 
  1555  088D                     	;# 
  1556  088E                     	;# 
  1557  088F                     	;# 
  1558  088F                     	;# 
  1559  0890                     	;# 
  1560  0891                     	;# 
  1561  0892                     	;# 
  1562  0893                     	;# 
  1563  0893                     	;# 
  1564  0894                     	;# 
  1565  0895                     	;# 
  1566  0896                     	;# 
  1567  0897                     	;# 
  1568  0897                     	;# 
  1569  0898                     	;# 
  1570  0899                     	;# 
  1571  0D8C                     	;# 
  1572  0D8C                     	;# 
  1573  0D8D                     	;# 
  1574  0D8E                     	;# 
  1575  0D8F                     	;# 
  1576  0D8F                     	;# 
  1577  0D90                     	;# 
  1578  0D91                     	;# 
  1579  0D92                     	;# 
  1580  0D92                     	;# 
  1581  0D93                     	;# 
  1582  0D94                     	;# 
  1583  0D95                     	;# 
  1584  0D95                     	;# 
  1585  0D96                     	;# 
  1586  0D97                     	;# 
  1587  0D98                     	;# 
  1588  0D99                     	;# 
  1589  0D9A                     	;# 
  1590  0D9B                     	;# 
  1591  0D9C                     	;# 
  1592  0D9D                     	;# 
  1593  0D9E                     	;# 
  1594  0D9E                     	;# 
  1595  0D9F                     	;# 
  1596  0DA0                     	;# 
  1597  0DA1                     	;# 
  1598  0DA1                     	;# 
  1599  0DA2                     	;# 
  1600  0DA3                     	;# 
  1601  0DA4                     	;# 
  1602  0DA4                     	;# 
  1603  0DA5                     	;# 
  1604  0DA6                     	;# 
  1605  0DA7                     	;# 
  1606  0DA7                     	;# 
  1607  0DA8                     	;# 
  1608  0DA9                     	;# 
  1609  0DAA                     	;# 
  1610  0DAB                     	;# 
  1611  0DAC                     	;# 
  1612  0DAD                     	;# 
  1613  0DAE                     	;# 
  1614  0DAF                     	;# 
  1615  0E0F                     	;# 
  1616  0E10                     	;# 
  1617  0E11                     	;# 
  1618  0E12                     	;# 
  1619  0E13                     	;# 
  1620  0E14                     	;# 
  1621  0E15                     	;# 
  1622  0E16                     	;# 
  1623  0E17                     	;# 
  1624  0E18                     	;# 
  1625  0E19                     	;# 
  1626  0E1A                     	;# 
  1627  0E1B                     	;# 
  1628  0E1C                     	;# 
  1629  0E1D                     	;# 
  1630  0E1E                     	;# 
  1631  0E1F                     	;# 
  1632  0E20                     	;# 
  1633  0E21                     	;# 
  1634  0E22                     	;# 
  1635  0E23                     	;# 
  1636  0E24                     	;# 
  1637  0E25                     	;# 
  1638  0E26                     	;# 
  1639  0E27                     	;# 
  1640  0E28                     	;# 
  1641  0E29                     	;# 
  1642  0E2A                     	;# 
  1643  0E2B                     	;# 
  1644  0E2C                     	;# 
  1645  0E2D                     	;# 
  1646  0E2E                     	;# 
  1647  0E90                     	;# 
  1648  0E91                     	;# 
  1649  0E92                     	;# 
  1650  0E94                     	;# 
  1651  0E95                     	;# 
  1652  0E9C                     	;# 
  1653  0E9D                     	;# 
  1654  0E9E                     	;# 
  1655  0E9F                     	;# 
  1656  0EA0                     	;# 
  1657  0EA1                     	;# 
  1658  0EA2                     	;# 
  1659  0EA3                     	;# 
  1660  0EA4                     	;# 
  1661  0EA5                     	;# 
  1662  0EA6                     	;# 
  1663  0EA7                     	;# 
  1664  0F0F                     	;# 
  1665  0F10                     	;# 
  1666  0F11                     	;# 
  1667  0F12                     	;# 
  1668  0F13                     	;# 
  1669  0F14                     	;# 
  1670  0F15                     	;# 
  1671  0F16                     	;# 
  1672  0F17                     	;# 
  1673  0F18                     	;# 
  1674  0F19                     	;# 
  1675  0F1A                     	;# 
  1676  0F1B                     	;# 
  1677  0F1C                     	;# 
  1678  0F1D                     	;# 
  1679  0F1E                     	;# 
  1680  0F1F                     	;# 
  1681  0F20                     	;# 
  1682  0F21                     	;# 
  1683  0F22                     	;# 
  1684  0F23                     	;# 
  1685  0FE4                     	;# 
  1686  0FE5                     	;# 
  1687  0FE6                     	;# 
  1688  0FE7                     	;# 
  1689  0FE8                     	;# 
  1690  0FE9                     	;# 
  1691  0FEA                     	;# 
  1692  0FEB                     	;# 
  1693  0FED                     	;# 
  1694  0FEE                     	;# 
  1695  0FEF                     	;# 
  1696                           
  1697                           	psect	stringtext
  1698  0800                     __pstringtext:	
  1699  0800                     _DATA:	
  1700  0800  3400               	retlw	0
  1701  0801  3480               	retlw	128
  1702  0802  3440               	retlw	64
  1703  0803  34C0               	retlw	192
  1704  0804  3420               	retlw	32
  1705  0805  34A0               	retlw	160
  1706  0806  3460               	retlw	96
  1707  0807  34E0               	retlw	224
  1708  0808  3410               	retlw	16
  1709  0809  3490               	retlw	144
  1710  080A  3450               	retlw	80
  1711  080B  34D0               	retlw	208
  1712  080C  3430               	retlw	48
  1713  080D  34B0               	retlw	176
  1714  080E  3470               	retlw	112
  1715  080F  34F0               	retlw	240
  1716  0810  3408               	retlw	8
  1717  0811  3488               	retlw	136
  1718  0812  3448               	retlw	72
  1719  0813  34C8               	retlw	200
  1720  0814  3428               	retlw	40
  1721  0815  34A8               	retlw	168
  1722  0816  3468               	retlw	104
  1723  0817  34E8               	retlw	232
  1724  0818  3418               	retlw	24
  1725  0819  3498               	retlw	152
  1726  081A  3458               	retlw	88
  1727  081B  34D8               	retlw	216
  1728  081C  3438               	retlw	56
  1729  081D  34B8               	retlw	184
  1730  081E  3478               	retlw	120
  1731  081F  34F8               	retlw	248
  1732  0820  3404               	retlw	4
  1733  0821  3484               	retlw	132
  1734  0822  3444               	retlw	68
  1735  0823  34C4               	retlw	196
  1736  0824  3424               	retlw	36
  1737  0825  34A4               	retlw	164
  1738  0826  3464               	retlw	100
  1739  0827  34E4               	retlw	228
  1740  0828  3414               	retlw	20
  1741  0829  3494               	retlw	148
  1742  082A  3454               	retlw	84
  1743  082B  34D4               	retlw	212
  1744  082C  3434               	retlw	52
  1745  082D  34B4               	retlw	180
  1746  082E  3474               	retlw	116
  1747  082F  34F4               	retlw	244
  1748  0830  340C               	retlw	12
  1749  0831  348C               	retlw	140
  1750  0832  344C               	retlw	76
  1751  0833  34CC               	retlw	204
  1752  0834  342C               	retlw	44
  1753  0835  34AC               	retlw	172
  1754  0836  346C               	retlw	108
  1755  0837  34EC               	retlw	236
  1756  0838  341C               	retlw	28
  1757  0839  349C               	retlw	156
  1758  083A  345C               	retlw	92
  1759  083B  34DC               	retlw	220
  1760  083C  343C               	retlw	60
  1761  083D  34BC               	retlw	188
  1762  083E  347C               	retlw	124
  1763  083F  34FC               	retlw	252
  1764  0840  3406               	retlw	6
  1765  0841                     __end_of_DATA:	
  1766  0841                     _ACTIVEBAND:	
  1767  0841  3400               	retlw	0
  1768  0842  3400               	retlw	0
  1769  0843  3400               	retlw	0
  1770  0844  3400               	retlw	0
  1771  0845  3400               	retlw	0
  1772  0846  3401               	retlw	1
  1773  0847  3400               	retlw	0
  1774  0848  3400               	retlw	0
  1775  0849  3401               	retlw	1
  1776  084A  3400               	retlw	0
  1777  084B  3400               	retlw	0
  1778  084C  3400               	retlw	0
  1779  084D  3401               	retlw	1
  1780  084E  3401               	retlw	1
  1781  084F  3400               	retlw	0
  1782  0850  3400               	retlw	0
  1783  0851  3400               	retlw	0
  1784  0852  3400               	retlw	0
  1785  0853  3400               	retlw	0
  1786  0854  3400               	retlw	0
  1787  0855  3401               	retlw	1
  1788  0856  3400               	retlw	0
  1789  0857  3400               	retlw	0
  1790  0858  3400               	retlw	0
  1791  0859  3400               	retlw	0
  1792  085A  3400               	retlw	0
  1793  085B  3401               	retlw	1
  1794  085C  3400               	retlw	0
  1795  085D  3400               	retlw	0
  1796  085E  3401               	retlw	1
  1797  085F  3400               	retlw	0
  1798  0860  3400               	retlw	0
  1799  0861  3400               	retlw	0
  1800  0862  3400               	retlw	0
  1801  0863  3400               	retlw	0
  1802  0864  3400               	retlw	0
  1803  0865  3400               	retlw	0
  1804  0866  3400               	retlw	0
  1805  0867  3400               	retlw	0
  1806  0868  3400               	retlw	0
  1807  0869  3400               	retlw	0
  1808  086A  3400               	retlw	0
  1809  086B  3400               	retlw	0
  1810  086C  3400               	retlw	0
  1811  086D  3400               	retlw	0
  1812  086E  3400               	retlw	0
  1813  086F  3400               	retlw	0
  1814  0870  3400               	retlw	0
  1815  0871  3400               	retlw	0
  1816  0872  3400               	retlw	0
  1817  0873  3400               	retlw	0
  1818  0874  3400               	retlw	0
  1819  0875  3400               	retlw	0
  1820  0876  3400               	retlw	0
  1821  0877  3400               	retlw	0
  1822  0878  3400               	retlw	0
  1823  0879  3400               	retlw	0
  1824  087A  3400               	retlw	0
  1825  087B  3400               	retlw	0
  1826  087C  3400               	retlw	0
  1827  087D  3400               	retlw	0
  1828  087E  3400               	retlw	0
  1829  087F  3400               	retlw	0
  1830  0880  3400               	retlw	0
  1831  0881                     __end_of_ACTIVEBAND:	
  1832  0881                     _DacOutput:	
  1833  0881  342B               	retlw	43
  1834  0882  3448               	retlw	72
  1835  0883  3456               	retlw	86
  1836  0884  3464               	retlw	100
  1837  0885                     __end_of_DacOutput:	
  1838  0885                     _REGADD:	
  1839  0885  3407               	retlw	7
  1840  0886  3410               	retlw	16
  1841  0887                     __end_of_REGADD:	
  1842  0887                     _SLAVEADD:	
  1843  0887  3406               	retlw	6
  1844  0888  340E               	retlw	14
  1845  0889                     __end_of_SLAVEADD:	
  1846  000E                     _PORTC	set	14
  1847  0095                     _OPTION_REGbits	set	149
  1848  0099                     _OSCCON	set	153
  1849  009A                     _OSCSTAT	set	154
  1850  0098                     _OSCTUNE	set	152
  1851  008C                     _TRISA	set	140
  1852  008D                     _TRISB	set	141
  1853  008E                     _TRISC	set	142
  1854  0118                     _DAC1CON0	set	280
  1855  0119                     _DAC1CON1	set	281
  1856  010C                     _LATA	set	268
  1857  010D                     _LATB	set	269
  1858  010E                     _LATC	set	270
  1859  0861                     _LATA1	set	2145
  1860  0862                     _LATA2	set	2146
  1861  0864                     _LATA4	set	2148
  1862  0865                     _LATA5	set	2149
  1863  086C                     _LATB4	set	2156
  1864  086D                     _LATB5	set	2157
  1865  086E                     _LATB6	set	2158
  1866  086F                     _LATB7	set	2159
  1867  018C                     _ANSELA	set	396
  1868  018D                     _ANSELB	set	397
  1869  018E                     _ANSELC	set	398
  1870  020D                     _WPUB	set	525
  1871  020E                     _WPUC	set	526
  1872                           
  1873                           ; #config settings
  1874  0000                     
  1875                           	psect	cinit
  1876  07F6                     start_initialization:	
  1877  07F6                     __initialization:	
  1878                           
  1879                           ; Clear objects allocated to COMMON
  1880  07F6  01FD               	clrf	__pbssCOMMON& (0+127)
  1881                           
  1882                           ; Clear objects allocated to BANK0
  1883  07F7  01A0               	clrf	__pbssBANK0& (0+127)
  1884  07F8  01A1               	clrf	(__pbssBANK0+1)& (0+127)
  1885  07F9  01A2               	clrf	(__pbssBANK0+2)& (0+127)
  1886  07FA  01A3               	clrf	(__pbssBANK0+3)& (0+127)
  1887  07FB  01A4               	clrf	(__pbssBANK0+4)& (0+127)
  1888  07FC  01A5               	clrf	(__pbssBANK0+5)& (0+127)
  1889  07FD                     end_of_initialization:	
  1890                           ;End of C runtime variable initialization code
  1891                           
  1892  07FD                     __end_of__initialization:	
  1893  07FD  0020               	movlb	0
  1894  07FE  3186  2E30         	ljmp	_main	;jump to C main() function
  1895                           
  1896                           	psect	bssCOMMON
  1897  007D                     __pbssCOMMON:	
  1898  007D                     _Byte1:	
  1899  007D                     	ds	1
  1900                           
  1901                           	psect	bssBANK0
  1902  0020                     __pbssBANK0:	
  1903  0020                     _Byte2:	
  1904  0020                     	ds	1
  1905  0021                     _Byte3:	
  1906  0021                     	ds	1
  1907  0022                     _parity1:	
  1908  0022                     	ds	1
  1909  0023                     _parity2:	
  1910  0023                     	ds	1
  1911  0024                     _parity3:	
  1912  0024                     	ds	1
  1913  0025                     _parity4:	
  1914  0025                     	ds	1
  1915                           
  1916                           	psect	cstackCOMMON
  1917  0070                     __pcstackCOMMON:	
  1918  0070                     ?_OSCILLATOR_Initialize:	
  1919  0070                     ??_OSCILLATOR_Initialize:	
  1920                           ; 0 bytes @ 0x0
  1921                           
  1922  0070                     ?_DAC1_Initialize:	
  1923                           ; 0 bytes @ 0x0
  1924                           
  1925  0070                     ??_DAC1_Initialize:	
  1926                           ; 0 bytes @ 0x0
  1927                           
  1928  0070                     ?_PIN_MANAGER_Initialize:	
  1929                           ; 0 bytes @ 0x0
  1930                           
  1931  0070                     ??_PIN_MANAGER_Initialize:	
  1932                           ; 0 bytes @ 0x0
  1933                           
  1934  0070                     ?_SYSTEM_Initialize:	
  1935                           ; 0 bytes @ 0x0
  1936                           
  1937  0070                     ??_SYSTEM_Initialize:	
  1938                           ; 0 bytes @ 0x0
  1939                           
  1940  0070                     ?_shiftRegister:	
  1941                           ; 0 bytes @ 0x0
  1942                           
  1943  0070                     ??_paritycheck:	
  1944                           ; 0 bytes @ 0x0
  1945                           
  1946  0070                     ?_ConfigureShiftRegister:	
  1947                           ; 0 bytes @ 0x0
  1948                           
  1949  0070                     ??_ConfigureShiftRegister:	
  1950                           ; 0 bytes @ 0x0
  1951                           
  1952  0070                     ?_main:	
  1953                           ; 0 bytes @ 0x0
  1954                           
  1955  0070                     ?_paritycheck:	
  1956                           ; 0 bytes @ 0x0
  1957                           
  1958  0070                     shiftRegister@Dummy2:	
  1959                           ; 1 bytes @ 0x0
  1960                           
  1961                           
  1962                           ; 1 bytes @ 0x0
  1963  0070                     	ds	1
  1964  0071                     shiftRegister@y:	
  1965  0071                     paritycheck@parity:	
  1966                           ; 1 bytes @ 0x1
  1967                           
  1968  0071                     ConfigureShiftRegister@i:	
  1969                           ; 1 bytes @ 0x1
  1970                           
  1971                           
  1972                           ; 1 bytes @ 0x1
  1973  0071                     	ds	1
  1974  0072                     ??_shiftRegister:	
  1975  0072                     paritycheck@Dummy:	
  1976                           ; 0 bytes @ 0x2
  1977                           
  1978  0072                     ConfigureShiftRegister@ReverseReg:	
  1979                           ; 1 bytes @ 0x2
  1980                           
  1981                           
  1982                           ; 1 bytes @ 0x2
  1983  0072                     	ds	1
  1984  0073                     shiftRegister@m:	
  1985                           
  1986                           ; 1 bytes @ 0x3
  1987  0073                     	ds	1
  1988  0074                     shiftRegister@Dummy1:	
  1989                           
  1990                           ; 1 bytes @ 0x4
  1991  0074                     	ds	1
  1992  0075                     ?_MIPI:	
  1993  0075                     MIPI@b:	
  1994                           ; 0 bytes @ 0x5
  1995                           
  1996                           
  1997                           ; 1 bytes @ 0x5
  1998  0075                     	ds	1
  1999  0076                     MIPI@c:	
  2000                           
  2001                           ; 1 bytes @ 0x6
  2002  0076                     	ds	1
  2003  0077                     MIPI@d:	
  2004                           
  2005                           ; 1 bytes @ 0x7
  2006  0077                     	ds	1
  2007  0078                     ??_MIPI:	
  2008                           
  2009                           ; 0 bytes @ 0x8
  2010  0078                     	ds	2
  2011  007A                     MIPI@a:	
  2012                           
  2013                           ; 1 bytes @ 0xA
  2014  007A                     	ds	1
  2015  007B                     MIPI@j:	
  2016                           
  2017                           ; 1 bytes @ 0xB
  2018  007B                     	ds	1
  2019  007C                     MIPI@i:	
  2020                           
  2021                           ; 1 bytes @ 0xC
  2022  007C                     	ds	1
  2023                           
  2024                           	psect	cstackBANK0
  2025  0026                     __pcstackBANK0:	
  2026  0026                     ??_main:	
  2027                           
  2028                           ; 0 bytes @ 0x0
  2029  0026                     	ds	3
  2030                           
  2031                           	psect	maintext
  2032  0630                     __pmaintext:	
  2033 ;;
  2034 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2035 ;;
  2036 ;; *************** function _main *****************
  2037 ;; Defined at:
  2038 ;;		line 291 in file "main.c"
  2039 ;; Parameters:    Size  Location     Type
  2040 ;;		None
  2041 ;; Auto vars:     Size  Location     Type
  2042 ;;		None
  2043 ;; Return value:  Size  Location     Type
  2044 ;;		None               void
  2045 ;; Registers used:
  2046 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2047 ;; Tracked objects:
  2048 ;;		On entry : B1F/0
  2049 ;;		On exit  : 0/0
  2050 ;;		Unchanged: 0/0
  2051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2052 ;;      Params:         0       0       0       0       0       0       0       0
  2053 ;;      Locals:         0       0       0       0       0       0       0       0
  2054 ;;      Temps:          0       3       0       0       0       0       0       0
  2055 ;;      Totals:         0       3       0       0       0       0       0       0
  2056 ;;Total ram usage:        3 bytes
  2057 ;; Hardware stack levels required when called:    2
  2058 ;; This function calls:
  2059 ;;		_ConfigureShiftRegister
  2060 ;;		_DAC1_Initialize
  2061 ;;		_MIPI
  2062 ;;		_PIN_MANAGER_Initialize
  2063 ;;		_SYSTEM_Initialize
  2064 ;; This function is called by:
  2065 ;;		Startup code after reset
  2066 ;; This function uses a non-reentrant model
  2067 ;;
  2068                           
  2069                           
  2070                           ;psect for function _main
  2071  0630                     _main:	
  2072                           
  2073                           ;main.c: 293: SYSTEM_Initialize();
  2074                           
  2075                           ;incstack = 0
  2076                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2077  0630  3185  2586  3186   	fcall	_SYSTEM_Initialize
  2078                           
  2079                           ;main.c: 294: DAC1_Initialize();
  2080  0633  3185  257C  3186   	fcall	_DAC1_Initialize
  2081                           
  2082                           ;main.c: 295: PIN_MANAGER_Initialize();
  2083  0636  3185  25AB  3186   	fcall	_PIN_MANAGER_Initialize
  2084                           
  2085                           ;main.c: 300: do { LATA1 = 0; } while(0);
  2086  0639  0022               	movlb	2	; select bank2
  2087  063A  108C               	bcf	12,1	;volatile
  2088                           
  2089                           ;main.c: 301: do { LATA4 = 0; } while(0);
  2090  063B  120C               	bcf	12,4	;volatile
  2091                           
  2092                           ;main.c: 302: do { LATA5 = 0; } while(0);
  2093  063C  128C               	bcf	12,5	;volatile
  2094                           
  2095                           ;main.c: 303: do { LATA2 = 0; } while(0);
  2096  063D  110C               	bcf	12,2	;volatile
  2097                           
  2098                           ;main.c: 304: do { LATB4 = 0; } while(0);
  2099  063E  120D               	bcf	13,4	;volatile
  2100  063F                     l946:	
  2101                           ;main.c: 306: while ((PORTC & 0xC0) != 0xC0) {
  2102                           
  2103                           ;main.c: 305: while (1) {
  2104                           
  2105  063F  30C0               	movlw	192
  2106  0640  0020               	movlb	0	; select bank0
  2107  0641  050E               	andwf	14,w	;volatile
  2108  0642  00A6               	movwf	??_main
  2109  0643  30C0               	movlw	192
  2110  0644  0626               	xorwf	??_main,w
  2111  0645  1D03               	btfss	3,2
  2112  0646  2E3F               	goto	l946
  2113                           
  2114                           ;main.c: 307: }
  2115                           ;main.c: 308: Byte1 = PORTC;
  2116  0647  080E               	movf	14,w	;volatile
  2117  0648  00A6               	movwf	??_main
  2118  0649  0826               	movf	??_main,w
  2119  064A  00FD               	movwf	_Byte1
  2120  064B                     l950:	
  2121                           ;main.c: 309: while ((PORTC & 0xC0) != 0x40) {
  2122                           
  2123  064B  30C0               	movlw	192
  2124  064C  050E               	andwf	14,w	;volatile
  2125  064D  00A6               	movwf	??_main
  2126  064E  3040               	movlw	64
  2127  064F  0626               	xorwf	??_main,w
  2128  0650  1D03               	btfss	3,2
  2129  0651  2E4B               	goto	l950
  2130                           
  2131                           ;main.c: 310: }
  2132                           ;main.c: 311: Byte2 = PORTC & 0x3F;
  2133  0652  080E               	movf	14,w	;volatile
  2134  0653  393F               	andlw	63
  2135  0654  00A6               	movwf	??_main
  2136  0655  0826               	movf	??_main,w
  2137  0656  00A0               	movwf	_Byte2
  2138  0657                     l954:	
  2139                           ;main.c: 312: while ((PORTC & 0xC0) != 0x80) {
  2140                           
  2141  0657  30C0               	movlw	192
  2142  0658  050E               	andwf	14,w	;volatile
  2143  0659  00A6               	movwf	??_main
  2144  065A  3080               	movlw	128
  2145  065B  0626               	xorwf	??_main,w
  2146  065C  1D03               	btfss	3,2
  2147  065D  2E57               	goto	l954
  2148                           
  2149                           ;main.c: 313: }
  2150                           ;main.c: 314: Byte3 = PORTC & 0x3F;
  2151  065E  080E               	movf	14,w	;volatile
  2152  065F  393F               	andlw	63
  2153  0660  00A6               	movwf	??_main
  2154  0661  0826               	movf	??_main,w
  2155  0662  00A1               	movwf	_Byte3
  2156                           
  2157                           ;main.c: 320: if ((Byte1 & 0x3C) == 0x20) {
  2158  0663  303C               	movlw	60
  2159  0664  057D               	andwf	_Byte1,w
  2160  0665  00A6               	movwf	??_main
  2161  0666  3020               	movlw	32
  2162  0667  0626               	xorwf	??_main,w
  2163  0668  1D03               	btfss	3,2
  2164  0669  2E6E               	goto	l960
  2165                           
  2166                           ;main.c: 321: do { LATA2 = 0; } while(0);
  2167  066A  0022               	movlb	2	; select bank2
  2168  066B  110C               	bcf	12,2	;volatile
  2169                           
  2170                           ;main.c: 322: do { LATB4 = 1; } while(0);
  2171  066C  160D               	bsf	13,4	;volatile
  2172                           
  2173                           ;main.c: 323: } else {
  2174  066D  2E96               	goto	l968
  2175  066E                     l960:	
  2176                           
  2177                           ;main.c: 324: if (((Byte1 & 0x30) != 0x00) && ((Byte1 & 0x0C) != 0x00)) {
  2178  066E  087D               	movf	_Byte1,w
  2179  066F  3930               	andlw	48
  2180  0670  1903               	btfsc	3,2
  2181  0671  2E93               	goto	l206
  2182  0672  087D               	movf	_Byte1,w
  2183  0673  390C               	andlw	12
  2184  0674  1903               	btfsc	3,2
  2185  0675  2E93               	goto	l206
  2186                           
  2187                           ;main.c: 325: do { LATB4 = 1; } while(0);
  2188  0676  0022               	movlb	2	; select bank2
  2189  0677  160D               	bsf	13,4	;volatile
  2190                           
  2191                           ;main.c: 326: if (ACTIVEBAND[Byte2] || ACTIVEBAND[Byte3])
  2192  0678  0020               	movlb	0	; select bank0
  2193  0679  0820               	movf	_Byte2,w
  2194  067A  3E41               	addlw	low (_ACTIVEBAND| (0+32768))
  2195  067B  0084               	movwf	4
  2196  067C  3088               	movlw	high (_ACTIVEBAND| (0+32768))
  2197  067D  1803               	skipnc
  2198  067E  3E01               	addlw	1
  2199  067F  0085               	movwf	5
  2200  0680  0012               	moviw fsr0++
  2201  0681  1D03               	btfss	3,2
  2202  0682  2E8D               	goto	l200
  2203  0683  0821               	movf	_Byte3,w
  2204  0684  3E41               	addlw	low (_ACTIVEBAND| (0+32768))
  2205  0685  0084               	movwf	4
  2206  0686  3088               	movlw	high (_ACTIVEBAND| (0+32768))
  2207  0687  1803               	skipnc
  2208  0688  3E01               	addlw	1
  2209  0689  0085               	movwf	5
  2210  068A  0012               	moviw fsr0++
  2211  068B  1903               	btfsc	3,2
  2212  068C  2E90               	goto	l203
  2213  068D                     l200:	
  2214                           ;main.c: 327: do { LATA2 = 1; } while(0);
  2215                           
  2216  068D  0022               	movlb	2	; select bank2
  2217  068E  150C               	bsf	12,2	;volatile
  2218  068F  2E96               	goto	l968
  2219  0690                     l203:	
  2220                           ;main.c: 328: else
  2221                           ;main.c: 329: do { LATA2 = 0; } while(0);
  2222                           
  2223  0690  0022               	movlb	2	; select bank2
  2224  0691  110C               	bcf	12,2	;volatile
  2225                           
  2226                           ;main.c: 337: } else {
  2227  0692  2E96               	goto	l968
  2228  0693                     l206:	
  2229                           ;main.c: 338: do { LATA2 = 0; } while(0);
  2230                           
  2231  0693  0022               	movlb	2	; select bank2
  2232  0694  110C               	bcf	12,2	;volatile
  2233                           
  2234                           ;main.c: 339: do { LATB4 = 0; } while(0);
  2235  0695  120D               	bcf	13,4	;volatile
  2236  0696                     l968:	
  2237                           
  2238                           ;main.c: 340: }
  2239                           ;main.c: 341: }
  2240                           ;main.c: 357: if ((Byte1 & 0x0C) == 0x00)
  2241  0696  087D               	movf	_Byte1,w
  2242  0697  390C               	andlw	12
  2243  0698  1D03               	btfss	3,2
  2244  0699  2EA5               	goto	l972
  2245                           
  2246                           ;main.c: 358: MIPI(Byte2,Byte2,Byte3,Byte3);
  2247  069A  0020               	movlb	0	; select bank0
  2248  069B  0820               	movf	_Byte2,w
  2249  069C  00A6               	movwf	??_main
  2250  069D  0826               	movf	??_main,w
  2251  069E  00F5               	movwf	MIPI@b
  2252  069F  0821               	movf	_Byte3,w
  2253  06A0  00A7               	movwf	??_main+1
  2254  06A1  0827               	movf	??_main+1,w
  2255  06A2  00F6               	movwf	MIPI@c
  2256  06A3  0821               	movf	_Byte3,w
  2257  06A4  2EC8               	goto	L2
  2258  06A5                     l972:	
  2259                           
  2260                           ;main.c: 359: else if ((Byte1 & 0x0C) == 0x04)
  2261  06A5  300C               	movlw	12
  2262  06A6  057D               	andwf	_Byte1,w
  2263  06A7  0020               	movlb	0	; select bank0
  2264  06A8  00A6               	movwf	??_main
  2265  06A9  3004               	movlw	4
  2266  06AA  0626               	xorwf	??_main,w
  2267  06AB  1D03               	btfss	3,2
  2268  06AC  2EB7               	goto	l976
  2269                           
  2270                           ;main.c: 360: MIPI(64,64,Byte3,Byte3);
  2271  06AD  3040               	movlw	64
  2272  06AE  00A6               	movwf	??_main
  2273  06AF  0826               	movf	??_main,w
  2274  06B0  00F5               	movwf	MIPI@b
  2275  06B1  0821               	movf	_Byte3,w
  2276  06B2  00A7               	movwf	??_main+1
  2277  06B3  0827               	movf	??_main+1,w
  2278  06B4  00F6               	movwf	MIPI@c
  2279  06B5  0821               	movf	_Byte3,w
  2280  06B6  2ED7               	goto	L3
  2281  06B7                     l976:	
  2282                           
  2283                           ;main.c: 361: else if ((Byte1 & 0x0C) == 0x08)
  2284  06B7  300C               	movlw	12
  2285  06B8  057D               	andwf	_Byte1,w
  2286  06B9  0020               	movlb	0	; select bank0
  2287  06BA  00A6               	movwf	??_main
  2288  06BB  3008               	movlw	8
  2289  06BC  0626               	xorwf	??_main,w
  2290  06BD  1D03               	btfss	3,2
  2291  06BE  2ECD               	goto	l980
  2292                           
  2293                           ;main.c: 362: MIPI(Byte2,Byte2,64,64);
  2294  06BF  0820               	movf	_Byte2,w
  2295  06C0  00A6               	movwf	??_main
  2296  06C1  0826               	movf	??_main,w
  2297  06C2  00F5               	movwf	MIPI@b
  2298  06C3  3040               	movlw	64
  2299  06C4  00A7               	movwf	??_main+1
  2300  06C5  0827               	movf	??_main+1,w
  2301  06C6  00F6               	movwf	MIPI@c
  2302  06C7  3040               	movlw	64
  2303  06C8                     L2:	
  2304  06C8  00A8               	movwf	??_main+2
  2305  06C9  0828               	movf	??_main+2,w
  2306  06CA  00F7               	movwf	MIPI@d
  2307  06CB  0820               	movf	_Byte2,w
  2308  06CC  2EDB               	goto	L1
  2309  06CD                     l980:	
  2310                           
  2311                           ;main.c: 363: else
  2312                           ;main.c: 364: MIPI(64,64,64,64);
  2313  06CD  3040               	movlw	64
  2314  06CE  0020               	movlb	0	; select bank0
  2315  06CF  00A6               	movwf	??_main
  2316  06D0  0826               	movf	??_main,w
  2317  06D1  00F5               	movwf	MIPI@b
  2318  06D2  3040               	movlw	64
  2319  06D3  00A7               	movwf	??_main+1
  2320  06D4  0827               	movf	??_main+1,w
  2321  06D5  00F6               	movwf	MIPI@c
  2322  06D6  3040               	movlw	64
  2323  06D7                     L3:	
  2324  06D7  00A8               	movwf	??_main+2
  2325  06D8  0828               	movf	??_main+2,w
  2326  06D9  00F7               	movwf	MIPI@d
  2327  06DA  3040               	movlw	64
  2328  06DB                     L1:	
  2329  06DB  3186  26E6  3186   	fcall	_MIPI
  2330                           
  2331                           ;main.c: 445: do { LATA1 = 1; } while(0);
  2332  06DE  0022               	movlb	2	; select bank2
  2333  06DF  148C               	bsf	12,1	;volatile
  2334                           
  2335                           ;main.c: 446: ConfigureShiftRegister();
  2336  06E0  3185  25ED  3186   	fcall	_ConfigureShiftRegister
  2337                           
  2338                           ;main.c: 447: do { LATA1 = 0; } while(0);
  2339  06E3  0022               	movlb	2	; select bank2
  2340  06E4  108C               	bcf	12,1	;volatile
  2341  06E5  2E3F               	goto	l946
  2342  06E6                     __end_of_main:	
  2343                           
  2344                           	psect	text1
  2345  0586                     __ptext1:	
  2346 ;; *************** function _SYSTEM_Initialize *****************
  2347 ;; Defined at:
  2348 ;;		line 75 in file "mcc_generated_files/mcc.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;		None
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;		None
  2353 ;; Return value:  Size  Location     Type
  2354 ;;		None               void
  2355 ;; Registers used:
  2356 ;;		wreg, status,2, status,0, pclath, cstack
  2357 ;; Tracked objects:
  2358 ;;		On entry : 0/0
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2362 ;;      Params:         0       0       0       0       0       0       0       0
  2363 ;;      Locals:         0       0       0       0       0       0       0       0
  2364 ;;      Temps:          0       0       0       0       0       0       0       0
  2365 ;;      Totals:         0       0       0       0       0       0       0       0
  2366 ;;Total ram usage:        0 bytes
  2367 ;; Hardware stack levels used:    1
  2368 ;; Hardware stack levels required when called:    1
  2369 ;; This function calls:
  2370 ;;		_DAC1_Initialize
  2371 ;;		_OSCILLATOR_Initialize
  2372 ;;		_PIN_MANAGER_Initialize
  2373 ;; This function is called by:
  2374 ;;		_main
  2375 ;; This function uses a non-reentrant model
  2376 ;;
  2377                           
  2378                           
  2379                           ;psect for function _SYSTEM_Initialize
  2380  0586                     _SYSTEM_Initialize:	
  2381                           
  2382                           ;mcc.c: 76: OSCILLATOR_Initialize();
  2383                           
  2384                           ;incstack = 0
  2385                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2386  0586  3185  2580  3185   	fcall	_OSCILLATOR_Initialize
  2387                           
  2388                           ;mcc.c: 77: PIN_MANAGER_Initialize();
  2389  0589  3185  25AB  3185   	fcall	_PIN_MANAGER_Initialize
  2390                           
  2391                           ;mcc.c: 78: DAC1_Initialize();
  2392  058C  3185  257C         	fcall	_DAC1_Initialize
  2393  058E  0008               	return
  2394  058F                     __end_of_SYSTEM_Initialize:	
  2395                           
  2396                           	psect	text2
  2397  05AB                     __ptext2:	
  2398 ;; *************** function _PIN_MANAGER_Initialize *****************
  2399 ;; Defined at:
  2400 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  2401 ;; Parameters:    Size  Location     Type
  2402 ;;		None
  2403 ;; Auto vars:     Size  Location     Type
  2404 ;;		None
  2405 ;; Return value:  Size  Location     Type
  2406 ;;		None               void
  2407 ;; Registers used:
  2408 ;;		wreg, status,2
  2409 ;; Tracked objects:
  2410 ;;		On entry : 0/0
  2411 ;;		On exit  : 0/0
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2414 ;;      Params:         0       0       0       0       0       0       0       0
  2415 ;;      Locals:         0       0       0       0       0       0       0       0
  2416 ;;      Temps:          0       0       0       0       0       0       0       0
  2417 ;;      Totals:         0       0       0       0       0       0       0       0
  2418 ;;Total ram usage:        0 bytes
  2419 ;; Hardware stack levels used:    1
  2420 ;; This function calls:
  2421 ;;		Nothing
  2422 ;; This function is called by:
  2423 ;;		_SYSTEM_Initialize
  2424 ;;		_main
  2425 ;; This function uses a non-reentrant model
  2426 ;;
  2427                           
  2428                           
  2429                           ;psect for function _PIN_MANAGER_Initialize
  2430  05AB                     _PIN_MANAGER_Initialize:	
  2431                           
  2432                           ;pin_manager.c: 51: LATA = 0x00;
  2433                           
  2434                           ;incstack = 0
  2435                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2436  05AB  0022               	movlb	2	; select bank2
  2437  05AC  018C               	clrf	12	;volatile
  2438                           
  2439                           ;pin_manager.c: 52: TRISA = 0x09;
  2440  05AD  3009               	movlw	9
  2441  05AE  0021               	movlb	1	; select bank1
  2442  05AF  008C               	movwf	12	;volatile
  2443                           
  2444                           ;pin_manager.c: 53: ANSELA = 0x01;
  2445  05B0  3001               	movlw	1
  2446  05B1  0023               	movlb	3	; select bank3
  2447  05B2  008C               	movwf	12	;volatile
  2448                           
  2449                           ;pin_manager.c: 55: LATB = 0x00;
  2450  05B3  0022               	movlb	2	; select bank2
  2451  05B4  018D               	clrf	13	;volatile
  2452                           
  2453                           ;pin_manager.c: 56: TRISB = 0x00;
  2454  05B5  0021               	movlb	1	; select bank1
  2455  05B6  018D               	clrf	13	;volatile
  2456                           
  2457                           ;pin_manager.c: 57: ANSELB = 0x00;
  2458  05B7  0023               	movlb	3	; select bank3
  2459  05B8  018D               	clrf	13	;volatile
  2460                           
  2461                           ;pin_manager.c: 58: WPUB = 0x00;
  2462  05B9  0024               	movlb	4	; select bank4
  2463  05BA  018D               	clrf	13	;volatile
  2464                           
  2465                           ;pin_manager.c: 60: LATC = 0x00;
  2466  05BB  0022               	movlb	2	; select bank2
  2467  05BC  018E               	clrf	14	;volatile
  2468                           
  2469                           ;pin_manager.c: 61: TRISC = 0xFF;
  2470  05BD  30FF               	movlw	255
  2471  05BE  0021               	movlb	1	; select bank1
  2472  05BF  008E               	movwf	14	;volatile
  2473                           
  2474                           ;pin_manager.c: 62: ANSELC = 0x00;
  2475  05C0  0023               	movlb	3	; select bank3
  2476  05C1  018E               	clrf	14	;volatile
  2477                           
  2478                           ;pin_manager.c: 63: WPUC = 0x00;
  2479  05C2  0024               	movlb	4	; select bank4
  2480  05C3  018E               	clrf	14	;volatile
  2481                           
  2482                           ;pin_manager.c: 65: OPTION_REGbits.nWPUEN = 0x01;
  2483  05C4  0021               	movlb	1	; select bank1
  2484  05C5  1795               	bsf	21,7	;volatile
  2485  05C6  0008               	return
  2486  05C7                     __end_of_PIN_MANAGER_Initialize:	
  2487                           
  2488                           	psect	text3
  2489  0580                     __ptext3:	
  2490 ;; *************** function _OSCILLATOR_Initialize *****************
  2491 ;; Defined at:
  2492 ;;		line 81 in file "mcc_generated_files/mcc.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;		None
  2495 ;; Auto vars:     Size  Location     Type
  2496 ;;		None
  2497 ;; Return value:  Size  Location     Type
  2498 ;;		None               void
  2499 ;; Registers used:
  2500 ;;		wreg, status,2
  2501 ;; Tracked objects:
  2502 ;;		On entry : 0/0
  2503 ;;		On exit  : 0/0
  2504 ;;		Unchanged: 0/0
  2505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2506 ;;      Params:         0       0       0       0       0       0       0       0
  2507 ;;      Locals:         0       0       0       0       0       0       0       0
  2508 ;;      Temps:          0       0       0       0       0       0       0       0
  2509 ;;      Totals:         0       0       0       0       0       0       0       0
  2510 ;;Total ram usage:        0 bytes
  2511 ;; Hardware stack levels used:    1
  2512 ;; This function calls:
  2513 ;;		Nothing
  2514 ;; This function is called by:
  2515 ;;		_SYSTEM_Initialize
  2516 ;; This function uses a non-reentrant model
  2517 ;;
  2518                           
  2519                           
  2520                           ;psect for function _OSCILLATOR_Initialize
  2521  0580                     _OSCILLATOR_Initialize:	
  2522                           
  2523                           ;mcc.c: 83: OSCCON = 0x78;
  2524                           
  2525                           ;incstack = 0
  2526                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2527  0580  3078               	movlw	120
  2528  0581  0021               	movlb	1	; select bank1
  2529  0582  0099               	movwf	25	;volatile
  2530                           
  2531                           ;mcc.c: 85: OSCSTAT = 0x00;
  2532  0583  019A               	clrf	26	;volatile
  2533                           
  2534                           ;mcc.c: 87: OSCTUNE = 0x00;
  2535  0584  0198               	clrf	24	;volatile
  2536  0585  0008               	return
  2537  0586                     __end_of_OSCILLATOR_Initialize:	
  2538                           
  2539                           	psect	text4
  2540  057C                     __ptext4:	
  2541 ;; *************** function _DAC1_Initialize *****************
  2542 ;; Defined at:
  2543 ;;		line 58 in file "mcc_generated_files/dac1.c"
  2544 ;; Parameters:    Size  Location     Type
  2545 ;;		None
  2546 ;; Auto vars:     Size  Location     Type
  2547 ;;		None
  2548 ;; Return value:  Size  Location     Type
  2549 ;;		None               void
  2550 ;; Registers used:
  2551 ;;		status,2
  2552 ;; Tracked objects:
  2553 ;;		On entry : 0/0
  2554 ;;		On exit  : 0/0
  2555 ;;		Unchanged: 0/0
  2556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2557 ;;      Params:         0       0       0       0       0       0       0       0
  2558 ;;      Locals:         0       0       0       0       0       0       0       0
  2559 ;;      Temps:          0       0       0       0       0       0       0       0
  2560 ;;      Totals:         0       0       0       0       0       0       0       0
  2561 ;;Total ram usage:        0 bytes
  2562 ;; Hardware stack levels used:    1
  2563 ;; This function calls:
  2564 ;;		Nothing
  2565 ;; This function is called by:
  2566 ;;		_SYSTEM_Initialize
  2567 ;;		_main
  2568 ;; This function uses a non-reentrant model
  2569 ;;
  2570                           
  2571                           
  2572                           ;psect for function _DAC1_Initialize
  2573  057C                     _DAC1_Initialize:	
  2574                           
  2575                           ;dac1.c: 60: DAC1CON0 = 0x00;
  2576                           
  2577                           ;incstack = 0
  2578                           ; Regs used in _DAC1_Initialize: [status,2]
  2579  057C  0022               	movlb	2	; select bank2
  2580  057D  0198               	clrf	24	;volatile
  2581                           
  2582                           ;dac1.c: 62: DAC1CON1 = 0x00;
  2583  057E  0199               	clrf	25	;volatile
  2584  057F  0008               	return
  2585  0580                     __end_of_DAC1_Initialize:	
  2586                           
  2587                           	psect	text5
  2588  06E6                     __ptext5:	
  2589 ;; *************** function _MIPI *****************
  2590 ;; Defined at:
  2591 ;;		line 162 in file "main.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;  a               1    wreg     unsigned char 
  2594 ;;  b               1    5[COMMON] unsigned char 
  2595 ;;  c               1    6[COMMON] unsigned char 
  2596 ;;  d               1    7[COMMON] unsigned char 
  2597 ;; Auto vars:     Size  Location     Type
  2598 ;;  a               1   10[COMMON] unsigned char 
  2599 ;;  j               1   11[COMMON] unsigned char 
  2600 ;;  i               1   12[COMMON] unsigned char 
  2601 ;; Return value:  Size  Location     Type
  2602 ;;		None               void
  2603 ;; Registers used:
  2604 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2605 ;; Tracked objects:
  2606 ;;		On entry : 0/0
  2607 ;;		On exit  : 0/0
  2608 ;;		Unchanged: 0/0
  2609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2610 ;;      Params:         3       0       0       0       0       0       0       0
  2611 ;;      Locals:         3       0       0       0       0       0       0       0
  2612 ;;      Temps:          2       0       0       0       0       0       0       0
  2613 ;;      Totals:         8       0       0       0       0       0       0       0
  2614 ;;Total ram usage:        8 bytes
  2615 ;; Hardware stack levels used:    1
  2616 ;; Hardware stack levels required when called:    1
  2617 ;; This function calls:
  2618 ;;		_paritycheck
  2619 ;;		_shiftRegister
  2620 ;; This function is called by:
  2621 ;;		_main
  2622 ;; This function uses a non-reentrant model
  2623 ;;
  2624                           
  2625                           
  2626                           ;psect for function _MIPI
  2627  06E6                     _MIPI:	
  2628                           
  2629                           ;incstack = 0
  2630                           ; Regs used in _MIPI: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2631                           ;MIPI@a stored from wreg
  2632  06E6  00FA               	movwf	MIPI@a
  2633                           
  2634                           ;main.c: 163: parity1 = paritycheck(DATA[a]);
  2635  06E7  087A               	movf	MIPI@a,w
  2636  06E8  3E00               	addlw	low (_DATA| (0+32768))
  2637  06E9  0084               	movwf	4
  2638  06EA  3088               	movlw	high (_DATA| (0+32768))
  2639  06EB  1803               	skipnc
  2640  06EC  3E01               	addlw	1
  2641  06ED  0085               	movwf	5
  2642  06EE  0800               	movf	0,w	;code access
  2643  06EF  3185  258F  3186   	fcall	_paritycheck
  2644  06F2  00F8               	movwf	??_MIPI
  2645  06F3  0878               	movf	??_MIPI,w
  2646  06F4  0020               	movlb	0	; select bank0
  2647  06F5  00A2               	movwf	_parity1
  2648                           
  2649                           ;main.c: 164: parity2 = paritycheck(DATA[b]);
  2650  06F6  0875               	movf	MIPI@b,w
  2651  06F7  3E00               	addlw	low (_DATA| (0+32768))
  2652  06F8  0084               	movwf	4
  2653  06F9  3088               	movlw	high (_DATA| (0+32768))
  2654  06FA  1803               	skipnc
  2655  06FB  3E01               	addlw	1
  2656  06FC  0085               	movwf	5
  2657  06FD  0800               	movf	0,w	;code access
  2658  06FE  3185  258F  3186   	fcall	_paritycheck
  2659  0701  00F8               	movwf	??_MIPI
  2660  0702  0878               	movf	??_MIPI,w
  2661  0703  0020               	movlb	0	; select bank0
  2662  0704  00A3               	movwf	_parity2
  2663                           
  2664                           ;main.c: 165: parity3 = paritycheck(DATA[c]);
  2665  0705  0876               	movf	MIPI@c,w
  2666  0706  3E00               	addlw	low (_DATA| (0+32768))
  2667  0707  0084               	movwf	4
  2668  0708  3088               	movlw	high (_DATA| (0+32768))
  2669  0709  1803               	skipnc
  2670  070A  3E01               	addlw	1
  2671  070B  0085               	movwf	5
  2672  070C  0800               	movf	0,w	;code access
  2673  070D  3185  258F  3186   	fcall	_paritycheck
  2674  0710  00F8               	movwf	??_MIPI
  2675  0711  0878               	movf	??_MIPI,w
  2676  0712  0020               	movlb	0	; select bank0
  2677  0713  00A4               	movwf	_parity3
  2678                           
  2679                           ;main.c: 166: parity4 = paritycheck(DATA[d]);
  2680  0714  0877               	movf	MIPI@d,w
  2681  0715  3E00               	addlw	low (_DATA| (0+32768))
  2682  0716  0084               	movwf	4
  2683  0717  3088               	movlw	high (_DATA| (0+32768))
  2684  0718  1803               	skipnc
  2685  0719  3E01               	addlw	1
  2686  071A  0085               	movwf	5
  2687  071B  0800               	movf	0,w	;code access
  2688  071C  3185  258F  3186   	fcall	_paritycheck
  2689  071F  00F8               	movwf	??_MIPI
  2690  0720  0878               	movf	??_MIPI,w
  2691  0721  0020               	movlb	0	; select bank0
  2692  0722  00A5               	movwf	_parity4
  2693                           
  2694                           ;main.c: 167: for (uint8_t i=0; i<2; i++){
  2695  0723  01FC               	clrf	MIPI@i
  2696  0724                     L6:	
  2697  0724  3002               	movlw	2
  2698  0725  027C               	subwf	MIPI@i,w
  2699  0726  1803               	btfsc	3,0
  2700  0727  0008               	return
  2701                           
  2702                           ;main.c: 168: for (uint8_t j=0; j<2; j++){
  2703  0728  01FB               	clrf	MIPI@j
  2704  0729  3002               	movlw	2
  2705  072A  027B               	subwf	MIPI@j,w
  2706  072B  1803               	btfsc	3,0
  2707  072C  2FF1               	goto	l896
  2708  072D                     l128:	
  2709                           ;main.c: 169: do { LATB5 = 1; } while(0);
  2710                           
  2711  072D  0022               	movlb	2	; select bank2
  2712  072E  168D               	bsf	13,5	;volatile
  2713                           
  2714                           ;main.c: 170: do { LATB6 = 1; } while(0);
  2715  072F  170D               	bsf	13,6	;volatile
  2716  0730  0000               	nop	;# 
  2717                           
  2718                           ;main.c: 172: do { LATB5 = 0; } while(0);
  2719  0731  0022               	movlb	2	; select bank2
  2720  0732  128D               	bcf	13,5	;volatile
  2721                           
  2722                           ;main.c: 173: do { LATB6 = 0; } while(0);
  2723  0733  130D               	bcf	13,6	;volatile
  2724                           
  2725                           ;main.c: 174: shiftRegister (SLAVEADD[i],SLAVEADD[i],4);
  2726  0734  087C               	movf	MIPI@i,w
  2727  0735  3E87               	addlw	low (_SLAVEADD| (0+32768))
  2728  0736  0084               	movwf	4
  2729  0737  3088               	movlw	high (_SLAVEADD| (0+32768))
  2730  0738  1803               	skipnc
  2731  0739  3E01               	addlw	1
  2732  073A  0085               	movwf	5
  2733  073B  0800               	movf	0,w	;code access
  2734  073C  00F8               	movwf	??_MIPI
  2735  073D  0878               	movf	??_MIPI,w
  2736  073E  00F0               	movwf	shiftRegister@Dummy2
  2737  073F  3004               	movlw	4
  2738  0740  00F9               	movwf	??_MIPI+1
  2739  0741  0879               	movf	??_MIPI+1,w
  2740  0742  00F1               	movwf	shiftRegister@y
  2741  0743  087C               	movf	MIPI@i,w
  2742  0744  3E87               	addlw	low (_SLAVEADD| (0+32768))
  2743  0745  0084               	movwf	4
  2744  0746  3088               	movlw	high (_SLAVEADD| (0+32768))
  2745  0747  1803               	skipnc
  2746  0748  3E01               	addlw	1
  2747  0749  0085               	movwf	5
  2748  074A  0800               	movf	0,w	;code access
  2749  074B  3185  25C7  3186   	fcall	_shiftRegister
  2750                           
  2751                           ;main.c: 175: shiftRegister (0x02,0x02,3);
  2752  074E  3002               	movlw	2
  2753  074F  00F8               	movwf	??_MIPI
  2754  0750  0878               	movf	??_MIPI,w
  2755  0751  00F0               	movwf	shiftRegister@Dummy2
  2756  0752  3003               	movlw	3
  2757  0753  00F9               	movwf	??_MIPI+1
  2758  0754  0879               	movf	??_MIPI+1,w
  2759  0755  00F1               	movwf	shiftRegister@y
  2760  0756  3002               	movlw	2
  2761  0757  3185  25C7  3186   	fcall	_shiftRegister
  2762                           
  2763                           ;main.c: 176: shiftRegister (REGADD[j],REGADD[j],5);
  2764  075A  087B               	movf	MIPI@j,w
  2765  075B  3E85               	addlw	low (_REGADD| (0+32768))
  2766  075C  0084               	movwf	4
  2767  075D  3088               	movlw	high (_REGADD| (0+32768))
  2768  075E  1803               	skipnc
  2769  075F  3E01               	addlw	1
  2770  0760  0085               	movwf	5
  2771  0761  0800               	movf	0,w	;code access
  2772  0762  00F8               	movwf	??_MIPI
  2773  0763  0878               	movf	??_MIPI,w
  2774  0764  00F0               	movwf	shiftRegister@Dummy2
  2775  0765  3005               	movlw	5
  2776  0766  00F9               	movwf	??_MIPI+1
  2777  0767  0879               	movf	??_MIPI+1,w
  2778  0768  00F1               	movwf	shiftRegister@y
  2779  0769  087B               	movf	MIPI@j,w
  2780  076A  3E85               	addlw	low (_REGADD| (0+32768))
  2781  076B  0084               	movwf	4
  2782  076C  3088               	movlw	high (_REGADD| (0+32768))
  2783  076D  1803               	skipnc
  2784  076E  3E01               	addlw	1
  2785  076F  0085               	movwf	5
  2786  0770  0800               	movf	0,w	;code access
  2787  0771  3185  25C7  3186   	fcall	_shiftRegister
  2788                           
  2789                           ;main.c: 177: if (i==0)
  2790  0774  087C               	movf	MIPI@i,w
  2791  0775  1D03               	btfss	3,2
  2792  0776  2F7D               	goto	l876
  2793                           
  2794                           ;main.c: 178: shiftRegister (0x01,0x01,1);
  2795  0777  01F0               	clrf	shiftRegister@Dummy2
  2796  0778  0AF0               	incf	shiftRegister@Dummy2,f
  2797  0779  01F1               	clrf	shiftRegister@y
  2798  077A  0AF1               	incf	shiftRegister@y,f
  2799  077B  3001               	movlw	1
  2800  077C  2F81               	goto	L4
  2801  077D                     l876:	
  2802                           
  2803                           ;main.c: 179: else
  2804                           ;main.c: 180: shiftRegister (0x00,0x00,1);
  2805  077D  01F0               	clrf	shiftRegister@Dummy2
  2806  077E  01F1               	clrf	shiftRegister@y
  2807  077F  0AF1               	incf	shiftRegister@y,f
  2808  0780  3000               	movlw	0
  2809  0781                     L4:	
  2810  0781  3185  25C7  3186   	fcall	_shiftRegister
  2811                           
  2812                           ;main.c: 181: if (j==0){
  2813  0784  087B               	movf	MIPI@j,w
  2814  0785  1D03               	btfss	3,2
  2815  0786  2F98               	goto	l882
  2816                           
  2817                           ;main.c: 182: shiftRegister (0x00,0x00,8);
  2818  0787  01F0               	clrf	shiftRegister@Dummy2
  2819  0788  3008               	movlw	8
  2820  0789  00F8               	movwf	??_MIPI
  2821  078A  0878               	movf	??_MIPI,w
  2822  078B  00F1               	movwf	shiftRegister@y
  2823  078C  3000               	movlw	0
  2824  078D  3185  25C7  3186   	fcall	_shiftRegister
  2825                           
  2826                           ;main.c: 183: shiftRegister (0x01,0x01,2);
  2827  0790  01F0               	clrf	shiftRegister@Dummy2
  2828  0791  0AF0               	incf	shiftRegister@Dummy2,f
  2829  0792  3002               	movlw	2
  2830  0793  00F8               	movwf	??_MIPI
  2831  0794  0878               	movf	??_MIPI,w
  2832  0795  00F1               	movwf	shiftRegister@y
  2833  0796  3001               	movlw	1
  2834  0797  2FE4               	goto	L5
  2835  0798                     l882:	
  2836                           ;main.c: 184: }
  2837                           
  2838                           
  2839                           ;main.c: 185: else{
  2840                           ;main.c: 186: if (i==0){
  2841  0798  087C               	movf	MIPI@i,w
  2842  0799  1D03               	btfss	3,2
  2843  079A  2FC0               	goto	l888
  2844                           
  2845                           ;main.c: 187: shiftRegister (DATA[a],DATA[c],8);
  2846  079B  0876               	movf	MIPI@c,w
  2847  079C  3E00               	addlw	low (_DATA| (0+32768))
  2848  079D  0084               	movwf	4
  2849  079E  3088               	movlw	high (_DATA| (0+32768))
  2850  079F  1803               	skipnc
  2851  07A0  3E01               	addlw	1
  2852  07A1  0085               	movwf	5
  2853  07A2  0800               	movf	0,w	;code access
  2854  07A3  00F8               	movwf	??_MIPI
  2855  07A4  0878               	movf	??_MIPI,w
  2856  07A5  00F0               	movwf	shiftRegister@Dummy2
  2857  07A6  3008               	movlw	8
  2858  07A7  00F9               	movwf	??_MIPI+1
  2859  07A8  0879               	movf	??_MIPI+1,w
  2860  07A9  00F1               	movwf	shiftRegister@y
  2861  07AA  087A               	movf	MIPI@a,w
  2862  07AB  3E00               	addlw	low (_DATA| (0+32768))
  2863  07AC  0084               	movwf	4
  2864  07AD  3088               	movlw	high (_DATA| (0+32768))
  2865  07AE  1803               	skipnc
  2866  07AF  3E01               	addlw	1
  2867  07B0  0085               	movwf	5
  2868  07B1  0800               	movf	0,w	;code access
  2869  07B2  3185  25C7  3186   	fcall	_shiftRegister
  2870                           
  2871                           ;main.c: 188: shiftRegister (parity1,parity3,2);
  2872  07B5  0020               	movlb	0	; select bank0
  2873  07B6  0824               	movf	_parity3,w
  2874  07B7  00F8               	movwf	??_MIPI
  2875  07B8  0878               	movf	??_MIPI,w
  2876  07B9  00F0               	movwf	shiftRegister@Dummy2
  2877  07BA  3002               	movlw	2
  2878  07BB  00F9               	movwf	??_MIPI+1
  2879  07BC  0879               	movf	??_MIPI+1,w
  2880  07BD  00F1               	movwf	shiftRegister@y
  2881  07BE  0822               	movf	_parity1,w
  2882  07BF  2FE4               	goto	L5
  2883  07C0                     l888:	
  2884                           ;main.c: 189: }else{
  2885                           
  2886                           
  2887                           ;main.c: 190: shiftRegister (DATA[b],DATA[d],8);
  2888  07C0  0877               	movf	MIPI@d,w
  2889  07C1  3E00               	addlw	low (_DATA| (0+32768))
  2890  07C2  0084               	movwf	4
  2891  07C3  3088               	movlw	high (_DATA| (0+32768))
  2892  07C4  1803               	skipnc
  2893  07C5  3E01               	addlw	1
  2894  07C6  0085               	movwf	5
  2895  07C7  0800               	movf	0,w	;code access
  2896  07C8  00F8               	movwf	??_MIPI
  2897  07C9  0878               	movf	??_MIPI,w
  2898  07CA  00F0               	movwf	shiftRegister@Dummy2
  2899  07CB  3008               	movlw	8
  2900  07CC  00F9               	movwf	??_MIPI+1
  2901  07CD  0879               	movf	??_MIPI+1,w
  2902  07CE  00F1               	movwf	shiftRegister@y
  2903  07CF  0875               	movf	MIPI@b,w
  2904  07D0  3E00               	addlw	low (_DATA| (0+32768))
  2905  07D1  0084               	movwf	4
  2906  07D2  3088               	movlw	high (_DATA| (0+32768))
  2907  07D3  1803               	skipnc
  2908  07D4  3E01               	addlw	1
  2909  07D5  0085               	movwf	5
  2910  07D6  0800               	movf	0,w	;code access
  2911  07D7  3185  25C7  3186   	fcall	_shiftRegister
  2912                           
  2913                           ;main.c: 191: shiftRegister (parity2,parity4,2);
  2914  07DA  0020               	movlb	0	; select bank0
  2915  07DB  0825               	movf	_parity4,w
  2916  07DC  00F8               	movwf	??_MIPI
  2917  07DD  0878               	movf	??_MIPI,w
  2918  07DE  00F0               	movwf	shiftRegister@Dummy2
  2919  07DF  3002               	movlw	2
  2920  07E0  00F9               	movwf	??_MIPI+1
  2921  07E1  0879               	movf	??_MIPI+1,w
  2922  07E2  00F1               	movwf	shiftRegister@y
  2923  07E3  0823               	movf	_parity2,w
  2924  07E4                     L5:	
  2925  07E4  3185  25C7  3186   	fcall	_shiftRegister
  2926  07E7  0000               	nop	;# 
  2927  07E8  0000               	nop	;# 
  2928  07E9  3001               	movlw	1
  2929  07EA  00F8               	movwf	??_MIPI
  2930  07EB  0878               	movf	??_MIPI,w
  2931  07EC  07FB               	addwf	MIPI@j,f
  2932  07ED  3002               	movlw	2
  2933  07EE  027B               	subwf	MIPI@j,w
  2934  07EF  1C03               	skipc
  2935  07F0  2F2D               	goto	l128
  2936  07F1                     l896:	
  2937  07F1  3001               	movlw	1
  2938  07F2  00F8               	movwf	??_MIPI
  2939  07F3  0878               	movf	??_MIPI,w
  2940  07F4  07FC               	addwf	MIPI@i,f
  2941  07F5  2F24               	goto	L6
  2942  07F6                     __end_of_MIPI:	
  2943                           
  2944                           	psect	text6
  2945  05C7                     __ptext6:	
  2946 ;; *************** function _shiftRegister *****************
  2947 ;; Defined at:
  2948 ;;		line 139 in file "main.c"
  2949 ;; Parameters:    Size  Location     Type
  2950 ;;  Dummy1          1    wreg     unsigned char 
  2951 ;;  Dummy2          1    0[COMMON] unsigned char 
  2952 ;;  y               1    1[COMMON] unsigned char 
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;  Dummy1          1    4[COMMON] unsigned char 
  2955 ;;  m               1    3[COMMON] unsigned char 
  2956 ;; Return value:  Size  Location     Type
  2957 ;;		None               void
  2958 ;; Registers used:
  2959 ;;		wreg, status,2, status,0
  2960 ;; Tracked objects:
  2961 ;;		On entry : 0/0
  2962 ;;		On exit  : 0/0
  2963 ;;		Unchanged: 0/0
  2964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2965 ;;      Params:         2       0       0       0       0       0       0       0
  2966 ;;      Locals:         2       0       0       0       0       0       0       0
  2967 ;;      Temps:          1       0       0       0       0       0       0       0
  2968 ;;      Totals:         5       0       0       0       0       0       0       0
  2969 ;;Total ram usage:        5 bytes
  2970 ;; Hardware stack levels used:    1
  2971 ;; This function calls:
  2972 ;;		Nothing
  2973 ;; This function is called by:
  2974 ;;		_MIPI
  2975 ;; This function uses a non-reentrant model
  2976 ;;
  2977                           
  2978                           
  2979                           ;psect for function _shiftRegister
  2980  05C7                     _shiftRegister:	
  2981                           
  2982                           ;incstack = 0
  2983                           ; Regs used in _shiftRegister: [wreg+status,2+status,0]
  2984                           ;shiftRegister@Dummy1 stored from wreg
  2985  05C7  00F4               	movwf	shiftRegister@Dummy1
  2986                           
  2987                           ;main.c: 140: for (uint8_t m=0; m<y; m++){
  2988  05C8  01F3               	clrf	shiftRegister@m
  2989  05C9                     l830:	
  2990  05C9  0871               	movf	shiftRegister@y,w
  2991  05CA  0273               	subwf	shiftRegister@m,w
  2992  05CB  1803               	btfsc	3,0
  2993  05CC  0008               	return
  2994                           
  2995                           ;main.c: 141: do { LATB7 = 1; } while(0);
  2996  05CD  0022               	movlb	2	; select bank2
  2997  05CE  178D               	bsf	13,7	;volatile
  2998                           
  2999                           ;main.c: 142: LATB5 = Dummy1 & 0x01;
  3000  05CF  1C74               	btfss	shiftRegister@Dummy1,0
  3001  05D0  2DD4               	goto	u350
  3002  05D1  0022               	movlb	2	; select bank2
  3003  05D2  168D               	bsf	13,5	;volatile
  3004  05D3  2DD6               	goto	l820
  3005  05D4                     u350:	
  3006  05D4  0022               	movlb	2	; select bank2
  3007  05D5  128D               	bcf	13,5	;volatile
  3008  05D6                     l820:	
  3009                           
  3010                           ;main.c: 143: LATB6 = Dummy2 & 0x01;
  3011  05D6  1C70               	btfss	shiftRegister@Dummy2,0
  3012  05D7  2DDB               	goto	u370
  3013  05D8  0022               	movlb	2	; select bank2
  3014  05D9  170D               	bsf	13,6	;volatile
  3015  05DA  2DDD               	goto	u384
  3016  05DB                     u370:	
  3017  05DB  0022               	movlb	2	; select bank2
  3018  05DC  130D               	bcf	13,6	;volatile
  3019  05DD                     u384:	
  3020  05DD  0000               	nop	;# 
  3021                           
  3022                           ;main.c: 145: do { LATB7 = 0; } while(0);
  3023  05DE  0022               	movlb	2	; select bank2
  3024  05DF  138D               	bcf	13,7	;volatile
  3025                           
  3026                           ;main.c: 146: Dummy1 = Dummy1 >> 1;
  3027  05E0  3674               	lsrf	shiftRegister@Dummy1,w
  3028  05E1  00F2               	movwf	??_shiftRegister
  3029  05E2  0872               	movf	??_shiftRegister,w
  3030  05E3  00F4               	movwf	shiftRegister@Dummy1
  3031                           
  3032                           ;main.c: 147: Dummy2 = Dummy2 >> 1;
  3033  05E4  3670               	lsrf	shiftRegister@Dummy2,w
  3034  05E5  00F2               	movwf	??_shiftRegister
  3035  05E6  0872               	movf	??_shiftRegister,w
  3036  05E7  00F0               	movwf	shiftRegister@Dummy2
  3037  05E8  3001               	movlw	1
  3038  05E9  00F2               	movwf	??_shiftRegister
  3039  05EA  0872               	movf	??_shiftRegister,w
  3040  05EB  07F3               	addwf	shiftRegister@m,f
  3041  05EC  2DC9               	goto	l830
  3042  05ED                     __end_of_shiftRegister:	
  3043                           
  3044                           	psect	text7
  3045  058F                     __ptext7:	
  3046 ;; *************** function _paritycheck *****************
  3047 ;; Defined at:
  3048 ;;		line 151 in file "main.c"
  3049 ;; Parameters:    Size  Location     Type
  3050 ;;  Dummy           1    wreg     unsigned char 
  3051 ;; Auto vars:     Size  Location     Type
  3052 ;;  Dummy           1    2[COMMON] unsigned char 
  3053 ;;  parity          1    1[COMMON] unsigned char 
  3054 ;; Return value:  Size  Location     Type
  3055 ;;                  1    wreg      unsigned char 
  3056 ;; Registers used:
  3057 ;;		wreg, status,2, status,0
  3058 ;; Tracked objects:
  3059 ;;		On entry : 0/0
  3060 ;;		On exit  : 0/0
  3061 ;;		Unchanged: 0/0
  3062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3063 ;;      Params:         0       0       0       0       0       0       0       0
  3064 ;;      Locals:         2       0       0       0       0       0       0       0
  3065 ;;      Temps:          1       0       0       0       0       0       0       0
  3066 ;;      Totals:         3       0       0       0       0       0       0       0
  3067 ;;Total ram usage:        3 bytes
  3068 ;; Hardware stack levels used:    1
  3069 ;; This function calls:
  3070 ;;		Nothing
  3071 ;; This function is called by:
  3072 ;;		_MIPI
  3073 ;; This function uses a non-reentrant model
  3074 ;;
  3075                           
  3076                           
  3077                           ;psect for function _paritycheck
  3078  058F                     _paritycheck:	
  3079                           
  3080                           ;incstack = 0
  3081                           ; Regs used in _paritycheck: [wreg+status,2+status,0]
  3082                           ;paritycheck@Dummy stored from wreg
  3083  058F  00F2               	movwf	paritycheck@Dummy
  3084                           
  3085                           ;main.c: 152: bool parity = 0;
  3086  0590  01F1               	clrf	paritycheck@parity
  3087  0591                     l116:	
  3088                           ;main.c: 153: while (Dummy)
  3089                           
  3090  0591  0872               	movf	paritycheck@Dummy,w
  3091  0592  1903               	btfsc	3,2
  3092  0593  2DA4               	goto	l836
  3093                           
  3094                           ;main.c: 154: {
  3095                           ;main.c: 155: parity = !parity;
  3096  0594  0871               	movf	paritycheck@parity,w
  3097  0595  1D03               	btfss	3,2
  3098  0596  2D99               	goto	u400
  3099  0597  3001               	movlw	1
  3100  0598  2D9A               	goto	u410
  3101  0599                     u400:	
  3102  0599  3000               	movlw	0
  3103  059A                     u410:	
  3104  059A  00F0               	movwf	??_paritycheck
  3105  059B  0870               	movf	??_paritycheck,w
  3106  059C  00F1               	movwf	paritycheck@parity
  3107                           
  3108                           ;main.c: 156: Dummy = Dummy & (Dummy - 1);
  3109  059D  0872               	movf	paritycheck@Dummy,w
  3110  059E  3EFF               	addlw	255
  3111  059F  0572               	andwf	paritycheck@Dummy,w
  3112  05A0  00F0               	movwf	??_paritycheck
  3113  05A1  0870               	movf	??_paritycheck,w
  3114  05A2  00F2               	movwf	paritycheck@Dummy
  3115  05A3  2D91               	goto	l116
  3116  05A4                     l836:	
  3117                           
  3118                           ;main.c: 157: }
  3119                           ;main.c: 158: if (parity) return 0;
  3120  05A4  0871               	movf	paritycheck@parity,w
  3121  05A5  1903               	btfsc	3,2
  3122  05A6  2DA9               	goto	l844
  3123  05A7  3000               	movlw	0
  3124  05A8  0008               	return
  3125  05A9                     l844:	
  3126                           
  3127                           ;main.c: 159: else return 1;
  3128  05A9  3001               	movlw	1
  3129  05AA  0008               	return
  3130  05AB                     __end_of_paritycheck:	
  3131                           
  3132                           	psect	text8
  3133  05ED                     __ptext8:	
  3134 ;; *************** function _ConfigureShiftRegister *****************
  3135 ;; Defined at:
  3136 ;;		line 200 in file "main.c"
  3137 ;; Parameters:    Size  Location     Type
  3138 ;;		None
  3139 ;; Auto vars:     Size  Location     Type
  3140 ;;  ReverseReg      1    2[COMMON] unsigned char 
  3141 ;;  i               1    1[COMMON] unsigned char 
  3142 ;; Return value:  Size  Location     Type
  3143 ;;		None               void
  3144 ;; Registers used:
  3145 ;;		wreg, status,2, status,0
  3146 ;; Tracked objects:
  3147 ;;		On entry : 0/0
  3148 ;;		On exit  : 0/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3151 ;;      Params:         0       0       0       0       0       0       0       0
  3152 ;;      Locals:         2       0       0       0       0       0       0       0
  3153 ;;      Temps:          1       0       0       0       0       0       0       0
  3154 ;;      Totals:         3       0       0       0       0       0       0       0
  3155 ;;Total ram usage:        3 bytes
  3156 ;; Hardware stack levels used:    1
  3157 ;; This function calls:
  3158 ;;		Nothing
  3159 ;; This function is called by:
  3160 ;;		_main
  3161 ;; This function uses a non-reentrant model
  3162 ;;
  3163                           
  3164                           
  3165                           ;psect for function _ConfigureShiftRegister
  3166  05ED                     _ConfigureShiftRegister:	
  3167                           
  3168                           ;main.c: 201: uint8_t ReverseReg, i;
  3169                           ;main.c: 202: if ((Byte1 & 0x03) == 0x00)
  3170                           
  3171                           ;incstack = 0
  3172                           ; Regs used in _ConfigureShiftRegister: [wreg+status,2+status,0]
  3173  05ED  087D               	movf	_Byte1,w
  3174  05EE  3903               	andlw	3
  3175  05EF  1D03               	btfss	3,2
  3176  05F0  2DF3               	goto	l904
  3177                           
  3178                           ;main.c: 203: ReverseReg = 0x30;
  3179  05F1  3030               	movlw	48
  3180  05F2  2E05               	goto	L9
  3181  05F3                     l904:	
  3182                           
  3183                           ;main.c: 204: else if ((Byte1 & 0x03) == 0x01)
  3184  05F3  3003               	movlw	3
  3185  05F4  057D               	andwf	_Byte1,w
  3186  05F5  00F0               	movwf	??_ConfigureShiftRegister
  3187  05F6  0370               	decf	??_ConfigureShiftRegister,w
  3188  05F7  1D03               	btfss	3,2
  3189  05F8  2DFB               	goto	l908
  3190                           
  3191                           ;main.c: 205: ReverseReg = 0x10;
  3192  05F9  3010               	movlw	16
  3193  05FA  2E05               	goto	L9
  3194  05FB                     l908:	
  3195                           
  3196                           ;main.c: 206: else if ((Byte1 & 0x03) == 0x02)
  3197  05FB  3003               	movlw	3
  3198  05FC  057D               	andwf	_Byte1,w
  3199  05FD  00F0               	movwf	??_ConfigureShiftRegister
  3200  05FE  3002               	movlw	2
  3201  05FF  0670               	xorwf	??_ConfigureShiftRegister,w
  3202  0600  1D03               	btfss	3,2
  3203  0601  2E04               	goto	l912
  3204                           
  3205                           ;main.c: 207: ReverseReg = 0xB0;
  3206  0602  30B0               	movlw	176
  3207  0603  2E05               	goto	L9
  3208  0604                     l912:	
  3209                           
  3210                           ;main.c: 208: else
  3211                           ;main.c: 209: ReverseReg = 0x90;
  3212  0604  3090               	movlw	144
  3213  0605                     L9:	
  3214  0605  00F0               	movwf	??_ConfigureShiftRegister
  3215  0606  0870               	movf	??_ConfigureShiftRegister,w
  3216  0607  00F2               	movwf	ConfigureShiftRegister@ReverseReg
  3217                           
  3218                           ;main.c: 270: LATA4 = 0;
  3219  0608  0022               	movlb	2	; select bank2
  3220  0609  120C               	bcf	12,4	;volatile
  3221                           
  3222                           ;main.c: 271: do { LATA5 = 1; } while(0);
  3223  060A  168C               	bsf	12,5	;volatile
  3224  060B  0000               	nop	;# 
  3225                           
  3226                           ;main.c: 273: do { LATA5 = 0; } while(0);
  3227  060C  0022               	movlb	2	; select bank2
  3228  060D  128C               	bcf	12,5	;volatile
  3229                           
  3230                           ;main.c: 275: for (i=0; i<8; i++) {
  3231  060E  01F1               	clrf	ConfigureShiftRegister@i
  3232  060F  3008               	movlw	8
  3233  0610  0271               	subwf	ConfigureShiftRegister@i,w
  3234  0611  1803               	btfsc	3,0
  3235  0612  2E2A               	goto	l156
  3236  0613                     l155:	
  3237                           
  3238                           ;main.c: 276: LATA4 = ReverseReg & 0x01;
  3239  0613  1C72               	btfss	ConfigureShiftRegister@ReverseReg,0
  3240  0614  2E18               	goto	u550
  3241  0615  0022               	movlb	2	; select bank2
  3242  0616  160C               	bsf	12,4	;volatile
  3243  0617  2E1A               	goto	l157
  3244  0618                     u550:	
  3245  0618  0022               	movlb	2	; select bank2
  3246  0619  120C               	bcf	12,4	;volatile
  3247  061A                     l157:	
  3248                           ;main.c: 277: do { LATA5 = 1; } while(0);
  3249                           
  3250  061A  168C               	bsf	12,5	;volatile
  3251  061B  0000               	nop	;# 
  3252                           
  3253                           ;main.c: 279: do { LATA5 = 0; } while(0);
  3254  061C  0022               	movlb	2	; select bank2
  3255  061D  128C               	bcf	12,5	;volatile
  3256                           
  3257                           ;main.c: 280: ReverseReg = ReverseReg >> 1;
  3258  061E  3672               	lsrf	ConfigureShiftRegister@ReverseReg,w
  3259  061F  00F0               	movwf	??_ConfigureShiftRegister
  3260  0620  0870               	movf	??_ConfigureShiftRegister,w
  3261  0621  00F2               	movwf	ConfigureShiftRegister@ReverseReg
  3262  0622  3001               	movlw	1
  3263  0623  00F0               	movwf	??_ConfigureShiftRegister
  3264  0624  0870               	movf	??_ConfigureShiftRegister,w
  3265  0625  07F1               	addwf	ConfigureShiftRegister@i,f
  3266  0626  3008               	movlw	8
  3267  0627  0271               	subwf	ConfigureShiftRegister@i,w
  3268  0628  1C03               	skipc
  3269  0629  2E13               	goto	l155
  3270  062A                     l156:	
  3271                           
  3272                           ;main.c: 281: }
  3273                           ;main.c: 284: LATA4 = 0;
  3274  062A  120C               	bcf	12,4	;volatile
  3275                           
  3276                           ;main.c: 285: do { LATA5 = 1; } while(0);
  3277  062B  168C               	bsf	12,5	;volatile
  3278  062C  0000               	nop	;# 
  3279                           
  3280                           ;main.c: 287: do { LATA5 = 0; } while(0);
  3281  062D  0022               	movlb	2	; select bank2
  3282  062E  128C               	bcf	12,5	;volatile
  3283  062F  0008               	return
  3284  0630                     __end_of_ConfigureShiftRegister:	
  3285  007E                     btemp	set	126	;btemp
  3286  007E                     wtemp	set	126
  3287  007E                     wtemp0	set	126
  3288  0080                     wtemp1	set	128
  3289  0082                     wtemp2	set	130
  3290  0084                     wtemp3	set	132
  3291  0086                     wtemp4	set	134
  3292  0088                     wtemp5	set	136
  3293  007F                     wtemp6	set	127
  3294  007E                     ttemp	set	126
  3295  007E                     ttemp0	set	126
  3296  0081                     ttemp1	set	129
  3297  0084                     ttemp2	set	132
  3298  0087                     ttemp3	set	135
  3299  007F                     ttemp4	set	127
  3300  007E                     ltemp	set	126
  3301  007E                     ltemp0	set	126
  3302  0082                     ltemp1	set	130
  3303  0086                     ltemp2	set	134
  3304  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    137
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80      3       9
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_MIPI
    _MIPI->_shiftRegister

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    2228
                                              0 BANK0      3     3      0
             _ConfigureShiftRegister
                    _DAC1_Initialize
                               _MIPI
             _PIN_MANAGER_Initialize
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _DAC1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DAC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MIPI                                                 8     5      3    2133
                                              5 COMMON     8     5      3
                        _paritycheck
                      _shiftRegister
 ---------------------------------------------------------------------------------
 (2) _shiftRegister                                        5     3      2    1082
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) _paritycheck                                          3     3      0     113
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureShiftRegister                               3     3      0      95
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureShiftRegister
   _DAC1_Initialize
   _MIPI
     _paritycheck
     _shiftRegister
   _PIN_MANAGER_Initialize
   _SYSTEM_Initialize
     _DAC1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      17       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      3       9       6       11.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      17      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Jan 28 11:46:23 2016

                     __CFG_CP$OFF 0000                       __CFG_LVP$ON 0000                   _DAC1_Initialize 057C  
                             l200 068D                               l203 0690                               l116 0591  
                             l206 0693                               l128 072D                               l155 0613  
                             l156 062A                               l157 061A                               l820 05D6  
                             l830 05C9                               l912 0604                               l904 05F3  
                             l908 05FB                               l844 05A9                               l836 05A4  
                             l950 064B                               l960 066E                               l882 0798  
                             l954 0657                               l946 063F                               l876 077D  
                             l980 06CD                               l972 06A5                               l888 07C0  
                             l896 07F1                               l976 06B7                               l968 0696  
                             u400 0599                               u410 059A                               u350 05D4  
                             u370 05DB                               u550 0618                               u384 05DD  
  __end_of_ConfigureShiftRegister 0630                      __CFG_BORV$LO 0000                      __CFG_ZCD$OFF 0000  
                            _DATA 0800                              _LATA 010C                              _LATB 010D  
                            _LATC 010E                              _MIPI 06E6                              _WPUB 020D  
                            _WPUC 020E                      __CFG_WRT$OFF 0000                              _main 0630  
                            fsr0h 0005                              fsr0l 0004                              indf0 0000  
                            btemp 007E                              ltemp 007E                              start 0002  
                            ttemp 007E                              wtemp 007E                             ?_MIPI 0075  
                   __CFG_PLLEN$ON 0000                             MIPI@a 007A                             MIPI@b 0075  
                           MIPI@c 0076                             MIPI@d 0077                             MIPI@i 007C  
                           MIPI@j 007B    __size_of_OSCILLATOR_Initialize 0006     __end_of_OSCILLATOR_Initialize 0586  
                           ?_main 0070                     __CFG_WDTE$OFF 0000                             _LATA1 0861  
                           _LATA2 0862                             _LATA4 0864                             _LATA5 0865  
                           _LATB4 086C                             _LATB5 086D                             _LATB6 086E  
                           _LATB7 086F                             _PORTC 000E                             _TRISA 008C  
                           _TRISB 008D                             _TRISC 008E                  __end_of_SLAVEADD 0889  
                           _Byte1 007D                             _Byte2 0020                             _Byte3 0021  
                   __CFG_PWRTE$ON 0000                    __CFG_BOREN$OFF 0000                             ltemp0 007E  
                           ltemp1 0082                             ltemp2 0086                             ltemp3 0080  
                           ttemp0 007E                             ttemp1 0081                             ttemp2 0084  
                           ttemp3 0087                             ttemp4 007F                             status 0003  
                           wtemp0 007E                             wtemp1 0080                             wtemp2 0082  
                           wtemp3 0084                             wtemp4 0086                             wtemp5 0088  
                           wtemp6 007F                      __end_of_DATA 0841                      __end_of_MIPI 07F6  
                  __CFG_MCLRE$OFF 0000                   __initialization 07F6                      __end_of_main 06E6  
         __end_of_DAC1_Initialize 0580                      ?_paritycheck 0070                            ??_MIPI 0078  
                  __CFG_LPBOR$OFF 0000                            ??_main 0026                            _ANSELA 018C  
                          _ANSELB 018D                            _ANSELC 018E                            _REGADD 0885  
                          _OSCCON 0099                    __CFG_STVREN$ON 0000                __end_of_ACTIVEBAND 0881  
               __end_of_DacOutput 0885             __end_of_shiftRegister 05ED                 _SYSTEM_Initialize 0586  
         __end_of__initialization 07FD                ?_SYSTEM_Initialize 0070                    __pcstackCOMMON 0070  
             ??_SYSTEM_Initialize 0070                  ?_DAC1_Initialize 0070                    _OPTION_REGbits 0095  
       __end_of_SYSTEM_Initialize 058F                        __pbssBANK0 0020                  paritycheck@Dummy 0072  
                  shiftRegister@m 0073                    shiftRegister@y 0071                        __pmaintext 0630  
                 __CFG_PPS1WAY$ON 0000              __size_of_paritycheck 001C                   __CFG_WDTCCS$SWC 0000  
                         _OSCSTAT 009A                           _OSCTUNE 0098               shiftRegister@Dummy1 0074  
             shiftRegister@Dummy2 0070           ConfigureShiftRegister@i 0071                           __ptext1 0586  
                         __ptext2 05AB                           __ptext3 0580                           __ptext4 057C  
                         __ptext5 06E6                           __ptext6 05C7                           __ptext7 058F  
                         __ptext8 05ED             _OSCILLATOR_Initialize 0580                           _parity1 0022  
                         _parity2 0023                           _parity3 0024                           _parity4 0025  
        ??_PIN_MANAGER_Initialize 0070        __size_of_SYSTEM_Initialize 0009              end_of_initialization 07FD  
                    __pstringtext 0800          ??_ConfigureShiftRegister 0070                  __CFG_FOSC$INTOSC 0000  
                       _DacOutput 0881                    __end_of_REGADD 0887            ?_OSCILLATOR_Initialize 0070  
             start_initialization 07F6   __size_of_PIN_MANAGER_Initialize 001C            __size_of_shiftRegister 0026  
 __size_of_ConfigureShiftRegister 0043          __size_of_DAC1_Initialize 0004                       __pbssCOMMON 007D  
                       ___latbits 0001                     __pcstackBANK0 0026                 paritycheck@parity 0071  
          _PIN_MANAGER_Initialize 05AB                     ??_paritycheck 0070                          _DAC1CON0 0118  
                        _DAC1CON1 0119                     _shiftRegister 05C7            _ConfigureShiftRegister 05ED  
                        _SLAVEADD 0887              __CFG_WDTCPS$WDTCPS1F 0000                    ?_shiftRegister 0070  
             __end_of_paritycheck 05AB                 ??_DAC1_Initialize 0070                        _ACTIVEBAND 0841  
         ??_OSCILLATOR_Initialize 0070                     __size_of_MIPI 0110                     __size_of_main 00B6  
            __CFG_WDTCWS$WDTCWSSW 0000  ConfigureShiftRegister@ReverseReg 0072                       _paritycheck 058F  
                 ??_shiftRegister 0072           ?_PIN_MANAGER_Initialize 0070                 __CFG_CLKOUTEN$OFF 0000  
         ?_ConfigureShiftRegister 0070    __end_of_PIN_MANAGER_Initialize 05C7  
