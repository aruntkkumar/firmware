

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Tue Nov 24 22:45:04 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	dabs	1,0x7E,2
    27  0000                     	;# 
    28  0001                     	;# 
    29  0002                     	;# 
    30  0003                     	;# 
    31  0004                     	;# 
    32  0005                     	;# 
    33  0006                     	;# 
    34  0007                     	;# 
    35  0008                     	;# 
    36  0009                     	;# 
    37  000A                     	;# 
    38  000B                     	;# 
    39  000C                     	;# 
    40  000D                     	;# 
    41  000E                     	;# 
    42  0010                     	;# 
    43  0011                     	;# 
    44  0012                     	;# 
    45  0013                     	;# 
    46  0014                     	;# 
    47  0015                     	;# 
    48  0016                     	;# 
    49  0016                     	;# 
    50  0017                     	;# 
    51  0018                     	;# 
    52  0019                     	;# 
    53  001A                     	;# 
    54  001A                     	;# 
    55  001B                     	;# 
    56  001B                     	;# 
    57  001C                     	;# 
    58  001D                     	;# 
    59  001E                     	;# 
    60  001F                     	;# 
    61  008C                     	;# 
    62  008D                     	;# 
    63  008E                     	;# 
    64  0090                     	;# 
    65  0091                     	;# 
    66  0092                     	;# 
    67  0093                     	;# 
    68  0094                     	;# 
    69  0095                     	;# 
    70  0096                     	;# 
    71  0098                     	;# 
    72  0099                     	;# 
    73  009A                     	;# 
    74  009B                     	;# 
    75  009B                     	;# 
    76  009C                     	;# 
    77  009D                     	;# 
    78  009E                     	;# 
    79  009F                     	;# 
    80  010C                     	;# 
    81  010D                     	;# 
    82  010E                     	;# 
    83  0111                     	;# 
    84  0112                     	;# 
    85  0113                     	;# 
    86  0114                     	;# 
    87  0115                     	;# 
    88  0116                     	;# 
    89  0117                     	;# 
    90  0118                     	;# 
    91  0119                     	;# 
    92  011C                     	;# 
    93  018C                     	;# 
    94  018D                     	;# 
    95  018E                     	;# 
    96  0191                     	;# 
    97  0191                     	;# 
    98  0192                     	;# 
    99  0193                     	;# 
   100  0193                     	;# 
   101  0194                     	;# 
   102  0195                     	;# 
   103  0196                     	;# 
   104  0197                     	;# 
   105  0199                     	;# 
   106  0199                     	;# 
   107  0199                     	;# 
   108  019A                     	;# 
   109  019A                     	;# 
   110  019A                     	;# 
   111  019B                     	;# 
   112  019B                     	;# 
   113  019B                     	;# 
   114  019B                     	;# 
   115  019B                     	;# 
   116  019C                     	;# 
   117  019C                     	;# 
   118  019C                     	;# 
   119  019D                     	;# 
   120  019D                     	;# 
   121  019D                     	;# 
   122  019E                     	;# 
   123  019E                     	;# 
   124  019E                     	;# 
   125  019F                     	;# 
   126  019F                     	;# 
   127  019F                     	;# 
   128  019F                     	;# 
   129  019F                     	;# 
   130  020C                     	;# 
   131  020D                     	;# 
   132  020E                     	;# 
   133  0211                     	;# 
   134  0211                     	;# 
   135  0212                     	;# 
   136  0212                     	;# 
   137  0213                     	;# 
   138  0213                     	;# 
   139  0214                     	;# 
   140  0214                     	;# 
   141  0215                     	;# 
   142  0215                     	;# 
   143  0215                     	;# 
   144  0215                     	;# 
   145  0216                     	;# 
   146  0216                     	;# 
   147  0217                     	;# 
   148  0217                     	;# 
   149  028C                     	;# 
   150  028D                     	;# 
   151  028E                     	;# 
   152  0291                     	;# 
   153  0291                     	;# 
   154  0292                     	;# 
   155  0293                     	;# 
   156  0294                     	;# 
   157  0298                     	;# 
   158  0298                     	;# 
   159  0299                     	;# 
   160  029A                     	;# 
   161  029B                     	;# 
   162  029E                     	;# 
   163  030C                     	;# 
   164  030D                     	;# 
   165  030E                     	;# 
   166  038C                     	;# 
   167  038D                     	;# 
   168  038E                     	;# 
   169  0391                     	;# 
   170  0392                     	;# 
   171  0393                     	;# 
   172  0394                     	;# 
   173  0395                     	;# 
   174  0396                     	;# 
   175  0397                     	;# 
   176  0398                     	;# 
   177  0399                     	;# 
   178  040E                     	;# 
   179  0413                     	;# 
   180  0413                     	;# 
   181  0414                     	;# 
   182  0414                     	;# 
   183  0415                     	;# 
   184  0416                     	;# 
   185  0417                     	;# 
   186  0418                     	;# 
   187  041A                     	;# 
   188  041A                     	;# 
   189  041B                     	;# 
   190  041B                     	;# 
   191  041C                     	;# 
   192  041D                     	;# 
   193  041E                     	;# 
   194  041F                     	;# 
   195  0493                     	;# 
   196  0494                     	;# 
   197  0495                     	;# 
   198  0496                     	;# 
   199  049A                     	;# 
   200  049B                     	;# 
   201  049C                     	;# 
   202  049D                     	;# 
   203  058C                     	;# 
   204  058C                     	;# 
   205  058D                     	;# 
   206  058E                     	;# 
   207  058E                     	;# 
   208  058F                     	;# 
   209  0590                     	;# 
   210  0590                     	;# 
   211  0591                     	;# 
   212  0592                     	;# 
   213  0592                     	;# 
   214  0593                     	;# 
   215  0594                     	;# 
   216  0594                     	;# 
   217  0595                     	;# 
   218  0596                     	;# 
   219  0596                     	;# 
   220  0597                     	;# 
   221  0598                     	;# 
   222  0599                     	;# 
   223  059A                     	;# 
   224  059B                     	;# 
   225  059B                     	;# 
   226  059C                     	;# 
   227  059D                     	;# 
   228  060C                     	;# 
   229  060C                     	;# 
   230  060D                     	;# 
   231  060E                     	;# 
   232  060F                     	;# 
   233  060F                     	;# 
   234  0610                     	;# 
   235  0611                     	;# 
   236  0612                     	;# 
   237  0613                     	;# 
   238  0614                     	;# 
   239  0617                     	;# 
   240  0618                     	;# 
   241  0619                     	;# 
   242  061A                     	;# 
   243  061B                     	;# 
   244  061C                     	;# 
   245  0691                     	;# 
   246  0692                     	;# 
   247  0693                     	;# 
   248  0694                     	;# 
   249  0695                     	;# 
   250  0696                     	;# 
   251  0697                     	;# 
   252  0699                     	;# 
   253  069A                     	;# 
   254  0711                     	;# 
   255  0712                     	;# 
   256  0713                     	;# 
   257  0714                     	;# 
   258  0715                     	;# 
   259  0718                     	;# 
   260  0718                     	;# 
   261  0719                     	;# 
   262  071A                     	;# 
   263  071A                     	;# 
   264  071B                     	;# 
   265  071C                     	;# 
   266  071D                     	;# 
   267  0791                     	;# 
   268  0791                     	;# 
   269  0792                     	;# 
   270  0793                     	;# 
   271  0793                     	;# 
   272  0794                     	;# 
   273  0795                     	;# 
   274  0795                     	;# 
   275  0796                     	;# 
   276  0797                     	;# 
   277  0797                     	;# 
   278  0798                     	;# 
   279  0799                     	;# 
   280  079A                     	;# 
   281  080C                     	;# 
   282  080C                     	;# 
   283  080D                     	;# 
   284  080E                     	;# 
   285  080E                     	;# 
   286  080F                     	;# 
   287  0810                     	;# 
   288  0810                     	;# 
   289  0811                     	;# 
   290  0812                     	;# 
   291  0812                     	;# 
   292  0813                     	;# 
   293  0814                     	;# 
   294  0815                     	;# 
   295  0816                     	;# 
   296  0817                     	;# 
   297  0818                     	;# 
   298  0819                     	;# 
   299  081A                     	;# 
   300  081A                     	;# 
   301  081B                     	;# 
   302  081C                     	;# 
   303  081C                     	;# 
   304  081D                     	;# 
   305  088C                     	;# 
   306  088D                     	;# 
   307  088E                     	;# 
   308  088F                     	;# 
   309  088F                     	;# 
   310  0890                     	;# 
   311  0891                     	;# 
   312  0892                     	;# 
   313  0893                     	;# 
   314  0893                     	;# 
   315  0894                     	;# 
   316  0895                     	;# 
   317  0896                     	;# 
   318  0897                     	;# 
   319  0897                     	;# 
   320  0898                     	;# 
   321  0899                     	;# 
   322  0D8C                     	;# 
   323  0D8C                     	;# 
   324  0D8D                     	;# 
   325  0D8E                     	;# 
   326  0D8F                     	;# 
   327  0D8F                     	;# 
   328  0D90                     	;# 
   329  0D91                     	;# 
   330  0D92                     	;# 
   331  0D92                     	;# 
   332  0D93                     	;# 
   333  0D94                     	;# 
   334  0D95                     	;# 
   335  0D95                     	;# 
   336  0D96                     	;# 
   337  0D97                     	;# 
   338  0D98                     	;# 
   339  0D99                     	;# 
   340  0D9A                     	;# 
   341  0D9B                     	;# 
   342  0D9C                     	;# 
   343  0D9D                     	;# 
   344  0D9E                     	;# 
   345  0D9E                     	;# 
   346  0D9F                     	;# 
   347  0DA0                     	;# 
   348  0DA1                     	;# 
   349  0DA1                     	;# 
   350  0DA2                     	;# 
   351  0DA3                     	;# 
   352  0DA4                     	;# 
   353  0DA4                     	;# 
   354  0DA5                     	;# 
   355  0DA6                     	;# 
   356  0DA7                     	;# 
   357  0DA7                     	;# 
   358  0DA8                     	;# 
   359  0DA9                     	;# 
   360  0DAA                     	;# 
   361  0DAB                     	;# 
   362  0DAC                     	;# 
   363  0DAD                     	;# 
   364  0DAE                     	;# 
   365  0DAF                     	;# 
   366  0E0F                     	;# 
   367  0E10                     	;# 
   368  0E11                     	;# 
   369  0E12                     	;# 
   370  0E13                     	;# 
   371  0E14                     	;# 
   372  0E15                     	;# 
   373  0E16                     	;# 
   374  0E17                     	;# 
   375  0E18                     	;# 
   376  0E19                     	;# 
   377  0E1A                     	;# 
   378  0E1B                     	;# 
   379  0E1C                     	;# 
   380  0E1D                     	;# 
   381  0E1E                     	;# 
   382  0E1F                     	;# 
   383  0E20                     	;# 
   384  0E21                     	;# 
   385  0E22                     	;# 
   386  0E23                     	;# 
   387  0E24                     	;# 
   388  0E25                     	;# 
   389  0E26                     	;# 
   390  0E27                     	;# 
   391  0E28                     	;# 
   392  0E29                     	;# 
   393  0E2A                     	;# 
   394  0E2B                     	;# 
   395  0E2C                     	;# 
   396  0E2D                     	;# 
   397  0E2E                     	;# 
   398  0E90                     	;# 
   399  0E91                     	;# 
   400  0E92                     	;# 
   401  0E94                     	;# 
   402  0E95                     	;# 
   403  0E9C                     	;# 
   404  0E9D                     	;# 
   405  0E9E                     	;# 
   406  0E9F                     	;# 
   407  0EA0                     	;# 
   408  0EA1                     	;# 
   409  0EA2                     	;# 
   410  0EA3                     	;# 
   411  0EA4                     	;# 
   412  0EA5                     	;# 
   413  0EA6                     	;# 
   414  0EA7                     	;# 
   415  0F0F                     	;# 
   416  0F10                     	;# 
   417  0F11                     	;# 
   418  0F12                     	;# 
   419  0F13                     	;# 
   420  0F14                     	;# 
   421  0F15                     	;# 
   422  0F16                     	;# 
   423  0F17                     	;# 
   424  0F18                     	;# 
   425  0F19                     	;# 
   426  0F1A                     	;# 
   427  0F1B                     	;# 
   428  0F1C                     	;# 
   429  0F1D                     	;# 
   430  0F1E                     	;# 
   431  0F1F                     	;# 
   432  0F20                     	;# 
   433  0F21                     	;# 
   434  0F22                     	;# 
   435  0F23                     	;# 
   436  0F24                     	;# 
   437  0F25                     	;# 
   438  0F26                     	;# 
   439  0F27                     	;# 
   440  0F28                     	;# 
   441  0F29                     	;# 
   442  0F2A                     	;# 
   443  0F2B                     	;# 
   444  0F2C                     	;# 
   445  0F2D                     	;# 
   446  0F2E                     	;# 
   447  0F2F                     	;# 
   448  0F30                     	;# 
   449  0F31                     	;# 
   450  0F32                     	;# 
   451  0F33                     	;# 
   452  0F34                     	;# 
   453  0F35                     	;# 
   454  0F36                     	;# 
   455  0F37                     	;# 
   456  0FE4                     	;# 
   457  0FE5                     	;# 
   458  0FE6                     	;# 
   459  0FE7                     	;# 
   460  0FE8                     	;# 
   461  0FE9                     	;# 
   462  0FEA                     	;# 
   463  0FEB                     	;# 
   464  0FED                     	;# 
   465  0FEE                     	;# 
   466  0FEF                     	;# 
   467  0000                     	;# 
   468  0001                     	;# 
   469  0002                     	;# 
   470  0003                     	;# 
   471  0004                     	;# 
   472  0005                     	;# 
   473  0006                     	;# 
   474  0007                     	;# 
   475  0008                     	;# 
   476  0009                     	;# 
   477  000A                     	;# 
   478  000B                     	;# 
   479  000C                     	;# 
   480  000D                     	;# 
   481  000E                     	;# 
   482  0010                     	;# 
   483  0011                     	;# 
   484  0012                     	;# 
   485  0013                     	;# 
   486  0014                     	;# 
   487  0015                     	;# 
   488  0016                     	;# 
   489  0016                     	;# 
   490  0017                     	;# 
   491  0018                     	;# 
   492  0019                     	;# 
   493  001A                     	;# 
   494  001A                     	;# 
   495  001B                     	;# 
   496  001B                     	;# 
   497  001C                     	;# 
   498  001D                     	;# 
   499  001E                     	;# 
   500  001F                     	;# 
   501  008C                     	;# 
   502  008D                     	;# 
   503  008E                     	;# 
   504  0090                     	;# 
   505  0091                     	;# 
   506  0092                     	;# 
   507  0093                     	;# 
   508  0094                     	;# 
   509  0095                     	;# 
   510  0096                     	;# 
   511  0098                     	;# 
   512  0099                     	;# 
   513  009A                     	;# 
   514  009B                     	;# 
   515  009B                     	;# 
   516  009C                     	;# 
   517  009D                     	;# 
   518  009E                     	;# 
   519  009F                     	;# 
   520  010C                     	;# 
   521  010D                     	;# 
   522  010E                     	;# 
   523  0111                     	;# 
   524  0112                     	;# 
   525  0113                     	;# 
   526  0114                     	;# 
   527  0115                     	;# 
   528  0116                     	;# 
   529  0117                     	;# 
   530  0118                     	;# 
   531  0119                     	;# 
   532  011C                     	;# 
   533  018C                     	;# 
   534  018D                     	;# 
   535  018E                     	;# 
   536  0191                     	;# 
   537  0191                     	;# 
   538  0192                     	;# 
   539  0193                     	;# 
   540  0193                     	;# 
   541  0194                     	;# 
   542  0195                     	;# 
   543  0196                     	;# 
   544  0197                     	;# 
   545  0199                     	;# 
   546  0199                     	;# 
   547  0199                     	;# 
   548  019A                     	;# 
   549  019A                     	;# 
   550  019A                     	;# 
   551  019B                     	;# 
   552  019B                     	;# 
   553  019B                     	;# 
   554  019B                     	;# 
   555  019B                     	;# 
   556  019C                     	;# 
   557  019C                     	;# 
   558  019C                     	;# 
   559  019D                     	;# 
   560  019D                     	;# 
   561  019D                     	;# 
   562  019E                     	;# 
   563  019E                     	;# 
   564  019E                     	;# 
   565  019F                     	;# 
   566  019F                     	;# 
   567  019F                     	;# 
   568  019F                     	;# 
   569  019F                     	;# 
   570  020C                     	;# 
   571  020D                     	;# 
   572  020E                     	;# 
   573  0211                     	;# 
   574  0211                     	;# 
   575  0212                     	;# 
   576  0212                     	;# 
   577  0213                     	;# 
   578  0213                     	;# 
   579  0214                     	;# 
   580  0214                     	;# 
   581  0215                     	;# 
   582  0215                     	;# 
   583  0215                     	;# 
   584  0215                     	;# 
   585  0216                     	;# 
   586  0216                     	;# 
   587  0217                     	;# 
   588  0217                     	;# 
   589  028C                     	;# 
   590  028D                     	;# 
   591  028E                     	;# 
   592  0291                     	;# 
   593  0291                     	;# 
   594  0292                     	;# 
   595  0293                     	;# 
   596  0294                     	;# 
   597  0298                     	;# 
   598  0298                     	;# 
   599  0299                     	;# 
   600  029A                     	;# 
   601  029B                     	;# 
   602  029E                     	;# 
   603  030C                     	;# 
   604  030D                     	;# 
   605  030E                     	;# 
   606  038C                     	;# 
   607  038D                     	;# 
   608  038E                     	;# 
   609  0391                     	;# 
   610  0392                     	;# 
   611  0393                     	;# 
   612  0394                     	;# 
   613  0395                     	;# 
   614  0396                     	;# 
   615  0397                     	;# 
   616  0398                     	;# 
   617  0399                     	;# 
   618  040E                     	;# 
   619  0413                     	;# 
   620  0413                     	;# 
   621  0414                     	;# 
   622  0414                     	;# 
   623  0415                     	;# 
   624  0416                     	;# 
   625  0417                     	;# 
   626  0418                     	;# 
   627  041A                     	;# 
   628  041A                     	;# 
   629  041B                     	;# 
   630  041B                     	;# 
   631  041C                     	;# 
   632  041D                     	;# 
   633  041E                     	;# 
   634  041F                     	;# 
   635  0493                     	;# 
   636  0494                     	;# 
   637  0495                     	;# 
   638  0496                     	;# 
   639  049A                     	;# 
   640  049B                     	;# 
   641  049C                     	;# 
   642  049D                     	;# 
   643  058C                     	;# 
   644  058C                     	;# 
   645  058D                     	;# 
   646  058E                     	;# 
   647  058E                     	;# 
   648  058F                     	;# 
   649  0590                     	;# 
   650  0590                     	;# 
   651  0591                     	;# 
   652  0592                     	;# 
   653  0592                     	;# 
   654  0593                     	;# 
   655  0594                     	;# 
   656  0594                     	;# 
   657  0595                     	;# 
   658  0596                     	;# 
   659  0596                     	;# 
   660  0597                     	;# 
   661  0598                     	;# 
   662  0599                     	;# 
   663  059A                     	;# 
   664  059B                     	;# 
   665  059B                     	;# 
   666  059C                     	;# 
   667  059D                     	;# 
   668  060C                     	;# 
   669  060C                     	;# 
   670  060D                     	;# 
   671  060E                     	;# 
   672  060F                     	;# 
   673  060F                     	;# 
   674  0610                     	;# 
   675  0611                     	;# 
   676  0612                     	;# 
   677  0613                     	;# 
   678  0614                     	;# 
   679  0617                     	;# 
   680  0618                     	;# 
   681  0619                     	;# 
   682  061A                     	;# 
   683  061B                     	;# 
   684  061C                     	;# 
   685  0691                     	;# 
   686  0692                     	;# 
   687  0693                     	;# 
   688  0694                     	;# 
   689  0695                     	;# 
   690  0696                     	;# 
   691  0697                     	;# 
   692  0699                     	;# 
   693  069A                     	;# 
   694  0711                     	;# 
   695  0712                     	;# 
   696  0713                     	;# 
   697  0714                     	;# 
   698  0715                     	;# 
   699  0718                     	;# 
   700  0718                     	;# 
   701  0719                     	;# 
   702  071A                     	;# 
   703  071A                     	;# 
   704  071B                     	;# 
   705  071C                     	;# 
   706  071D                     	;# 
   707  0791                     	;# 
   708  0791                     	;# 
   709  0792                     	;# 
   710  0793                     	;# 
   711  0793                     	;# 
   712  0794                     	;# 
   713  0795                     	;# 
   714  0795                     	;# 
   715  0796                     	;# 
   716  0797                     	;# 
   717  0797                     	;# 
   718  0798                     	;# 
   719  0799                     	;# 
   720  079A                     	;# 
   721  080C                     	;# 
   722  080C                     	;# 
   723  080D                     	;# 
   724  080E                     	;# 
   725  080E                     	;# 
   726  080F                     	;# 
   727  0810                     	;# 
   728  0810                     	;# 
   729  0811                     	;# 
   730  0812                     	;# 
   731  0812                     	;# 
   732  0813                     	;# 
   733  0814                     	;# 
   734  0815                     	;# 
   735  0816                     	;# 
   736  0817                     	;# 
   737  0818                     	;# 
   738  0819                     	;# 
   739  081A                     	;# 
   740  081A                     	;# 
   741  081B                     	;# 
   742  081C                     	;# 
   743  081C                     	;# 
   744  081D                     	;# 
   745  088C                     	;# 
   746  088D                     	;# 
   747  088E                     	;# 
   748  088F                     	;# 
   749  088F                     	;# 
   750  0890                     	;# 
   751  0891                     	;# 
   752  0892                     	;# 
   753  0893                     	;# 
   754  0893                     	;# 
   755  0894                     	;# 
   756  0895                     	;# 
   757  0896                     	;# 
   758  0897                     	;# 
   759  0897                     	;# 
   760  0898                     	;# 
   761  0899                     	;# 
   762  0D8C                     	;# 
   763  0D8C                     	;# 
   764  0D8D                     	;# 
   765  0D8E                     	;# 
   766  0D8F                     	;# 
   767  0D8F                     	;# 
   768  0D90                     	;# 
   769  0D91                     	;# 
   770  0D92                     	;# 
   771  0D92                     	;# 
   772  0D93                     	;# 
   773  0D94                     	;# 
   774  0D95                     	;# 
   775  0D95                     	;# 
   776  0D96                     	;# 
   777  0D97                     	;# 
   778  0D98                     	;# 
   779  0D99                     	;# 
   780  0D9A                     	;# 
   781  0D9B                     	;# 
   782  0D9C                     	;# 
   783  0D9D                     	;# 
   784  0D9E                     	;# 
   785  0D9E                     	;# 
   786  0D9F                     	;# 
   787  0DA0                     	;# 
   788  0DA1                     	;# 
   789  0DA1                     	;# 
   790  0DA2                     	;# 
   791  0DA3                     	;# 
   792  0DA4                     	;# 
   793  0DA4                     	;# 
   794  0DA5                     	;# 
   795  0DA6                     	;# 
   796  0DA7                     	;# 
   797  0DA7                     	;# 
   798  0DA8                     	;# 
   799  0DA9                     	;# 
   800  0DAA                     	;# 
   801  0DAB                     	;# 
   802  0DAC                     	;# 
   803  0DAD                     	;# 
   804  0DAE                     	;# 
   805  0DAF                     	;# 
   806  0E0F                     	;# 
   807  0E10                     	;# 
   808  0E11                     	;# 
   809  0E12                     	;# 
   810  0E13                     	;# 
   811  0E14                     	;# 
   812  0E15                     	;# 
   813  0E16                     	;# 
   814  0E17                     	;# 
   815  0E18                     	;# 
   816  0E19                     	;# 
   817  0E1A                     	;# 
   818  0E1B                     	;# 
   819  0E1C                     	;# 
   820  0E1D                     	;# 
   821  0E1E                     	;# 
   822  0E1F                     	;# 
   823  0E20                     	;# 
   824  0E21                     	;# 
   825  0E22                     	;# 
   826  0E23                     	;# 
   827  0E24                     	;# 
   828  0E25                     	;# 
   829  0E26                     	;# 
   830  0E27                     	;# 
   831  0E28                     	;# 
   832  0E29                     	;# 
   833  0E2A                     	;# 
   834  0E2B                     	;# 
   835  0E2C                     	;# 
   836  0E2D                     	;# 
   837  0E2E                     	;# 
   838  0E90                     	;# 
   839  0E91                     	;# 
   840  0E92                     	;# 
   841  0E94                     	;# 
   842  0E95                     	;# 
   843  0E9C                     	;# 
   844  0E9D                     	;# 
   845  0E9E                     	;# 
   846  0E9F                     	;# 
   847  0EA0                     	;# 
   848  0EA1                     	;# 
   849  0EA2                     	;# 
   850  0EA3                     	;# 
   851  0EA4                     	;# 
   852  0EA5                     	;# 
   853  0EA6                     	;# 
   854  0EA7                     	;# 
   855  0F0F                     	;# 
   856  0F10                     	;# 
   857  0F11                     	;# 
   858  0F12                     	;# 
   859  0F13                     	;# 
   860  0F14                     	;# 
   861  0F15                     	;# 
   862  0F16                     	;# 
   863  0F17                     	;# 
   864  0F18                     	;# 
   865  0F19                     	;# 
   866  0F1A                     	;# 
   867  0F1B                     	;# 
   868  0F1C                     	;# 
   869  0F1D                     	;# 
   870  0F1E                     	;# 
   871  0F1F                     	;# 
   872  0F20                     	;# 
   873  0F21                     	;# 
   874  0F22                     	;# 
   875  0F23                     	;# 
   876  0F24                     	;# 
   877  0F25                     	;# 
   878  0F26                     	;# 
   879  0F27                     	;# 
   880  0F28                     	;# 
   881  0F29                     	;# 
   882  0F2A                     	;# 
   883  0F2B                     	;# 
   884  0F2C                     	;# 
   885  0F2D                     	;# 
   886  0F2E                     	;# 
   887  0F2F                     	;# 
   888  0F30                     	;# 
   889  0F31                     	;# 
   890  0F32                     	;# 
   891  0F33                     	;# 
   892  0F34                     	;# 
   893  0F35                     	;# 
   894  0F36                     	;# 
   895  0F37                     	;# 
   896  0FE4                     	;# 
   897  0FE5                     	;# 
   898  0FE6                     	;# 
   899  0FE7                     	;# 
   900  0FE8                     	;# 
   901  0FE9                     	;# 
   902  0FEA                     	;# 
   903  0FEB                     	;# 
   904  0FED                     	;# 
   905  0FEE                     	;# 
   906  0FEF                     	;# 
   907  0000                     	;# 
   908  0001                     	;# 
   909  0002                     	;# 
   910  0003                     	;# 
   911  0004                     	;# 
   912  0005                     	;# 
   913  0006                     	;# 
   914  0007                     	;# 
   915  0008                     	;# 
   916  0009                     	;# 
   917  000A                     	;# 
   918  000B                     	;# 
   919  000C                     	;# 
   920  000D                     	;# 
   921  000E                     	;# 
   922  0010                     	;# 
   923  0011                     	;# 
   924  0012                     	;# 
   925  0013                     	;# 
   926  0014                     	;# 
   927  0015                     	;# 
   928  0016                     	;# 
   929  0016                     	;# 
   930  0017                     	;# 
   931  0018                     	;# 
   932  0019                     	;# 
   933  001A                     	;# 
   934  001A                     	;# 
   935  001B                     	;# 
   936  001B                     	;# 
   937  001C                     	;# 
   938  001D                     	;# 
   939  001E                     	;# 
   940  001F                     	;# 
   941  008C                     	;# 
   942  008D                     	;# 
   943  008E                     	;# 
   944  0090                     	;# 
   945  0091                     	;# 
   946  0092                     	;# 
   947  0093                     	;# 
   948  0094                     	;# 
   949  0095                     	;# 
   950  0096                     	;# 
   951  0098                     	;# 
   952  0099                     	;# 
   953  009A                     	;# 
   954  009B                     	;# 
   955  009B                     	;# 
   956  009C                     	;# 
   957  009D                     	;# 
   958  009E                     	;# 
   959  009F                     	;# 
   960  010C                     	;# 
   961  010D                     	;# 
   962  010E                     	;# 
   963  0111                     	;# 
   964  0112                     	;# 
   965  0113                     	;# 
   966  0114                     	;# 
   967  0115                     	;# 
   968  0116                     	;# 
   969  0117                     	;# 
   970  0118                     	;# 
   971  0119                     	;# 
   972  011C                     	;# 
   973  018C                     	;# 
   974  018D                     	;# 
   975  018E                     	;# 
   976  0191                     	;# 
   977  0191                     	;# 
   978  0192                     	;# 
   979  0193                     	;# 
   980  0193                     	;# 
   981  0194                     	;# 
   982  0195                     	;# 
   983  0196                     	;# 
   984  0197                     	;# 
   985  0199                     	;# 
   986  0199                     	;# 
   987  0199                     	;# 
   988  019A                     	;# 
   989  019A                     	;# 
   990  019A                     	;# 
   991  019B                     	;# 
   992  019B                     	;# 
   993  019B                     	;# 
   994  019B                     	;# 
   995  019B                     	;# 
   996  019C                     	;# 
   997  019C                     	;# 
   998  019C                     	;# 
   999  019D                     	;# 
  1000  019D                     	;# 
  1001  019D                     	;# 
  1002  019E                     	;# 
  1003  019E                     	;# 
  1004  019E                     	;# 
  1005  019F                     	;# 
  1006  019F                     	;# 
  1007  019F                     	;# 
  1008  019F                     	;# 
  1009  019F                     	;# 
  1010  020C                     	;# 
  1011  020D                     	;# 
  1012  020E                     	;# 
  1013  0211                     	;# 
  1014  0211                     	;# 
  1015  0212                     	;# 
  1016  0212                     	;# 
  1017  0213                     	;# 
  1018  0213                     	;# 
  1019  0214                     	;# 
  1020  0214                     	;# 
  1021  0215                     	;# 
  1022  0215                     	;# 
  1023  0215                     	;# 
  1024  0215                     	;# 
  1025  0216                     	;# 
  1026  0216                     	;# 
  1027  0217                     	;# 
  1028  0217                     	;# 
  1029  028C                     	;# 
  1030  028D                     	;# 
  1031  028E                     	;# 
  1032  0291                     	;# 
  1033  0291                     	;# 
  1034  0292                     	;# 
  1035  0293                     	;# 
  1036  0294                     	;# 
  1037  0298                     	;# 
  1038  0298                     	;# 
  1039  0299                     	;# 
  1040  029A                     	;# 
  1041  029B                     	;# 
  1042  029E                     	;# 
  1043  030C                     	;# 
  1044  030D                     	;# 
  1045  030E                     	;# 
  1046  038C                     	;# 
  1047  038D                     	;# 
  1048  038E                     	;# 
  1049  0391                     	;# 
  1050  0392                     	;# 
  1051  0393                     	;# 
  1052  0394                     	;# 
  1053  0395                     	;# 
  1054  0396                     	;# 
  1055  0397                     	;# 
  1056  0398                     	;# 
  1057  0399                     	;# 
  1058  040E                     	;# 
  1059  0413                     	;# 
  1060  0413                     	;# 
  1061  0414                     	;# 
  1062  0414                     	;# 
  1063  0415                     	;# 
  1064  0416                     	;# 
  1065  0417                     	;# 
  1066  0418                     	;# 
  1067  041A                     	;# 
  1068  041A                     	;# 
  1069  041B                     	;# 
  1070  041B                     	;# 
  1071  041C                     	;# 
  1072  041D                     	;# 
  1073  041E                     	;# 
  1074  041F                     	;# 
  1075  0493                     	;# 
  1076  0494                     	;# 
  1077  0495                     	;# 
  1078  0496                     	;# 
  1079  049A                     	;# 
  1080  049B                     	;# 
  1081  049C                     	;# 
  1082  049D                     	;# 
  1083  058C                     	;# 
  1084  058C                     	;# 
  1085  058D                     	;# 
  1086  058E                     	;# 
  1087  058E                     	;# 
  1088  058F                     	;# 
  1089  0590                     	;# 
  1090  0590                     	;# 
  1091  0591                     	;# 
  1092  0592                     	;# 
  1093  0592                     	;# 
  1094  0593                     	;# 
  1095  0594                     	;# 
  1096  0594                     	;# 
  1097  0595                     	;# 
  1098  0596                     	;# 
  1099  0596                     	;# 
  1100  0597                     	;# 
  1101  0598                     	;# 
  1102  0599                     	;# 
  1103  059A                     	;# 
  1104  059B                     	;# 
  1105  059B                     	;# 
  1106  059C                     	;# 
  1107  059D                     	;# 
  1108  060C                     	;# 
  1109  060C                     	;# 
  1110  060D                     	;# 
  1111  060E                     	;# 
  1112  060F                     	;# 
  1113  060F                     	;# 
  1114  0610                     	;# 
  1115  0611                     	;# 
  1116  0612                     	;# 
  1117  0613                     	;# 
  1118  0614                     	;# 
  1119  0617                     	;# 
  1120  0618                     	;# 
  1121  0619                     	;# 
  1122  061A                     	;# 
  1123  061B                     	;# 
  1124  061C                     	;# 
  1125  0691                     	;# 
  1126  0692                     	;# 
  1127  0693                     	;# 
  1128  0694                     	;# 
  1129  0695                     	;# 
  1130  0696                     	;# 
  1131  0697                     	;# 
  1132  0699                     	;# 
  1133  069A                     	;# 
  1134  0711                     	;# 
  1135  0712                     	;# 
  1136  0713                     	;# 
  1137  0714                     	;# 
  1138  0715                     	;# 
  1139  0718                     	;# 
  1140  0718                     	;# 
  1141  0719                     	;# 
  1142  071A                     	;# 
  1143  071A                     	;# 
  1144  071B                     	;# 
  1145  071C                     	;# 
  1146  071D                     	;# 
  1147  0791                     	;# 
  1148  0791                     	;# 
  1149  0792                     	;# 
  1150  0793                     	;# 
  1151  0793                     	;# 
  1152  0794                     	;# 
  1153  0795                     	;# 
  1154  0795                     	;# 
  1155  0796                     	;# 
  1156  0797                     	;# 
  1157  0797                     	;# 
  1158  0798                     	;# 
  1159  0799                     	;# 
  1160  079A                     	;# 
  1161  080C                     	;# 
  1162  080C                     	;# 
  1163  080D                     	;# 
  1164  080E                     	;# 
  1165  080E                     	;# 
  1166  080F                     	;# 
  1167  0810                     	;# 
  1168  0810                     	;# 
  1169  0811                     	;# 
  1170  0812                     	;# 
  1171  0812                     	;# 
  1172  0813                     	;# 
  1173  0814                     	;# 
  1174  0815                     	;# 
  1175  0816                     	;# 
  1176  0817                     	;# 
  1177  0818                     	;# 
  1178  0819                     	;# 
  1179  081A                     	;# 
  1180  081A                     	;# 
  1181  081B                     	;# 
  1182  081C                     	;# 
  1183  081C                     	;# 
  1184  081D                     	;# 
  1185  088C                     	;# 
  1186  088D                     	;# 
  1187  088E                     	;# 
  1188  088F                     	;# 
  1189  088F                     	;# 
  1190  0890                     	;# 
  1191  0891                     	;# 
  1192  0892                     	;# 
  1193  0893                     	;# 
  1194  0893                     	;# 
  1195  0894                     	;# 
  1196  0895                     	;# 
  1197  0896                     	;# 
  1198  0897                     	;# 
  1199  0897                     	;# 
  1200  0898                     	;# 
  1201  0899                     	;# 
  1202  0D8C                     	;# 
  1203  0D8C                     	;# 
  1204  0D8D                     	;# 
  1205  0D8E                     	;# 
  1206  0D8F                     	;# 
  1207  0D8F                     	;# 
  1208  0D90                     	;# 
  1209  0D91                     	;# 
  1210  0D92                     	;# 
  1211  0D92                     	;# 
  1212  0D93                     	;# 
  1213  0D94                     	;# 
  1214  0D95                     	;# 
  1215  0D95                     	;# 
  1216  0D96                     	;# 
  1217  0D97                     	;# 
  1218  0D98                     	;# 
  1219  0D99                     	;# 
  1220  0D9A                     	;# 
  1221  0D9B                     	;# 
  1222  0D9C                     	;# 
  1223  0D9D                     	;# 
  1224  0D9E                     	;# 
  1225  0D9E                     	;# 
  1226  0D9F                     	;# 
  1227  0DA0                     	;# 
  1228  0DA1                     	;# 
  1229  0DA1                     	;# 
  1230  0DA2                     	;# 
  1231  0DA3                     	;# 
  1232  0DA4                     	;# 
  1233  0DA4                     	;# 
  1234  0DA5                     	;# 
  1235  0DA6                     	;# 
  1236  0DA7                     	;# 
  1237  0DA7                     	;# 
  1238  0DA8                     	;# 
  1239  0DA9                     	;# 
  1240  0DAA                     	;# 
  1241  0DAB                     	;# 
  1242  0DAC                     	;# 
  1243  0DAD                     	;# 
  1244  0DAE                     	;# 
  1245  0DAF                     	;# 
  1246  0E0F                     	;# 
  1247  0E10                     	;# 
  1248  0E11                     	;# 
  1249  0E12                     	;# 
  1250  0E13                     	;# 
  1251  0E14                     	;# 
  1252  0E15                     	;# 
  1253  0E16                     	;# 
  1254  0E17                     	;# 
  1255  0E18                     	;# 
  1256  0E19                     	;# 
  1257  0E1A                     	;# 
  1258  0E1B                     	;# 
  1259  0E1C                     	;# 
  1260  0E1D                     	;# 
  1261  0E1E                     	;# 
  1262  0E1F                     	;# 
  1263  0E20                     	;# 
  1264  0E21                     	;# 
  1265  0E22                     	;# 
  1266  0E23                     	;# 
  1267  0E24                     	;# 
  1268  0E25                     	;# 
  1269  0E26                     	;# 
  1270  0E27                     	;# 
  1271  0E28                     	;# 
  1272  0E29                     	;# 
  1273  0E2A                     	;# 
  1274  0E2B                     	;# 
  1275  0E2C                     	;# 
  1276  0E2D                     	;# 
  1277  0E2E                     	;# 
  1278  0E90                     	;# 
  1279  0E91                     	;# 
  1280  0E92                     	;# 
  1281  0E94                     	;# 
  1282  0E95                     	;# 
  1283  0E9C                     	;# 
  1284  0E9D                     	;# 
  1285  0E9E                     	;# 
  1286  0E9F                     	;# 
  1287  0EA0                     	;# 
  1288  0EA1                     	;# 
  1289  0EA2                     	;# 
  1290  0EA3                     	;# 
  1291  0EA4                     	;# 
  1292  0EA5                     	;# 
  1293  0EA6                     	;# 
  1294  0EA7                     	;# 
  1295  0F0F                     	;# 
  1296  0F10                     	;# 
  1297  0F11                     	;# 
  1298  0F12                     	;# 
  1299  0F13                     	;# 
  1300  0F14                     	;# 
  1301  0F15                     	;# 
  1302  0F16                     	;# 
  1303  0F17                     	;# 
  1304  0F18                     	;# 
  1305  0F19                     	;# 
  1306  0F1A                     	;# 
  1307  0F1B                     	;# 
  1308  0F1C                     	;# 
  1309  0F1D                     	;# 
  1310  0F1E                     	;# 
  1311  0F1F                     	;# 
  1312  0F20                     	;# 
  1313  0F21                     	;# 
  1314  0F22                     	;# 
  1315  0F23                     	;# 
  1316  0F24                     	;# 
  1317  0F25                     	;# 
  1318  0F26                     	;# 
  1319  0F27                     	;# 
  1320  0F28                     	;# 
  1321  0F29                     	;# 
  1322  0F2A                     	;# 
  1323  0F2B                     	;# 
  1324  0F2C                     	;# 
  1325  0F2D                     	;# 
  1326  0F2E                     	;# 
  1327  0F2F                     	;# 
  1328  0F30                     	;# 
  1329  0F31                     	;# 
  1330  0F32                     	;# 
  1331  0F33                     	;# 
  1332  0F34                     	;# 
  1333  0F35                     	;# 
  1334  0F36                     	;# 
  1335  0F37                     	;# 
  1336  0FE4                     	;# 
  1337  0FE5                     	;# 
  1338  0FE6                     	;# 
  1339  0FE7                     	;# 
  1340  0FE8                     	;# 
  1341  0FE9                     	;# 
  1342  0FEA                     	;# 
  1343  0FEB                     	;# 
  1344  0FED                     	;# 
  1345  0FEE                     	;# 
  1346  0FEF                     	;# 
  1347  0000                     	;# 
  1348  0001                     	;# 
  1349  0002                     	;# 
  1350  0003                     	;# 
  1351  0004                     	;# 
  1352  0005                     	;# 
  1353  0006                     	;# 
  1354  0007                     	;# 
  1355  0008                     	;# 
  1356  0009                     	;# 
  1357  000A                     	;# 
  1358  000B                     	;# 
  1359  000C                     	;# 
  1360  000D                     	;# 
  1361  000E                     	;# 
  1362  0010                     	;# 
  1363  0011                     	;# 
  1364  0012                     	;# 
  1365  0013                     	;# 
  1366  0014                     	;# 
  1367  0015                     	;# 
  1368  0016                     	;# 
  1369  0016                     	;# 
  1370  0017                     	;# 
  1371  0018                     	;# 
  1372  0019                     	;# 
  1373  001A                     	;# 
  1374  001A                     	;# 
  1375  001B                     	;# 
  1376  001B                     	;# 
  1377  001C                     	;# 
  1378  001D                     	;# 
  1379  001E                     	;# 
  1380  001F                     	;# 
  1381  008C                     	;# 
  1382  008D                     	;# 
  1383  008E                     	;# 
  1384  0090                     	;# 
  1385  0091                     	;# 
  1386  0092                     	;# 
  1387  0093                     	;# 
  1388  0094                     	;# 
  1389  0095                     	;# 
  1390  0096                     	;# 
  1391  0098                     	;# 
  1392  0099                     	;# 
  1393  009A                     	;# 
  1394  009B                     	;# 
  1395  009B                     	;# 
  1396  009C                     	;# 
  1397  009D                     	;# 
  1398  009E                     	;# 
  1399  009F                     	;# 
  1400  010C                     	;# 
  1401  010D                     	;# 
  1402  010E                     	;# 
  1403  0111                     	;# 
  1404  0112                     	;# 
  1405  0113                     	;# 
  1406  0114                     	;# 
  1407  0115                     	;# 
  1408  0116                     	;# 
  1409  0117                     	;# 
  1410  0118                     	;# 
  1411  0119                     	;# 
  1412  011C                     	;# 
  1413  018C                     	;# 
  1414  018D                     	;# 
  1415  018E                     	;# 
  1416  0191                     	;# 
  1417  0191                     	;# 
  1418  0192                     	;# 
  1419  0193                     	;# 
  1420  0193                     	;# 
  1421  0194                     	;# 
  1422  0195                     	;# 
  1423  0196                     	;# 
  1424  0197                     	;# 
  1425  0199                     	;# 
  1426  0199                     	;# 
  1427  0199                     	;# 
  1428  019A                     	;# 
  1429  019A                     	;# 
  1430  019A                     	;# 
  1431  019B                     	;# 
  1432  019B                     	;# 
  1433  019B                     	;# 
  1434  019B                     	;# 
  1435  019B                     	;# 
  1436  019C                     	;# 
  1437  019C                     	;# 
  1438  019C                     	;# 
  1439  019D                     	;# 
  1440  019D                     	;# 
  1441  019D                     	;# 
  1442  019E                     	;# 
  1443  019E                     	;# 
  1444  019E                     	;# 
  1445  019F                     	;# 
  1446  019F                     	;# 
  1447  019F                     	;# 
  1448  019F                     	;# 
  1449  019F                     	;# 
  1450  020C                     	;# 
  1451  020D                     	;# 
  1452  020E                     	;# 
  1453  0211                     	;# 
  1454  0211                     	;# 
  1455  0212                     	;# 
  1456  0212                     	;# 
  1457  0213                     	;# 
  1458  0213                     	;# 
  1459  0214                     	;# 
  1460  0214                     	;# 
  1461  0215                     	;# 
  1462  0215                     	;# 
  1463  0215                     	;# 
  1464  0215                     	;# 
  1465  0216                     	;# 
  1466  0216                     	;# 
  1467  0217                     	;# 
  1468  0217                     	;# 
  1469  028C                     	;# 
  1470  028D                     	;# 
  1471  028E                     	;# 
  1472  0291                     	;# 
  1473  0291                     	;# 
  1474  0292                     	;# 
  1475  0293                     	;# 
  1476  0294                     	;# 
  1477  0298                     	;# 
  1478  0298                     	;# 
  1479  0299                     	;# 
  1480  029A                     	;# 
  1481  029B                     	;# 
  1482  029E                     	;# 
  1483  030C                     	;# 
  1484  030D                     	;# 
  1485  030E                     	;# 
  1486  038C                     	;# 
  1487  038D                     	;# 
  1488  038E                     	;# 
  1489  0391                     	;# 
  1490  0392                     	;# 
  1491  0393                     	;# 
  1492  0394                     	;# 
  1493  0395                     	;# 
  1494  0396                     	;# 
  1495  0397                     	;# 
  1496  0398                     	;# 
  1497  0399                     	;# 
  1498  040E                     	;# 
  1499  0413                     	;# 
  1500  0413                     	;# 
  1501  0414                     	;# 
  1502  0414                     	;# 
  1503  0415                     	;# 
  1504  0416                     	;# 
  1505  0417                     	;# 
  1506  0418                     	;# 
  1507  041A                     	;# 
  1508  041A                     	;# 
  1509  041B                     	;# 
  1510  041B                     	;# 
  1511  041C                     	;# 
  1512  041D                     	;# 
  1513  041E                     	;# 
  1514  041F                     	;# 
  1515  0493                     	;# 
  1516  0494                     	;# 
  1517  0495                     	;# 
  1518  0496                     	;# 
  1519  049A                     	;# 
  1520  049B                     	;# 
  1521  049C                     	;# 
  1522  049D                     	;# 
  1523  058C                     	;# 
  1524  058C                     	;# 
  1525  058D                     	;# 
  1526  058E                     	;# 
  1527  058E                     	;# 
  1528  058F                     	;# 
  1529  0590                     	;# 
  1530  0590                     	;# 
  1531  0591                     	;# 
  1532  0592                     	;# 
  1533  0592                     	;# 
  1534  0593                     	;# 
  1535  0594                     	;# 
  1536  0594                     	;# 
  1537  0595                     	;# 
  1538  0596                     	;# 
  1539  0596                     	;# 
  1540  0597                     	;# 
  1541  0598                     	;# 
  1542  0599                     	;# 
  1543  059A                     	;# 
  1544  059B                     	;# 
  1545  059B                     	;# 
  1546  059C                     	;# 
  1547  059D                     	;# 
  1548  060C                     	;# 
  1549  060C                     	;# 
  1550  060D                     	;# 
  1551  060E                     	;# 
  1552  060F                     	;# 
  1553  060F                     	;# 
  1554  0610                     	;# 
  1555  0611                     	;# 
  1556  0612                     	;# 
  1557  0613                     	;# 
  1558  0614                     	;# 
  1559  0617                     	;# 
  1560  0618                     	;# 
  1561  0619                     	;# 
  1562  061A                     	;# 
  1563  061B                     	;# 
  1564  061C                     	;# 
  1565  0691                     	;# 
  1566  0692                     	;# 
  1567  0693                     	;# 
  1568  0694                     	;# 
  1569  0695                     	;# 
  1570  0696                     	;# 
  1571  0697                     	;# 
  1572  0699                     	;# 
  1573  069A                     	;# 
  1574  0711                     	;# 
  1575  0712                     	;# 
  1576  0713                     	;# 
  1577  0714                     	;# 
  1578  0715                     	;# 
  1579  0718                     	;# 
  1580  0718                     	;# 
  1581  0719                     	;# 
  1582  071A                     	;# 
  1583  071A                     	;# 
  1584  071B                     	;# 
  1585  071C                     	;# 
  1586  071D                     	;# 
  1587  0791                     	;# 
  1588  0791                     	;# 
  1589  0792                     	;# 
  1590  0793                     	;# 
  1591  0793                     	;# 
  1592  0794                     	;# 
  1593  0795                     	;# 
  1594  0795                     	;# 
  1595  0796                     	;# 
  1596  0797                     	;# 
  1597  0797                     	;# 
  1598  0798                     	;# 
  1599  0799                     	;# 
  1600  079A                     	;# 
  1601  080C                     	;# 
  1602  080C                     	;# 
  1603  080D                     	;# 
  1604  080E                     	;# 
  1605  080E                     	;# 
  1606  080F                     	;# 
  1607  0810                     	;# 
  1608  0810                     	;# 
  1609  0811                     	;# 
  1610  0812                     	;# 
  1611  0812                     	;# 
  1612  0813                     	;# 
  1613  0814                     	;# 
  1614  0815                     	;# 
  1615  0816                     	;# 
  1616  0817                     	;# 
  1617  0818                     	;# 
  1618  0819                     	;# 
  1619  081A                     	;# 
  1620  081A                     	;# 
  1621  081B                     	;# 
  1622  081C                     	;# 
  1623  081C                     	;# 
  1624  081D                     	;# 
  1625  088C                     	;# 
  1626  088D                     	;# 
  1627  088E                     	;# 
  1628  088F                     	;# 
  1629  088F                     	;# 
  1630  0890                     	;# 
  1631  0891                     	;# 
  1632  0892                     	;# 
  1633  0893                     	;# 
  1634  0893                     	;# 
  1635  0894                     	;# 
  1636  0895                     	;# 
  1637  0896                     	;# 
  1638  0897                     	;# 
  1639  0897                     	;# 
  1640  0898                     	;# 
  1641  0899                     	;# 
  1642  0D8C                     	;# 
  1643  0D8C                     	;# 
  1644  0D8D                     	;# 
  1645  0D8E                     	;# 
  1646  0D8F                     	;# 
  1647  0D8F                     	;# 
  1648  0D90                     	;# 
  1649  0D91                     	;# 
  1650  0D92                     	;# 
  1651  0D92                     	;# 
  1652  0D93                     	;# 
  1653  0D94                     	;# 
  1654  0D95                     	;# 
  1655  0D95                     	;# 
  1656  0D96                     	;# 
  1657  0D97                     	;# 
  1658  0D98                     	;# 
  1659  0D99                     	;# 
  1660  0D9A                     	;# 
  1661  0D9B                     	;# 
  1662  0D9C                     	;# 
  1663  0D9D                     	;# 
  1664  0D9E                     	;# 
  1665  0D9E                     	;# 
  1666  0D9F                     	;# 
  1667  0DA0                     	;# 
  1668  0DA1                     	;# 
  1669  0DA1                     	;# 
  1670  0DA2                     	;# 
  1671  0DA3                     	;# 
  1672  0DA4                     	;# 
  1673  0DA4                     	;# 
  1674  0DA5                     	;# 
  1675  0DA6                     	;# 
  1676  0DA7                     	;# 
  1677  0DA7                     	;# 
  1678  0DA8                     	;# 
  1679  0DA9                     	;# 
  1680  0DAA                     	;# 
  1681  0DAB                     	;# 
  1682  0DAC                     	;# 
  1683  0DAD                     	;# 
  1684  0DAE                     	;# 
  1685  0DAF                     	;# 
  1686  0E0F                     	;# 
  1687  0E10                     	;# 
  1688  0E11                     	;# 
  1689  0E12                     	;# 
  1690  0E13                     	;# 
  1691  0E14                     	;# 
  1692  0E15                     	;# 
  1693  0E16                     	;# 
  1694  0E17                     	;# 
  1695  0E18                     	;# 
  1696  0E19                     	;# 
  1697  0E1A                     	;# 
  1698  0E1B                     	;# 
  1699  0E1C                     	;# 
  1700  0E1D                     	;# 
  1701  0E1E                     	;# 
  1702  0E1F                     	;# 
  1703  0E20                     	;# 
  1704  0E21                     	;# 
  1705  0E22                     	;# 
  1706  0E23                     	;# 
  1707  0E24                     	;# 
  1708  0E25                     	;# 
  1709  0E26                     	;# 
  1710  0E27                     	;# 
  1711  0E28                     	;# 
  1712  0E29                     	;# 
  1713  0E2A                     	;# 
  1714  0E2B                     	;# 
  1715  0E2C                     	;# 
  1716  0E2D                     	;# 
  1717  0E2E                     	;# 
  1718  0E90                     	;# 
  1719  0E91                     	;# 
  1720  0E92                     	;# 
  1721  0E94                     	;# 
  1722  0E95                     	;# 
  1723  0E9C                     	;# 
  1724  0E9D                     	;# 
  1725  0E9E                     	;# 
  1726  0E9F                     	;# 
  1727  0EA0                     	;# 
  1728  0EA1                     	;# 
  1729  0EA2                     	;# 
  1730  0EA3                     	;# 
  1731  0EA4                     	;# 
  1732  0EA5                     	;# 
  1733  0EA6                     	;# 
  1734  0EA7                     	;# 
  1735  0F0F                     	;# 
  1736  0F10                     	;# 
  1737  0F11                     	;# 
  1738  0F12                     	;# 
  1739  0F13                     	;# 
  1740  0F14                     	;# 
  1741  0F15                     	;# 
  1742  0F16                     	;# 
  1743  0F17                     	;# 
  1744  0F18                     	;# 
  1745  0F19                     	;# 
  1746  0F1A                     	;# 
  1747  0F1B                     	;# 
  1748  0F1C                     	;# 
  1749  0F1D                     	;# 
  1750  0F1E                     	;# 
  1751  0F1F                     	;# 
  1752  0F20                     	;# 
  1753  0F21                     	;# 
  1754  0F22                     	;# 
  1755  0F23                     	;# 
  1756  0F24                     	;# 
  1757  0F25                     	;# 
  1758  0F26                     	;# 
  1759  0F27                     	;# 
  1760  0F28                     	;# 
  1761  0F29                     	;# 
  1762  0F2A                     	;# 
  1763  0F2B                     	;# 
  1764  0F2C                     	;# 
  1765  0F2D                     	;# 
  1766  0F2E                     	;# 
  1767  0F2F                     	;# 
  1768  0F30                     	;# 
  1769  0F31                     	;# 
  1770  0F32                     	;# 
  1771  0F33                     	;# 
  1772  0F34                     	;# 
  1773  0F35                     	;# 
  1774  0F36                     	;# 
  1775  0F37                     	;# 
  1776  0FE4                     	;# 
  1777  0FE5                     	;# 
  1778  0FE6                     	;# 
  1779  0FE7                     	;# 
  1780  0FE8                     	;# 
  1781  0FE9                     	;# 
  1782  0FEA                     	;# 
  1783  0FEB                     	;# 
  1784  0FED                     	;# 
  1785  0FEE                     	;# 
  1786  0FEF                     	;# 
  1787                           
  1788                           	psect	stringtext
  1789  0800                     __pstringtext:	
  1790  0800                     _ACTIVEBAND:	
  1791  0800  3400               	retlw	0
  1792  0801  3400               	retlw	0
  1793  0802  3400               	retlw	0
  1794  0803  3400               	retlw	0
  1795  0804  3400               	retlw	0
  1796  0805  3401               	retlw	1
  1797  0806  3400               	retlw	0
  1798  0807  3400               	retlw	0
  1799  0808  3401               	retlw	1
  1800  0809  3400               	retlw	0
  1801  080A  3400               	retlw	0
  1802  080B  3400               	retlw	0
  1803  080C  3401               	retlw	1
  1804  080D  3401               	retlw	1
  1805  080E  3400               	retlw	0
  1806  080F  3400               	retlw	0
  1807  0810  3400               	retlw	0
  1808  0811  3400               	retlw	0
  1809  0812  3400               	retlw	0
  1810  0813  3400               	retlw	0
  1811  0814  3401               	retlw	1
  1812  0815  3400               	retlw	0
  1813  0816  3400               	retlw	0
  1814  0817  3400               	retlw	0
  1815  0818  3400               	retlw	0
  1816  0819  3400               	retlw	0
  1817  081A  3401               	retlw	1
  1818  081B  3400               	retlw	0
  1819  081C  3400               	retlw	0
  1820  081D  3401               	retlw	1
  1821  081E  3400               	retlw	0
  1822  081F  3400               	retlw	0
  1823  0820  3400               	retlw	0
  1824  0821  3400               	retlw	0
  1825  0822  3400               	retlw	0
  1826  0823  3400               	retlw	0
  1827  0824  3400               	retlw	0
  1828  0825  3400               	retlw	0
  1829  0826  3400               	retlw	0
  1830  0827  3400               	retlw	0
  1831  0828  3400               	retlw	0
  1832  0829  3400               	retlw	0
  1833  082A  3400               	retlw	0
  1834  082B  3400               	retlw	0
  1835  082C  3400               	retlw	0
  1836  082D  3400               	retlw	0
  1837  082E  3400               	retlw	0
  1838  082F  3400               	retlw	0
  1839  0830  3400               	retlw	0
  1840  0831  3400               	retlw	0
  1841  0832  3400               	retlw	0
  1842  0833  3400               	retlw	0
  1843  0834  3400               	retlw	0
  1844  0835  3400               	retlw	0
  1845  0836  3400               	retlw	0
  1846  0837  3400               	retlw	0
  1847  0838  3400               	retlw	0
  1848  0839  3400               	retlw	0
  1849  083A  3400               	retlw	0
  1850  083B  3400               	retlw	0
  1851  083C  3400               	retlw	0
  1852  083D  3400               	retlw	0
  1853  083E  3400               	retlw	0
  1854  083F  3400               	retlw	0
  1855  0840                     __end_of_ACTIVEBAND:	
  1856  0840                     _VALUE:	
  1857  0840  3400               	retlw	0
  1858  0841  3480               	retlw	128
  1859  0842  3440               	retlw	64
  1860  0843  3420               	retlw	32
  1861  0844  3410               	retlw	16
  1862  0845  3408               	retlw	8
  1863  0846  3404               	retlw	4
  1864  0847  3402               	retlw	2
  1865  0848  3400               	retlw	0
  1866  0849                     __end_of_VALUE:	
  1867  0849                     _PARITY:	
  1868  0849  3401               	retlw	1
  1869  084A  3400               	retlw	0
  1870  084B  3400               	retlw	0
  1871  084C  3400               	retlw	0
  1872  084D  3400               	retlw	0
  1873  084E  3400               	retlw	0
  1874  084F  3400               	retlw	0
  1875  0850  3400               	retlw	0
  1876  0851                     __end_of_PARITY:	
  1877  0851                     _DACLEVEL:	
  1878  0851  342B               	retlw	43
  1879  0852  3447               	retlw	71
  1880  0853  3455               	retlw	85
  1881  0854  3464               	retlw	100
  1882  0855                     __end_of_DACLEVEL:	
  1883  0855                     _COMMANDPARITY:	
  1884  0855  3400               	retlw	0
  1885  0856  3401               	retlw	1
  1886  0857                     __end_of_COMMANDPARITY:	
  1887  0857                     _SLAVEADDRESS:	
  1888  0857  340E               	retlw	14
  1889  0858  3406               	retlw	6
  1890  0859                     __end_of_SLAVEADDRESS:	
  1891                           
  1892                           	psect	nvBANK0
  1893  002E                     __pnvBANK0:	
  1894  002E                     _Byte1:	
  1895  002E                     	ds	1
  1896  000E                     _PORTC	set	14
  1897  005F                     _GIE	set	95
  1898  0095                     _OPTION_REGbits	set	149
  1899  0099                     _OSCCON	set	153
  1900  009A                     _OSCSTAT	set	154
  1901  0098                     _OSCTUNE	set	152
  1902  0096                     _PCONbits	set	150
  1903  008C                     _TRISA	set	140
  1904  008D                     _TRISB	set	141
  1905  008E                     _TRISC	set	142
  1906  0118                     _DAC1CON0	set	280
  1907  0119                     _DAC1CON1	set	281
  1908  010C                     _LATA	set	268
  1909  010D                     _LATB	set	269
  1910  010E                     _LATC	set	270
  1911  0861                     _LATA1	set	2145
  1912  0862                     _LATA2	set	2146
  1913  0864                     _LATA4	set	2148
  1914  086C                     _LATB4	set	2156
  1915  086D                     _LATB5	set	2157
  1916  086E                     _LATB6	set	2158
  1917  086F                     _LATB7	set	2159
  1918  018C                     _ANSELA	set	396
  1919  018D                     _ANSELB	set	397
  1920  018E                     _ANSELC	set	398
  1921  020D                     _WPUB	set	525
  1922  020E                     _WPUC	set	526
  1923  028C                     _ODCONA	set	652
  1924  028D                     _ODCONB	set	653
  1925  0711                     _WDTCON0	set	1809
  1926  0711                     _WDTCON0bits	set	1809
  1927  0712                     _WDTCON1	set	1810
  1928                           
  1929                           ; #config settings
  1930  0000                     
  1931                           	psect	cinit
  1932  07F1                     start_initialization:	
  1933  07F1                     __initialization:	
  1934                           
  1935                           ; Clear objects allocated to COMMON
  1936  07F1  01F9               	clrf	__pbssCOMMON& (0+127)
  1937  07F2  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
  1938  07F3  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
  1939  07F4  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
  1940  07F5  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
  1941                           
  1942                           ; Clear objects allocated to BANK0
  1943  07F6  3020               	movlw	low __pbssBANK0
  1944  07F7  0084               	movwf	4
  1945  07F8  3000               	movlw	high __pbssBANK0
  1946  07F9  0085               	movwf	5
  1947  07FA  300E               	movlw	14
  1948  07FB  3185  257F         	fcall	clear_ram0
  1949  07FD                     end_of_initialization:	
  1950                           ;End of C runtime variable initialization code
  1951                           
  1952  07FD                     __end_of__initialization:	
  1953  07FD  0020               	movlb	0
  1954  07FE  3187  2F13         	ljmp	_main	;jump to C main() function
  1955                           
  1956                           	psect	bssCOMMON
  1957  0079                     __pbssCOMMON:	
  1958  0079                     _AntSel:	
  1959  0079                     	ds	1
  1960  007A                     _BandSel:	
  1961  007A                     	ds	1
  1962  007B                     _Byte2:	
  1963  007B                     	ds	1
  1964  007C                     _CABandSel:	
  1965  007C                     	ds	1
  1966  007D                     _TrxSel:	
  1967  007D                     	ds	1
  1968                           
  1969                           	psect	bssBANK0
  1970  0020                     __pbssBANK0:	
  1971  0020                     _adcResult:	
  1972  0020                     	ds	2
  1973  0022                     _delay:	
  1974  0022                     	ds	2
  1975  0024                     _Byte3:	
  1976  0024                     	ds	1
  1977  0025                     _PwrLvl:	
  1978  0025                     	ds	1
  1979  0026                     _btnState:	
  1980  0026                     	ds	1
  1981  0027                     _counter:	
  1982  0027                     	ds	1
  1983  0028                     _counterHEF:	
  1984  0028                     	ds	1
  1985  0029                     _errorCheck:	
  1986  0029                     	ds	1
  1987  002A                     _labNumber:	
  1988  002A                     	ds	1
  1989  002B                     _labState:	
  1990  002B                     	ds	1
  1991  002C                     _rotateReg:	
  1992  002C                     	ds	1
  1993  002D                     _switchEvent:	
  1994  002D                     	ds	1
  1995                           
  1996                           	psect	clrtext
  1997  057F                     clear_ram0:	
  1998                           ;	Called with FSR0 containing the base address, and
  1999                           ;	WREG with the size to clear
  2000                           
  2001  057F  0064               	clrwdt	;clear the watchdog before getting into this loop
  2002  0580                     clrloop0:	
  2003  0580  0180               	clrf	0	;clear RAM location pointed to by FSR
  2004  0581  3101               	addfsr 0,1
  2005  0582  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2006  0583  2D80               	goto	clrloop0	;have we reached the end yet?
  2007  0584  3400               	retlw	0	;all done for this memory range, return
  2008                           
  2009                           	psect	cstackCOMMON
  2010  0070                     __pcstackCOMMON:	
  2011  0070                     ?_OSCILLATOR_Initialize:	
  2012  0070                     ??_OSCILLATOR_Initialize:	
  2013                           ; 0 bytes @ 0x0
  2014                           
  2015  0070                     ?_WWDT_Initialize:	
  2016                           ; 0 bytes @ 0x0
  2017                           
  2018  0070                     ??_WWDT_Initialize:	
  2019                           ; 0 bytes @ 0x0
  2020                           
  2021  0070                     ?_DAC1_Initialize:	
  2022                           ; 0 bytes @ 0x0
  2023                           
  2024  0070                     ??_DAC1_Initialize:	
  2025                           ; 0 bytes @ 0x0
  2026                           
  2027  0070                     ?_PIN_MANAGER_Initialize:	
  2028                           ; 0 bytes @ 0x0
  2029                           
  2030  0070                     ??_PIN_MANAGER_Initialize:	
  2031                           ; 0 bytes @ 0x0
  2032                           
  2033  0070                     ?_SYSTEM_Initialize:	
  2034                           ; 0 bytes @ 0x0
  2035                           
  2036  0070                     ??_SYSTEM_Initialize:	
  2037                           ; 0 bytes @ 0x0
  2038                           
  2039  0070                     ?_DAC1_SetOutput:	
  2040                           ; 0 bytes @ 0x0
  2041                           
  2042  0070                     ??_DAC1_SetOutput:	
  2043                           ; 0 bytes @ 0x0
  2044                           
  2045  0070                     ?_Fix_Initialize:	
  2046                           ; 0 bytes @ 0x0
  2047                           
  2048  0070                     ??_Fix_Initialize:	
  2049                           ; 0 bytes @ 0x0
  2050                           
  2051  0070                     ?_EnableLDOs:	
  2052                           ; 0 bytes @ 0x0
  2053                           
  2054  0070                     ??_EnableLDOs:	
  2055                           ; 0 bytes @ 0x0
  2056                           
  2057  0070                     ?_GenerateDACOut:	
  2058                           ; 0 bytes @ 0x0
  2059                           
  2060  0070                     ?_ConfigureShiftRegister:	
  2061                           ; 0 bytes @ 0x0
  2062                           
  2063  0070                     ??_ConfigureShiftRegister:	
  2064                           ; 0 bytes @ 0x0
  2065                           
  2066  0070                     ?_SendSlaveAddress:	
  2067                           ; 0 bytes @ 0x0
  2068                           
  2069  0070                     ??_SendSlaveAddress:	
  2070                           ; 0 bytes @ 0x0
  2071                           
  2072  0070                     ?_SendByte:	
  2073                           ; 0 bytes @ 0x0
  2074                           
  2075  0070                     ??_SendByte:	
  2076                           ; 0 bytes @ 0x0
  2077                           
  2078  0070                     ?_SendBit:	
  2079                           ; 0 bytes @ 0x0
  2080                           
  2081  0070                     ??_SendBit:	
  2082                           ; 0 bytes @ 0x0
  2083                           
  2084  0070                     ?_main:	
  2085                           ; 0 bytes @ 0x0
  2086                           
  2087  0070                     DAC1_SetOutput@inputData:	
  2088                           ; 0 bytes @ 0x0
  2089                           
  2090  0070                     SendBit@BitValue:	
  2091                           ; 1 bytes @ 0x0
  2092                           
  2093                           
  2094                           ; 1 bytes @ 0x0
  2095  0070                     	ds	1
  2096  0071                     ??_GenerateDACOut:	
  2097  0071                     ConfigureShiftRegister@i:	
  2098                           ; 0 bytes @ 0x1
  2099                           
  2100  0071                     SendSlaveAddress@Id:	
  2101                           ; 1 bytes @ 0x1
  2102                           
  2103  0071                     SendByte@ReverseValue:	
  2104                           ; 1 bytes @ 0x1
  2105                           
  2106                           
  2107                           ; 1 bytes @ 0x1
  2108  0071                     	ds	1
  2109  0072                     ConfigureShiftRegister@ReverseReg:	
  2110  0072                     SendSlaveAddress@ReverseReg:	
  2111                           ; 1 bytes @ 0x2
  2112                           
  2113  0072                     SendByte@i:	
  2114                           ; 1 bytes @ 0x2
  2115                           
  2116                           
  2117                           ; 1 bytes @ 0x2
  2118  0072                     	ds	1
  2119  0073                     SendSlaveAddress@i:	
  2120                           
  2121                           ; 1 bytes @ 0x3
  2122  0073                     	ds	1
  2123  0074                     ?_ConfigureSSC:	
  2124  0074                     ConfigureSSC@ValueId:	
  2125                           ; 0 bytes @ 0x4
  2126                           
  2127                           
  2128                           ; 1 bytes @ 0x4
  2129  0074                     	ds	1
  2130  0075                     ??_ConfigureSSC:	
  2131  0075                     ConfigureSSC@Id:	
  2132                           ; 0 bytes @ 0x5
  2133                           
  2134                           
  2135                           ; 1 bytes @ 0x5
  2136  0075                     	ds	1
  2137  0076                     ??_main:	
  2138                           
  2139                           ; 0 bytes @ 0x6
  2140  0076                     	ds	2
  2141  0078                     main@ValueId:	
  2142                           
  2143                           ; 1 bytes @ 0x8
  2144  0078                     	ds	1
  2145                           
  2146                           	psect	maintext
  2147  0713                     __pmaintext:	
  2148 ;;
  2149 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2150 ;;
  2151 ;; *************** function _main *****************
  2152 ;; Defined at:
  2153 ;;		line 261 in file "main.c"
  2154 ;; Parameters:    Size  Location     Type
  2155 ;;		None
  2156 ;; Auto vars:     Size  Location     Type
  2157 ;;  ValueId         1    8[COMMON] unsigned char 
  2158 ;; Return value:  Size  Location     Type
  2159 ;;		None               void
  2160 ;; Registers used:
  2161 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2162 ;; Tracked objects:
  2163 ;;		On entry : B1F/0
  2164 ;;		On exit  : 0/0
  2165 ;;		Unchanged: 0/0
  2166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2168 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2169 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2170 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2171 ;;Total ram usage:        3 bytes
  2172 ;; Hardware stack levels required when called:    2
  2173 ;; This function calls:
  2174 ;;		_ConfigureSSC
  2175 ;;		_ConfigureShiftRegister
  2176 ;;		_EnableLDOs
  2177 ;;		_Fix_Initialize
  2178 ;;		_GenerateDACOut
  2179 ;;		_SYSTEM_Initialize
  2180 ;; This function is called by:
  2181 ;;		Startup code after reset
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           
  2185                           
  2186                           ;psect for function _main
  2187  0713                     _main:	
  2188                           
  2189                           ;main.c: 262: uint8_t ValueId;
  2190                           ;main.c: 264: SYSTEM_Initialize();
  2191                           
  2192                           ;incstack = 0
  2193                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2194  0713  3185  258E  3187   	fcall	_SYSTEM_Initialize
  2195                           
  2196                           ;main.c: 265: Fix_Initialize();
  2197  0716  3185  2585  3187   	fcall	_Fix_Initialize
  2198  0719                     l1136:	
  2199                           ;main.c: 267: while (1){
  2200                           
  2201                           
  2202                           ;main.c: 271: Byte1 = 0;
  2203  0719  0020               	movlb	0	; select bank0
  2204  071A  01AE               	clrf	_Byte1
  2205  071B                     l1140:	
  2206                           ;main.c: 272: while ((Byte1 & 0xC0) != 0xC0) {
  2207                           
  2208  071B  30C0               	movlw	192
  2209  071C  052E               	andwf	_Byte1,w
  2210  071D  00F6               	movwf	??_main
  2211  071E  30C0               	movlw	192
  2212  071F  0676               	xorwf	??_main,w
  2213  0720  1903               	btfsc	3,2
  2214  0721  2F27               	goto	l1142
  2215                           
  2216                           ;main.c: 273: Byte1 = PORTC;
  2217  0722  080E               	movf	14,w	;volatile
  2218  0723  00F6               	movwf	??_main
  2219  0724  0876               	movf	??_main,w
  2220  0725  00AE               	movwf	_Byte1
  2221  0726  2F1B               	goto	l1140
  2222  0727                     l1142:	
  2223                           
  2224                           ;main.c: 274: }
  2225                           ;main.c: 276: Byte2 = 0;
  2226  0727  01FB               	clrf	_Byte2
  2227  0728                     l1146:	
  2228                           ;main.c: 277: while ((Byte2 & 0xC0) != 0x40) {
  2229                           
  2230  0728  30C0               	movlw	192
  2231  0729  057B               	andwf	_Byte2,w
  2232  072A  00F6               	movwf	??_main
  2233  072B  3040               	movlw	64
  2234  072C  0676               	xorwf	??_main,w
  2235  072D  1903               	btfsc	3,2
  2236  072E  2F34               	goto	l1148
  2237                           
  2238                           ;main.c: 278: Byte2 = PORTC;
  2239  072F  080E               	movf	14,w	;volatile
  2240  0730  00F6               	movwf	??_main
  2241  0731  0876               	movf	??_main,w
  2242  0732  00FB               	movwf	_Byte2
  2243  0733  2F28               	goto	l1146
  2244  0734                     l1148:	
  2245                           
  2246                           ;main.c: 279: }
  2247                           ;main.c: 281: Byte3 = 0;
  2248  0734  01A4               	clrf	_Byte3
  2249  0735                     l1152:	
  2250                           ;main.c: 282: while ((Byte3 & 0xC0) != 0x80) {
  2251                           
  2252  0735  30C0               	movlw	192
  2253  0736  0524               	andwf	_Byte3,w
  2254  0737  00F6               	movwf	??_main
  2255  0738  3080               	movlw	128
  2256  0739  0676               	xorwf	??_main,w
  2257  073A  1903               	btfsc	3,2
  2258  073B  2F41               	goto	l1154
  2259                           
  2260                           ;main.c: 283: Byte3 = PORTC;
  2261  073C  080E               	movf	14,w	;volatile
  2262  073D  00F6               	movwf	??_main
  2263  073E  0876               	movf	??_main,w
  2264  073F  00A4               	movwf	_Byte3
  2265  0740  2F35               	goto	l1152
  2266  0741                     l1154:	
  2267                           
  2268                           ;main.c: 284: }
  2269                           ;main.c: 287: AntSel = (Byte1 & 0x30) >> 4;
  2270  0741  082E               	movf	_Byte1,w
  2271  0742  00F6               	movwf	??_main
  2272  0743  3004               	movlw	4
  2273  0744                     u1055:	
  2274  0744  36F6               	lsrf	??_main,f
  2275  0745  0B89               	decfsz	9,f
  2276  0746  2F44               	goto	u1055
  2277  0747  0876               	movf	??_main,w
  2278  0748  3903               	andlw	3
  2279  0749  00F7               	movwf	??_main+1
  2280  074A  0877               	movf	??_main+1,w
  2281  074B  00F9               	movwf	_AntSel
  2282                           
  2283                           ;main.c: 288: TrxSel = (Byte1 & 0x0C) >> 2;
  2284  074C  082E               	movf	_Byte1,w
  2285  074D  00F6               	movwf	??_main
  2286  074E  3002               	movlw	2
  2287  074F                     u1065:	
  2288  074F  36F6               	lsrf	??_main,f
  2289  0750  0B89               	decfsz	9,f
  2290  0751  2F4F               	goto	u1065
  2291  0752  0876               	movf	??_main,w
  2292  0753  3903               	andlw	3
  2293  0754  00F7               	movwf	??_main+1
  2294  0755  0877               	movf	??_main+1,w
  2295  0756  00FD               	movwf	_TrxSel
  2296                           
  2297                           ;main.c: 289: PwrLvl = Byte1 & 0x03;
  2298  0757  082E               	movf	_Byte1,w
  2299  0758  3903               	andlw	3
  2300  0759  00F6               	movwf	??_main
  2301  075A  0876               	movf	??_main,w
  2302  075B  00A5               	movwf	_PwrLvl
  2303                           
  2304                           ;main.c: 290: BandSel = Byte2 & 0x3F;
  2305  075C  087B               	movf	_Byte2,w
  2306  075D  393F               	andlw	63
  2307  075E  00F6               	movwf	??_main
  2308  075F  0876               	movf	??_main,w
  2309  0760  00FA               	movwf	_BandSel
  2310                           
  2311                           ;main.c: 291: CABandSel = Byte3 & 0x3F;
  2312  0761  0824               	movf	_Byte3,w
  2313  0762  393F               	andlw	63
  2314  0763  00F6               	movwf	??_main
  2315  0764  0876               	movf	??_main,w
  2316  0765  00FC               	movwf	_CABandSel
  2317                           
  2318                           ;main.c: 294: EnableLDOs();
  2319  0766  3186  2619  3187   	fcall	_EnableLDOs
  2320                           
  2321                           ;main.c: 297: GenerateDACOut();
  2322  0769  3185  25A7  3187   	fcall	_GenerateDACOut
  2323                           
  2324                           ;main.c: 299: do { LATA1 = 1; } while(0);
  2325  076C  0022               	movlb	2	; select bank2
  2326  076D  148C               	bsf	12,1	;volatile
  2327                           
  2328                           ;main.c: 303: if (AntSel == 0 || AntSel == 2 ||
  2329                           ;main.c: 304: TrxSel == 0 || TrxSel == 3){
  2330  076E  0879               	movf	_AntSel,w
  2331  076F  1903               	btfsc	3,2
  2332  0770  2FC6               	goto	l1218
  2333  0771  3002               	movlw	2
  2334  0772  0679               	xorwf	_AntSel,w
  2335  0773  1903               	btfsc	3,2
  2336  0774  2FC6               	goto	l1218
  2337  0775  087D               	movf	_TrxSel,w
  2338  0776  1903               	btfsc	3,2
  2339  0777  2FC6               	goto	l1218
  2340  0778  3003               	movlw	3
  2341  0779  067D               	xorwf	_TrxSel,w
  2342  077A  1903               	btfsc	3,2
  2343  077B  2FC6               	goto	l1218
  2344                           
  2345                           ;main.c: 311: else if (BandSel == 5 || CABandSel == 5){
  2346                           
  2347                           ;main.c: 307: }
  2348                           
  2349                           ;main.c: 306: ValueId = 0;
  2350  077C  3005               	movlw	5
  2351  077D  067A               	xorwf	_BandSel,w
  2352  077E  1903               	btfsc	3,2
  2353  077F  2F84               	goto	l286
  2354  0780  3005               	movlw	5
  2355  0781  067C               	xorwf	_CABandSel,w
  2356  0782  1D03               	btfss	3,2
  2357  0783  2F87               	goto	l1182
  2358  0784                     l286:	
  2359                           
  2360                           ;main.c: 312: ValueId = 1;
  2361  0784  01F8               	clrf	main@ValueId
  2362  0785  0AF8               	incf	main@ValueId,f
  2363                           
  2364                           ;main.c: 313: }
  2365  0786  2FC7               	goto	l1220
  2366  0787                     l1182:	
  2367                           
  2368                           ;main.c: 314: else if (BandSel == 8 || CABandSel == 8){
  2369  0787  3008               	movlw	8
  2370  0788  067A               	xorwf	_BandSel,w
  2371  0789  1903               	btfsc	3,2
  2372  078A  2F8F               	goto	l1186
  2373  078B  3008               	movlw	8
  2374  078C  067C               	xorwf	_CABandSel,w
  2375  078D  1D03               	btfss	3,2
  2376  078E  2F91               	goto	l1188
  2377  078F                     l1186:	
  2378                           
  2379                           ;main.c: 315: ValueId = 2;
  2380  078F  3002               	movlw	2
  2381  0790  2FC2               	goto	L5
  2382  0791                     l1188:	
  2383                           ;main.c: 316: }
  2384                           
  2385                           
  2386                           ;main.c: 317: else if (BandSel == 12 || CABandSel == 12){
  2387  0791  300C               	movlw	12
  2388  0792  067A               	xorwf	_BandSel,w
  2389  0793  1903               	btfsc	3,2
  2390  0794  2F99               	goto	l1192
  2391  0795  300C               	movlw	12
  2392  0796  067C               	xorwf	_CABandSel,w
  2393  0797  1D03               	btfss	3,2
  2394  0798  2F9B               	goto	l1194
  2395  0799                     l1192:	
  2396                           
  2397                           ;main.c: 318: ValueId = 3;
  2398  0799  3003               	movlw	3
  2399  079A  2FC2               	goto	L5
  2400  079B                     l1194:	
  2401                           ;main.c: 319: }
  2402                           
  2403                           
  2404                           ;main.c: 320: else if (BandSel == 13 || CABandSel == 13){
  2405  079B  300D               	movlw	13
  2406  079C  067A               	xorwf	_BandSel,w
  2407  079D  1903               	btfsc	3,2
  2408  079E  2FA3               	goto	l1198
  2409  079F  300D               	movlw	13
  2410  07A0  067C               	xorwf	_CABandSel,w
  2411  07A1  1D03               	btfss	3,2
  2412  07A2  2FA5               	goto	l1200
  2413  07A3                     l1198:	
  2414                           
  2415                           ;main.c: 321: ValueId = 4;
  2416  07A3  3004               	movlw	4
  2417  07A4  2FC2               	goto	L5
  2418  07A5                     l1200:	
  2419                           ;main.c: 322: }
  2420                           
  2421                           
  2422                           ;main.c: 323: else if (BandSel == 20 || CABandSel == 20){
  2423  07A5  3014               	movlw	20
  2424  07A6  067A               	xorwf	_BandSel,w
  2425  07A7  1903               	btfsc	3,2
  2426  07A8  2FAD               	goto	l1204
  2427  07A9  3014               	movlw	20
  2428  07AA  067C               	xorwf	_CABandSel,w
  2429  07AB  1D03               	btfss	3,2
  2430  07AC  2FAF               	goto	l1206
  2431  07AD                     l1204:	
  2432                           
  2433                           ;main.c: 324: ValueId = 5;
  2434  07AD  3005               	movlw	5
  2435  07AE  2FC2               	goto	L5
  2436  07AF                     l1206:	
  2437                           ;main.c: 325: }
  2438                           
  2439                           
  2440                           ;main.c: 326: else if (BandSel == 26 || CABandSel == 26){
  2441  07AF  301A               	movlw	26
  2442  07B0  067A               	xorwf	_BandSel,w
  2443  07B1  1903               	btfsc	3,2
  2444  07B2  2FB7               	goto	l1210
  2445  07B3  301A               	movlw	26
  2446  07B4  067C               	xorwf	_CABandSel,w
  2447  07B5  1D03               	btfss	3,2
  2448  07B6  2FB9               	goto	l1212
  2449  07B7                     l1210:	
  2450                           
  2451                           ;main.c: 327: ValueId = 6;
  2452  07B7  3006               	movlw	6
  2453  07B8  2FC2               	goto	L5
  2454  07B9                     l1212:	
  2455                           ;main.c: 328: }
  2456                           
  2457                           
  2458                           ;main.c: 329: else if (BandSel == 29 || CABandSel == 29){
  2459  07B9  301D               	movlw	29
  2460  07BA  067A               	xorwf	_BandSel,w
  2461  07BB  1903               	btfsc	3,2
  2462  07BC  2FC1               	goto	l1216
  2463  07BD  301D               	movlw	29
  2464  07BE  067C               	xorwf	_CABandSel,w
  2465  07BF  1D03               	btfss	3,2
  2466  07C0  2FC6               	goto	l1218
  2467  07C1                     l1216:	
  2468                           
  2469                           ;main.c: 330: ValueId = 7;
  2470  07C1  3007               	movlw	7
  2471  07C2                     L5:	
  2472  07C2  00F6               	movwf	??_main
  2473  07C3  0876               	movf	??_main,w
  2474  07C4  00F8               	movwf	main@ValueId
  2475                           
  2476                           ;main.c: 331: }
  2477  07C5  2FC7               	goto	l1220
  2478  07C6                     l1218:	
  2479                           
  2480                           ;main.c: 332: else {
  2481                           ;main.c: 333: ValueId = 0;
  2482  07C6  01F8               	clrf	main@ValueId
  2483  07C7                     l1220:	
  2484                           ;main.c: 334: }
  2485                           ;main.c: 336: do { LATB5 = 1; } while(0);
  2486                           
  2487  07C7  168D               	bsf	13,5	;volatile
  2488                           
  2489                           ;main.c: 337: ConfigureSSC(0, ValueId);
  2490  07C8  0878               	movf	main@ValueId,w
  2491  07C9  00F6               	movwf	??_main
  2492  07CA  0876               	movf	??_main,w
  2493  07CB  00F4               	movwf	ConfigureSSC@ValueId
  2494  07CC  3000               	movlw	0
  2495  07CD  3186  2648  3187   	fcall	_ConfigureSSC
  2496                           
  2497                           ;main.c: 338: ConfigureSSC(1, ValueId);
  2498  07D0  0878               	movf	main@ValueId,w
  2499  07D1  00F6               	movwf	??_main
  2500  07D2  0876               	movf	??_main,w
  2501  07D3  00F4               	movwf	ConfigureSSC@ValueId
  2502  07D4  3001               	movlw	1
  2503  07D5  3186  2648  3187   	fcall	_ConfigureSSC
  2504                           
  2505                           ;main.c: 342: do { LATB5 = ~LATB5; } while(0);
  2506  07D8  3020               	movlw	32
  2507  07D9  0022               	movlb	2	; select bank2
  2508  07DA  068D               	xorwf	13,f
  2509                           
  2510                           ;main.c: 343: ConfigureSSC(0, ValueId);
  2511  07DB  0878               	movf	main@ValueId,w
  2512  07DC  00F6               	movwf	??_main
  2513  07DD  0876               	movf	??_main,w
  2514  07DE  00F4               	movwf	ConfigureSSC@ValueId
  2515  07DF  3000               	movlw	0
  2516  07E0  3186  2648  3187   	fcall	_ConfigureSSC
  2517                           
  2518                           ;main.c: 344: ConfigureSSC(1, ValueId);
  2519  07E3  0878               	movf	main@ValueId,w
  2520  07E4  00F6               	movwf	??_main
  2521  07E5  0876               	movf	??_main,w
  2522  07E6  00F4               	movwf	ConfigureSSC@ValueId
  2523  07E7  3001               	movlw	1
  2524  07E8  3186  2648  3187   	fcall	_ConfigureSSC
  2525                           
  2526                           ;main.c: 347: ConfigureShiftRegister();
  2527  07EB  3186  26A9  3187   	fcall	_ConfigureShiftRegister
  2528                           
  2529                           ;main.c: 349: do { LATA1 = 0; } while(0);
  2530  07EE  0022               	movlb	2	; select bank2
  2531  07EF  108C               	bcf	12,1	;volatile
  2532  07F0  2F19               	goto	l1136
  2533  07F1                     __end_of_main:	
  2534                           
  2535                           	psect	text1
  2536  058E                     __ptext1:	
  2537 ;; *************** function _SYSTEM_Initialize *****************
  2538 ;; Defined at:
  2539 ;;		line 77 in file "mcc_generated_files/mcc.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;		None
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;		None
  2544 ;; Return value:  Size  Location     Type
  2545 ;;		None               void
  2546 ;; Registers used:
  2547 ;;		wreg, status,2, status,0, pclath, cstack
  2548 ;; Tracked objects:
  2549 ;;		On entry : 0/0
  2550 ;;		On exit  : 0/0
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2557 ;;Total ram usage:        0 bytes
  2558 ;; Hardware stack levels used:    1
  2559 ;; Hardware stack levels required when called:    1
  2560 ;; This function calls:
  2561 ;;		_DAC1_Initialize
  2562 ;;		_OSCILLATOR_Initialize
  2563 ;;		_PIN_MANAGER_Initialize
  2564 ;;		_WWDT_Initialize
  2565 ;; This function is called by:
  2566 ;;		_main
  2567 ;; This function uses a non-reentrant model
  2568 ;;
  2569                           
  2570                           
  2571                           ;psect for function _SYSTEM_Initialize
  2572  058E                     _SYSTEM_Initialize:	
  2573                           
  2574                           ;mcc.c: 78: OSCILLATOR_Initialize();
  2575                           
  2576                           ;incstack = 0
  2577                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2578  058E  3185  2573  3185   	fcall	_OSCILLATOR_Initialize
  2579                           
  2580                           ;mcc.c: 79: PIN_MANAGER_Initialize();
  2581  0591  3185  25D7  3185   	fcall	_PIN_MANAGER_Initialize
  2582                           
  2583                           ;mcc.c: 80: WWDT_Initialize();
  2584  0594  3185  2579  3185   	fcall	_WWDT_Initialize
  2585                           
  2586                           ;mcc.c: 81: DAC1_Initialize();
  2587  0597  3185  256E         	fcall	_DAC1_Initialize
  2588  0599  0008               	return
  2589  059A                     __end_of_SYSTEM_Initialize:	
  2590                           
  2591                           	psect	text2
  2592  0579                     __ptext2:	
  2593 ;; *************** function _WWDT_Initialize *****************
  2594 ;; Defined at:
  2595 ;;		line 95 in file "mcc_generated_files/mcc.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;		None
  2598 ;; Auto vars:     Size  Location     Type
  2599 ;;		None
  2600 ;; Return value:  Size  Location     Type
  2601 ;;		None               void
  2602 ;; Registers used:
  2603 ;;		wreg
  2604 ;; Tracked objects:
  2605 ;;		On entry : 0/0
  2606 ;;		On exit  : 0/0
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2613 ;;Total ram usage:        0 bytes
  2614 ;; Hardware stack levels used:    1
  2615 ;; This function calls:
  2616 ;;		Nothing
  2617 ;; This function is called by:
  2618 ;;		_SYSTEM_Initialize
  2619 ;; This function uses a non-reentrant model
  2620 ;;
  2621                           
  2622                           
  2623                           ;psect for function _WWDT_Initialize
  2624  0579                     _WWDT_Initialize:	
  2625                           
  2626                           ;mcc.c: 97: WDTCON0 = 28;
  2627                           
  2628                           ;incstack = 0
  2629                           ; Regs used in _WWDT_Initialize: [wreg]
  2630  0579  301C               	movlw	28
  2631  057A  002E               	movlb	14	; select bank14
  2632  057B  0091               	movwf	17	;volatile
  2633                           
  2634                           ;mcc.c: 98: WDTCON1 = 6 | 16;
  2635  057C  3016               	movlw	22
  2636  057D  0092               	movwf	18	;volatile
  2637  057E  0008               	return
  2638  057F                     __end_of_WWDT_Initialize:	
  2639                           
  2640                           	psect	text3
  2641  05D7                     __ptext3:	
  2642 ;; *************** function _PIN_MANAGER_Initialize *****************
  2643 ;; Defined at:
  2644 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  2645 ;; Parameters:    Size  Location     Type
  2646 ;;		None
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;		None
  2649 ;; Return value:  Size  Location     Type
  2650 ;;		None               void
  2651 ;; Registers used:
  2652 ;;		wreg, status,2
  2653 ;; Tracked objects:
  2654 ;;		On entry : 0/0
  2655 ;;		On exit  : 0/0
  2656 ;;		Unchanged: 0/0
  2657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2662 ;;Total ram usage:        0 bytes
  2663 ;; Hardware stack levels used:    1
  2664 ;; This function calls:
  2665 ;;		Nothing
  2666 ;; This function is called by:
  2667 ;;		_SYSTEM_Initialize
  2668 ;; This function uses a non-reentrant model
  2669 ;;
  2670                           
  2671                           
  2672                           ;psect for function _PIN_MANAGER_Initialize
  2673  05D7                     _PIN_MANAGER_Initialize:	
  2674                           
  2675                           ;pin_manager.c: 51: LATA = 0x02;
  2676                           
  2677                           ;incstack = 0
  2678                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2679  05D7  3002               	movlw	2
  2680  05D8  0022               	movlb	2	; select bank2
  2681  05D9  008C               	movwf	12	;volatile
  2682                           
  2683                           ;pin_manager.c: 52: TRISA = 0x28;
  2684  05DA  3028               	movlw	40
  2685  05DB  0021               	movlb	1	; select bank1
  2686  05DC  008C               	movwf	12	;volatile
  2687                           
  2688                           ;pin_manager.c: 53: ANSELA = 0x01;
  2689  05DD  3001               	movlw	1
  2690  05DE  0023               	movlb	3	; select bank3
  2691  05DF  008C               	movwf	12	;volatile
  2692                           
  2693                           ;pin_manager.c: 55: LATB = 0x00;
  2694  05E0  0022               	movlb	2	; select bank2
  2695  05E1  018D               	clrf	13	;volatile
  2696                           
  2697                           ;pin_manager.c: 56: TRISB = 0x00;
  2698  05E2  0021               	movlb	1	; select bank1
  2699  05E3  018D               	clrf	13	;volatile
  2700                           
  2701                           ;pin_manager.c: 57: ANSELB = 0x00;
  2702  05E4  0023               	movlb	3	; select bank3
  2703  05E5  018D               	clrf	13	;volatile
  2704                           
  2705                           ;pin_manager.c: 58: WPUB = 0x00;
  2706  05E6  0024               	movlb	4	; select bank4
  2707  05E7  018D               	clrf	13	;volatile
  2708                           
  2709                           ;pin_manager.c: 60: LATC = 0x00;
  2710  05E8  0022               	movlb	2	; select bank2
  2711  05E9  018E               	clrf	14	;volatile
  2712                           
  2713                           ;pin_manager.c: 61: TRISC = 0xFF;
  2714  05EA  30FF               	movlw	255
  2715  05EB  0021               	movlb	1	; select bank1
  2716  05EC  008E               	movwf	14	;volatile
  2717                           
  2718                           ;pin_manager.c: 62: ANSELC = 0x00;
  2719  05ED  0023               	movlb	3	; select bank3
  2720  05EE  018E               	clrf	14	;volatile
  2721                           
  2722                           ;pin_manager.c: 63: WPUC = 0x00;
  2723  05EF  0024               	movlb	4	; select bank4
  2724  05F0  018E               	clrf	14	;volatile
  2725                           
  2726                           ;pin_manager.c: 65: OPTION_REGbits.nWPUEN = 0x01;
  2727  05F1  0021               	movlb	1	; select bank1
  2728  05F2  1795               	bsf	21,7	;volatile
  2729  05F3  0008               	return
  2730  05F4                     __end_of_PIN_MANAGER_Initialize:	
  2731                           
  2732                           	psect	text4
  2733  0573                     __ptext4:	
  2734 ;; *************** function _OSCILLATOR_Initialize *****************
  2735 ;; Defined at:
  2736 ;;		line 84 in file "mcc_generated_files/mcc.c"
  2737 ;; Parameters:    Size  Location     Type
  2738 ;;		None
  2739 ;; Auto vars:     Size  Location     Type
  2740 ;;		None
  2741 ;; Return value:  Size  Location     Type
  2742 ;;		None               void
  2743 ;; Registers used:
  2744 ;;		wreg, status,2
  2745 ;; Tracked objects:
  2746 ;;		On entry : 0/0
  2747 ;;		On exit  : 0/0
  2748 ;;		Unchanged: 0/0
  2749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2754 ;;Total ram usage:        0 bytes
  2755 ;; Hardware stack levels used:    1
  2756 ;; This function calls:
  2757 ;;		Nothing
  2758 ;; This function is called by:
  2759 ;;		_SYSTEM_Initialize
  2760 ;; This function uses a non-reentrant model
  2761 ;;
  2762                           
  2763                           
  2764                           ;psect for function _OSCILLATOR_Initialize
  2765  0573                     _OSCILLATOR_Initialize:	
  2766                           
  2767                           ;mcc.c: 86: OSCCON = 0x78;
  2768                           
  2769                           ;incstack = 0
  2770                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2771  0573  3078               	movlw	120
  2772  0574  0021               	movlb	1	; select bank1
  2773  0575  0099               	movwf	25	;volatile
  2774                           
  2775                           ;mcc.c: 88: OSCSTAT = 0x00;
  2776  0576  019A               	clrf	26	;volatile
  2777                           
  2778                           ;mcc.c: 90: OSCTUNE = 0x00;
  2779  0577  0198               	clrf	24	;volatile
  2780  0578  0008               	return
  2781  0579                     __end_of_OSCILLATOR_Initialize:	
  2782                           
  2783                           	psect	text5
  2784  056E                     __ptext5:	
  2785 ;; *************** function _DAC1_Initialize *****************
  2786 ;; Defined at:
  2787 ;;		line 58 in file "mcc_generated_files/dac1.c"
  2788 ;; Parameters:    Size  Location     Type
  2789 ;;		None
  2790 ;; Auto vars:     Size  Location     Type
  2791 ;;		None
  2792 ;; Return value:  Size  Location     Type
  2793 ;;		None               void
  2794 ;; Registers used:
  2795 ;;		wreg, status,2
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2805 ;;Total ram usage:        0 bytes
  2806 ;; Hardware stack levels used:    1
  2807 ;; This function calls:
  2808 ;;		Nothing
  2809 ;; This function is called by:
  2810 ;;		_SYSTEM_Initialize
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814                           
  2815                           ;psect for function _DAC1_Initialize
  2816  056E                     _DAC1_Initialize:	
  2817                           
  2818                           ;dac1.c: 60: DAC1CON0 = 0xA0;
  2819                           
  2820                           ;incstack = 0
  2821                           ; Regs used in _DAC1_Initialize: [wreg+status,2]
  2822  056E  30A0               	movlw	160
  2823  056F  0022               	movlb	2	; select bank2
  2824  0570  0098               	movwf	24	;volatile
  2825                           
  2826                           ;dac1.c: 62: DAC1CON1 = 0x00;
  2827  0571  0199               	clrf	25	;volatile
  2828  0572  0008               	return
  2829  0573                     __end_of_DAC1_Initialize:	
  2830                           
  2831                           	psect	text6
  2832  05A7                     __ptext6:	
  2833 ;; *************** function _GenerateDACOut *****************
  2834 ;; Defined at:
  2835 ;;		line 126 in file "main.c"
  2836 ;; Parameters:    Size  Location     Type
  2837 ;;		None
  2838 ;; Auto vars:     Size  Location     Type
  2839 ;;		None
  2840 ;; Return value:  Size  Location     Type
  2841 ;;		None               void
  2842 ;; Registers used:
  2843 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2844 ;; Tracked objects:
  2845 ;;		On entry : 0/0
  2846 ;;		On exit  : 0/0
  2847 ;;		Unchanged: 0/0
  2848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2853 ;;Total ram usage:        0 bytes
  2854 ;; Hardware stack levels used:    1
  2855 ;; Hardware stack levels required when called:    1
  2856 ;; This function calls:
  2857 ;;		_DAC1_SetOutput
  2858 ;; This function is called by:
  2859 ;;		_main
  2860 ;; This function uses a non-reentrant model
  2861 ;;
  2862                           
  2863                           
  2864                           ;psect for function _GenerateDACOut
  2865  05A7                     _GenerateDACOut:	
  2866                           
  2867                           ;main.c: 127: if (AntSel == 1 && TrxSel == 1){
  2868                           
  2869                           ;incstack = 0
  2870                           ; Regs used in _GenerateDACOut: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2871  05A7  0379               	decf	_AntSel,w
  2872  05A8  1D03               	btfss	3,2
  2873  05A9  2DB9               	goto	l1060
  2874  05AA  037D               	decf	_TrxSel,w
  2875  05AB  1D03               	btfss	3,2
  2876  05AC  2DB9               	goto	l1060
  2877                           
  2878                           ;main.c: 128: DAC1_SetOutput(DACLEVEL[PwrLvl]);
  2879  05AD  0020               	movlb	0	; select bank0
  2880  05AE  0825               	movf	_PwrLvl,w
  2881  05AF  3E51               	addlw	low (_DACLEVEL| (0+32768))
  2882  05B0  0084               	movwf	4
  2883  05B1  3088               	movlw	high (_DACLEVEL| (0+32768))
  2884  05B2  1803               	skipnc
  2885  05B3  3E01               	addlw	1
  2886  05B4  0085               	movwf	5
  2887  05B5  0800               	movf	0,w	;code access
  2888  05B6  3185  2569         	fcall	_DAC1_SetOutput
  2889                           
  2890                           ;main.c: 129: }
  2891  05B8  0008               	return
  2892  05B9                     l1060:	
  2893                           
  2894                           ;main.c: 130: else {
  2895                           ;main.c: 131: DAC1_SetOutput(0);
  2896  05B9  3000               	movlw	0
  2897  05BA  3185  2569         	fcall	_DAC1_SetOutput
  2898  05BC  0008               	return
  2899  05BD                     __end_of_GenerateDACOut:	
  2900                           
  2901                           	psect	text7
  2902  0569                     __ptext7:	
  2903 ;; *************** function _DAC1_SetOutput *****************
  2904 ;; Defined at:
  2905 ;;		line 65 in file "mcc_generated_files/dac1.c"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;  inputData       1    wreg     unsigned char 
  2908 ;; Auto vars:     Size  Location     Type
  2909 ;;  inputData       1    0[COMMON] unsigned char 
  2910 ;; Return value:  Size  Location     Type
  2911 ;;		None               void
  2912 ;; Registers used:
  2913 ;;		wreg
  2914 ;; Tracked objects:
  2915 ;;		On entry : 0/0
  2916 ;;		On exit  : 0/0
  2917 ;;		Unchanged: 0/0
  2918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2920 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2922 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2923 ;;Total ram usage:        1 bytes
  2924 ;; Hardware stack levels used:    1
  2925 ;; This function calls:
  2926 ;;		Nothing
  2927 ;; This function is called by:
  2928 ;;		_GenerateDACOut
  2929 ;; This function uses a non-reentrant model
  2930 ;;
  2931                           
  2932                           
  2933                           ;psect for function _DAC1_SetOutput
  2934  0569                     _DAC1_SetOutput:	
  2935                           
  2936                           ;incstack = 0
  2937                           ; Regs used in _DAC1_SetOutput: [wreg]
  2938                           ;DAC1_SetOutput@inputData stored from wreg
  2939  0569  00F0               	movwf	DAC1_SetOutput@inputData
  2940                           
  2941                           ;dac1.c: 66: DAC1CON1 = inputData;
  2942  056A  0870               	movf	DAC1_SetOutput@inputData,w
  2943  056B  0022               	movlb	2	; select bank2
  2944  056C  0099               	movwf	25	;volatile
  2945  056D  0008               	return
  2946  056E                     __end_of_DAC1_SetOutput:	
  2947                           
  2948                           	psect	text8
  2949  0585                     __ptext8:	
  2950 ;; *************** function _Fix_Initialize *****************
  2951 ;; Defined at:
  2952 ;;		line 97 in file "main.c"
  2953 ;; Parameters:    Size  Location     Type
  2954 ;;		None
  2955 ;; Auto vars:     Size  Location     Type
  2956 ;;		None
  2957 ;; Return value:  Size  Location     Type
  2958 ;;		None               void
  2959 ;; Registers used:
  2960 ;;		wreg, status,2
  2961 ;; Tracked objects:
  2962 ;;		On entry : 0/0
  2963 ;;		On exit  : 0/0
  2964 ;;		Unchanged: 0/0
  2965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2970 ;;Total ram usage:        0 bytes
  2971 ;; Hardware stack levels used:    1
  2972 ;; This function calls:
  2973 ;;		Nothing
  2974 ;; This function is called by:
  2975 ;;		_main
  2976 ;; This function uses a non-reentrant model
  2977 ;;
  2978                           
  2979                           
  2980                           ;psect for function _Fix_Initialize
  2981  0585                     _Fix_Initialize:	
  2982                           
  2983                           ;main.c: 99: ODCONA = 0x00;
  2984                           
  2985                           ;incstack = 0
  2986                           ; Regs used in _Fix_Initialize: [wreg+status,2]
  2987  0585  0025               	movlb	5	; select bank5
  2988  0586  018C               	clrf	12	;volatile
  2989                           
  2990                           ;main.c: 100: ODCONB = 0x00;
  2991  0587  018D               	clrf	13	;volatile
  2992                           
  2993                           ;main.c: 102: WPUC = 0xFF;
  2994  0588  30FF               	movlw	255
  2995  0589  0024               	movlb	4	; select bank4
  2996  058A  008E               	movwf	14	;volatile
  2997                           
  2998                           ;main.c: 103: OPTION_REGbits.nWPUEN = 0x00;
  2999  058B  0021               	movlb	1	; select bank1
  3000  058C  1395               	bcf	21,7	;volatile
  3001  058D  0008               	return
  3002  058E                     __end_of_Fix_Initialize:	
  3003                           
  3004                           	psect	text9
  3005  0619                     __ptext9:	
  3006 ;; *************** function _EnableLDOs *****************
  3007 ;; Defined at:
  3008 ;;		line 106 in file "main.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;		None
  3011 ;; Auto vars:     Size  Location     Type
  3012 ;;		None
  3013 ;; Return value:  Size  Location     Type
  3014 ;;		None               void
  3015 ;; Registers used:
  3016 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3017 ;; Tracked objects:
  3018 ;;		On entry : 0/0
  3019 ;;		On exit  : 0/0
  3020 ;;		Unchanged: 0/0
  3021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3024 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3025 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3026 ;;Total ram usage:        1 bytes
  3027 ;; Hardware stack levels used:    1
  3028 ;; This function calls:
  3029 ;;		Nothing
  3030 ;; This function is called by:
  3031 ;;		_main
  3032 ;; This function uses a non-reentrant model
  3033 ;;
  3034                           
  3035                           
  3036                           ;psect for function _EnableLDOs
  3037  0619                     _EnableLDOs:	
  3038                           
  3039                           ;main.c: 107: if (TrxSel == 0 && AntSel == 2){
  3040                           
  3041                           ;incstack = 0
  3042                           ; Regs used in _EnableLDOs: [wreg-fsr0h+status,2+status,0]
  3043  0619  087D               	movf	_TrxSel,w
  3044  061A  1D03               	btfss	3,2
  3045  061B  2E24               	goto	l1046
  3046  061C  3002               	movlw	2
  3047  061D  0679               	xorwf	_AntSel,w
  3048  061E  1D03               	btfss	3,2
  3049  061F  2E24               	goto	l1046
  3050                           
  3051                           ;main.c: 108: do { LATA2 = 0; } while(0);
  3052  0620  0022               	movlb	2	; select bank2
  3053  0621  110C               	bcf	12,2	;volatile
  3054                           
  3055                           ;main.c: 109: do { LATB4 = 1; } while(0);
  3056  0622  160D               	bsf	13,4	;volatile
  3057                           
  3058                           ;main.c: 110: }
  3059  0623  0008               	return
  3060  0624                     l1046:	
  3061                           
  3062                           ;main.c: 111: else if (TrxSel > 0 && AntSel > 0) {
  3063  0624  087D               	movf	_TrxSel,w
  3064  0625  1903               	btfsc	3,2
  3065  0626  2E44               	goto	l185
  3066  0627  0879               	movf	_AntSel,w
  3067  0628  1903               	btfsc	3,2
  3068  0629  2E44               	goto	l185
  3069                           
  3070                           ;main.c: 112: do { LATB4 = 1; } while(0);
  3071  062A  0022               	movlb	2	; select bank2
  3072  062B  160D               	bsf	13,4	;volatile
  3073                           
  3074                           ;main.c: 113: if (ACTIVEBAND[BandSel] || ACTIVEBAND[CABandSel]){
  3075  062C  087A               	movf	_BandSel,w
  3076  062D  3E00               	addlw	low (_ACTIVEBAND| (0+32768))
  3077  062E  0084               	movwf	4
  3078  062F  3088               	movlw	high (_ACTIVEBAND| (0+32768))
  3079  0630  1803               	skipnc
  3080  0631  3E01               	addlw	1
  3081  0632  0085               	movwf	5
  3082  0633  0012               	moviw fsr0++
  3083  0634  1D03               	btfss	3,2
  3084  0635  2E40               	goto	l179
  3085  0636  087C               	movf	_CABandSel,w
  3086  0637  3E00               	addlw	low (_ACTIVEBAND| (0+32768))
  3087  0638  0084               	movwf	4
  3088  0639  3088               	movlw	high (_ACTIVEBAND| (0+32768))
  3089  063A  1803               	skipnc
  3090  063B  3E01               	addlw	1
  3091  063C  0085               	movwf	5
  3092  063D  0012               	moviw fsr0++
  3093  063E  1903               	btfsc	3,2
  3094  063F  2E42               	goto	l182
  3095  0640                     l179:	
  3096                           ;main.c: 114: do { LATA2 = 1; } while(0);
  3097                           
  3098  0640  150C               	bsf	12,2	;volatile
  3099                           
  3100                           ;main.c: 115: }
  3101  0641  0008               	return
  3102  0642                     l182:	
  3103                           ;main.c: 116: else {
  3104                           ;main.c: 117: do { LATA2 = 0; } while(0);
  3105                           
  3106  0642  110C               	bcf	12,2	;volatile
  3107                           
  3108                           ;main.c: 118: }
  3109                           ;main.c: 119: }
  3110  0643  0008               	return
  3111  0644                     l185:	
  3112                           ;main.c: 120: else {
  3113                           ;main.c: 121: do { LATA2 = 0; } while(0);
  3114                           
  3115  0644  0022               	movlb	2	; select bank2
  3116  0645  110C               	bcf	12,2	;volatile
  3117                           
  3118                           ;main.c: 122: do { LATB4 = 0; } while(0);
  3119  0646  120D               	bcf	13,4	;volatile
  3120  0647  0008               	return
  3121  0648                     __end_of_EnableLDOs:	
  3122                           
  3123                           	psect	text10
  3124  06A9                     __ptext10:	
  3125 ;; *************** function _ConfigureShiftRegister *****************
  3126 ;; Defined at:
  3127 ;;		line 135 in file "main.c"
  3128 ;; Parameters:    Size  Location     Type
  3129 ;;		None
  3130 ;; Auto vars:     Size  Location     Type
  3131 ;;  ReverseReg      1    2[COMMON] unsigned char 
  3132 ;;  i               1    1[COMMON] unsigned char 
  3133 ;; Return value:  Size  Location     Type
  3134 ;;		None               void
  3135 ;; Registers used:
  3136 ;;		wreg, status,2, status,0
  3137 ;; Tracked objects:
  3138 ;;		On entry : 0/0
  3139 ;;		On exit  : 0/0
  3140 ;;		Unchanged: 0/0
  3141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3143 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3144 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3145 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3146 ;;Total ram usage:        3 bytes
  3147 ;; Hardware stack levels used:    1
  3148 ;; This function calls:
  3149 ;;		Nothing
  3150 ;; This function is called by:
  3151 ;;		_main
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155                           
  3156                           ;psect for function _ConfigureShiftRegister
  3157  06A9                     _ConfigureShiftRegister:	
  3158                           
  3159                           ;main.c: 136: uint8_t ReverseReg, i;
  3160                           ;main.c: 139: if (BandSel == 3 && CABandSel == 7){
  3161                           
  3162                           ;incstack = 0
  3163                           ; Regs used in _ConfigureShiftRegister: [wreg+status,2+status,0]
  3164  06A9  3003               	movlw	3
  3165  06AA  067A               	xorwf	_BandSel,w
  3166  06AB  1D03               	btfss	3,2
  3167  06AC  2EB3               	goto	l1068
  3168  06AD  3007               	movlw	7
  3169  06AE  067C               	xorwf	_CABandSel,w
  3170  06AF  1D03               	btfss	3,2
  3171  06B0  2EB3               	goto	l1068
  3172                           
  3173                           ;main.c: 140: ReverseReg = 0x40;
  3174  06B1  3040               	movlw	64
  3175  06B2  2EE6               	goto	L6
  3176  06B3                     l1068:	
  3177                           ;main.c: 141: }
  3178                           
  3179                           
  3180                           ;main.c: 143: else if ((BandSel == 7 && CABandSel == 0) ||
  3181                           ;main.c: 144: (BandSel == 30 && CABandSel == 0) ||
  3182                           ;main.c: 145: (BandSel == 41 && CABandSel == 0) ||
  3183                           ;main.c: 146: (BandSel == 5 && CABandSel == 30) ||
  3184                           ;main.c: 147: (BandSel == 7 && CABandSel == 20) ||
  3185                           ;main.c: 148: (BandSel == 12 && CABandSel == 30) ||
  3186                           ;main.c: 149: (BandSel == 41 && CABandSel == 41)
  3187                           ;main.c: 150: ){
  3188  06B3  3007               	movlw	7
  3189  06B4  067A               	xorwf	_BandSel,w
  3190  06B5  1903               	btfsc	3,2
  3191  06B6  087C               	movf	_CABandSel,w
  3192  06B7  1903               	btfsc	3,2
  3193  06B8  2EE5               	goto	l1096
  3194  06B9  301E               	movlw	30
  3195  06BA  067A               	xorwf	_BandSel,w
  3196  06BB  1903               	btfsc	3,2
  3197  06BC  087C               	movf	_CABandSel,w
  3198  06BD  1903               	btfsc	3,2
  3199  06BE  2EE5               	goto	l1096
  3200  06BF  3029               	movlw	41
  3201  06C0  067A               	xorwf	_BandSel,w
  3202  06C1  1903               	btfsc	3,2
  3203  06C2  087C               	movf	_CABandSel,w
  3204  06C3  1903               	btfsc	3,2
  3205  06C4  2EE5               	goto	l1096
  3206  06C5  3005               	movlw	5
  3207  06C6  067A               	xorwf	_BandSel,w
  3208  06C7  1D03               	btfss	3,2
  3209  06C8  2ECD               	goto	l1084
  3210  06C9  301E               	movlw	30
  3211  06CA  067C               	xorwf	_CABandSel,w
  3212  06CB  1903               	btfsc	3,2
  3213  06CC  2EE5               	goto	l1096
  3214  06CD                     l1084:	
  3215  06CD  3007               	movlw	7
  3216  06CE  067A               	xorwf	_BandSel,w
  3217  06CF  1D03               	btfss	3,2
  3218  06D0  2ED5               	goto	l1088
  3219  06D1  3014               	movlw	20
  3220  06D2  067C               	xorwf	_CABandSel,w
  3221  06D3  1903               	btfsc	3,2
  3222  06D4  2EE5               	goto	l1096
  3223  06D5                     l1088:	
  3224  06D5  300C               	movlw	12
  3225  06D6  067A               	xorwf	_BandSel,w
  3226  06D7  1D03               	btfss	3,2
  3227  06D8  2EDD               	goto	l1092
  3228  06D9  301E               	movlw	30
  3229  06DA  067C               	xorwf	_CABandSel,w
  3230  06DB  1903               	btfsc	3,2
  3231  06DC  2EE5               	goto	l1096
  3232  06DD                     l1092:	
  3233  06DD  3029               	movlw	41
  3234  06DE  067A               	xorwf	_BandSel,w
  3235  06DF  1D03               	btfss	3,2
  3236  06E0  2EEA               	goto	l1098
  3237  06E1  3029               	movlw	41
  3238  06E2  067C               	xorwf	_CABandSel,w
  3239  06E3  1D03               	btfss	3,2
  3240  06E4  2EEA               	goto	l1098
  3241  06E5                     l1096:	
  3242                           
  3243                           ;main.c: 151: ReverseReg = 0x80;
  3244  06E5  3080               	movlw	128
  3245  06E6                     L6:	
  3246  06E6  00F0               	movwf	??_ConfigureShiftRegister
  3247  06E7  0870               	movf	??_ConfigureShiftRegister,w
  3248  06E8  00F2               	movwf	ConfigureShiftRegister@ReverseReg
  3249                           
  3250                           ;main.c: 152: }
  3251  06E9  2EEB               	goto	l1100
  3252  06EA                     l1098:	
  3253                           
  3254                           ;main.c: 154: else{
  3255                           ;main.c: 155: ReverseReg = 0x00;
  3256  06EA  01F2               	clrf	ConfigureShiftRegister@ReverseReg
  3257  06EB                     l1100:	
  3258                           
  3259                           ;main.c: 156: }
  3260                           ;main.c: 159: LATA4 = 0;
  3261  06EB  0022               	movlb	2	; select bank2
  3262  06EC  120C               	bcf	12,4	;volatile
  3263                           
  3264                           ;main.c: 160: do { LATB6 = 1; } while(0);
  3265  06ED  170D               	bsf	13,6	;volatile
  3266  06EE  0000               	nop	;# 
  3267                           
  3268                           ;main.c: 162: do { LATB6 = 0; } while(0);
  3269  06EF  0022               	movlb	2	; select bank2
  3270  06F0  130D               	bcf	13,6	;volatile
  3271                           
  3272                           ;main.c: 164: for (i=0; i<8; i++) {
  3273  06F1  01F1               	clrf	ConfigureShiftRegister@i
  3274  06F2  3008               	movlw	8
  3275  06F3  0271               	subwf	ConfigureShiftRegister@i,w
  3276  06F4  1803               	btfsc	3,0
  3277  06F5  2F0D               	goto	l220
  3278  06F6                     l219:	
  3279                           
  3280                           ;main.c: 165: LATA4 = ReverseReg & 0x01;
  3281  06F6  1C72               	btfss	ConfigureShiftRegister@ReverseReg,0
  3282  06F7  2EFB               	goto	u990
  3283  06F8  0022               	movlb	2	; select bank2
  3284  06F9  160C               	bsf	12,4	;volatile
  3285  06FA  2EFD               	goto	l221
  3286  06FB                     u990:	
  3287  06FB  0022               	movlb	2	; select bank2
  3288  06FC  120C               	bcf	12,4	;volatile
  3289  06FD                     l221:	
  3290                           ;main.c: 166: do { LATB6 = 1; } while(0);
  3291                           
  3292  06FD  170D               	bsf	13,6	;volatile
  3293  06FE  0000               	nop	;# 
  3294                           
  3295                           ;main.c: 168: do { LATB6 = 0; } while(0);
  3296  06FF  0022               	movlb	2	; select bank2
  3297  0700  130D               	bcf	13,6	;volatile
  3298                           
  3299                           ;main.c: 169: ReverseReg = ReverseReg >> 1;
  3300  0701  3672               	lsrf	ConfigureShiftRegister@ReverseReg,w
  3301  0702  00F0               	movwf	??_ConfigureShiftRegister
  3302  0703  0870               	movf	??_ConfigureShiftRegister,w
  3303  0704  00F2               	movwf	ConfigureShiftRegister@ReverseReg
  3304  0705  3001               	movlw	1
  3305  0706  00F0               	movwf	??_ConfigureShiftRegister
  3306  0707  0870               	movf	??_ConfigureShiftRegister,w
  3307  0708  07F1               	addwf	ConfigureShiftRegister@i,f
  3308  0709  3008               	movlw	8
  3309  070A  0271               	subwf	ConfigureShiftRegister@i,w
  3310  070B  1C03               	skipc
  3311  070C  2EF6               	goto	l219
  3312  070D                     l220:	
  3313                           
  3314                           ;main.c: 170: }
  3315                           ;main.c: 173: LATA4 = 0;
  3316  070D  120C               	bcf	12,4	;volatile
  3317                           
  3318                           ;main.c: 174: do { LATB6 = 1; } while(0);
  3319  070E  170D               	bsf	13,6	;volatile
  3320  070F  0000               	nop	;# 
  3321                           
  3322                           ;main.c: 176: do { LATB6 = 0; } while(0);
  3323  0710  0022               	movlb	2	; select bank2
  3324  0711  130D               	bcf	13,6	;volatile
  3325  0712  0008               	return
  3326  0713                     __end_of_ConfigureShiftRegister:	
  3327                           
  3328                           	psect	text11
  3329  0648                     __ptext11:	
  3330 ;; *************** function _ConfigureSSC *****************
  3331 ;; Defined at:
  3332 ;;		line 217 in file "main.c"
  3333 ;; Parameters:    Size  Location     Type
  3334 ;;  Id              1    wreg     unsigned char 
  3335 ;;  ValueId         1    4[COMMON] unsigned char 
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;  Id              1    5[COMMON] unsigned char 
  3338 ;; Return value:  Size  Location     Type
  3339 ;;		None               void
  3340 ;; Registers used:
  3341 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3347 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3348 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3350 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3351 ;;Total ram usage:        2 bytes
  3352 ;; Hardware stack levels used:    1
  3353 ;; Hardware stack levels required when called:    1
  3354 ;; This function calls:
  3355 ;;		_SendBit
  3356 ;;		_SendByte
  3357 ;;		_SendSlaveAddress
  3358 ;; This function is called by:
  3359 ;;		_main
  3360 ;; This function uses a non-reentrant model
  3361 ;;
  3362                           
  3363                           
  3364                           ;psect for function _ConfigureSSC
  3365  0648                     _ConfigureSSC:	
  3366                           
  3367                           ;incstack = 0
  3368                           ; Regs used in _ConfigureSSC: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3369                           ;ConfigureSSC@Id stored from wreg
  3370  0648  00F5               	movwf	ConfigureSSC@Id
  3371                           
  3372                           ;main.c: 220: do { LATB7 = 1; } while(0);
  3373  0649  0022               	movlb	2	; select bank2
  3374  064A  178D               	bsf	13,7	;volatile
  3375  064B  0000               	nop	;# 
  3376                           
  3377                           ;main.c: 222: do { LATB7 = 0; } while(0);
  3378  064C  0022               	movlb	2	; select bank2
  3379  064D  138D               	bcf	13,7	;volatile
  3380                           
  3381                           ;main.c: 224: SendSlaveAddress(Id);
  3382  064E  0875               	movf	ConfigureSSC@Id,w
  3383  064F  3185  25F4  3186   	fcall	_SendSlaveAddress
  3384                           
  3385                           ;main.c: 227: SendByte(0x3A);
  3386  0652  303A               	movlw	58
  3387  0653  3185  25BD  3186   	fcall	_SendByte
  3388                           
  3389                           ;main.c: 228: SendBit(COMMANDPARITY[Id]);
  3390  0656  0875               	movf	ConfigureSSC@Id,w
  3391  0657  3E55               	addlw	low (_COMMANDPARITY| (0+32768))
  3392  0658  0084               	movwf	4
  3393  0659  3088               	movlw	high (_COMMANDPARITY| (0+32768))
  3394  065A  1803               	skipnc
  3395  065B  3E01               	addlw	1
  3396  065C  0085               	movwf	5
  3397  065D  0800               	movf	0,w	;code access
  3398  065E  3185  259A  3186   	fcall	_SendBit
  3399                           
  3400                           ;main.c: 231: SendByte(VALUE[0]);
  3401  0661  3040               	movlw	low (_VALUE| (0+32768))
  3402  0662  0084               	movwf	4
  3403  0663  3088               	movlw	high (_VALUE| (0+32768))
  3404  0664  0085               	movwf	5
  3405  0665  0800               	movf	0,w	;code access
  3406  0666  3185  25BD  3186   	fcall	_SendByte
  3407                           
  3408                           ;main.c: 232: SendBit(PARITY[0]);
  3409  0669  3049               	movlw	low (_PARITY| (0+32768))
  3410  066A  0084               	movwf	4
  3411  066B  3088               	movlw	high (_PARITY| (0+32768))
  3412  066C  0085               	movwf	5
  3413  066D  0800               	movf	0,w	;code access
  3414  066E  3185  259A  3186   	fcall	_SendBit
  3415                           
  3416                           ;main.c: 235: SendBit(0);
  3417  0671  3000               	movlw	0
  3418  0672  3185  259A  3186   	fcall	_SendBit
  3419  0675  0000               	nop	;# 
  3420  0676  0000               	nop	;# 
  3421                           
  3422                           ;main.c: 243: do { LATB7 = 1; } while(0);
  3423  0677  0022               	movlb	2	; select bank2
  3424  0678  178D               	bsf	13,7	;volatile
  3425  0679  0000               	nop	;# 
  3426                           
  3427                           ;main.c: 245: do { LATB7 = 0; } while(0);
  3428  067A  0022               	movlb	2	; select bank2
  3429  067B  138D               	bcf	13,7	;volatile
  3430                           
  3431                           ;main.c: 247: SendSlaveAddress(Id);
  3432  067C  0875               	movf	ConfigureSSC@Id,w
  3433  067D  3185  25F4  3186   	fcall	_SendSlaveAddress
  3434                           
  3435                           ;main.c: 250: SendByte(0x82);
  3436  0680  3082               	movlw	130
  3437  0681  3185  25BD  3186   	fcall	_SendByte
  3438                           
  3439                           ;main.c: 251: SendBit(COMMANDPARITY[Id]);
  3440  0684  0875               	movf	ConfigureSSC@Id,w
  3441  0685  3E55               	addlw	low (_COMMANDPARITY| (0+32768))
  3442  0686  0084               	movwf	4
  3443  0687  3088               	movlw	high (_COMMANDPARITY| (0+32768))
  3444  0688  1803               	skipnc
  3445  0689  3E01               	addlw	1
  3446  068A  0085               	movwf	5
  3447  068B  0800               	movf	0,w	;code access
  3448  068C  3185  259A  3186   	fcall	_SendBit
  3449                           
  3450                           ;main.c: 254: SendByte(VALUE[ValueId]);
  3451  068F  0874               	movf	ConfigureSSC@ValueId,w
  3452  0690  3E40               	addlw	low (_VALUE| (0+32768))
  3453  0691  0084               	movwf	4
  3454  0692  3088               	movlw	high (_VALUE| (0+32768))
  3455  0693  1803               	skipnc
  3456  0694  3E01               	addlw	1
  3457  0695  0085               	movwf	5
  3458  0696  0800               	movf	0,w	;code access
  3459  0697  3185  25BD  3186   	fcall	_SendByte
  3460                           
  3461                           ;main.c: 255: SendBit(PARITY[ValueId]);
  3462  069A  0874               	movf	ConfigureSSC@ValueId,w
  3463  069B  3E49               	addlw	low (_PARITY| (0+32768))
  3464  069C  0084               	movwf	4
  3465  069D  3088               	movlw	high (_PARITY| (0+32768))
  3466  069E  1803               	skipnc
  3467  069F  3E01               	addlw	1
  3468  06A0  0085               	movwf	5
  3469  06A1  0800               	movf	0,w	;code access
  3470  06A2  3185  259A  3186   	fcall	_SendBit
  3471                           
  3472                           ;main.c: 258: SendBit(0);
  3473  06A5  3000               	movlw	0
  3474  06A6  3185  259A         	fcall	_SendBit
  3475  06A8  0008               	return
  3476  06A9                     __end_of_ConfigureSSC:	
  3477                           
  3478                           	psect	text12
  3479  05F4                     __ptext12:	
  3480 ;; *************** function _SendSlaveAddress *****************
  3481 ;; Defined at:
  3482 ;;		line 180 in file "main.c"
  3483 ;; Parameters:    Size  Location     Type
  3484 ;;  Id              1    wreg     unsigned char 
  3485 ;; Auto vars:     Size  Location     Type
  3486 ;;  Id              1    1[COMMON] unsigned char 
  3487 ;;  i               1    3[COMMON] unsigned char 
  3488 ;;  ReverseReg      1    2[COMMON] unsigned char 
  3489 ;; Return value:  Size  Location     Type
  3490 ;;		None               void
  3491 ;; Registers used:
  3492 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3493 ;; Tracked objects:
  3494 ;;		On entry : 0/0
  3495 ;;		On exit  : 0/0
  3496 ;;		Unchanged: 0/0
  3497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3499 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3500 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3501 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3502 ;;Total ram usage:        4 bytes
  3503 ;; Hardware stack levels used:    1
  3504 ;; This function calls:
  3505 ;;		Nothing
  3506 ;; This function is called by:
  3507 ;;		_ConfigureSSC
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511                           
  3512                           ;psect for function _SendSlaveAddress
  3513  05F4                     _SendSlaveAddress:	
  3514                           
  3515                           ;incstack = 0
  3516                           ; Regs used in _SendSlaveAddress: [wreg-fsr0h+status,2+status,0+pclath]
  3517                           ;SendSlaveAddress@Id stored from wreg
  3518  05F4  00F1               	movwf	SendSlaveAddress@Id
  3519                           
  3520                           ;main.c: 181: uint8_t ReverseReg, i;
  3521                           ;main.c: 183: ReverseReg = SLAVEADDRESS[Id];
  3522  05F5  0871               	movf	SendSlaveAddress@Id,w
  3523  05F6  3E57               	addlw	low (_SLAVEADDRESS| (0+32768))
  3524  05F7  0084               	movwf	4
  3525  05F8  3088               	movlw	high (_SLAVEADDRESS| (0+32768))
  3526  05F9  1803               	skipnc
  3527  05FA  3E01               	addlw	1
  3528  05FB  0085               	movwf	5
  3529  05FC  0800               	movf	0,w	;code access
  3530  05FD  00F0               	movwf	??_SendSlaveAddress
  3531  05FE  0870               	movf	??_SendSlaveAddress,w
  3532  05FF  00F2               	movwf	SendSlaveAddress@ReverseReg
  3533                           
  3534                           ;main.c: 186: for (i=0; i<4; i++) {
  3535  0600  01F3               	clrf	SendSlaveAddress@i
  3536  0601                     L7:	
  3537  0601  3004               	movlw	4
  3538  0602  0273               	subwf	SendSlaveAddress@i,w
  3539  0603  1803               	btfsc	3,0
  3540  0604  0008               	return
  3541                           
  3542                           ;main.c: 187: LATB7 = ReverseReg & 0x01;
  3543  0605  1C72               	btfss	SendSlaveAddress@ReverseReg,0
  3544  0606  2E0A               	goto	u650
  3545  0607  0022               	movlb	2	; select bank2
  3546  0608  178D               	bsf	13,7	;volatile
  3547  0609  2E0C               	goto	l234
  3548  060A                     u650:	
  3549  060A  0022               	movlb	2	; select bank2
  3550  060B  138D               	bcf	13,7	;volatile
  3551  060C                     l234:	
  3552                           ;main.c: 188: do { LATB6 = 1; } while(0);
  3553                           
  3554  060C  170D               	bsf	13,6	;volatile
  3555  060D  0000               	nop	;# 
  3556                           
  3557                           ;main.c: 190: do { LATB6 = 0; } while(0);
  3558  060E  0022               	movlb	2	; select bank2
  3559  060F  130D               	bcf	13,6	;volatile
  3560                           
  3561                           ;main.c: 191: ReverseReg = ReverseReg >> 1;
  3562  0610  3672               	lsrf	SendSlaveAddress@ReverseReg,w
  3563  0611  00F0               	movwf	??_SendSlaveAddress
  3564  0612  0870               	movf	??_SendSlaveAddress,w
  3565  0613  00F2               	movwf	SendSlaveAddress@ReverseReg
  3566  0614  3001               	movlw	1
  3567  0615  00F0               	movwf	??_SendSlaveAddress
  3568  0616  0870               	movf	??_SendSlaveAddress,w
  3569  0617  07F3               	addwf	SendSlaveAddress@i,f
  3570  0618  2E01               	goto	L7
  3571  0619                     __end_of_SendSlaveAddress:	
  3572                           
  3573                           	psect	text13
  3574  05BD                     __ptext13:	
  3575 ;; *************** function _SendByte *****************
  3576 ;; Defined at:
  3577 ;;		line 195 in file "main.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;  ReverseValue    1    wreg     unsigned char 
  3580 ;; Auto vars:     Size  Location     Type
  3581 ;;  ReverseValue    1    1[COMMON] unsigned char 
  3582 ;;  i               1    2[COMMON] unsigned char 
  3583 ;; Return value:  Size  Location     Type
  3584 ;;		None               void
  3585 ;; Registers used:
  3586 ;;		wreg, status,2, status,0
  3587 ;; Tracked objects:
  3588 ;;		On entry : 0/0
  3589 ;;		On exit  : 0/0
  3590 ;;		Unchanged: 0/0
  3591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3593 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3594 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3595 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3596 ;;Total ram usage:        3 bytes
  3597 ;; Hardware stack levels used:    1
  3598 ;; This function calls:
  3599 ;;		Nothing
  3600 ;; This function is called by:
  3601 ;;		_ConfigureSSC
  3602 ;; This function uses a non-reentrant model
  3603 ;;
  3604                           
  3605                           
  3606                           ;psect for function _SendByte
  3607  05BD                     _SendByte:	
  3608                           
  3609                           ;incstack = 0
  3610                           ; Regs used in _SendByte: [wreg+status,2+status,0]
  3611                           ;SendByte@ReverseValue stored from wreg
  3612  05BD  00F1               	movwf	SendByte@ReverseValue
  3613                           
  3614                           ;main.c: 196: uint8_t i;
  3615                           ;main.c: 199: for (i=0; i<8; i++) {
  3616  05BE  01F2               	clrf	SendByte@i
  3617  05BF                     L8:	
  3618  05BF  3008               	movlw	8
  3619  05C0  0272               	subwf	SendByte@i,w
  3620  05C1  1803               	btfsc	3,0
  3621  05C2  0008               	return
  3622                           
  3623                           ;main.c: 200: LATB7 = ReverseValue & 0x01;
  3624  05C3  1C71               	btfss	SendByte@ReverseValue,0
  3625  05C4  2DC8               	goto	u690
  3626  05C5  0022               	movlb	2	; select bank2
  3627  05C6  178D               	bsf	13,7	;volatile
  3628  05C7  2DCA               	goto	l243
  3629  05C8                     u690:	
  3630  05C8  0022               	movlb	2	; select bank2
  3631  05C9  138D               	bcf	13,7	;volatile
  3632  05CA                     l243:	
  3633                           ;main.c: 201: do { LATB6 = 1; } while(0);
  3634                           
  3635  05CA  170D               	bsf	13,6	;volatile
  3636  05CB  0000               	nop	;# 
  3637                           
  3638                           ;main.c: 203: do { LATB6 = 0; } while(0);
  3639  05CC  0022               	movlb	2	; select bank2
  3640  05CD  130D               	bcf	13,6	;volatile
  3641                           
  3642                           ;main.c: 204: ReverseValue = ReverseValue >> 1;
  3643  05CE  3671               	lsrf	SendByte@ReverseValue,w
  3644  05CF  00F0               	movwf	??_SendByte
  3645  05D0  0870               	movf	??_SendByte,w
  3646  05D1  00F1               	movwf	SendByte@ReverseValue
  3647  05D2  3001               	movlw	1
  3648  05D3  00F0               	movwf	??_SendByte
  3649  05D4  0870               	movf	??_SendByte,w
  3650  05D5  07F2               	addwf	SendByte@i,f
  3651  05D6  2DBF               	goto	L8
  3652  05D7                     __end_of_SendByte:	
  3653                           
  3654                           	psect	text14
  3655  059A                     __ptext14:	
  3656 ;; *************** function _SendBit *****************
  3657 ;; Defined at:
  3658 ;;		line 208 in file "main.c"
  3659 ;; Parameters:    Size  Location     Type
  3660 ;;  BitValue        1    wreg     unsigned char 
  3661 ;; Auto vars:     Size  Location     Type
  3662 ;;  BitValue        1    0[COMMON] unsigned char 
  3663 ;; Return value:  Size  Location     Type
  3664 ;;		None               void
  3665 ;; Registers used:
  3666 ;;		wreg
  3667 ;; Tracked objects:
  3668 ;;		On entry : 0/0
  3669 ;;		On exit  : 0/0
  3670 ;;		Unchanged: 0/0
  3671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3673 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3675 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3676 ;;Total ram usage:        1 bytes
  3677 ;; Hardware stack levels used:    1
  3678 ;; This function calls:
  3679 ;;		Nothing
  3680 ;; This function is called by:
  3681 ;;		_ConfigureSSC
  3682 ;; This function uses a non-reentrant model
  3683 ;;
  3684                           
  3685                           
  3686                           ;psect for function _SendBit
  3687  059A                     _SendBit:	
  3688                           
  3689                           ;incstack = 0
  3690                           ; Regs used in _SendBit: [wreg]
  3691                           ;SendBit@BitValue stored from wreg
  3692  059A  00F0               	movwf	SendBit@BitValue
  3693                           
  3694                           ;main.c: 211: LATB7 = BitValue & 0x01;
  3695  059B  1C70               	btfss	SendBit@BitValue,0
  3696  059C  2DA0               	goto	u720
  3697  059D  0022               	movlb	2	; select bank2
  3698  059E  178D               	bsf	13,7	;volatile
  3699  059F  2DA2               	goto	l1030
  3700  05A0                     u720:	
  3701  05A0  0022               	movlb	2	; select bank2
  3702  05A1  138D               	bcf	13,7	;volatile
  3703  05A2                     l1030:	
  3704                           ;main.c: 212: do { LATB6 = 1; } while(0);
  3705                           
  3706  05A2  170D               	bsf	13,6	;volatile
  3707  05A3  0000               	nop	;# 
  3708                           
  3709                           ;main.c: 214: do { LATB6 = 0; } while(0);
  3710  05A4  0022               	movlb	2	; select bank2
  3711  05A5  130D               	bcf	13,6	;volatile
  3712  05A6  0008               	return
  3713  05A7                     __end_of_SendBit:	
  3714  007E                     btemp	set	126	;btemp
  3715  007E                     wtemp	set	126
  3716  007E                     wtemp0	set	126
  3717  0080                     wtemp1	set	128
  3718  0082                     wtemp2	set	130
  3719  0084                     wtemp3	set	132
  3720  0086                     wtemp4	set	134
  3721  0088                     wtemp5	set	136
  3722  007F                     wtemp6	set	127
  3723  007E                     ttemp	set	126
  3724  007E                     ttemp0	set	126
  3725  0081                     ttemp1	set	129
  3726  0084                     ttemp2	set	132
  3727  0087                     ttemp3	set	135
  3728  007F                     ttemp4	set	127
  3729  007E                     ltemp	set	126
  3730  007E                     ltemp0	set	126
  3731  0082                     ltemp1	set	130
  3732  0086                     ltemp2	set	134
  3733  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    89
    Data        0
    BSS         19
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80      0      15
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ConfigureSSC
    _GenerateDACOut->_DAC1_SetOutput
    _ConfigureSSC->_SendSlaveAddress

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     744
                                              6 COMMON     3     3      0
                       _ConfigureSSC
             _ConfigureShiftRegister
                         _EnableLDOs
                     _Fix_Initialize
                     _GenerateDACOut
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _DAC1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _WWDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WWDT_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DAC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GenerateDACOut                                       0     0      0      22
                     _DAC1_SetOutput
 ---------------------------------------------------------------------------------
 (2) _DAC1_SetOutput                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Fix_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EnableLDOs                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureShiftRegister                               3     3      0      94
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureSSC                                         2     1      1     531
                                              4 COMMON     2     1      1
                            _SendBit
                           _SendByte
                   _SendSlaveAddress
 ---------------------------------------------------------------------------------
 (2) _SendSlaveAddress                                     4     4      0     114
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (2) _SendByte                                             3     3      0      91
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _SendBit                                              1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureSSC
     _SendBit
     _SendByte
     _SendSlaveAddress
   _ConfigureShiftRegister
   _EnableLDOs
   _Fix_Initialize
   _GenerateDACOut
     _DAC1_SetOutput
   _SYSTEM_Initialize
     _DAC1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WWDT_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3E0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       F       5       18.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      1D      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           20      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              20      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      1D      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Tue Nov 24 22:45:04 2015

        __size_of_WWDT_Initialize 0006                       __CFG_CP$OFF 0000                       __CFG_LVP$ON 0000  
                     main@ValueId 0078                   _DAC1_Initialize 056E                               l220 070D  
                             l221 06FD                               l234 060C                               l243 05CA  
                             l219 06F6                               l182 0642                               l185 0644  
                             l179 0640                               l286 0784               ConfigureSSC@ValueId 0074  
                             _GIE 005F                               u720 05A0                               u650 060A  
                             u690 05C8                               u990 06FB    __end_of_ConfigureShiftRegister 0713  
                    __CFG_BORV$LO 0000                               wreg 0009                      __CFG_IESO$ON 0000  
                  _DAC1_SetOutput 0569                      __CFG_ZCD$OFF 0000                              l1100 06EB  
                            l1030 05A2                              l1200 07A5                              l1210 07B7  
                            l1060 05B9                              l1212 07B9                              l1204 07AD  
                            l1220 07C7                              l1140 071B                              l1046 0624  
                            l1206 07AF                              l1142 0727                              l1216 07C1  
                            l1152 0735                              l1136 0719                              l1218 07C6  
                            l1154 0741                              l1146 0728                              l1092 06DD  
                            l1084 06CD                              l1068 06B3                              l1148 0734  
                            l1182 0787                              l1088 06D5                              l1096 06E5  
                            l1192 0799                              l1098 06EA                              l1194 079B  
                            l1186 078F                              l1188 0791                              l1198 07A3  
                            u1055 0744                              u1065 074F                              _LATA 010C  
                            _LATB 010D                              _LATC 010E                              _WPUB 020D  
                            _WPUC 020E                      __CFG_WRT$OFF 0000                     __CFG_FCMEN$ON 0000  
                __end_of_DACLEVEL 0855         __size_of_SendSlaveAddress 0025                              _main 0713  
                            fsr0h 0005                              fsr0l 0004                              indf0 0000  
                            btemp 007E                     __CFG_BOREN$ON 0000                              ltemp 007E  
                            start 0002                              ttemp 007E                              wtemp 007E  
                     _switchEvent 002D                        _EnableLDOs 0619                     __CFG_LPBOR$ON 0000  
                 __end_of_SendBit 05A7                     __CFG_PLLEN$ON 0000    __size_of_OSCILLATOR_Initialize 0006  
   __end_of_OSCILLATOR_Initialize 0579                             ?_main 0070                             _LATA1 0861  
                           _LATA2 0862                             _LATA4 0864                             _LATB4 086C  
                           _LATB5 086D                             _LATB6 086E                             _LATB7 086F  
          __end_of_DAC1_SetOutput 056E                             _VALUE 0840                             _PORTC 000E  
                           _TRISA 008C                             _TRISB 008D                             _TRISC 008E  
                           _Byte1 002E                             _Byte2 007B                             _Byte3 0024  
      SendSlaveAddress@ReverseReg 0072                             _delay 0022                             ltemp0 007E  
                           ltemp1 0082                             ltemp2 0086                             ltemp3 0080  
                           ttemp0 007E                             ttemp1 0081                             ttemp2 0084  
                           ttemp3 0087                             ttemp4 007F                             status 0003  
                           wtemp0 007E                             wtemp1 0080                             wtemp2 0082  
                           wtemp3 0084                             wtemp4 0086                             wtemp5 0088  
                           wtemp6 007F                    __CFG_MCLRE$OFF 0000                   __initialization 07F1  
                    __end_of_main 07F1           __end_of_DAC1_Initialize 0573                            ??_main 0076  
                __end_of_SendByte 05D7             __end_of_COMMANDPARITY 0857              __end_of_ConfigureSSC 06A9  
               ??_WWDT_Initialize 0070                   ?_DAC1_SetOutput 0070                            _ANSELA 018C  
                          _ANSELB 018D                            _ANSELC 018E                            _ODCONA 028C  
                          _ODCONB 028D                            _PARITY 0849                            _OSCCON 0099  
                          _AntSel 0079                    __CFG_PWRTE$OFF 0000           DAC1_SetOutput@inputData 0070  
                       ??_SendBit 0070                            _PwrLvl 0025                            _TrxSel 007D  
                     ?_EnableLDOs 0070                    __CFG_STVREN$ON 0000                __end_of_ACTIVEBAND 0840  
         __size_of_GenerateDACOut 0016                 _SYSTEM_Initialize 058E           __end_of__initialization 07FD  
                _SendSlaveAddress 05F4                ?_SYSTEM_Initialize 0070                     __end_of_VALUE 0849  
                  __pcstackCOMMON 0070               ??_SYSTEM_Initialize 0070                  ?_DAC1_Initialize 0070  
            SendByte@ReverseValue 0071                    _OPTION_REGbits 0095         __end_of_SYSTEM_Initialize 059A  
             __size_of_EnableLDOs 002F                        __pbssBANK0 0020                 SendSlaveAddress@i 0073  
                       ?_SendByte 0070           __size_of_Fix_Initialize 0009                        __pmaintext 0713  
                 __CFG_PPS1WAY$ON 0000             __size_of_ConfigureSSC 0061                           _OSCSTAT 009A  
                         _OSCTUNE 0098                           _WDTCON0 0711                           _WDTCON1 0712  
                         _BandSel 007A                      _ConfigureSSC 0648                        ??_SendByte 0070  
                      _counterHEF 0028                           _SendBit 059A                   _WWDT_Initialize 0579  
                       _CABandSel 007C                        _errorCheck 0029                  ??_DAC1_SetOutput 0070  
         ConfigureShiftRegister@i 0071                           __ptext1 058E                           __ptext2 0579  
                         __ptext3 05D7                           __ptext4 0573                           __ptext5 056E  
                         __ptext6 05A7                           __ptext7 0569                           __ptext8 0585  
                         __ptext9 0619                    _GenerateDACOut 05A7                           _counter 0027  
           _OSCILLATOR_Initialize 0573          ??_PIN_MANAGER_Initialize 0070        __size_of_SYSTEM_Initialize 000C  
                         clrloop0 0580              end_of_initialization 07FD                      ??_EnableLDOs 0070  
                    __pstringtext 0800            __end_of_GenerateDACOut 05BD          ??_ConfigureShiftRegister 0070  
        __end_of_SendSlaveAddress 0619                  __CFG_FOSC$INTOSC 0000              __end_of_SLAVEADDRESS 0859  
            __CFG_WDTCCS$MFINTOSC 0000                __end_of_EnableLDOs 0648           __end_of_WWDT_Initialize 057F  
                  __end_of_PARITY 0851                    _Fix_Initialize 0585                   ?_GenerateDACOut 0070  
          ?_OSCILLATOR_Initialize 0070               start_initialization 07F1                         SendByte@i 0072  
 __size_of_PIN_MANAGER_Initialize 001D            __end_of_Fix_Initialize 058E                 __size_of_SendByte 001A  
                 SendBit@BitValue 0070   __size_of_ConfigureShiftRegister 006A                     _COMMANDPARITY 0855  
        __size_of_DAC1_Initialize 0005                       __pbssCOMMON 0079                         ___latbits 0002  
                       _adcResult 0020                SendSlaveAddress@Id 0071                  ?_WWDT_Initialize 0070  
                 ?_Fix_Initialize 0070                    ConfigureSSC@Id 0075                         __pnvBANK0 002E  
                        ?_SendBit 0070            _PIN_MANAGER_Initialize 05D7                         _labNumber 002A  
                        _DAC1CON0 0118                          _DAC1CON1 0119                          _DACLEVEL 0851  
                __CFG_WDTE$SWDTEN 0000            _ConfigureShiftRegister 06A9             __CFG_WDTCWS$WDTCWS100 0000  
                       clear_ram0 057F                          _PCONbits 0096                      _SLAVEADDRESS 0857  
                       _rotateReg 002C                 ?_SendSlaveAddress 0070                ??_SendSlaveAddress 0070  
               ??_DAC1_Initialize 0070                        _ACTIVEBAND 0800                          _SendByte 05BD  
                ??_GenerateDACOut 0071                  __size_of_SendBit 000D           ??_OSCILLATOR_Initialize 0070  
         __size_of_DAC1_SetOutput 0005                          _labState 002B                          __ptext10 06A9  
                        __ptext11 0648                          __ptext12 05F4                          __ptext13 05BD  
                        __ptext14 059A                          _btnState 0026                     __size_of_main 00DE  
             __CFG_WDTCPS$WDTCPSE 0000  ConfigureShiftRegister@ReverseReg 0072                  ??_Fix_Initialize 0070  
         ?_PIN_MANAGER_Initialize 0070                     ?_ConfigureSSC 0074                 __CFG_CLKOUTEN$OFF 0000  
                     _WDTCON0bits 0711           ?_ConfigureShiftRegister 0070    __end_of_PIN_MANAGER_Initialize 05F4  
                  ??_ConfigureSSC 0075  
