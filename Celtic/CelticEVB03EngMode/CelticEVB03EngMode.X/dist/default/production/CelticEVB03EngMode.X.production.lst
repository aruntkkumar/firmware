

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue May 03 09:56:14 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18LF23K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    21  0000                     
    22                           	psect	mediumconst
    23  001EB0                     __pmediumconst:
    24                           	opt stack 0
    25  001EB0  00                 	db	0
    26  001EB1                     _ADDRESSDATA:
    27                           	opt stack 0
    28  001EB1  18                 	db	24
    29  001EB2  18                 	db	24
    30  001EB3  18                 	db	24
    31  001EB4  18                 	db	24
    32  001EB5  18                 	db	24
    33  001EB6  18                 	db	24
    34  001EB7  18                 	db	24
    35  001EB8  18                 	db	24
    36  001EB9  18                 	db	24
    37  001EBA  18                 	db	24
    38  001EBB  18                 	db	24
    39  001EBC  18                 	db	24
    40  001EBD  18                 	db	24
    41  001EBE  18                 	db	24
    42  001EBF  18                 	db	24
    43  001EC0  18                 	db	24
    44  001EC1  18                 	db	24
    45  001EC2  18                 	db	24
    46  001EC3  18                 	db	24
    47  001EC4  18                 	db	24
    48  001EC5  18                 	db	24
    49  001EC6  18                 	db	24
    50  001EC7  18                 	db	24
    51  001EC8  18                 	db	24
    52  001EC9  18                 	db	24
    53  001ECA  18                 	db	24
    54  001ECB  18                 	db	24
    55  001ECC  18                 	db	24
    56  001ECD  18                 	db	24
    57  001ECE  18                 	db	24
    58  001ECF  18                 	db	24
    59  001ED0  18                 	db	24
    60  001ED1  19                 	db	25
    61  001ED2  19                 	db	25
    62  001ED3  19                 	db	25
    63  001ED4  19                 	db	25
    64  001ED5  19                 	db	25
    65  001ED6  19                 	db	25
    66  001ED7  19                 	db	25
    67  001ED8  19                 	db	25
    68  001ED9  19                 	db	25
    69  001EDA  19                 	db	25
    70  001EDB  19                 	db	25
    71  001EDC  19                 	db	25
    72  001EDD  19                 	db	25
    73  001EDE  19                 	db	25
    74  001EDF  19                 	db	25
    75  001EE0  19                 	db	25
    76  001EE1  19                 	db	25
    77  001EE2  19                 	db	25
    78  001EE3  19                 	db	25
    79  001EE4  19                 	db	25
    80  001EE5  19                 	db	25
    81  001EE6  19                 	db	25
    82  001EE7  19                 	db	25
    83  001EE8  19                 	db	25
    84  001EE9  19                 	db	25
    85  001EEA  19                 	db	25
    86  001EEB  19                 	db	25
    87  001EEC  19                 	db	25
    88  001EED  19                 	db	25
    89  001EEE  19                 	db	25
    90  001EEF  19                 	db	25
    91  001EF0  19                 	db	25
    92  001EF1  1A                 	db	26
    93  001EF2                     __end_of_ADDRESSDATA:
    94                           	opt stack 0
    95  001EF2                     _DATA:
    96                           	opt stack 0
    97  001EF2  00                 	db	0
    98  001EF3  80                 	db	128
    99  001EF4  40                 	db	64
   100  001EF5  C0                 	db	192
   101  001EF6  20                 	db	32
   102  001EF7  A0                 	db	160
   103  001EF8  60                 	db	96
   104  001EF9  E0                 	db	224
   105  001EFA  10                 	db	16
   106  001EFB  90                 	db	144
   107  001EFC  50                 	db	80
   108  001EFD  D0                 	db	208
   109  001EFE  30                 	db	48
   110  001EFF  B0                 	db	176
   111  001F00  70                 	db	112
   112  001F01  F0                 	db	240
   113  001F02  08                 	db	8
   114  001F03  88                 	db	136
   115  001F04  48                 	db	72
   116  001F05  C8                 	db	200
   117  001F06  28                 	db	40
   118  001F07  A8                 	db	168
   119  001F08  68                 	db	104
   120  001F09  E8                 	db	232
   121  001F0A  18                 	db	24
   122  001F0B  98                 	db	152
   123  001F0C  58                 	db	88
   124  001F0D  D8                 	db	216
   125  001F0E  38                 	db	56
   126  001F0F  B8                 	db	184
   127  001F10  78                 	db	120
   128  001F11  F8                 	db	248
   129  001F12  04                 	db	4
   130  001F13  84                 	db	132
   131  001F14  44                 	db	68
   132  001F15  C4                 	db	196
   133  001F16  24                 	db	36
   134  001F17  A4                 	db	164
   135  001F18  64                 	db	100
   136  001F19  E4                 	db	228
   137  001F1A  14                 	db	20
   138  001F1B  94                 	db	148
   139  001F1C  54                 	db	84
   140  001F1D  D4                 	db	212
   141  001F1E  34                 	db	52
   142  001F1F  B4                 	db	180
   143  001F20  74                 	db	116
   144  001F21  F4                 	db	244
   145  001F22  0C                 	db	12
   146  001F23  8C                 	db	140
   147  001F24  4C                 	db	76
   148  001F25  CC                 	db	204
   149  001F26  2C                 	db	44
   150  001F27  AC                 	db	172
   151  001F28  6C                 	db	108
   152  001F29  EC                 	db	236
   153  001F2A  1C                 	db	28
   154  001F2B  9C                 	db	156
   155  001F2C  5C                 	db	92
   156  001F2D  DC                 	db	220
   157  001F2E  3C                 	db	60
   158  001F2F  BC                 	db	188
   159  001F30  7C                 	db	124
   160  001F31  FC                 	db	252
   161  001F32  06                 	db	6
   162  001F33                     __end_of_DATA:
   163                           	opt stack 0
   164  001F33                     _DATABUSPARK:
   165                           	opt stack 0
   166  001F33  04                 	db	4
   167  001F34  08                 	db	8
   168  001F35  10                 	db	16
   169  001F36  1C                 	db	28
   170  001F37  20                 	db	32
   171  001F38  2C                 	db	44
   172  001F39  34                 	db	52
   173  001F3A  38                 	db	56
   174  001F3B  40                 	db	64
   175  001F3C  4C                 	db	76
   176  001F3D  54                 	db	84
   177  001F3E  58                 	db	88
   178  001F3F  64                 	db	100
   179  001F40  68                 	db	104
   180  001F41  70                 	db	112
   181  001F42  7C                 	db	124
   182  001F43  80                 	db	128
   183  001F44  8C                 	db	140
   184  001F45  94                 	db	148
   185  001F46  98                 	db	152
   186  001F47  A4                 	db	164
   187  001F48  A8                 	db	168
   188  001F49  B0                 	db	176
   189  001F4A  BC                 	db	188
   190  001F4B  C4                 	db	196
   191  001F4C  C8                 	db	200
   192  001F4D  D0                 	db	208
   193  001F4E  DC                 	db	220
   194  001F4F  E0                 	db	224
   195  001F50  EC                 	db	236
   196  001F51  F4                 	db	244
   197  001F52  F8                 	db	248
   198  001F53  00                 	db	0
   199  001F54  0C                 	db	12
   200  001F55  14                 	db	20
   201  001F56  18                 	db	24
   202  001F57  24                 	db	36
   203  001F58  28                 	db	40
   204  001F59  30                 	db	48
   205  001F5A  3C                 	db	60
   206  001F5B  44                 	db	68
   207  001F5C  48                 	db	72
   208  001F5D  50                 	db	80
   209  001F5E  5C                 	db	92
   210  001F5F  60                 	db	96
   211  001F60  6C                 	db	108
   212  001F61  74                 	db	116
   213  001F62  78                 	db	120
   214  001F63  84                 	db	132
   215  001F64  88                 	db	136
   216  001F65  90                 	db	144
   217  001F66  9C                 	db	156
   218  001F67  A0                 	db	160
   219  001F68  AC                 	db	172
   220  001F69  B4                 	db	180
   221  001F6A  B8                 	db	184
   222  001F6B  C0                 	db	192
   223  001F6C  CC                 	db	204
   224  001F6D  D4                 	db	212
   225  001F6E  D8                 	db	216
   226  001F6F  E4                 	db	228
   227  001F70  E8                 	db	232
   228  001F71  F0                 	db	240
   229  001F72  FC                 	db	252
   230  001F73  04                 	db	4
   231  001F74                     __end_of_DATABUSPARK:
   232                           	opt stack 0
   233  001F74                     _PARITY:
   234                           	opt stack 0
   235  001F74  01                 	db	1
   236  001F75  00                 	db	0
   237  001F76  00                 	db	0
   238  001F77  01                 	db	1
   239  001F78  00                 	db	0
   240  001F79  01                 	db	1
   241  001F7A  01                 	db	1
   242  001F7B  00                 	db	0
   243  001F7C  00                 	db	0
   244  001F7D  01                 	db	1
   245  001F7E  01                 	db	1
   246  001F7F  00                 	db	0
   247  001F80  01                 	db	1
   248  001F81  00                 	db	0
   249  001F82  00                 	db	0
   250  001F83  01                 	db	1
   251  001F84  00                 	db	0
   252  001F85  01                 	db	1
   253  001F86  01                 	db	1
   254  001F87  00                 	db	0
   255  001F88  01                 	db	1
   256  001F89  00                 	db	0
   257  001F8A  00                 	db	0
   258  001F8B  01                 	db	1
   259  001F8C  01                 	db	1
   260  001F8D  00                 	db	0
   261  001F8E  00                 	db	0
   262  001F8F  01                 	db	1
   263  001F90  00                 	db	0
   264  001F91  01                 	db	1
   265  001F92  01                 	db	1
   266  001F93  00                 	db	0
   267  001F94  00                 	db	0
   268  001F95  01                 	db	1
   269  001F96  01                 	db	1
   270  001F97  00                 	db	0
   271  001F98  01                 	db	1
   272  001F99  00                 	db	0
   273  001F9A  00                 	db	0
   274  001F9B  01                 	db	1
   275  001F9C  01                 	db	1
   276  001F9D  00                 	db	0
   277  001F9E  00                 	db	0
   278  001F9F  01                 	db	1
   279  001FA0  00                 	db	0
   280  001FA1  01                 	db	1
   281  001FA2  01                 	db	1
   282  001FA3  00                 	db	0
   283  001FA4  01                 	db	1
   284  001FA5  00                 	db	0
   285  001FA6  00                 	db	0
   286  001FA7  01                 	db	1
   287  001FA8  00                 	db	0
   288  001FA9  01                 	db	1
   289  001FAA  01                 	db	1
   290  001FAB  00                 	db	0
   291  001FAC  00                 	db	0
   292  001FAD  01                 	db	1
   293  001FAE  01                 	db	1
   294  001FAF  00                 	db	0
   295  001FB0  01                 	db	1
   296  001FB1  00                 	db	0
   297  001FB2  00                 	db	0
   298  001FB3  01                 	db	1
   299  001FB4  01                 	db	1
   300  001FB5                     __end_of_PARITY:
   301                           	opt stack 0
   302  001FB5                     _ACTIVEBAND:
   303                           	opt stack 0
   304  001FB5  00                 	db	0
   305  001FB6  00                 	db	0
   306  001FB7  00                 	db	0
   307  001FB8  00                 	db	0
   308  001FB9  00                 	db	0
   309  001FBA  01                 	db	1
   310  001FBB  00                 	db	0
   311  001FBC  00                 	db	0
   312  001FBD  01                 	db	1
   313  001FBE  00                 	db	0
   314  001FBF  00                 	db	0
   315  001FC0  00                 	db	0
   316  001FC1  01                 	db	1
   317  001FC2  01                 	db	1
   318  001FC3  00                 	db	0
   319  001FC4  00                 	db	0
   320  001FC5  00                 	db	0
   321  001FC6  00                 	db	0
   322  001FC7  00                 	db	0
   323  001FC8  00                 	db	0
   324  001FC9  01                 	db	1
   325  001FCA  00                 	db	0
   326  001FCB  00                 	db	0
   327  001FCC  00                 	db	0
   328  001FCD  00                 	db	0
   329  001FCE  00                 	db	0
   330  001FCF  01                 	db	1
   331  001FD0  00                 	db	0
   332  001FD1  00                 	db	0
   333  001FD2  01                 	db	1
   334  001FD3  00                 	db	0
   335  001FD4  00                 	db	0
   336  001FD5  00                 	db	0
   337  001FD6  00                 	db	0
   338  001FD7  00                 	db	0
   339  001FD8  00                 	db	0
   340  001FD9  00                 	db	0
   341  001FDA  00                 	db	0
   342  001FDB  00                 	db	0
   343  001FDC  00                 	db	0
   344  001FDD  00                 	db	0
   345  001FDE  00                 	db	0
   346  001FDF  00                 	db	0
   347  001FE0  00                 	db	0
   348  001FE1  00                 	db	0
   349  001FE2  00                 	db	0
   350  001FE3  00                 	db	0
   351  001FE4  00                 	db	0
   352  001FE5  00                 	db	0
   353  001FE6  00                 	db	0
   354  001FE7  00                 	db	0
   355  001FE8  00                 	db	0
   356  001FE9  00                 	db	0
   357  001FEA  00                 	db	0
   358  001FEB  00                 	db	0
   359  001FEC  00                 	db	0
   360  001FED  00                 	db	0
   361  001FEE  00                 	db	0
   362  001FEF  00                 	db	0
   363  001FF0  00                 	db	0
   364  001FF1  00                 	db	0
   365  001FF2  00                 	db	0
   366  001FF3  00                 	db	0
   367  001FF4  00                 	db	0
   368  001FF5                     __end_of_ACTIVEBAND:
   369                           	opt stack 0
   370  001FF5                     _DacOutput:
   371                           	opt stack 0
   372  001FF5  2B                 	db	43
   373  001FF6  48                 	db	72
   374  001FF7  56                 	db	86
   375  001FF8  64                 	db	100
   376  001FF9                     __end_of_DacOutput:
   377                           	opt stack 0
   378  001FF9                     _REGADD:
   379                           	opt stack 0
   380  001FF9  07                 	db	7
   381  001FFA  10                 	db	16
   382  001FFB                     __end_of_REGADD:
   383                           	opt stack 0
   384  001FFB                     _SLAVEADD:
   385                           	opt stack 0
   386  001FFB  06                 	db	6
   387  001FFC  0E                 	db	14
   388  001FFD                     __end_of_SLAVEADD:
   389                           	opt stack 0
   390  001FFD                     _SLAVEWRITEADD:
   391                           	opt stack 0
   392  001FFD  64                 	db	100
   393  001FFE  74                 	db	116
   394  001FFF                     __end_of_SLAVEWRITEADD:
   395                           	opt stack 0
   396  0000                     _ANSELA	set	3896
   397  0000                     _ANSELB	set	3897
   398  0000                     _ANSELC	set	3898
   399  0000                     _DACCON1	set	3904
   400  0000                     _VREFCON1	set	3905
   401  0000                     _INTCON2bits	set	4081
   402  0000                     _INTCONbits	set	4082
   403  0000                     _IOCB	set	3938
   404  0000                     _LATA	set	3977
   405  0000                     _LATB	set	3978
   406  0000                     _LATC	set	3979
   407  0000                     _OSCCON	set	4051
   408  0000                     _OSCCON2	set	4050
   409  0000                     _OSCTUNE	set	3995
   410  0000                     _PORTC	set	3970
   411  0000                     _SSP1ADD	set	4040
   412  0000                     _SSP1BUF	set	4041
   413  0000                     _SSP1CON1	set	4038
   414  0000                     _SSP1CON1bits	set	4038
   415  0000                     _SSP1STAT	set	4039
   416  0000                     _SSP1STATbits	set	4039
   417  0000                     _TRISA	set	3986
   418  0000                     _TRISB	set	3987
   419  0000                     _TRISC	set	3988
   420  0000                     _WPUB	set	3937
   421  0000                     _LATA0	set	31816
   422  0000                     _LATA1	set	31817
   423  0000                     _LATA6	set	31822
   424  0000                     _LATA7	set	31823
   425  0000                     _LATC0	set	31832
   426  0000                     _LATC1	set	31833
   427  0000                     _LATC5	set	31837
   428                           
   429                           ; #config settings
   430  001FFF  00                 	db	0	; dummy byte at the end
   431  0000                     
   432                           	psect	cinit
   433  001C80                     __pcinit:
   434                           	opt stack 0
   435  001C80                     start_initialization:
   436                           	opt stack 0
   437  001C80                     __initialization:
   438                           	opt stack 0
   439                           
   440                           ; Clear objects allocated to COMRAM (9 bytes)
   441  001C80  EE00  F001         	lfsr	0,__pbssCOMRAM
   442  001C84  0E09               	movlw	9
   443  001C86                     clear_0:
   444  001C86  6AEE               	clrf	postinc0,c
   445  001C88  06E8               	decf	wreg,f,c
   446  001C8A  E1FD               	bnz	clear_0
   447  001C8C                     end_of_initialization:
   448                           	opt stack 0
   449  001C8C                     __end_of__initialization:
   450                           	opt stack 0
   451  001C8C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   452  001C8E  6EF8               	movwf	tblptru,c
   453  001C90  0100               	movlb	0
   454  001C92  EFAE  F00E         	goto	_main	;jump to C main() function
   455                           tblptru	equ	0xFF8
   456                           postinc0	equ	0xFEE
   457                           wreg	equ	0xFE8
   458                           
   459                           	psect	bssCOMRAM
   460  000001                     __pbssCOMRAM:
   461                           	opt stack 0
   462  000001                     _Byte1:
   463                           	opt stack 0
   464  000001                     	ds	1
   465  000002                     _Byte2:
   466                           	opt stack 0
   467  000002                     	ds	1
   468  000003                     _Byte3:
   469                           	opt stack 0
   470  000003                     	ds	1
   471  000004                     _Byte4:
   472                           	opt stack 0
   473  000004                     	ds	1
   474  000005                     _Byte5:
   475                           	opt stack 0
   476  000005                     	ds	1
   477  000006                     _Byte6:
   478                           	opt stack 0
   479  000006                     	ds	1
   480  000007                     _DAC_Step:
   481                           	opt stack 0
   482  000007                     	ds	1
   483  000008                     _Dummy:
   484                           	opt stack 0
   485  000008                     	ds	1
   486  000009                     _start:
   487                           	opt stack 0
   488  000009                     	ds	1
   489                           tblptru	equ	0xFF8
   490                           postinc0	equ	0xFEE
   491                           wreg	equ	0xFE8
   492                           
   493                           	psect	cstackCOMRAM
   494  00000A                     __pcstackCOMRAM:
   495                           	opt stack 0
   496  00000A                     DAC_SetOutput@inputData:
   497                           	opt stack 0
   498  00000A                     SPI1_Exchange8bit@data:
   499                           	opt stack 0
   500                           
   501                           ; 1 bytes @ 0x0
   502  00000A                     	ds	1
   503  00000B                     MIPISPI@b:
   504                           	opt stack 0
   505                           
   506                           ; 1 bytes @ 0x1
   507  00000B                     	ds	1
   508  00000C                     MIPISPI@a:
   509                           	opt stack 0
   510                           
   511                           ; 1 bytes @ 0x2
   512  00000C                     	ds	1
   513  00000D                     ??_main:
   514                           
   515                           ; 0 bytes @ 0x3
   516  00000D                     	ds	2
   517                           tblptru	equ	0xFF8
   518                           postinc0	equ	0xFEE
   519                           wreg	equ	0xFE8
   520                           
   521 ;;
   522 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   523 ;;
   524 ;; *************** function _main *****************
   525 ;; Defined at:
   526 ;;		line 141 in file "main.c"
   527 ;; Parameters:    Size  Location     Type
   528 ;;		None
   529 ;; Auto vars:     Size  Location     Type
   530 ;;		None
   531 ;; Return value:  Size  Location     Type
   532 ;;		None               void
   533 ;; Registers used:
   534 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   535 ;; Tracked objects:
   536 ;;		On entry : 0/0
   537 ;;		On exit  : 0/0
   538 ;;		Unchanged: 0/0
   539 ;; Data sizes:     COMRAM   BANK0   BANK1
   540 ;;      Params:         0       0       0
   541 ;;      Locals:         0       0       0
   542 ;;      Temps:          2       0       0
   543 ;;      Totals:         2       0       0
   544 ;;Total ram usage:        2 bytes
   545 ;; Hardware stack levels required when called:    2
   546 ;; This function calls:
   547 ;;		_DAC_SetOutput
   548 ;;		_MIPISPI
   549 ;;		_SYSTEM_Initialize
   550 ;; This function is called by:
   551 ;;		Startup code after reset
   552 ;; This function uses a non-reentrant model
   553 ;;
   554                           
   555                           	psect	text0
   556  001D5C                     __ptext0:
   557                           	opt stack 0
   558  001D5C                     _main:
   559                           	opt stack 29
   560                           
   561                           ;main.c: 145: if (start == 1) goto reset;
   562                           
   563                           ;incstack = 0
   564  001D5C  0409               	decf	_start,w,c
   565  001D5E  B4D8               	btfsc	status,2,c
   566  001D60  D011               	goto	l1069
   567  001D62  D001               	goto	l1055
   568  001D64  D00F               	goto	l1069
   569  001D66                     l1055:
   570                           
   571                           ;main.c: 147: SYSTEM_Initialize();
   572  001D66  EC35  F00E         	call	_SYSTEM_Initialize	;wreg free
   573  001D6A  D000               	goto	l1057
   574  001D6C                     l1057:
   575  001D6C  9089               	bcf	3977,0,c	;volatile
   576  001D6E  D000               	goto	l1059
   577  001D70                     l1059:
   578  001D70  9289               	bcf	3977,1,c	;volatile
   579  001D72  D000               	goto	l1061
   580  001D74                     l1061:
   581  001D74  9C89               	bcf	3977,6,c	;volatile
   582  001D76  D000               	goto	l1063
   583  001D78                     l1063:
   584  001D78  9E89               	bcf	3977,7,c	;volatile
   585  001D7A  D000               	goto	l1065
   586  001D7C                     l1065:
   587  001D7C  908B               	bcf	3979,0,c	;volatile
   588  001D7E  D000               	goto	l1067
   589  001D80                     l1067:
   590  001D80  928B               	bcf	3979,1,c	;volatile
   591  001D82  D000               	goto	l1069
   592  001D84                     l1069:
   593                           
   594                           ;main.c: 184: start = 1;
   595  001D84  0E01               	movlw	1
   596  001D86  6E09               	movwf	_start,c
   597                           
   598                           ;main.c: 185: if (INTCONbits.RBIF == 0) {
   599  001D88  A0F2               	btfss	intcon,0,c	;volatile
   600  001D8A  D08E               	goto	l213
   601                           
   602                           ;main.c: 187: else {
   603                           ;main.c: 188: INTCONbits.RBIF = 0;}
   604  001D8C  90F2               	bcf	intcon,0,c	;volatile
   605                           
   606                           ;main.c: 191: while ((PORTC & 0xC0) != 0xC0) {
   607                           
   608                           ;main.c: 189: while (1) {
   609  001D8E  D000               	goto	l1075
   610  001D90                     l1075:
   611  001D90  5082               	movf	3970,w,c	;volatile
   612  001D92  0BC0               	andlw	192
   613  001D94  0AC0               	xorlw	192
   614  001D96  A4D8               	btfss	status,2,c
   615  001D98  D7FB               	goto	l1075
   616                           
   617                           ;main.c: 192: }
   618                           ;main.c: 193: Byte1 = PORTC;
   619  001D9A  CF82 F001          	movff	3970,_Byte1	;volatile
   620                           
   621                           ;main.c: 195: while ((PORTC & 0xC0) != 0x80) {
   622  001D9E  D000               	goto	l1077
   623  001DA0                     l1077:
   624  001DA0  5082               	movf	3970,w,c	;volatile
   625  001DA2  0BC0               	andlw	192
   626  001DA4  0A80               	xorlw	128
   627  001DA6  A4D8               	btfss	status,2,c
   628  001DA8  D7FB               	goto	l1077
   629                           
   630                           ;main.c: 196: }
   631                           ;main.c: 197: Byte3 = PORTC & 0x3F;
   632  001DAA  5082               	movf	3970,w,c	;volatile
   633  001DAC  0B3F               	andlw	63
   634  001DAE  6E03               	movwf	_Byte3,c
   635                           
   636                           ;main.c: 199: while ((PORTC & 0xC0) != 0x40) {
   637  001DB0  D000               	goto	l1081
   638  001DB2                     l1081:
   639  001DB2  5082               	movf	3970,w,c	;volatile
   640  001DB4  0BC0               	andlw	192
   641  001DB6  0A40               	xorlw	64
   642  001DB8  A4D8               	btfss	status,2,c
   643  001DBA  D7FB               	goto	l1081
   644                           
   645                           ;main.c: 200: }
   646                           ;main.c: 201: Byte4 = PORTC & 0x3F;
   647  001DBC  5082               	movf	3970,w,c	;volatile
   648  001DBE  0B3F               	andlw	63
   649  001DC0  6E04               	movwf	_Byte4,c
   650                           
   651                           ;main.c: 203: while ((PORTC & 0x80) != 0x80) {
   652  001DC2  D000               	goto	l166
   653  001DC4                     l166:
   654  001DC4  AE82               	btfss	3970,7,c	;volatile
   655  001DC6  D7FE               	goto	l166
   656                           
   657                           ;main.c: 204: }
   658                           ;main.c: 205: Byte5 = PORTC & 0x7F;
   659  001DC8  5082               	movf	3970,w,c	;volatile
   660  001DCA  0B7F               	andlw	127
   661  001DCC  6E05               	movwf	_Byte5,c
   662                           
   663                           ;main.c: 207: while ((PORTC & 0x80) != 0x00) {
   664  001DCE  D000               	goto	l169
   665  001DD0                     l169:
   666  001DD0  BE82               	btfsc	3970,7,c	;volatile
   667  001DD2  D7FE               	goto	l169
   668                           
   669                           ;main.c: 208: }
   670                           ;main.c: 209: Byte6 = PORTC & 0x7F;
   671  001DD4  5082               	movf	3970,w,c	;volatile
   672  001DD6  0B7F               	andlw	127
   673  001DD8  6E06               	movwf	_Byte6,c
   674                           
   675                           ;main.c: 212: DAC_Step = ((Byte4 << 4) & 0xC0);
   676  001DDA  3804               	swapf	_Byte4,w,c
   677  001DDC  0BF0               	andlw	240
   678  001DDE  0BC0               	andlw	192
   679  001DE0  6E07               	movwf	_DAC_Step,c
   680                           
   681                           ;main.c: 213: DAC_Step = (DAC_Step | Byte3);
   682  001DE2  5007               	movf	_DAC_Step,w,c
   683  001DE4  1003               	iorwf	_Byte3,w,c
   684  001DE6  6E07               	movwf	_DAC_Step,c
   685                           
   686                           ;main.c: 214: DAC_SetOutput(DAC_Step);
   687  001DE8  5007               	movf	_DAC_Step,w,c
   688  001DEA  EC0D  F00E         	call	_DAC_SetOutput
   689                           
   690                           ;main.c: 217: if ((Byte4 & 0x02) == 0x02)
   691  001DEE  A204               	btfss	_Byte4,1,c
   692  001DF0  D002               	goto	l176
   693                           
   694                           ;main.c: 218: do { LATA0 = 1; } while(0);
   695  001DF2  8089               	bsf	3977,0,c	;volatile
   696  001DF4  D002               	goto	l175
   697  001DF6                     l176:
   698  001DF6  9089               	bcf	3977,0,c	;volatile
   699  001DF8  D000               	goto	l175
   700  001DFA                     l175:
   701                           
   702                           ;main.c: 221: if ((Byte4 & 0x01) == 0x01)
   703  001DFA  A004               	btfss	_Byte4,0,c
   704  001DFC  D002               	goto	l182
   705                           
   706                           ;main.c: 222: do { LATA1 = 1; } while(0);
   707  001DFE  8289               	bsf	3977,1,c	;volatile
   708  001E00  D002               	goto	l1093
   709  001E02                     l182:
   710  001E02  9289               	bcf	3977,1,c	;volatile
   711  001E04  D000               	goto	l1093
   712  001E06                     l1093:
   713                           
   714                           ;main.c: 228: MIPISPI(Byte5, Byte6);
   715  001E06  C006  F00B         	movff	_Byte6,MIPISPI@b
   716  001E0A  5005               	movf	_Byte5,w,c
   717  001E0C  EC63  F00E         	call	_MIPISPI
   718                           
   719                           ;main.c: 232: switch ((Byte1 & 0x38)){
   720  001E10  D010               	goto	l1097
   721  001E12                     l186:
   722  001E12  9C89               	bcf	3977,6,c	;volatile
   723  001E14  D004               	goto	l194
   724                           
   725                           ;main.c: 235: do { LATA7 = 0; } while(0);
   726  001E16  D003               	goto	l194
   727                           
   728                           ;main.c: 236: break;
   729  001E18  D032               	goto	l1101
   730  001E1A                     l192:
   731  001E1A  8C89               	bsf	3977,6,c	;volatile
   732  001E1C  D000               	goto	l194
   733  001E1E                     l194:
   734  001E1E  9E89               	bcf	3977,7,c	;volatile
   735                           
   736                           ;main.c: 240: break;
   737  001E20  D02E               	goto	l1101
   738  001E22                     l197:
   739  001E22  9C89               	bcf	3977,6,c	;volatile
   740  001E24  D004               	goto	l204
   741                           
   742                           ;main.c: 243: do { LATA7 = 1; } while(0);
   743  001E26  D003               	goto	l204
   744                           
   745                           ;main.c: 244: break;
   746  001E28  D02A               	goto	l1101
   747  001E2A                     l202:
   748  001E2A  8C89               	bsf	3977,6,c	;volatile
   749  001E2C  D000               	goto	l204
   750  001E2E                     l204:
   751  001E2E  8E89               	bsf	3977,7,c	;volatile
   752                           
   753                           ;main.c: 251: }
   754                           
   755                           ;main.c: 250: break;
   756                           
   757                           ;main.c: 249: default:
   758                           
   759                           ;main.c: 248: break;
   760  001E30  D026               	goto	l1101
   761  001E32                     l1097:
   762  001E32  5001               	movf	_Byte1,w,c
   763  001E34  0B38               	andlw	56
   764  001E36  6E0D               	movwf	??_main& (0+255),c
   765  001E38  6A0E               	clrf	(??_main+1)& (0+255),c
   766                           
   767                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   768                           ; Switch size 1, requested type "space"
   769                           ; Number of cases is 1, Range of values is 0 to 0
   770                           ; switch strategies available:
   771                           ; Name         Instructions Cycles
   772                           ; simple_byte            4     3 (average)
   773                           ;	Chosen strategy is simple_byte
   774  001E3A  500E               	movf	??_main+1,w,c
   775  001E3C  0A00               	xorlw	0	; case 0
   776  001E3E  A4D8               	btfss	status,2,c
   777  001E40  D01E               	goto	l1101
   778                           
   779                           ; Switch size 1, requested type "space"
   780                           ; Number of cases is 4, Range of values is 0 to 48
   781                           ; switch strategies available:
   782                           ; Name         Instructions Cycles
   783                           ; simple_byte           13     7 (average)
   784                           ;	Chosen strategy is simple_byte
   785  001E42  500D               	movf	??_main,w,c
   786  001E44  0A00               	xorlw	0	; case 0
   787  001E46  B4D8               	btfsc	status,2,c
   788  001E48  D7E4               	goto	l186
   789  001E4A  0A10               	xorlw	16	; case 16
   790  001E4C  B4D8               	btfsc	status,2,c
   791  001E4E  D7E9               	goto	l197
   792  001E50  0A30               	xorlw	48	; case 32
   793  001E52  B4D8               	btfsc	status,2,c
   794  001E54  D7E2               	goto	l192
   795  001E56  0A10               	xorlw	16	; case 48
   796  001E58  B4D8               	btfsc	status,2,c
   797  001E5A  D7E7               	goto	l202
   798                           
   799                           ;main.c: 253: switch ((Byte1 & 0x07)){
   800  001E5C  D010               	goto	l1101
   801  001E5E                     l209:
   802  001E5E  908B               	bcf	3979,0,c	;volatile
   803  001E60  D004               	goto	l217
   804                           
   805                           ;main.c: 256: do { LATC1 = 0; } while(0);
   806  001E62  D003               	goto	l217
   807                           
   808                           ;main.c: 257: break;
   809  001E64  D021               	goto	l213
   810  001E66                     l215:
   811  001E66  808B               	bsf	3979,0,c	;volatile
   812  001E68  D000               	goto	l217
   813  001E6A                     l217:
   814  001E6A  928B               	bcf	3979,1,c	;volatile
   815                           
   816                           ;main.c: 261: break;
   817  001E6C  D01D               	goto	l213
   818  001E6E                     l220:
   819  001E6E  908B               	bcf	3979,0,c	;volatile
   820  001E70  D004               	goto	l227
   821                           
   822                           ;main.c: 264: do { LATC1 = 1; } while(0);
   823  001E72  D003               	goto	l227
   824                           
   825                           ;main.c: 265: break;
   826  001E74  D019               	goto	l213
   827  001E76                     l225:
   828  001E76  808B               	bsf	3979,0,c	;volatile
   829  001E78  D000               	goto	l227
   830  001E7A                     l227:
   831  001E7A  828B               	bsf	3979,1,c	;volatile
   832                           
   833                           ;main.c: 272: }
   834                           
   835                           ;main.c: 271: break;
   836                           
   837                           ;main.c: 270: default:
   838                           
   839                           ;main.c: 269: break;
   840  001E7C  D015               	goto	l213
   841  001E7E                     l1101:
   842  001E7E  5001               	movf	_Byte1,w,c
   843  001E80  0B07               	andlw	7
   844  001E82  6E0D               	movwf	??_main& (0+255),c
   845  001E84  6A0E               	clrf	(??_main+1)& (0+255),c
   846                           
   847                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   848                           ; Switch size 1, requested type "space"
   849                           ; Number of cases is 1, Range of values is 0 to 0
   850                           ; switch strategies available:
   851                           ; Name         Instructions Cycles
   852                           ; simple_byte            4     3 (average)
   853                           ;	Chosen strategy is simple_byte
   854  001E86  500E               	movf	??_main+1,w,c
   855  001E88  0A00               	xorlw	0	; case 0
   856  001E8A  A4D8               	btfss	status,2,c
   857  001E8C  D00D               	goto	l213
   858                           
   859                           ; Switch size 1, requested type "space"
   860                           ; Number of cases is 4, Range of values is 0 to 6
   861                           ; switch strategies available:
   862                           ; Name         Instructions Cycles
   863                           ; simple_byte           13     7 (average)
   864                           ;	Chosen strategy is simple_byte
   865  001E8E  500D               	movf	??_main,w,c
   866  001E90  0A00               	xorlw	0	; case 0
   867  001E92  B4D8               	btfsc	status,2,c
   868  001E94  D7E4               	goto	l209
   869  001E96  0A02               	xorlw	2	; case 2
   870  001E98  B4D8               	btfsc	status,2,c
   871  001E9A  D7E9               	goto	l220
   872  001E9C  0A06               	xorlw	6	; case 4
   873  001E9E  B4D8               	btfsc	status,2,c
   874  001EA0  D7E2               	goto	l215
   875  001EA2  0A02               	xorlw	2	; case 6
   876  001EA4  B4D8               	btfsc	status,2,c
   877  001EA6  D7E7               	goto	l225
   878  001EA8                     l213:
   879  001EA8  0003               	sleep		;# 
   880  001EAA  D772               	goto	l1075
   881  001EAC  EF00  F000         	goto	start
   882  001EB0                     __end_of_main:
   883                           	opt stack 0
   884                           tblptru	equ	0xFF8
   885                           intcon	equ	0xFF2
   886                           postinc0	equ	0xFEE
   887                           wreg	equ	0xFE8
   888                           status	equ	0xFD8
   889                           
   890 ;; *************** function _SYSTEM_Initialize *****************
   891 ;; Defined at:
   892 ;;		line 106 in file "mcc_generated_files/mcc.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;		None
   895 ;; Auto vars:     Size  Location     Type
   896 ;;		None
   897 ;; Return value:  Size  Location     Type
   898 ;;		None               void
   899 ;; Registers used:
   900 ;;		wreg, status,2, cstack
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMRAM   BANK0   BANK1
   906 ;;      Params:         0       0       0
   907 ;;      Locals:         0       0       0
   908 ;;      Temps:          0       0       0
   909 ;;      Totals:         0       0       0
   910 ;;Total ram usage:        0 bytes
   911 ;; Hardware stack levels used:    1
   912 ;; Hardware stack levels required when called:    1
   913 ;; This function calls:
   914 ;;		_DAC_Initialize
   915 ;;		_INTERRUPT_ON_CHANGE_Initialize
   916 ;;		_OSCILLATOR_Initialize
   917 ;;		_PIN_MANAGER_Initialize
   918 ;;		_SPI1_Initialize
   919 ;; This function is called by:
   920 ;;		_main
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           	psect	text1
   925  001C6A                     __ptext1:
   926                           	opt stack 0
   927  001C6A                     _SYSTEM_Initialize:
   928                           	opt stack 29
   929                           
   930                           ;mcc.c: 107: OSCILLATOR_Initialize();
   931                           
   932                           ;incstack = 0
   933  001C6A  EC1E  F00E         	call	_OSCILLATOR_Initialize	;wreg free
   934                           
   935                           ;mcc.c: 108: PIN_MANAGER_Initialize();
   936  001C6E  EC4B  F00E         	call	_PIN_MANAGER_Initialize	;wreg free
   937                           
   938                           ;mcc.c: 109: DAC_Initialize();
   939  001C72  EC17  F00E         	call	_DAC_Initialize	;wreg free
   940                           
   941                           ;mcc.c: 110: SPI1_Initialize();
   942  001C76  EC25  F00E         	call	_SPI1_Initialize	;wreg free
   943                           
   944                           ;mcc.c: 111: INTERRUPT_ON_CHANGE_Initialize();
   945  001C7A  EC11  F00E         	call	_INTERRUPT_ON_CHANGE_Initialize	;wreg free
   946  001C7E  0012               	return		;funcret
   947  001C80                     __end_of_SYSTEM_Initialize:
   948                           	opt stack 0
   949                           tblptru	equ	0xFF8
   950                           intcon	equ	0xFF2
   951                           postinc0	equ	0xFEE
   952                           wreg	equ	0xFE8
   953                           status	equ	0xFD8
   954                           
   955 ;; *************** function _SPI1_Initialize *****************
   956 ;; Defined at:
   957 ;;		line 64 in file "mcc_generated_files/spi1.c"
   958 ;; Parameters:    Size  Location     Type
   959 ;;		None
   960 ;; Auto vars:     Size  Location     Type
   961 ;;		None
   962 ;; Return value:  Size  Location     Type
   963 ;;		None               void
   964 ;; Registers used:
   965 ;;		wreg, status,2
   966 ;; Tracked objects:
   967 ;;		On entry : 0/0
   968 ;;		On exit  : 0/0
   969 ;;		Unchanged: 0/0
   970 ;; Data sizes:     COMRAM   BANK0   BANK1
   971 ;;      Params:         0       0       0
   972 ;;      Locals:         0       0       0
   973 ;;      Temps:          0       0       0
   974 ;;      Totals:         0       0       0
   975 ;;Total ram usage:        0 bytes
   976 ;; Hardware stack levels used:    1
   977 ;; This function calls:
   978 ;;		Nothing
   979 ;; This function is called by:
   980 ;;		_SYSTEM_Initialize
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984                           	psect	text2
   985  001C4A                     __ptext2:
   986                           	opt stack 0
   987  001C4A                     _SPI1_Initialize:
   988                           	opt stack 29
   989                           
   990                           ;spi1.c: 68: SSP1STAT = 0x00;
   991                           
   992                           ;incstack = 0
   993  001C4A  0E00               	movlw	0
   994  001C4C  6EC7               	movwf	4039,c	;volatile
   995                           
   996                           ;spi1.c: 71: SSP1CON1 = 0x20;
   997  001C4E  0E20               	movlw	32
   998  001C50  6EC6               	movwf	4038,c	;volatile
   999                           
  1000                           ;spi1.c: 74: SSP1ADD = 0x00;
  1001  001C52  0E00               	movlw	0
  1002  001C54  6EC8               	movwf	4040,c	;volatile
  1003  001C56  0012               	return		;funcret
  1004  001C58                     __end_of_SPI1_Initialize:
  1005                           	opt stack 0
  1006                           tblptru	equ	0xFF8
  1007                           intcon	equ	0xFF2
  1008                           postinc0	equ	0xFEE
  1009                           wreg	equ	0xFE8
  1010                           status	equ	0xFD8
  1011                           
  1012 ;; *************** function _PIN_MANAGER_Initialize *****************
  1013 ;; Defined at:
  1014 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  1015 ;; Parameters:    Size  Location     Type
  1016 ;;		None
  1017 ;; Auto vars:     Size  Location     Type
  1018 ;;		None
  1019 ;; Return value:  Size  Location     Type
  1020 ;;		None               void
  1021 ;; Registers used:
  1022 ;;		wreg, status,2
  1023 ;; Tracked objects:
  1024 ;;		On entry : 0/0
  1025 ;;		On exit  : 0/0
  1026 ;;		Unchanged: 0/0
  1027 ;; Data sizes:     COMRAM   BANK0   BANK1
  1028 ;;      Params:         0       0       0
  1029 ;;      Locals:         0       0       0
  1030 ;;      Temps:          0       0       0
  1031 ;;      Totals:         0       0       0
  1032 ;;Total ram usage:        0 bytes
  1033 ;; Hardware stack levels used:    1
  1034 ;; This function calls:
  1035 ;;		Nothing
  1036 ;; This function is called by:
  1037 ;;		_SYSTEM_Initialize
  1038 ;; This function uses a non-reentrant model
  1039 ;;
  1040                           
  1041                           	psect	text3
  1042  001C96                     __ptext3:
  1043                           	opt stack 0
  1044  001C96                     _PIN_MANAGER_Initialize:
  1045                           	opt stack 29
  1046                           
  1047                           ;pin_manager.c: 51: LATA = 0x00;
  1048                           
  1049                           ;incstack = 0
  1050  001C96  0E00               	movlw	0
  1051  001C98  6E89               	movwf	3977,c	;volatile
  1052                           
  1053                           ;pin_manager.c: 52: TRISA = 0x38;
  1054  001C9A  0E38               	movlw	56
  1055  001C9C  6E92               	movwf	3986,c	;volatile
  1056                           
  1057                           ;pin_manager.c: 53: ANSELA = 0x2C;
  1058  001C9E  0E2C               	movlw	44
  1059  001CA0  010F               	movlb	15	; () banked
  1060  001CA2  6F38               	movwf	56,b	;volatile
  1061                           
  1062                           ;pin_manager.c: 55: LATB = 0x00;
  1063  001CA4  0E00               	movlw	0
  1064  001CA6  6E8A               	movwf	3978,c	;volatile
  1065                           
  1066                           ; BSR set to: 15
  1067                           ;pin_manager.c: 56: TRISB = 0xFF;
  1068  001CA8  6893               	setf	3987,c	;volatile
  1069                           
  1070                           ;pin_manager.c: 57: ANSELB = 0x00;
  1071  001CAA  0E00               	movlw	0
  1072  001CAC  010F               	movlb	15	; () banked
  1073  001CAE  6F39               	movwf	57,b	;volatile
  1074                           
  1075                           ;pin_manager.c: 58: WPUB = 0x00;
  1076  001CB0  0E00               	movlw	0
  1077  001CB2  6E61               	movwf	3937,c	;volatile
  1078                           
  1079                           ;pin_manager.c: 60: LATC = 0x00;
  1080  001CB4  0E00               	movlw	0
  1081  001CB6  6E8B               	movwf	3979,c	;volatile
  1082                           
  1083                           ;pin_manager.c: 61: TRISC = 0xD4;
  1084  001CB8  0ED4               	movlw	212
  1085  001CBA  6E94               	movwf	3988,c	;volatile
  1086                           
  1087                           ;pin_manager.c: 62: ANSELC = 0xD4;
  1088  001CBC  0ED4               	movlw	212
  1089  001CBE  010F               	movlb	15	; () banked
  1090  001CC0  6F3A               	movwf	58,b	;volatile
  1091                           
  1092                           ; BSR set to: 15
  1093                           ;pin_manager.c: 64: INTCON2bits.nRBPU = 0x01;
  1094  001CC2  8EF1               	bsf	intcon2,7,c	;volatile
  1095                           
  1096                           ; BSR set to: 15
  1097  001CC4  0012               	return		;funcret
  1098  001CC6                     __end_of_PIN_MANAGER_Initialize:
  1099                           	opt stack 0
  1100                           tblptru	equ	0xFF8
  1101                           intcon	equ	0xFF2
  1102                           intcon2	equ	0xFF1
  1103                           postinc0	equ	0xFEE
  1104                           wreg	equ	0xFE8
  1105                           status	equ	0xFD8
  1106                           
  1107 ;; *************** function _OSCILLATOR_Initialize *****************
  1108 ;; Defined at:
  1109 ;;		line 114 in file "mcc_generated_files/mcc.c"
  1110 ;; Parameters:    Size  Location     Type
  1111 ;;		None
  1112 ;; Auto vars:     Size  Location     Type
  1113 ;;		None
  1114 ;; Return value:  Size  Location     Type
  1115 ;;		None               void
  1116 ;; Registers used:
  1117 ;;		wreg, status,2
  1118 ;; Tracked objects:
  1119 ;;		On entry : 0/0
  1120 ;;		On exit  : 0/0
  1121 ;;		Unchanged: 0/0
  1122 ;; Data sizes:     COMRAM   BANK0   BANK1
  1123 ;;      Params:         0       0       0
  1124 ;;      Locals:         0       0       0
  1125 ;;      Temps:          0       0       0
  1126 ;;      Totals:         0       0       0
  1127 ;;Total ram usage:        0 bytes
  1128 ;; Hardware stack levels used:    1
  1129 ;; This function calls:
  1130 ;;		Nothing
  1131 ;; This function is called by:
  1132 ;;		_SYSTEM_Initialize
  1133 ;; This function uses a non-reentrant model
  1134 ;;
  1135                           
  1136                           	psect	text4
  1137  001C3C                     __ptext4:
  1138                           	opt stack 0
  1139  001C3C                     _OSCILLATOR_Initialize:
  1140                           	opt stack 29
  1141                           
  1142                           ;mcc.c: 116: OSCCON = 0x70;
  1143                           
  1144                           ; BSR set to: 15
  1145                           ;incstack = 0
  1146  001C3C  0E70               	movlw	112
  1147  001C3E  6ED3               	movwf	4051,c	;volatile
  1148                           
  1149                           ;mcc.c: 118: OSCCON2 = 0x04;
  1150  001C40  0E04               	movlw	4
  1151  001C42  6ED2               	movwf	4050,c	;volatile
  1152                           
  1153                           ;mcc.c: 120: OSCTUNE = 0x40;
  1154  001C44  0E40               	movlw	64
  1155  001C46  6E9B               	movwf	3995,c	;volatile
  1156  001C48  0012               	return		;funcret
  1157  001C4A                     __end_of_OSCILLATOR_Initialize:
  1158                           	opt stack 0
  1159                           tblptru	equ	0xFF8
  1160                           intcon	equ	0xFF2
  1161                           intcon2	equ	0xFF1
  1162                           postinc0	equ	0xFEE
  1163                           wreg	equ	0xFE8
  1164                           status	equ	0xFD8
  1165                           
  1166 ;; *************** function _INTERRUPT_ON_CHANGE_Initialize *****************
  1167 ;; Defined at:
  1168 ;;		line 125 in file "mcc_generated_files/mcc.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;		None
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;		None
  1173 ;; Return value:  Size  Location     Type
  1174 ;;		None               void
  1175 ;; Registers used:
  1176 ;;		wreg, status,2
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMRAM   BANK0   BANK1
  1182 ;;      Params:         0       0       0
  1183 ;;      Locals:         0       0       0
  1184 ;;      Temps:          0       0       0
  1185 ;;      Totals:         0       0       0
  1186 ;;Total ram usage:        0 bytes
  1187 ;; Hardware stack levels used:    1
  1188 ;; This function calls:
  1189 ;;		Nothing
  1190 ;; This function is called by:
  1191 ;;		_SYSTEM_Initialize
  1192 ;; This function uses a non-reentrant model
  1193 ;;
  1194                           
  1195                           	psect	text5
  1196  001C22                     __ptext5:
  1197                           	opt stack 0
  1198  001C22                     _INTERRUPT_ON_CHANGE_Initialize:
  1199                           	opt stack 29
  1200                           
  1201                           ;mcc.c: 129: INTCONbits.RBIE = 1;
  1202                           
  1203                           ;incstack = 0
  1204  001C22  86F2               	bsf	intcon,3,c	;volatile
  1205                           
  1206                           ;mcc.c: 130: INTCONbits.RBIF = 0;
  1207  001C24  90F2               	bcf	intcon,0,c	;volatile
  1208                           
  1209                           ;mcc.c: 131: INTCON2bits.RBIP = 1;
  1210  001C26  80F1               	bsf	intcon2,0,c	;volatile
  1211                           
  1212                           ;mcc.c: 132: IOCB = 0x80;
  1213  001C28  0E80               	movlw	128
  1214  001C2A  6E62               	movwf	3938,c	;volatile
  1215  001C2C  0012               	return		;funcret
  1216  001C2E                     __end_of_INTERRUPT_ON_CHANGE_Initialize:
  1217                           	opt stack 0
  1218                           tblptru	equ	0xFF8
  1219                           intcon	equ	0xFF2
  1220                           intcon2	equ	0xFF1
  1221                           postinc0	equ	0xFEE
  1222                           wreg	equ	0xFE8
  1223                           status	equ	0xFD8
  1224                           
  1225 ;; *************** function _DAC_Initialize *****************
  1226 ;; Defined at:
  1227 ;;		line 57 in file "mcc_generated_files/dac.c"
  1228 ;; Parameters:    Size  Location     Type
  1229 ;;		None
  1230 ;; Auto vars:     Size  Location     Type
  1231 ;;		None
  1232 ;; Return value:  Size  Location     Type
  1233 ;;		None               void
  1234 ;; Registers used:
  1235 ;;		wreg, status,2
  1236 ;; Tracked objects:
  1237 ;;		On entry : 0/0
  1238 ;;		On exit  : 0/0
  1239 ;;		Unchanged: 0/0
  1240 ;; Data sizes:     COMRAM   BANK0   BANK1
  1241 ;;      Params:         0       0       0
  1242 ;;      Locals:         0       0       0
  1243 ;;      Temps:          0       0       0
  1244 ;;      Totals:         0       0       0
  1245 ;;Total ram usage:        0 bytes
  1246 ;; Hardware stack levels used:    1
  1247 ;; This function calls:
  1248 ;;		Nothing
  1249 ;; This function is called by:
  1250 ;;		_SYSTEM_Initialize
  1251 ;; This function uses a non-reentrant model
  1252 ;;
  1253                           
  1254                           	psect	text6
  1255  001C2E                     __ptext6:
  1256                           	opt stack 0
  1257  001C2E                     _DAC_Initialize:
  1258                           	opt stack 29
  1259                           
  1260                           ;dac.c: 59: VREFCON1 = 0xA0;
  1261                           
  1262                           ;incstack = 0
  1263  001C2E  0EA0               	movlw	160
  1264  001C30  010F               	movlb	15	; () banked
  1265  001C32  6F41               	movwf	65,b	;volatile
  1266                           
  1267                           ;dac.c: 61: DACCON1 = 0x00;
  1268  001C34  0E00               	movlw	0
  1269  001C36  010F               	movlb	15	; () banked
  1270  001C38  6F40               	movwf	64,b	;volatile
  1271                           
  1272                           ; BSR set to: 15
  1273  001C3A  0012               	return		;funcret
  1274  001C3C                     __end_of_DAC_Initialize:
  1275                           	opt stack 0
  1276                           tblptru	equ	0xFF8
  1277                           intcon	equ	0xFF2
  1278                           intcon2	equ	0xFF1
  1279                           postinc0	equ	0xFEE
  1280                           wreg	equ	0xFE8
  1281                           status	equ	0xFD8
  1282                           
  1283 ;; *************** function _MIPISPI *****************
  1284 ;; Defined at:
  1285 ;;		line 122 in file "main.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;  a               1    wreg     unsigned char 
  1288 ;;  b               1    1[COMRAM] unsigned char 
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;  a               1    2[COMRAM] unsigned char 
  1291 ;; Return value:  Size  Location     Type
  1292 ;;		None               void
  1293 ;; Registers used:
  1294 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMRAM   BANK0   BANK1
  1300 ;;      Params:         1       0       0
  1301 ;;      Locals:         1       0       0
  1302 ;;      Temps:          0       0       0
  1303 ;;      Totals:         2       0       0
  1304 ;;Total ram usage:        2 bytes
  1305 ;; Hardware stack levels used:    1
  1306 ;; Hardware stack levels required when called:    1
  1307 ;; This function calls:
  1308 ;;		_SPI1_Exchange8bit
  1309 ;; This function is called by:
  1310 ;;		_main
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314                           	psect	text7
  1315  001CC6                     __ptext7:
  1316                           	opt stack 0
  1317  001CC6                     _MIPISPI:
  1318                           	opt stack 29
  1319                           
  1320                           ; BSR set to: 15
  1321                           ;incstack = 0
  1322                           ;MIPISPI@a stored from wreg
  1323  001CC6  6E0C               	movwf	MIPISPI@a,c
  1324                           
  1325                           ;main.c: 124: do { LATC5 = 1; } while(0);
  1326  001CC8  8A8B               	bsf	3979,5,c	;volatile
  1327  001CCA  D000               	goto	l131
  1328  001CCC                     l131:
  1329  001CCC  9A8B               	bcf	3979,5,c	;volatile
  1330  001CCE  D000               	goto	l1035
  1331  001CD0                     l1035:
  1332                           
  1333                           ;main.c: 127: SPI1_Exchange8bit(SLAVEWRITEADD[0]);
  1334  001CD0  0EFD               	movlw	low _SLAVEWRITEADD
  1335  001CD2  6EF6               	movwf	tblptrl,c
  1336  001CD4                     	if	1	;There is more than 1 active tblptr byte
  1337  001CD4  0E1F               	movlw	high _SLAVEWRITEADD
  1338  001CD6  6EF7               	movwf	tblptrh,c
  1339  001CD8                     	endif
  1340  001CD8                     	if	0	;There are less than 3 active tblptr bytes
  1341  001CD8                     	endif
  1342  001CD8  0008               	tblrd		*
  1343  001CDA  50F5               	movf	tablat,w,c
  1344  001CDC  EC2C  F00E         	call	_SPI1_Exchange8bit
  1345                           
  1346                           ;main.c: 128: SPI1_Exchange8bit(ADDRESSDATA[a]);
  1347  001CE0  500C               	movf	MIPISPI@a,w,c
  1348  001CE2  0D01               	mullw	1
  1349  001CE4  0EB1               	movlw	low _ADDRESSDATA
  1350  001CE6  24F3               	addwf	prodl,w,c
  1351  001CE8  6EF6               	movwf	tblptrl,c
  1352  001CEA  0E1E               	movlw	high _ADDRESSDATA
  1353  001CEC  20F4               	addwfc	prodh,w,c
  1354  001CEE  6EF7               	movwf	tblptrh,c
  1355  001CF0                     	if	0	;There are less than 3 active tblptr bytes
  1356  001CF0                     	endif
  1357  001CF0  0008               	tblrd		*
  1358  001CF2  50F5               	movf	tablat,w,c
  1359  001CF4  EC2C  F00E         	call	_SPI1_Exchange8bit
  1360                           
  1361                           ;main.c: 129: SPI1_Exchange8bit(DATABUSPARK[a]);
  1362  001CF8  500C               	movf	MIPISPI@a,w,c
  1363  001CFA  0D01               	mullw	1
  1364  001CFC  0E33               	movlw	low _DATABUSPARK
  1365  001CFE  24F3               	addwf	prodl,w,c
  1366  001D00  6EF6               	movwf	tblptrl,c
  1367  001D02  0E1F               	movlw	high _DATABUSPARK
  1368  001D04  20F4               	addwfc	prodh,w,c
  1369  001D06  6EF7               	movwf	tblptrh,c
  1370  001D08                     	if	0	;There are less than 3 active tblptr bytes
  1371  001D08                     	endif
  1372  001D08  0008               	tblrd		*
  1373  001D0A  50F5               	movf	tablat,w,c
  1374  001D0C  EC2C  F00E         	call	_SPI1_Exchange8bit
  1375  001D10  D000               	goto	l1041
  1376  001D12                     l1041:
  1377  001D12  8A8B               	bsf	3979,5,c	;volatile
  1378  001D14  D000               	goto	l1043
  1379  001D16                     l1043:
  1380  001D16  9A8B               	bcf	3979,5,c	;volatile
  1381  001D18  D000               	goto	l1045
  1382  001D1A                     l1045:
  1383                           
  1384                           ;main.c: 134: SPI1_Exchange8bit(SLAVEWRITEADD[1]);
  1385  001D1A  0EFE               	movlw	low (_SLAVEWRITEADD+1)
  1386  001D1C  6EF6               	movwf	tblptrl,c
  1387  001D1E  0E1F               	movlw	high (_SLAVEWRITEADD+1)
  1388  001D20  6EF7               	movwf	tblptrh,c
  1389  001D22                     	if	0	;tblptru may be non-zero
  1390  001D22                     	endif
  1391  001D22                     	if	0	;tblptru may be non-zero
  1392  001D22                     	endif
  1393  001D22  0008               	tblrd		*
  1394  001D24  50F5               	movf	tablat,w,c
  1395  001D26  EC2C  F00E         	call	_SPI1_Exchange8bit
  1396                           
  1397                           ;main.c: 135: SPI1_Exchange8bit(ADDRESSDATA[b]);
  1398  001D2A  500B               	movf	MIPISPI@b,w,c
  1399  001D2C  0D01               	mullw	1
  1400  001D2E  0EB1               	movlw	low _ADDRESSDATA
  1401  001D30  24F3               	addwf	prodl,w,c
  1402  001D32  6EF6               	movwf	tblptrl,c
  1403  001D34  0E1E               	movlw	high _ADDRESSDATA
  1404  001D36  20F4               	addwfc	prodh,w,c
  1405  001D38  6EF7               	movwf	tblptrh,c
  1406  001D3A                     	if	0	;There are less than 3 active tblptr bytes
  1407  001D3A                     	endif
  1408  001D3A  0008               	tblrd		*
  1409  001D3C  50F5               	movf	tablat,w,c
  1410  001D3E  EC2C  F00E         	call	_SPI1_Exchange8bit
  1411                           
  1412                           ;main.c: 136: SPI1_Exchange8bit(DATABUSPARK[b]);
  1413  001D42  500B               	movf	MIPISPI@b,w,c
  1414  001D44  0D01               	mullw	1
  1415  001D46  0E33               	movlw	low _DATABUSPARK
  1416  001D48  24F3               	addwf	prodl,w,c
  1417  001D4A  6EF6               	movwf	tblptrl,c
  1418  001D4C  0E1F               	movlw	high _DATABUSPARK
  1419  001D4E  20F4               	addwfc	prodh,w,c
  1420  001D50  6EF7               	movwf	tblptrh,c
  1421  001D52                     	if	0	;There are less than 3 active tblptr bytes
  1422  001D52                     	endif
  1423  001D52  0008               	tblrd		*
  1424  001D54  50F5               	movf	tablat,w,c
  1425  001D56  EC2C  F00E         	call	_SPI1_Exchange8bit
  1426  001D5A  0012               	return		;funcret
  1427  001D5C                     __end_of_MIPISPI:
  1428                           	opt stack 0
  1429                           tblptru	equ	0xFF8
  1430                           tblptrh	equ	0xFF7
  1431                           tblptrl	equ	0xFF6
  1432                           tablat	equ	0xFF5
  1433                           prodh	equ	0xFF4
  1434                           prodl	equ	0xFF3
  1435                           intcon	equ	0xFF2
  1436                           intcon2	equ	0xFF1
  1437                           postinc0	equ	0xFEE
  1438                           wreg	equ	0xFE8
  1439                           status	equ	0xFD8
  1440                           
  1441 ;; *************** function _SPI1_Exchange8bit *****************
  1442 ;; Defined at:
  1443 ;;		line 77 in file "mcc_generated_files/spi1.c"
  1444 ;; Parameters:    Size  Location     Type
  1445 ;;  data            1    wreg     unsigned char 
  1446 ;; Auto vars:     Size  Location     Type
  1447 ;;  data            1    0[COMRAM] unsigned char 
  1448 ;; Return value:  Size  Location     Type
  1449 ;;                  1    wreg      unsigned char 
  1450 ;; Registers used:
  1451 ;;		wreg, status,2
  1452 ;; Tracked objects:
  1453 ;;		On entry : 0/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMRAM   BANK0   BANK1
  1457 ;;      Params:         0       0       0
  1458 ;;      Locals:         1       0       0
  1459 ;;      Temps:          0       0       0
  1460 ;;      Totals:         1       0       0
  1461 ;;Total ram usage:        1 bytes
  1462 ;; Hardware stack levels used:    1
  1463 ;; This function calls:
  1464 ;;		Nothing
  1465 ;; This function is called by:
  1466 ;;		_MIPISPI
  1467 ;;		_SPI1_Exchange8bitBuffer
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           	psect	text8
  1472  001C58                     __ptext8:
  1473                           	opt stack 0
  1474  001C58                     _SPI1_Exchange8bit:
  1475                           	opt stack 29
  1476                           
  1477                           ;incstack = 0
  1478                           ;SPI1_Exchange8bit@data stored from wreg
  1479  001C58  6E0A               	movwf	SPI1_Exchange8bit@data,c
  1480                           
  1481                           ;spi1.c: 79: SSP1CON1bits.WCOL = 0;
  1482  001C5A  9EC6               	bcf	4038,7,c	;volatile
  1483                           
  1484                           ;spi1.c: 81: SSP1BUF = data;
  1485  001C5C  C00A  FFC9         	movff	SPI1_Exchange8bit@data,4041	;volatile
  1486                           
  1487                           ;spi1.c: 83: while (SSP1STATbits.BF == 0x0) {
  1488  001C60  D000               	goto	l250
  1489  001C62                     l250:
  1490  001C62  A0C7               	btfss	4039,0,c	;volatile
  1491  001C64  D7FE               	goto	l250
  1492                           
  1493                           ;spi1.c: 84: }
  1494                           ;spi1.c: 86: return (SSP1BUF);
  1495  001C66  50C9               	movf	4041,w,c	;volatile
  1496  001C68  0012               	return		;funcret
  1497  001C6A                     __end_of_SPI1_Exchange8bit:
  1498                           	opt stack 0
  1499                           tblptru	equ	0xFF8
  1500                           tblptrh	equ	0xFF7
  1501                           tblptrl	equ	0xFF6
  1502                           tablat	equ	0xFF5
  1503                           prodh	equ	0xFF4
  1504                           prodl	equ	0xFF3
  1505                           intcon	equ	0xFF2
  1506                           intcon2	equ	0xFF1
  1507                           postinc0	equ	0xFEE
  1508                           wreg	equ	0xFE8
  1509                           status	equ	0xFD8
  1510                           
  1511 ;; *************** function _DAC_SetOutput *****************
  1512 ;; Defined at:
  1513 ;;		line 64 in file "mcc_generated_files/dac.c"
  1514 ;; Parameters:    Size  Location     Type
  1515 ;;  inputData       1    wreg     unsigned char 
  1516 ;; Auto vars:     Size  Location     Type
  1517 ;;  inputData       1    0[COMRAM] unsigned char 
  1518 ;; Return value:  Size  Location     Type
  1519 ;;		None               void
  1520 ;; Registers used:
  1521 ;;		wreg
  1522 ;; Tracked objects:
  1523 ;;		On entry : 0/0
  1524 ;;		On exit  : 0/0
  1525 ;;		Unchanged: 0/0
  1526 ;; Data sizes:     COMRAM   BANK0   BANK1
  1527 ;;      Params:         0       0       0
  1528 ;;      Locals:         1       0       0
  1529 ;;      Temps:          0       0       0
  1530 ;;      Totals:         1       0       0
  1531 ;;Total ram usage:        1 bytes
  1532 ;; Hardware stack levels used:    1
  1533 ;; This function calls:
  1534 ;;		Nothing
  1535 ;; This function is called by:
  1536 ;;		_main
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           	psect	text9
  1541  001C1A                     __ptext9:
  1542                           	opt stack 0
  1543  001C1A                     _DAC_SetOutput:
  1544                           	opt stack 30
  1545                           
  1546                           ;incstack = 0
  1547                           ;DAC_SetOutput@inputData stored from wreg
  1548  001C1A  6E0A               	movwf	DAC_SetOutput@inputData,c
  1549                           
  1550                           ;dac.c: 65: DACCON1 = inputData;
  1551  001C1C  C00A  FF40         	movff	DAC_SetOutput@inputData,3904	;volatile
  1552  001C20  0012               	return		;funcret
  1553  001C22                     __end_of_DAC_SetOutput:
  1554                           	opt stack 0
  1555                           tblptru	equ	0xFF8
  1556                           tblptrh	equ	0xFF7
  1557                           tblptrl	equ	0xFF6
  1558                           tablat	equ	0xFF5
  1559                           prodh	equ	0xFF4
  1560                           prodl	equ	0xFF3
  1561                           intcon	equ	0xFF2
  1562                           intcon2	equ	0xFF1
  1563                           postinc0	equ	0xFEE
  1564                           wreg	equ	0xFE8
  1565                           status	equ	0xFD8
  1566                           tblptru	equ	0xFF8
  1567                           tblptrh	equ	0xFF7
  1568                           tblptrl	equ	0xFF6
  1569                           tablat	equ	0xFF5
  1570                           prodh	equ	0xFF4
  1571                           prodl	equ	0xFF3
  1572                           intcon	equ	0xFF2
  1573                           intcon2	equ	0xFF1
  1574                           postinc0	equ	0xFEE
  1575                           wreg	equ	0xFE8
  1576                           status	equ	0xFD8
  1577                           
  1578                           	psect	rparam
  1579  0000                     tblptru	equ	0xFF8
  1580                           tblptrh	equ	0xFF7
  1581                           tblptrl	equ	0xFF6
  1582                           tablat	equ	0xFF5
  1583                           prodh	equ	0xFF4
  1584                           prodl	equ	0xFF3
  1585                           intcon	equ	0xFF2
  1586                           intcon2	equ	0xFF1
  1587                           postinc0	equ	0xFEE
  1588                           wreg	equ	0xFE8
  1589                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    334
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      5      14
    BANK0           160      0       0
    BANK1           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_MIPISPI
    _MIPISPI->_SPI1_Exchange8bit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     161
                                              3 COMRAM     2     2      0
                      _DAC_SetOutput
                            _MIPISPI
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _DAC_Initialize
     _INTERRUPT_ON_CHANGE_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_ON_CHANGE_Initialize                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DAC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MIPISPI                                              2     1      1     146
                                              1 COMRAM     2     1      1
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (2) _SPI1_Exchange8bit                                    1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DAC_SetOutput                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DAC_SetOutput
   _MIPISPI
     _SPI1_Exchange8bit
   _SYSTEM_Initialize
     _DAC_Initialize
     _INTERRUPT_ON_CHANGE_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      5       E       1       14.7%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       E       6        0.0%
DATA                 0      0       E       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue May 03 09:56:14 2016

                      _SPI1_Exchange8bit 1C58                              __CFG_CP0$ON 000000  
                            __CFG_CP1$ON 000000                       ?_SPI1_Exchange8bit 000A  
                            __CFG_CPB$ON 000000                              __CFG_CPD$ON 000000  
                            __CFG_LVP$ON 000000                                      l202 1E2A  
                                    l131 1CCC                                      l220 1E6E  
                                    l204 1E2E                                      l213 1EA8  
                                    l215 1E66                                      l225 1E76  
                                    l217 1E6A                                      l209 1E5E  
                                    l250 1C62                                      l227 1E7A  
                                    l182 1E02                                      l166 1DC4  
                                    l175 1DFA                                      l192 1E1A  
                                    l176 1DF6                                      l169 1DD0  
                                    l194 1E1E                                      l186 1E12  
                                    l197 1E22                      ??_SPI1_Exchange8bit 000A  
                                    wreg 000FE8                                     l1101 1E7E  
                                   l1041 1D12                                     l1043 1D16  
                                   l1035 1CD0                                     l1045 1D1A  
                                   l1061 1D74                                     l1063 1D78  
                                   l1055 1D66                                     l1081 1DB2  
                                   l1065 1D7C                                     l1057 1D6C  
                                   l1075 1D90                                     l1067 1D80  
                                   l1059 1D70                                     l1093 1E06  
                                   l1077 1DA0                                     l1069 1D84  
                                   l1097 1E32                          __end_of_MIPISPI 1D5C  
                                   _DATA 1EF2                                     _IOCB 000F62  
                                   _LATA 000F89                                     _LATB 000F8A  
                                   _LATC 000F8B                                     _WPUB 000F61  
                                   _main 1D5C                            __CFG_BORV$190 000000  
                  __end_of_SLAVEWRITEADD 1FFF                                     prodh 000FF4  
                                   prodl 000FF3                                     start 0000  
              __end_of_SPI1_Exchange8bit 1C6A                            __CFG_IESO$OFF 000000  
                           ___param_bank 000010           __size_of_OSCILLATOR_Initialize 000E  
          __end_of_OSCILLATOR_Initialize 1C4A                                    ?_main 000A  
                                  _LATA0 007C48                                    _LATA1 007C49  
                                  _LATC0 007C58                                    _LATC1 007C59  
                                  _LATA6 007C4E                                    _LATA7 007C4F  
                                  _LATC5 007C5D                           __CFG_DEBUG$OFF 000000  
                                  _PORTC 000F82                                    _TRISA 000F92  
                                  _TRISB 000F93                                    _TRISC 000F94  
                       __end_of_SLAVEADD 1FFD                            __CFG_WRT0$OFF 000000  
                          __CFG_WRT1$OFF 000000                                    _Byte1 0001  
                                  _Byte2 0002                                    _Byte3 0003  
                                  _Byte4 0004                                    _Byte5 0005  
                                  _Byte6 0006                                    _Dummy 0008  
                         __CFG_EBTR0$OFF 000000                           __CFG_FCMEN$OFF 000000  
                         __CFG_EBTR1$OFF 000000                            __CFG_WRTB$OFF 000000  
                          __CFG_WRTC$OFF 000000                            __CFG_WRTD$OFF 000000  
                         __CFG_EBTRB$OFF 000000                       __CFG_MCLRE$EXTMCLR 000000  
                                  _start 0009                           __CFG_BOREN$OFF 000000  
                                  tablat 000FF5                                    status 000FD8  
                         __CFG_HFOFST$ON 000000                 __size_of_SPI1_Initialize 000E  
                           __end_of_DATA 1F33                         ??_DAC_Initialize 000A  
                        __initialization 1C80                             __end_of_main 1EB0  
                                 ??_main 000D                            __activetblptr 000002  
                         __CFG_PLLCFG$ON 000000                                ??_MIPISPI 000C  
                                 _ANSELA 000F38                                   _ANSELB 000F39  
                                 _ANSELC 000F3A                           __CFG_WDTEN$OFF 000000  
                                 _REGADD 1FF9                                   _PARITY 1F74  
                                 _OSCCON 000FD3                    SPI1_Exchange8bit@data 000A  
             __size_of_SPI1_Exchange8bit 0012                           __CFG_XINST$OFF 000000  
                                 clear_0 1C86                       __end_of_ACTIVEBAND 1FF5  
                      __end_of_DacOutput 1FF9                             __mediumconst 1EB0  
                                 tblptrh 000FF7                                   tblptrl 000FF6  
                                 tblptru 000FF8                        _SYSTEM_Initialize 1C6A  
                             __accesstop 0060                  __end_of__initialization 1C8C  
                        __CFG_PBADEN$OFF 000000                       ?_SYSTEM_Initialize 000A  
                          ___rparam_used 000001                   DAC_SetOutput@inputData 000A  
                         __pcstackCOMRAM 000A                      ??_SYSTEM_Initialize 000A  
                      ??_SPI1_Initialize 000A                   __size_of_DAC_SetOutput 0008  
              __end_of_SYSTEM_Initialize 1C80                       __CFG_CCP2MX$PORTC1 000000  
                     __CFG_CCP3MX$PORTB5 000000                                  _DACCON1 000F40  
                                _MIPISPI 1CC6                                  _OSCCON2 000FD2  
                                _OSCTUNE 000F9B                                  _SSP1ADD 000FC8  
                                _SSP1BUF 000FC9                      __end_of_ADDRESSDATA 1EF2  
                        __CFG_PWRTEN$OFF 000000                                  __Hparam 0000  
                                __Lparam 0000                            _DAC_SetOutput 1C1A  
 __end_of_INTERRUPT_ON_CHANGE_Initialize 1C2E  __size_of_INTERRUPT_ON_CHANGE_Initialize 000C  
         _INTERRUPT_ON_CHANGE_Initialize 1C22                          __CFG_STVREN$OFF 000000  
                                __pcinit 1C80                                  __ramtop 0200  
                                __ptext0 1D5C                                  __ptext1 1C6A  
                                __ptext2 1C4A                                  __ptext3 1C96  
                                __ptext4 1C3C                                  __ptext5 1C22  
                                __ptext6 1C2E                                  __ptext7 1CC6  
                                __ptext8 1C58                                  __ptext9 1C1A  
                  _OSCILLATOR_Initialize 1C3C                 ??_PIN_MANAGER_Initialize 000A  
             __size_of_SYSTEM_Initialize 0016                     end_of_initialization 1C8C  
                    __end_of_DATABUSPARK 1F74                            __Lmediumconst 1EB0  
                         ?_DAC_SetOutput 000A                                  postinc0 000FEE  
                              _DacOutput 1FF5                              _ADDRESSDATA 1EB1  
                         __end_of_REGADD 1FFB                          _SPI1_Initialize 1C4A  
                         __end_of_PARITY 1FB5                            _SLAVEWRITEADD 1FFD  
                 ?_OSCILLATOR_Initialize 000A                  __size_of_DAC_Initialize 000E  
                    start_initialization 1C80          __size_of_PIN_MANAGER_Initialize 0030  
                            _DATABUSPARK 1F33                          ??_DAC_SetOutput 000A  
                            __pbssCOMRAM 0001                                 ?_MIPISPI 000B  
                __end_of_SPI1_Initialize 1C58                                 MIPISPI@a 000C  
                               MIPISPI@b 000B                   _PIN_MANAGER_Initialize 1C96  
                          __pmediumconst 1EB0                         __CFG_PRICLKEN$ON 000000  
                               _DAC_Step 0007         ??_INTERRUPT_ON_CHANGE_Initialize 000A  
        ?_INTERRUPT_ON_CHANGE_Initialize 000A                                 _SLAVEADD 1FFB  
                       __CFG_WDTPS$32768 000000                                 _SSP1CON1 000FC6  
                               _SSP1STAT 000FC7                                 _VREFCON1 000F41  
                         _DAC_Initialize 1C2E                         __size_of_MIPISPI 0096  
                       ?_SPI1_Initialize 000A                              _INTCON2bits 000FF1  
                             _ACTIVEBAND 1FB5                                 __Hrparam 0000  
                               __Lrparam 0000                        __CFG_P2BMX$PORTB5 000000  
                ??_OSCILLATOR_Initialize 000A                   __end_of_DAC_Initialize 1C3C  
                           _SSP1CON1bits 000FC6                            __size_of_main 0154  
                        ?_DAC_Initialize 000A                             _SSP1STATbits 000FC7  
                             _INTCONbits 000FF2                  ?_PIN_MANAGER_Initialize 000A  
                  __end_of_DAC_SetOutput 1C22                        __CFG_T3CMX$PORTC0 000000  
         __end_of_PIN_MANAGER_Initialize 1CC6                        __CFG_FOSC$INTIO67 000000  
