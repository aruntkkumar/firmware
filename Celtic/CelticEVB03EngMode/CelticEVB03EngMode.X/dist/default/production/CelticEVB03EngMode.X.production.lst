

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Wed Apr 06 12:40:55 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18LF23K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    20  0000                     
    21                           	psect	smallconst
    22  000200                     __psmallconst:
    23                           	opt stack 0
    24  000200  00                 	db	0
    25  000201                     _DATA:
    26                           	opt stack 0
    27  000201  00                 	db	0
    28  000202  80                 	db	128
    29  000203  40                 	db	64
    30  000204  C0                 	db	192
    31  000205  20                 	db	32
    32  000206  A0                 	db	160
    33  000207  60                 	db	96
    34  000208  E0                 	db	224
    35  000209  10                 	db	16
    36  00020A  90                 	db	144
    37  00020B  50                 	db	80
    38  00020C  D0                 	db	208
    39  00020D  30                 	db	48
    40  00020E  B0                 	db	176
    41  00020F  70                 	db	112
    42  000210  F0                 	db	240
    43  000211  08                 	db	8
    44  000212  88                 	db	136
    45  000213  48                 	db	72
    46  000214  C8                 	db	200
    47  000215  28                 	db	40
    48  000216  A8                 	db	168
    49  000217  68                 	db	104
    50  000218  E8                 	db	232
    51  000219  18                 	db	24
    52  00021A  98                 	db	152
    53  00021B  58                 	db	88
    54  00021C  D8                 	db	216
    55  00021D  38                 	db	56
    56  00021E  B8                 	db	184
    57  00021F  78                 	db	120
    58  000220  F8                 	db	248
    59  000221  04                 	db	4
    60  000222  84                 	db	132
    61  000223  44                 	db	68
    62  000224  C4                 	db	196
    63  000225  24                 	db	36
    64  000226  A4                 	db	164
    65  000227  64                 	db	100
    66  000228  E4                 	db	228
    67  000229  14                 	db	20
    68  00022A  94                 	db	148
    69  00022B  54                 	db	84
    70  00022C  D4                 	db	212
    71  00022D  34                 	db	52
    72  00022E  B4                 	db	180
    73  00022F  74                 	db	116
    74  000230  F4                 	db	244
    75  000231  0C                 	db	12
    76  000232  8C                 	db	140
    77  000233  4C                 	db	76
    78  000234  CC                 	db	204
    79  000235  2C                 	db	44
    80  000236  AC                 	db	172
    81  000237  6C                 	db	108
    82  000238  EC                 	db	236
    83  000239  1C                 	db	28
    84  00023A  9C                 	db	156
    85  00023B  5C                 	db	92
    86  00023C  DC                 	db	220
    87  00023D  3C                 	db	60
    88  00023E  BC                 	db	188
    89  00023F  7C                 	db	124
    90  000240  FC                 	db	252
    91  000241  06                 	db	6
    92  000242                     __end_of_DATA:
    93                           	opt stack 0
    94  000242                     _PARITY:
    95                           	opt stack 0
    96  000242  01                 	db	1
    97  000243  00                 	db	0
    98  000244  00                 	db	0
    99  000245  01                 	db	1
   100  000246  00                 	db	0
   101  000247  01                 	db	1
   102  000248  01                 	db	1
   103  000249  00                 	db	0
   104  00024A  00                 	db	0
   105  00024B  01                 	db	1
   106  00024C  01                 	db	1
   107  00024D  00                 	db	0
   108  00024E  01                 	db	1
   109  00024F  00                 	db	0
   110  000250  00                 	db	0
   111  000251  01                 	db	1
   112  000252  00                 	db	0
   113  000253  01                 	db	1
   114  000254  01                 	db	1
   115  000255  00                 	db	0
   116  000256  01                 	db	1
   117  000257  00                 	db	0
   118  000258  00                 	db	0
   119  000259  01                 	db	1
   120  00025A  01                 	db	1
   121  00025B  00                 	db	0
   122  00025C  00                 	db	0
   123  00025D  01                 	db	1
   124  00025E  00                 	db	0
   125  00025F  01                 	db	1
   126  000260  01                 	db	1
   127  000261  00                 	db	0
   128  000262  00                 	db	0
   129  000263  01                 	db	1
   130  000264  01                 	db	1
   131  000265  00                 	db	0
   132  000266  01                 	db	1
   133  000267  00                 	db	0
   134  000268  00                 	db	0
   135  000269  01                 	db	1
   136  00026A  01                 	db	1
   137  00026B  00                 	db	0
   138  00026C  00                 	db	0
   139  00026D  01                 	db	1
   140  00026E  00                 	db	0
   141  00026F  01                 	db	1
   142  000270  01                 	db	1
   143  000271  00                 	db	0
   144  000272  01                 	db	1
   145  000273  00                 	db	0
   146  000274  00                 	db	0
   147  000275  01                 	db	1
   148  000276  00                 	db	0
   149  000277  01                 	db	1
   150  000278  01                 	db	1
   151  000279  00                 	db	0
   152  00027A  00                 	db	0
   153  00027B  01                 	db	1
   154  00027C  01                 	db	1
   155  00027D  00                 	db	0
   156  00027E  01                 	db	1
   157  00027F  00                 	db	0
   158  000280  00                 	db	0
   159  000281  01                 	db	1
   160  000282  01                 	db	1
   161  000283                     __end_of_PARITY:
   162                           	opt stack 0
   163  000283                     _ACTIVEBAND:
   164                           	opt stack 0
   165  000283  00                 	db	0
   166  000284  00                 	db	0
   167  000285  00                 	db	0
   168  000286  00                 	db	0
   169  000287  00                 	db	0
   170  000288  01                 	db	1
   171  000289  00                 	db	0
   172  00028A  00                 	db	0
   173  00028B  01                 	db	1
   174  00028C  00                 	db	0
   175  00028D  00                 	db	0
   176  00028E  00                 	db	0
   177  00028F  01                 	db	1
   178  000290  01                 	db	1
   179  000291  00                 	db	0
   180  000292  00                 	db	0
   181  000293  00                 	db	0
   182  000294  00                 	db	0
   183  000295  00                 	db	0
   184  000296  00                 	db	0
   185  000297  01                 	db	1
   186  000298  00                 	db	0
   187  000299  00                 	db	0
   188  00029A  00                 	db	0
   189  00029B  00                 	db	0
   190  00029C  00                 	db	0
   191  00029D  01                 	db	1
   192  00029E  00                 	db	0
   193  00029F  00                 	db	0
   194  0002A0  01                 	db	1
   195  0002A1  00                 	db	0
   196  0002A2  00                 	db	0
   197  0002A3  00                 	db	0
   198  0002A4  00                 	db	0
   199  0002A5  00                 	db	0
   200  0002A6  00                 	db	0
   201  0002A7  00                 	db	0
   202  0002A8  00                 	db	0
   203  0002A9  00                 	db	0
   204  0002AA  00                 	db	0
   205  0002AB  00                 	db	0
   206  0002AC  00                 	db	0
   207  0002AD  00                 	db	0
   208  0002AE  00                 	db	0
   209  0002AF  00                 	db	0
   210  0002B0  00                 	db	0
   211  0002B1  00                 	db	0
   212  0002B2  00                 	db	0
   213  0002B3  00                 	db	0
   214  0002B4  00                 	db	0
   215  0002B5  00                 	db	0
   216  0002B6  00                 	db	0
   217  0002B7  00                 	db	0
   218  0002B8  00                 	db	0
   219  0002B9  00                 	db	0
   220  0002BA  00                 	db	0
   221  0002BB  00                 	db	0
   222  0002BC  00                 	db	0
   223  0002BD  00                 	db	0
   224  0002BE  00                 	db	0
   225  0002BF  00                 	db	0
   226  0002C0  00                 	db	0
   227  0002C1  00                 	db	0
   228  0002C2  00                 	db	0
   229  0002C3                     __end_of_ACTIVEBAND:
   230                           	opt stack 0
   231  0002C3                     _DacOutput:
   232                           	opt stack 0
   233  0002C3  2B                 	db	43
   234  0002C4  48                 	db	72
   235  0002C5  56                 	db	86
   236  0002C6  64                 	db	100
   237  0002C7                     __end_of_DacOutput:
   238                           	opt stack 0
   239  0002C7                     _REGADD:
   240                           	opt stack 0
   241  0002C7  07                 	db	7
   242  0002C8  10                 	db	16
   243  0002C9                     __end_of_REGADD:
   244                           	opt stack 0
   245  0002C9                     _SLAVEADD:
   246                           	opt stack 0
   247  0002C9  06                 	db	6
   248  0002CA  0E                 	db	14
   249  0002CB                     __end_of_SLAVEADD:
   250                           	opt stack 0
   251  0000                     _ANSELA	set	3896
   252  0000                     _ANSELB	set	3897
   253  0000                     _ANSELC	set	3898
   254  0000                     _DACCON1	set	3904
   255  0000                     _VREFCON1	set	3905
   256  0000                     _INTCON2bits	set	4081
   257  0000                     _INTCONbits	set	4082
   258  0000                     _IOCBbits	set	3938
   259  0000                     _LATA	set	3977
   260  0000                     _LATB	set	3978
   261  0000                     _LATC	set	3979
   262  0000                     _OSCCON	set	4051
   263  0000                     _OSCCON2	set	4050
   264  0000                     _OSCTUNE	set	3995
   265  0000                     _PORTC	set	3970
   266  0000                     _TRISA	set	3986
   267  0000                     _TRISB	set	3987
   268  0000                     _TRISC	set	3988
   269  0000                     _WPUB	set	3937
   270  0000                     _LATA0	set	31816
   271  0000                     _LATA1	set	31817
   272  0000                     _LATA3	set	31819
   273  0000                     _LATA4	set	31820
   274  0000                     _LATA5	set	31821
   275  0000                     _LATA6	set	31822
   276  0000                     _LATA7	set	31823
   277  0000                     _LATC0	set	31832
   278  0000                     _LATC1	set	31833
   279                           
   280                           ; #config settings
   281  0002CB  00                 	db	0	; dummy byte at the end
   282  0000                     
   283                           	psect	cinit
   284  000528                     __pcinit:
   285                           	opt stack 0
   286  000528                     start_initialization:
   287                           	opt stack 0
   288  000528                     __initialization:
   289                           	opt stack 0
   290                           
   291                           ; Clear objects allocated to COMRAM (8 bytes)
   292  000528  EE00  F001         	lfsr	0,__pbssCOMRAM
   293  00052C  0E08               	movlw	8
   294  00052E                     clear_0:
   295  00052E  6AEE               	clrf	postinc0,c
   296  000530  06E8               	decf	wreg,f,c
   297  000532  E1FD               	bnz	clear_0
   298  000534                     end_of_initialization:
   299                           	opt stack 0
   300  000534                     __end_of__initialization:
   301                           	opt stack 0
   302  000534  0E00               	movlw	low (__Lsmallconst shr (0+16))
   303  000536  6EF8               	movwf	tblptru,c
   304  000538  0E02               	movlw	high __Lsmallconst
   305  00053A  6EF7               	movwf	tblptrh,c
   306  00053C  0100               	movlb	0
   307  00053E  EF66  F001         	goto	_main	;jump to C main() function
   308                           tblptru	equ	0xFF8
   309                           tblptrh	equ	0xFF7
   310                           postinc0	equ	0xFEE
   311                           wreg	equ	0xFE8
   312                           
   313                           	psect	bssCOMRAM
   314  000001                     __pbssCOMRAM:
   315                           	opt stack 0
   316  000001                     _Byte1:
   317                           	opt stack 0
   318  000001                     	ds	1
   319  000002                     _Byte2:
   320                           	opt stack 0
   321  000002                     	ds	1
   322  000003                     _Byte3:
   323                           	opt stack 0
   324  000003                     	ds	1
   325  000004                     _Byte4:
   326                           	opt stack 0
   327  000004                     	ds	1
   328  000005                     _Byte5:
   329                           	opt stack 0
   330  000005                     	ds	1
   331  000006                     _Byte6:
   332                           	opt stack 0
   333  000006                     	ds	1
   334  000007                     _DAC_Step:
   335                           	opt stack 0
   336  000007                     	ds	1
   337  000008                     _Dummy:
   338                           	opt stack 0
   339  000008                     	ds	1
   340                           tblptru	equ	0xFF8
   341                           tblptrh	equ	0xFF7
   342                           postinc0	equ	0xFEE
   343                           wreg	equ	0xFE8
   344                           
   345                           	psect	cstackCOMRAM
   346  000009                     __pcstackCOMRAM:
   347                           	opt stack 0
   348  000009                     DAC_SetOutput@inputData:
   349                           	opt stack 0
   350  000009                     shiftRegister@Dummy2:
   351                           	opt stack 0
   352                           
   353                           ; 1 bytes @ 0x0
   354  000009                     	ds	1
   355  00000A                     shiftRegister@y:
   356                           	opt stack 0
   357                           
   358                           ; 1 bytes @ 0x1
   359  00000A                     	ds	1
   360  00000B                     shiftRegister@m:
   361                           	opt stack 0
   362                           
   363                           ; 1 bytes @ 0x2
   364  00000B                     	ds	1
   365  00000C                     shiftRegister@Dummy1:
   366                           	opt stack 0
   367                           
   368                           ; 1 bytes @ 0x3
   369  00000C                     	ds	1
   370  00000D                     MIPI@b:
   371                           	opt stack 0
   372                           
   373                           ; 1 bytes @ 0x4
   374  00000D                     	ds	1
   375  00000E                     MIPI@a:
   376                           	opt stack 0
   377                           
   378                           ; 1 bytes @ 0x5
   379  00000E                     	ds	1
   380  00000F                     tblptru	equ	0xFF8
   381                           tblptrh	equ	0xFF7
   382                           postinc0	equ	0xFEE
   383                           wreg	equ	0xFE8
   384                           
   385                           ; 0 bytes @ 0x6
   386 ;;
   387 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   388 ;;
   389 ;; *************** function _main *****************
   390 ;; Defined at:
   391 ;;		line 114 in file "main.c"
   392 ;; Parameters:    Size  Location     Type
   393 ;;		None
   394 ;; Auto vars:     Size  Location     Type
   395 ;;		None
   396 ;; Return value:  Size  Location     Type
   397 ;;		None               void
   398 ;; Registers used:
   399 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   400 ;; Tracked objects:
   401 ;;		On entry : 0/0
   402 ;;		On exit  : 0/0
   403 ;;		Unchanged: 0/0
   404 ;; Data sizes:     COMRAM   BANK0   BANK1
   405 ;;      Params:         0       0       0
   406 ;;      Locals:         0       0       0
   407 ;;      Temps:          0       0       0
   408 ;;      Totals:         0       0       0
   409 ;;Total ram usage:        0 bytes
   410 ;; Hardware stack levels required when called:    2
   411 ;; This function calls:
   412 ;;		_DAC_SetOutput
   413 ;;		_MIPI
   414 ;;		_SYSTEM_Initialize
   415 ;; This function is called by:
   416 ;;		Startup code after reset
   417 ;; This function uses a non-reentrant model
   418 ;;
   419                           
   420                           	psect	text0
   421  0002CC                     __ptext0:
   422                           	opt stack 0
   423  0002CC                     _main:
   424                           	opt stack 29
   425                           
   426                           ;main.c: 115: if (INTCONbits.RBIF)
   427                           
   428                           ;incstack = 0
   429  0002CC  B0F2               	btfsc	intcon,0,c	;volatile
   430  0002CE  D014               	goto	l956
   431  0002D0  D001               	goto	l940
   432                           
   433                           ;main.c: 116: goto reset;
   434  0002D2  D012               	goto	l956
   435  0002D4                     l940:
   436                           
   437                           ;main.c: 118: SYSTEM_Initialize();
   438  0002D4  ECA1  F002         	call	_SYSTEM_Initialize	;wreg free
   439                           
   440                           ;main.c: 147: DAC_SetOutput(0);
   441  0002D8  0E00               	movlw	0
   442  0002DA  ECBF  F002         	call	_DAC_SetOutput
   443  0002DE  D000               	goto	l944
   444  0002E0                     l944:
   445  0002E0  9089               	bcf	3977,0,c	;volatile
   446  0002E2  D000               	goto	l946
   447  0002E4                     l946:
   448  0002E4  9289               	bcf	3977,1,c	;volatile
   449  0002E6  D000               	goto	l948
   450  0002E8                     l948:
   451  0002E8  9C89               	bcf	3977,6,c	;volatile
   452  0002EA  D000               	goto	l950
   453  0002EC                     l950:
   454  0002EC  9E89               	bcf	3977,7,c	;volatile
   455  0002EE  D000               	goto	l952
   456  0002F0                     l952:
   457  0002F0  908B               	bcf	3979,0,c	;volatile
   458  0002F2  D000               	goto	l954
   459  0002F4                     l954:
   460  0002F4  928B               	bcf	3979,1,c	;volatile
   461                           
   462                           ;main.c: 157: while ((PORTC & 0xC0) != 0xC0) {
   463                           
   464                           ;main.c: 155: while (1) {
   465                           
   466                           ;main.c: 154: reset:
   467  0002F6  D000               	goto	l956
   468  0002F8                     l956:
   469  0002F8  5082               	movf	3970,w,c	;volatile
   470  0002FA  0BC0               	andlw	192
   471  0002FC  0AC0               	xorlw	192
   472  0002FE  A4D8               	btfss	status,2,c
   473  000300  D7FB               	goto	l956
   474                           
   475                           ;main.c: 158: }
   476                           ;main.c: 159: Byte1 = PORTC;
   477  000302  CF82 F001          	movff	3970,_Byte1	;volatile
   478                           
   479                           ;main.c: 161: while ((PORTC & 0xC0) != 0x80) {
   480  000306  D000               	goto	l958
   481  000308                     l958:
   482  000308  5082               	movf	3970,w,c	;volatile
   483  00030A  0BC0               	andlw	192
   484  00030C  0A80               	xorlw	128
   485  00030E  A4D8               	btfss	status,2,c
   486  000310  D7FB               	goto	l958
   487                           
   488                           ;main.c: 162: }
   489                           ;main.c: 163: Byte3 = PORTC & 0x3F;
   490  000312  5082               	movf	3970,w,c	;volatile
   491  000314  0B3F               	andlw	63
   492  000316  6E03               	movwf	_Byte3,c
   493                           
   494                           ;main.c: 165: while ((PORTC & 0xC0) != 0x40) {
   495  000318  D000               	goto	l962
   496  00031A                     l962:
   497  00031A  5082               	movf	3970,w,c	;volatile
   498  00031C  0BC0               	andlw	192
   499  00031E  0A40               	xorlw	64
   500  000320  A4D8               	btfss	status,2,c
   501  000322  D7FB               	goto	l962
   502                           
   503                           ;main.c: 166: }
   504                           ;main.c: 167: Byte4 = PORTC & 0x3F;
   505  000324  5082               	movf	3970,w,c	;volatile
   506  000326  0B3F               	andlw	63
   507  000328  6E04               	movwf	_Byte4,c
   508                           
   509                           ;main.c: 169: while ((PORTC & 0x80) != 0x80) {
   510  00032A  D000               	goto	l166
   511  00032C                     l166:
   512  00032C  AE82               	btfss	3970,7,c	;volatile
   513  00032E  D7FE               	goto	l166
   514                           
   515                           ;main.c: 170: }
   516                           ;main.c: 171: Byte5 = PORTC & 0x7F;
   517  000330  5082               	movf	3970,w,c	;volatile
   518  000332  0B7F               	andlw	127
   519  000334  6E05               	movwf	_Byte5,c
   520                           
   521                           ;main.c: 173: while ((PORTC & 0x80) != 0x00) {
   522  000336  D000               	goto	l169
   523  000338                     l169:
   524  000338  BE82               	btfsc	3970,7,c	;volatile
   525  00033A  D7FE               	goto	l169
   526                           
   527                           ;main.c: 174: }
   528                           ;main.c: 175: Byte6 = PORTC & 0x7F;
   529  00033C  5082               	movf	3970,w,c	;volatile
   530  00033E  0B7F               	andlw	127
   531  000340  6E06               	movwf	_Byte6,c
   532                           
   533                           ;main.c: 178: DAC_Step = ((Byte4 << 4) & 0xC0);
   534  000342  3804               	swapf	_Byte4,w,c
   535  000344  0BF0               	andlw	240
   536  000346  0BC0               	andlw	192
   537  000348  6E07               	movwf	_DAC_Step,c
   538                           
   539                           ;main.c: 179: DAC_Step = (DAC_Step | Byte3);
   540  00034A  5007               	movf	_DAC_Step,w,c
   541  00034C  1003               	iorwf	_Byte3,w,c
   542  00034E  6E07               	movwf	_DAC_Step,c
   543                           
   544                           ;main.c: 180: DAC_SetOutput(DAC_Step);
   545  000350  5007               	movf	_DAC_Step,w,c
   546  000352  ECBF  F002         	call	_DAC_SetOutput
   547                           
   548                           ;main.c: 183: if ((Byte4 & 0x02) == 0x02)
   549  000356  A204               	btfss	_Byte4,1,c
   550  000358  D002               	goto	l176
   551                           
   552                           ;main.c: 184: do { LATA0 = 1; } while(0);
   553  00035A  8089               	bsf	3977,0,c	;volatile
   554  00035C  D002               	goto	l175
   555  00035E                     l176:
   556  00035E  9089               	bcf	3977,0,c	;volatile
   557  000360  D000               	goto	l175
   558  000362                     l175:
   559                           
   560                           ;main.c: 187: if ((Byte4 & 0x01) == 0x01)
   561  000362  A004               	btfss	_Byte4,0,c
   562  000364  D002               	goto	l182
   563                           
   564                           ;main.c: 188: do { LATA1 = 1; } while(0);
   565  000366  8289               	bsf	3977,1,c	;volatile
   566  000368  D002               	goto	l974
   567  00036A                     l182:
   568  00036A  9289               	bcf	3977,1,c	;volatile
   569  00036C  D000               	goto	l974
   570  00036E                     l974:
   571                           
   572                           ;main.c: 193: MIPI(Byte5, Byte6);
   573  00036E  C006  F00D         	movff	_Byte6,MIPI@b
   574  000372  5005               	movf	_Byte5,w,c
   575  000374  EC05  F002         	call	_MIPI
   576                           
   577                           ;main.c: 197: Dummy = Byte1 & 0x38;
   578  000378  5001               	movf	_Byte1,w,c
   579  00037A  0B38               	andlw	56
   580  00037C  6E08               	movwf	_Dummy,c
   581                           
   582                           ;main.c: 198: if (Dummy == 0x00) {
   583  00037E  5008               	movf	_Dummy,w,c
   584  000380  A4D8               	btfss	status,2,c
   585  000382  D004               	goto	l980
   586                           
   587                           ;main.c: 199: do { LATA6 = 0; } while(0);
   588  000384  9C89               	bcf	3977,6,c	;volatile
   589  000386  D008               	goto	l193
   590                           
   591                           ;main.c: 200: do { LATA7 = 0; } while(0);
   592  000388  D007               	goto	l193
   593                           
   594                           ;main.c: 201: } else if (Dummy == 0x20) {
   595  00038A  D018               	goto	l986
   596  00038C                     l980:
   597  00038C  0E20               	movlw	32
   598  00038E  1808               	xorwf	_Dummy,w,c
   599  000390  A4D8               	btfss	status,2,c
   600  000392  D004               	goto	l982
   601                           
   602                           ;main.c: 202: do { LATA6 = 1; } while(0);
   603  000394  8C89               	bsf	3977,6,c	;volatile
   604  000396  D000               	goto	l193
   605  000398                     l193:
   606  000398  9E89               	bcf	3977,7,c	;volatile
   607                           
   608                           ;main.c: 204: } else if (Dummy == 0x10) {
   609  00039A  D010               	goto	l986
   610  00039C                     l982:
   611  00039C  0E10               	movlw	16
   612  00039E  1808               	xorwf	_Dummy,w,c
   613  0003A0  A4D8               	btfss	status,2,c
   614  0003A2  D004               	goto	l984
   615                           
   616                           ;main.c: 205: do { LATA6 = 0; } while(0);
   617  0003A4  9C89               	bcf	3977,6,c	;volatile
   618  0003A6  D008               	goto	l205
   619                           
   620                           ;main.c: 206: do { LATA7 = 1; } while(0);
   621  0003A8  D007               	goto	l205
   622                           
   623                           ;main.c: 207: } else if (Dummy == 0x30) {
   624  0003AA  D008               	goto	l986
   625  0003AC                     l984:
   626  0003AC  0E30               	movlw	48
   627  0003AE  1808               	xorwf	_Dummy,w,c
   628  0003B0  A4D8               	btfss	status,2,c
   629  0003B2  D004               	goto	l986
   630                           
   631                           ;main.c: 208: do { LATA6 = 1; } while(0);
   632  0003B4  8C89               	bsf	3977,6,c	;volatile
   633  0003B6  D000               	goto	l205
   634  0003B8                     l205:
   635  0003B8  8E89               	bsf	3977,7,c	;volatile
   636  0003BA  D000               	goto	l986
   637  0003BC                     l986:
   638                           
   639                           ;main.c: 210: }
   640                           ;main.c: 212: Dummy = Byte1 & 0x07;
   641  0003BC  5001               	movf	_Byte1,w,c
   642  0003BE  0B07               	andlw	7
   643  0003C0  6E08               	movwf	_Dummy,c
   644                           
   645                           ;main.c: 213: if (Dummy == 0x00) {
   646  0003C2  5008               	movf	_Dummy,w,c
   647  0003C4  A4D8               	btfss	status,2,c
   648  0003C6  D004               	goto	l990
   649                           
   650                           ;main.c: 214: do { LATC0 = 0; } while(0);
   651  0003C8  908B               	bcf	3979,0,c	;volatile
   652  0003CA  D008               	goto	l216
   653                           
   654                           ;main.c: 215: do { LATC1 = 0; } while(0);
   655  0003CC  D007               	goto	l216
   656                           
   657                           ;main.c: 216: } else if (Dummy == 0x04) {
   658  0003CE  D018               	goto	l212
   659  0003D0                     l990:
   660  0003D0  0E04               	movlw	4
   661  0003D2  1808               	xorwf	_Dummy,w,c
   662  0003D4  A4D8               	btfss	status,2,c
   663  0003D6  D004               	goto	l992
   664                           
   665                           ;main.c: 217: do { LATC0 = 1; } while(0);
   666  0003D8  808B               	bsf	3979,0,c	;volatile
   667  0003DA  D000               	goto	l216
   668  0003DC                     l216:
   669  0003DC  928B               	bcf	3979,1,c	;volatile
   670                           
   671                           ;main.c: 219: } else if (Dummy == 0x02) {
   672  0003DE  D010               	goto	l212
   673  0003E0                     l992:
   674  0003E0  0E02               	movlw	2
   675  0003E2  1808               	xorwf	_Dummy,w,c
   676  0003E4  A4D8               	btfss	status,2,c
   677  0003E6  D004               	goto	l994
   678                           
   679                           ;main.c: 220: do { LATC0 = 0; } while(0);
   680  0003E8  908B               	bcf	3979,0,c	;volatile
   681  0003EA  D008               	goto	l228
   682                           
   683                           ;main.c: 221: do { LATC1 = 1; } while(0);
   684  0003EC  D007               	goto	l228
   685                           
   686                           ;main.c: 222: } else if (Dummy == 0x06) {
   687  0003EE  D008               	goto	l212
   688  0003F0                     l994:
   689  0003F0  0E06               	movlw	6
   690  0003F2  1808               	xorwf	_Dummy,w,c
   691  0003F4  A4D8               	btfss	status,2,c
   692  0003F6  D004               	goto	l212
   693                           
   694                           ;main.c: 223: do { LATC0 = 1; } while(0);
   695  0003F8  808B               	bsf	3979,0,c	;volatile
   696  0003FA  D000               	goto	l228
   697  0003FC                     l228:
   698  0003FC  828B               	bsf	3979,1,c	;volatile
   699  0003FE  D000               	goto	l212
   700  000400                     l212:
   701                           
   702                           ;main.c: 225: }
   703                           ;main.c: 227: INTCONbits.RBIF = 0;
   704  000400  90F2               	bcf	intcon,0,c	;volatile
   705  000402  0003               	sleep		;# 
   706  000404  D779               	goto	l956
   707  000406  EF00  F000         	goto	start
   708  00040A                     __end_of_main:
   709                           	opt stack 0
   710                           tblptru	equ	0xFF8
   711                           tblptrh	equ	0xFF7
   712                           intcon	equ	0xFF2
   713                           postinc0	equ	0xFEE
   714                           wreg	equ	0xFE8
   715                           status	equ	0xFD8
   716                           
   717 ;; *************** function _SYSTEM_Initialize *****************
   718 ;; Defined at:
   719 ;;		line 106 in file "mcc_generated_files/mcc.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;		None
   722 ;; Auto vars:     Size  Location     Type
   723 ;;		None
   724 ;; Return value:  Size  Location     Type
   725 ;;		None               void
   726 ;; Registers used:
   727 ;;		wreg, status,2, cstack
   728 ;; Tracked objects:
   729 ;;		On entry : 0/0
   730 ;;		On exit  : 0/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMRAM   BANK0   BANK1
   733 ;;      Params:         0       0       0
   734 ;;      Locals:         0       0       0
   735 ;;      Temps:          0       0       0
   736 ;;      Totals:         0       0       0
   737 ;;Total ram usage:        0 bytes
   738 ;; Hardware stack levels used:    1
   739 ;; Hardware stack levels required when called:    1
   740 ;; This function calls:
   741 ;;		_DAC_Initialize
   742 ;;		_INTERRUPT_ON_CHANGE_Initialize
   743 ;;		_OSCILLATOR_Initialize
   744 ;;		_PIN_MANAGER_Initialize
   745 ;; This function is called by:
   746 ;;		_main
   747 ;; This function uses a non-reentrant model
   748 ;;
   749                           
   750                           	psect	text1
   751  000542                     __ptext1:
   752                           	opt stack 0
   753  000542                     _SYSTEM_Initialize:
   754                           	opt stack 29
   755                           
   756                           ;mcc.c: 107: OSCILLATOR_Initialize();
   757                           
   758                           ;incstack = 0
   759  000542  ECAA  F002         	call	_OSCILLATOR_Initialize	;wreg free
   760                           
   761                           ;mcc.c: 108: PIN_MANAGER_Initialize();
   762  000546  EC7C  F002         	call	_PIN_MANAGER_Initialize	;wreg free
   763                           
   764                           ;mcc.c: 109: DAC_Initialize();
   765  00054A  ECB8  F002         	call	_DAC_Initialize	;wreg free
   766                           
   767                           ;mcc.c: 110: INTERRUPT_ON_CHANGE_Initialize();
   768  00054E  ECB1  F002         	call	_INTERRUPT_ON_CHANGE_Initialize	;wreg free
   769  000552  0012               	return		;funcret
   770  000554                     __end_of_SYSTEM_Initialize:
   771                           	opt stack 0
   772                           tblptru	equ	0xFF8
   773                           tblptrh	equ	0xFF7
   774                           intcon	equ	0xFF2
   775                           postinc0	equ	0xFEE
   776                           wreg	equ	0xFE8
   777                           status	equ	0xFD8
   778                           
   779 ;; *************** function _PIN_MANAGER_Initialize *****************
   780 ;; Defined at:
   781 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
   782 ;; Parameters:    Size  Location     Type
   783 ;;		None
   784 ;; Auto vars:     Size  Location     Type
   785 ;;		None
   786 ;; Return value:  Size  Location     Type
   787 ;;		None               void
   788 ;; Registers used:
   789 ;;		wreg, status,2
   790 ;; Tracked objects:
   791 ;;		On entry : 0/0
   792 ;;		On exit  : 0/0
   793 ;;		Unchanged: 0/0
   794 ;; Data sizes:     COMRAM   BANK0   BANK1
   795 ;;      Params:         0       0       0
   796 ;;      Locals:         0       0       0
   797 ;;      Temps:          0       0       0
   798 ;;      Totals:         0       0       0
   799 ;;Total ram usage:        0 bytes
   800 ;; Hardware stack levels used:    1
   801 ;; This function calls:
   802 ;;		Nothing
   803 ;; This function is called by:
   804 ;;		_SYSTEM_Initialize
   805 ;; This function uses a non-reentrant model
   806 ;;
   807                           
   808                           	psect	text2
   809  0004F8                     __ptext2:
   810                           	opt stack 0
   811  0004F8                     _PIN_MANAGER_Initialize:
   812                           	opt stack 29
   813                           
   814                           ;pin_manager.c: 51: LATA = 0x00;
   815                           
   816                           ;incstack = 0
   817  0004F8  0E00               	movlw	0
   818  0004FA  6E89               	movwf	3977,c	;volatile
   819                           
   820                           ;pin_manager.c: 52: TRISA = 0x00;
   821  0004FC  0E00               	movlw	0
   822  0004FE  6E92               	movwf	3986,c	;volatile
   823                           
   824                           ;pin_manager.c: 53: ANSELA = 0x04;
   825  000500  0E04               	movlw	4
   826  000502  010F               	movlb	15	; () banked
   827  000504  6F38               	movwf	56,b	;volatile
   828                           
   829                           ;pin_manager.c: 55: LATB = 0x00;
   830  000506  0E00               	movlw	0
   831  000508  6E8A               	movwf	3978,c	;volatile
   832                           
   833                           ; BSR set to: 15
   834                           ;pin_manager.c: 56: TRISB = 0xFF;
   835  00050A  6893               	setf	3987,c	;volatile
   836                           
   837                           ;pin_manager.c: 57: ANSELB = 0x00;
   838  00050C  0E00               	movlw	0
   839  00050E  010F               	movlb	15	; () banked
   840  000510  6F39               	movwf	57,b	;volatile
   841                           
   842                           ;pin_manager.c: 58: WPUB = 0x00;
   843  000512  0E00               	movlw	0
   844  000514  6E61               	movwf	3937,c	;volatile
   845                           
   846                           ;pin_manager.c: 60: LATC = 0x00;
   847  000516  0E00               	movlw	0
   848  000518  6E8B               	movwf	3979,c	;volatile
   849                           
   850                           ;pin_manager.c: 61: TRISC = 0xFC;
   851  00051A  0EFC               	movlw	252
   852  00051C  6E94               	movwf	3988,c	;volatile
   853                           
   854                           ;pin_manager.c: 62: ANSELC = 0xFC;
   855  00051E  0EFC               	movlw	252
   856  000520  010F               	movlb	15	; () banked
   857  000522  6F3A               	movwf	58,b	;volatile
   858                           
   859                           ; BSR set to: 15
   860                           ;pin_manager.c: 64: INTCON2bits.nRBPU = 0x01;
   861  000524  8EF1               	bsf	intcon2,7,c	;volatile
   862                           
   863                           ; BSR set to: 15
   864  000526  0012               	return		;funcret
   865  000528                     __end_of_PIN_MANAGER_Initialize:
   866                           	opt stack 0
   867                           tblptru	equ	0xFF8
   868                           tblptrh	equ	0xFF7
   869                           intcon	equ	0xFF2
   870                           intcon2	equ	0xFF1
   871                           postinc0	equ	0xFEE
   872                           wreg	equ	0xFE8
   873                           status	equ	0xFD8
   874                           
   875 ;; *************** function _OSCILLATOR_Initialize *****************
   876 ;; Defined at:
   877 ;;		line 113 in file "mcc_generated_files/mcc.c"
   878 ;; Parameters:    Size  Location     Type
   879 ;;		None
   880 ;; Auto vars:     Size  Location     Type
   881 ;;		None
   882 ;; Return value:  Size  Location     Type
   883 ;;		None               void
   884 ;; Registers used:
   885 ;;		wreg, status,2
   886 ;; Tracked objects:
   887 ;;		On entry : 0/0
   888 ;;		On exit  : 0/0
   889 ;;		Unchanged: 0/0
   890 ;; Data sizes:     COMRAM   BANK0   BANK1
   891 ;;      Params:         0       0       0
   892 ;;      Locals:         0       0       0
   893 ;;      Temps:          0       0       0
   894 ;;      Totals:         0       0       0
   895 ;;Total ram usage:        0 bytes
   896 ;; Hardware stack levels used:    1
   897 ;; This function calls:
   898 ;;		Nothing
   899 ;; This function is called by:
   900 ;;		_SYSTEM_Initialize
   901 ;; This function uses a non-reentrant model
   902 ;;
   903                           
   904                           	psect	text3
   905  000554                     __ptext3:
   906                           	opt stack 0
   907  000554                     _OSCILLATOR_Initialize:
   908                           	opt stack 29
   909                           
   910                           ;mcc.c: 115: OSCCON = 0x70;
   911                           
   912                           ; BSR set to: 15
   913                           ;incstack = 0
   914  000554  0E70               	movlw	112
   915  000556  6ED3               	movwf	4051,c	;volatile
   916                           
   917                           ;mcc.c: 117: OSCCON2 = 0x04;
   918  000558  0E04               	movlw	4
   919  00055A  6ED2               	movwf	4050,c	;volatile
   920                           
   921                           ;mcc.c: 119: OSCTUNE = 0x40;
   922  00055C  0E40               	movlw	64
   923  00055E  6E9B               	movwf	3995,c	;volatile
   924  000560  0012               	return		;funcret
   925  000562                     __end_of_OSCILLATOR_Initialize:
   926                           	opt stack 0
   927                           tblptru	equ	0xFF8
   928                           tblptrh	equ	0xFF7
   929                           intcon	equ	0xFF2
   930                           intcon2	equ	0xFF1
   931                           postinc0	equ	0xFEE
   932                           wreg	equ	0xFE8
   933                           status	equ	0xFD8
   934                           
   935 ;; *************** function _INTERRUPT_ON_CHANGE_Initialize *****************
   936 ;; Defined at:
   937 ;;		line 124 in file "mcc_generated_files/mcc.c"
   938 ;; Parameters:    Size  Location     Type
   939 ;;		None
   940 ;; Auto vars:     Size  Location     Type
   941 ;;		None
   942 ;; Return value:  Size  Location     Type
   943 ;;		None               void
   944 ;; Registers used:
   945 ;;		None
   946 ;; Tracked objects:
   947 ;;		On entry : 0/0
   948 ;;		On exit  : 0/0
   949 ;;		Unchanged: 0/0
   950 ;; Data sizes:     COMRAM   BANK0   BANK1
   951 ;;      Params:         0       0       0
   952 ;;      Locals:         0       0       0
   953 ;;      Temps:          0       0       0
   954 ;;      Totals:         0       0       0
   955 ;;Total ram usage:        0 bytes
   956 ;; Hardware stack levels used:    1
   957 ;; This function calls:
   958 ;;		Nothing
   959 ;; This function is called by:
   960 ;;		_SYSTEM_Initialize
   961 ;; This function uses a non-reentrant model
   962 ;;
   963                           
   964                           	psect	text4
   965  000562                     __ptext4:
   966                           	opt stack 0
   967  000562                     _INTERRUPT_ON_CHANGE_Initialize:
   968                           	opt stack 29
   969                           
   970                           ;mcc.c: 126: INTCONbits.GIE = 1;
   971                           
   972                           ;incstack = 0
   973  000562  8EF2               	bsf	intcon,7,c	;volatile
   974                           
   975                           ;mcc.c: 127: INTCONbits.PEIE = 1;
   976  000564  8CF2               	bsf	intcon,6,c	;volatile
   977                           
   978                           ;mcc.c: 128: INTCONbits.RBIE = 1;
   979  000566  86F2               	bsf	intcon,3,c	;volatile
   980                           
   981                           ;mcc.c: 129: INTCONbits.RBIF = 0;
   982  000568  90F2               	bcf	intcon,0,c	;volatile
   983                           
   984                           ;mcc.c: 130: INTCON2bits.RBIP = 0;
   985  00056A  90F1               	bcf	intcon2,0,c	;volatile
   986                           
   987                           ;mcc.c: 131: IOCBbits.IOCB7 = 1;
   988  00056C  8E62               	bsf	3938,7,c	;volatile
   989  00056E  0012               	return		;funcret
   990  000570                     __end_of_INTERRUPT_ON_CHANGE_Initialize:
   991                           	opt stack 0
   992                           tblptru	equ	0xFF8
   993                           tblptrh	equ	0xFF7
   994                           intcon	equ	0xFF2
   995                           intcon2	equ	0xFF1
   996                           postinc0	equ	0xFEE
   997                           wreg	equ	0xFE8
   998                           status	equ	0xFD8
   999                           
  1000 ;; *************** function _DAC_Initialize *****************
  1001 ;; Defined at:
  1002 ;;		line 57 in file "mcc_generated_files/dac.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;		None
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;		None
  1007 ;; Return value:  Size  Location     Type
  1008 ;;		None               void
  1009 ;; Registers used:
  1010 ;;		wreg, status,2
  1011 ;; Tracked objects:
  1012 ;;		On entry : 0/0
  1013 ;;		On exit  : 0/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMRAM   BANK0   BANK1
  1016 ;;      Params:         0       0       0
  1017 ;;      Locals:         0       0       0
  1018 ;;      Temps:          0       0       0
  1019 ;;      Totals:         0       0       0
  1020 ;;Total ram usage:        0 bytes
  1021 ;; Hardware stack levels used:    1
  1022 ;; This function calls:
  1023 ;;		Nothing
  1024 ;; This function is called by:
  1025 ;;		_SYSTEM_Initialize
  1026 ;; This function uses a non-reentrant model
  1027 ;;
  1028                           
  1029                           	psect	text5
  1030  000570                     __ptext5:
  1031                           	opt stack 0
  1032  000570                     _DAC_Initialize:
  1033                           	opt stack 29
  1034                           
  1035                           ;dac.c: 59: VREFCON1 = 0xA0;
  1036                           
  1037                           ;incstack = 0
  1038  000570  0EA0               	movlw	160
  1039  000572  010F               	movlb	15	; () banked
  1040  000574  6F41               	movwf	65,b	;volatile
  1041                           
  1042                           ;dac.c: 61: DACCON1 = 0x00;
  1043  000576  0E00               	movlw	0
  1044  000578  010F               	movlb	15	; () banked
  1045  00057A  6F40               	movwf	64,b	;volatile
  1046                           
  1047                           ; BSR set to: 15
  1048  00057C  0012               	return		;funcret
  1049  00057E                     __end_of_DAC_Initialize:
  1050                           	opt stack 0
  1051                           tblptru	equ	0xFF8
  1052                           tblptrh	equ	0xFF7
  1053                           intcon	equ	0xFF2
  1054                           intcon2	equ	0xFF1
  1055                           postinc0	equ	0xFEE
  1056                           wreg	equ	0xFE8
  1057                           status	equ	0xFD8
  1058                           
  1059 ;; *************** function _MIPI *****************
  1060 ;; Defined at:
  1061 ;;		line 95 in file "main.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;  a               1    wreg     unsigned char 
  1064 ;;  b               1    4[COMRAM] unsigned char 
  1065 ;; Auto vars:     Size  Location     Type
  1066 ;;  a               1    5[COMRAM] unsigned char 
  1067 ;; Return value:  Size  Location     Type
  1068 ;;		None               void
  1069 ;; Registers used:
  1070 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1071 ;; Tracked objects:
  1072 ;;		On entry : 0/0
  1073 ;;		On exit  : 0/0
  1074 ;;		Unchanged: 0/0
  1075 ;; Data sizes:     COMRAM   BANK0   BANK1
  1076 ;;      Params:         1       0       0
  1077 ;;      Locals:         1       0       0
  1078 ;;      Temps:          0       0       0
  1079 ;;      Totals:         2       0       0
  1080 ;;Total ram usage:        2 bytes
  1081 ;; Hardware stack levels used:    1
  1082 ;; Hardware stack levels required when called:    1
  1083 ;; This function calls:
  1084 ;;		_shiftRegister
  1085 ;; This function is called by:
  1086 ;;		_main
  1087 ;; This function uses a non-reentrant model
  1088 ;;
  1089                           
  1090                           	psect	text6
  1091  00040A                     __ptext6:
  1092                           	opt stack 0
  1093  00040A                     _MIPI:
  1094                           	opt stack 29
  1095                           
  1096                           ; BSR set to: 15
  1097                           ;incstack = 0
  1098                           ;MIPI@a stored from wreg
  1099  00040A  6E0E               	movwf	MIPI@a,c
  1100                           
  1101                           ;main.c: 96: do { LATA3 = 1; } while(0);
  1102  00040C  8689               	bsf	3977,3,c	;volatile
  1103  00040E  D000               	goto	l133
  1104  000410                     l133:
  1105  000410  8889               	bsf	3977,4,c	;volatile
  1106  000412  D000               	goto	l135
  1107  000414                     l135:
  1108  000414  9689               	bcf	3977,3,c	;volatile
  1109  000416  D000               	goto	l137
  1110  000418                     l137:
  1111  000418  9889               	bcf	3977,4,c	;volatile
  1112  00041A  D000               	goto	l926
  1113  00041C                     l926:
  1114                           
  1115                           ;main.c: 104: shiftRegister (SLAVEADD[0],SLAVEADD[0],4);
  1116  00041C  0EC9               	movlw	low _SLAVEADD
  1117  00041E  6EF6               	movwf	tblptrl,c
  1118  000420                     	if	0	;There is only one active tblptr byte
  1119  000420                     	endif
  1120  000420                     	if	0	;There are less than 3 active tblptr bytes
  1121  000420                     	endif
  1122  000420  0008               	tblrd		*
  1123  000422  CFF5 F009          	movff	tablat,shiftRegister@Dummy2
  1124  000426  0E04               	movlw	4
  1125  000428  6E0A               	movwf	shiftRegister@y,c
  1126  00042A  0EC9               	movlw	low _SLAVEADD
  1127  00042C  6EF6               	movwf	tblptrl,c
  1128  00042E                     	if	0	;There is only one active tblptr byte
  1129  00042E                     	endif
  1130  00042E                     	if	0	;There are less than 3 active tblptr bytes
  1131  00042E                     	endif
  1132  00042E  0008               	tblrd		*
  1133  000430  50F5               	movf	tablat,w,c
  1134  000432  EC5C  F002         	call	_shiftRegister
  1135                           
  1136                           ;main.c: 105: shiftRegister (0x82,0x82,8);
  1137  000436  0E82               	movlw	130
  1138  000438  6E09               	movwf	shiftRegister@Dummy2,c
  1139  00043A  0E08               	movlw	8
  1140  00043C  6E0A               	movwf	shiftRegister@y,c
  1141  00043E  0E82               	movlw	130
  1142  000440  EC5C  F002         	call	_shiftRegister
  1143                           
  1144                           ;main.c: 106: shiftRegister (0x01,0x01,1);
  1145  000444  0E01               	movlw	1
  1146  000446  6E09               	movwf	shiftRegister@Dummy2,c
  1147  000448  0E01               	movlw	1
  1148  00044A  6E0A               	movwf	shiftRegister@y,c
  1149  00044C  0E01               	movlw	1
  1150  00044E  EC5C  F002         	call	_shiftRegister
  1151                           
  1152                           ;main.c: 107: shiftRegister (DATA[a],DATA[b],8);
  1153  000452  500D               	movf	MIPI@b,w,c
  1154  000454  0D01               	mullw	1
  1155  000456  0E01               	movlw	low _DATA
  1156  000458  24F3               	addwf	prodl,w,c
  1157  00045A  6EF6               	movwf	tblptrl,c
  1158  00045C  0E02               	movlw	high _DATA
  1159  00045E  20F4               	addwfc	prodh,w,c
  1160  000460  6EF7               	movwf	tblptrh,c
  1161  000462                     	if	0	;There are less than 3 active tblptr bytes
  1162  000462                     	endif
  1163  000462  0008               	tblrd		*
  1164  000464  CFF5 F009          	movff	tablat,shiftRegister@Dummy2
  1165  000468  0E08               	movlw	8
  1166  00046A  6E0A               	movwf	shiftRegister@y,c
  1167  00046C  500E               	movf	MIPI@a,w,c
  1168  00046E  0D01               	mullw	1
  1169  000470  0E01               	movlw	low _DATA
  1170  000472  24F3               	addwf	prodl,w,c
  1171  000474  6EF6               	movwf	tblptrl,c
  1172  000476  0E02               	movlw	high _DATA
  1173  000478  20F4               	addwfc	prodh,w,c
  1174  00047A  6EF7               	movwf	tblptrh,c
  1175  00047C                     	if	0	;There are less than 3 active tblptr bytes
  1176  00047C                     	endif
  1177  00047C  0008               	tblrd		*
  1178  00047E  50F5               	movf	tablat,w,c
  1179  000480  EC5C  F002         	call	_shiftRegister
  1180                           
  1181                           ;main.c: 108: shiftRegister (PARITY[a],PARITY[b],2);
  1182  000484  500D               	movf	MIPI@b,w,c
  1183  000486  0D01               	mullw	1
  1184  000488  0E42               	movlw	low _PARITY
  1185  00048A  24F3               	addwf	prodl,w,c
  1186  00048C  6EF6               	movwf	tblptrl,c
  1187  00048E  0E02               	movlw	high _PARITY
  1188  000490  20F4               	addwfc	prodh,w,c
  1189  000492  6EF7               	movwf	tblptrh,c
  1190  000494                     	if	0	;There are less than 3 active tblptr bytes
  1191  000494                     	endif
  1192  000494  0008               	tblrd		*
  1193  000496  CFF5 F009          	movff	tablat,shiftRegister@Dummy2
  1194  00049A  0E02               	movlw	2
  1195  00049C  6E0A               	movwf	shiftRegister@y,c
  1196  00049E  500E               	movf	MIPI@a,w,c
  1197  0004A0  0D01               	mullw	1
  1198  0004A2  0E42               	movlw	low _PARITY
  1199  0004A4  24F3               	addwf	prodl,w,c
  1200  0004A6  6EF6               	movwf	tblptrl,c
  1201  0004A8  0E02               	movlw	high _PARITY
  1202  0004AA  20F4               	addwfc	prodh,w,c
  1203  0004AC  6EF7               	movwf	tblptrh,c
  1204  0004AE                     	if	0	;There are less than 3 active tblptr bytes
  1205  0004AE                     	endif
  1206  0004AE  0008               	tblrd		*
  1207  0004B0  50F5               	movf	tablat,w,c
  1208  0004B2  EC5C  F002         	call	_shiftRegister
  1209  0004B6  0012               	return		;funcret
  1210  0004B8                     __end_of_MIPI:
  1211                           	opt stack 0
  1212                           tblptru	equ	0xFF8
  1213                           tblptrh	equ	0xFF7
  1214                           tblptrl	equ	0xFF6
  1215                           tablat	equ	0xFF5
  1216                           prodh	equ	0xFF4
  1217                           prodl	equ	0xFF3
  1218                           intcon	equ	0xFF2
  1219                           intcon2	equ	0xFF1
  1220                           postinc0	equ	0xFEE
  1221                           wreg	equ	0xFE8
  1222                           status	equ	0xFD8
  1223                           
  1224 ;; *************** function _shiftRegister *****************
  1225 ;; Defined at:
  1226 ;;		line 80 in file "main.c"
  1227 ;; Parameters:    Size  Location     Type
  1228 ;;  Dummy1          1    wreg     unsigned char 
  1229 ;;  Dummy2          1    0[COMRAM] unsigned char 
  1230 ;;  y               1    1[COMRAM] unsigned char 
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;  Dummy1          1    3[COMRAM] unsigned char 
  1233 ;;  m               1    2[COMRAM] unsigned char 
  1234 ;; Return value:  Size  Location     Type
  1235 ;;		None               void
  1236 ;; Registers used:
  1237 ;;		wreg, status,2, status,0
  1238 ;; Tracked objects:
  1239 ;;		On entry : 0/0
  1240 ;;		On exit  : 0/0
  1241 ;;		Unchanged: 0/0
  1242 ;; Data sizes:     COMRAM   BANK0   BANK1
  1243 ;;      Params:         2       0       0
  1244 ;;      Locals:         2       0       0
  1245 ;;      Temps:          0       0       0
  1246 ;;      Totals:         4       0       0
  1247 ;;Total ram usage:        4 bytes
  1248 ;; Hardware stack levels used:    1
  1249 ;; This function calls:
  1250 ;;		Nothing
  1251 ;; This function is called by:
  1252 ;;		_MIPI
  1253 ;; This function uses a non-reentrant model
  1254 ;;
  1255                           
  1256                           	psect	text7
  1257  0004B8                     __ptext7:
  1258                           	opt stack 0
  1259  0004B8                     _shiftRegister:
  1260                           	opt stack 29
  1261                           
  1262                           ;incstack = 0
  1263                           ;shiftRegister@Dummy1 stored from wreg
  1264  0004B8  6E0C               	movwf	shiftRegister@Dummy1,c
  1265                           
  1266                           ;main.c: 81: for (uint8_t m=0; m<y; m++){
  1267  0004BA  0E00               	movlw	0
  1268  0004BC  6E0B               	movwf	shiftRegister@m,c
  1269  0004BE  D017               	goto	l924
  1270  0004C0                     l123:
  1271  0004C0  8A89               	bsf	3977,5,c	;volatile
  1272  0004C2  D000               	goto	l916
  1273  0004C4                     l916:
  1274                           
  1275                           ;main.c: 83: LATA3 = Dummy1 & 0x01;
  1276  0004C4  B00C               	btfsc	shiftRegister@Dummy1,0,c
  1277  0004C6  D002               	bra	u205
  1278  0004C8  9689               	bcf	3977,3,c	;volatile
  1279  0004CA  D001               	bra	u206
  1280  0004CC                     u205:
  1281  0004CC  8689               	bsf	3977,3,c	;volatile
  1282  0004CE                     u206:
  1283                           
  1284                           ;main.c: 84: LATA4 = Dummy2 & 0x01;
  1285  0004CE  B009               	btfsc	shiftRegister@Dummy2,0,c
  1286  0004D0  D002               	bra	u215
  1287  0004D2  9889               	bcf	3977,4,c	;volatile
  1288  0004D4  D001               	bra	u216
  1289  0004D6                     u215:
  1290  0004D6  8889               	bsf	3977,4,c	;volatile
  1291  0004D8                     u216:
  1292  0004D8  D000               	goto	l920
  1293  0004DA                     l920:
  1294  0004DA  9A89               	bcf	3977,5,c	;volatile
  1295  0004DC  D000               	goto	l922
  1296  0004DE                     l922:
  1297                           
  1298                           ;main.c: 88: Dummy1 = Dummy1 >> 1;
  1299  0004DE  90D8               	bcf	status,0,c
  1300  0004E0  300C               	rrcf	shiftRegister@Dummy1,w,c
  1301  0004E2  6E0C               	movwf	shiftRegister@Dummy1,c
  1302                           
  1303                           ;main.c: 89: Dummy2 = Dummy2 >> 1;
  1304  0004E4  90D8               	bcf	status,0,c
  1305  0004E6  3009               	rrcf	shiftRegister@Dummy2,w,c
  1306  0004E8  6E09               	movwf	shiftRegister@Dummy2,c
  1307  0004EA  2A0B               	incf	shiftRegister@m,f,c
  1308  0004EC  D000               	goto	l924
  1309  0004EE                     l924:
  1310  0004EE  500A               	movf	shiftRegister@y,w,c
  1311  0004F0  5C0B               	subwf	shiftRegister@m,w,c
  1312  0004F2  A0D8               	btfss	status,0,c
  1313  0004F4  D7E5               	goto	l123
  1314  0004F6  0012               	return		;funcret
  1315  0004F8                     __end_of_shiftRegister:
  1316                           	opt stack 0
  1317                           tblptru	equ	0xFF8
  1318                           tblptrh	equ	0xFF7
  1319                           tblptrl	equ	0xFF6
  1320                           tablat	equ	0xFF5
  1321                           prodh	equ	0xFF4
  1322                           prodl	equ	0xFF3
  1323                           intcon	equ	0xFF2
  1324                           intcon2	equ	0xFF1
  1325                           postinc0	equ	0xFEE
  1326                           wreg	equ	0xFE8
  1327                           status	equ	0xFD8
  1328                           
  1329 ;; *************** function _DAC_SetOutput *****************
  1330 ;; Defined at:
  1331 ;;		line 64 in file "mcc_generated_files/dac.c"
  1332 ;; Parameters:    Size  Location     Type
  1333 ;;  inputData       1    wreg     unsigned char 
  1334 ;; Auto vars:     Size  Location     Type
  1335 ;;  inputData       1    0[COMRAM] unsigned char 
  1336 ;; Return value:  Size  Location     Type
  1337 ;;		None               void
  1338 ;; Registers used:
  1339 ;;		wreg
  1340 ;; Tracked objects:
  1341 ;;		On entry : 0/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMRAM   BANK0   BANK1
  1345 ;;      Params:         0       0       0
  1346 ;;      Locals:         1       0       0
  1347 ;;      Temps:          0       0       0
  1348 ;;      Totals:         1       0       0
  1349 ;;Total ram usage:        1 bytes
  1350 ;; Hardware stack levels used:    1
  1351 ;; This function calls:
  1352 ;;		Nothing
  1353 ;; This function is called by:
  1354 ;;		_main
  1355 ;; This function uses a non-reentrant model
  1356 ;;
  1357                           
  1358                           	psect	text8
  1359  00057E                     __ptext8:
  1360                           	opt stack 0
  1361  00057E                     _DAC_SetOutput:
  1362                           	opt stack 30
  1363                           
  1364                           ;incstack = 0
  1365                           ;DAC_SetOutput@inputData stored from wreg
  1366  00057E  6E09               	movwf	DAC_SetOutput@inputData,c
  1367                           
  1368                           ;dac.c: 65: DACCON1 = inputData;
  1369  000580  C009  FF40         	movff	DAC_SetOutput@inputData,3904	;volatile
  1370  000584  0012               	return		;funcret
  1371  000586                     __end_of_DAC_SetOutput:
  1372                           	opt stack 0
  1373                           tblptru	equ	0xFF8
  1374                           tblptrh	equ	0xFF7
  1375                           tblptrl	equ	0xFF6
  1376                           tablat	equ	0xFF5
  1377                           prodh	equ	0xFF4
  1378                           prodl	equ	0xFF3
  1379                           intcon	equ	0xFF2
  1380                           intcon2	equ	0xFF1
  1381                           postinc0	equ	0xFEE
  1382                           wreg	equ	0xFE8
  1383                           status	equ	0xFD8
  1384                           tblptru	equ	0xFF8
  1385                           tblptrh	equ	0xFF7
  1386                           tblptrl	equ	0xFF6
  1387                           tablat	equ	0xFF5
  1388                           prodh	equ	0xFF4
  1389                           prodl	equ	0xFF3
  1390                           intcon	equ	0xFF2
  1391                           intcon2	equ	0xFF1
  1392                           postinc0	equ	0xFEE
  1393                           wreg	equ	0xFE8
  1394                           status	equ	0xFD8
  1395                           
  1396                           	psect	rparam
  1397  0000                     tblptru	equ	0xFF8
  1398                           tblptrh	equ	0xFF7
  1399                           tblptrl	equ	0xFF6
  1400                           tablat	equ	0xFF5
  1401                           prodh	equ	0xFF4
  1402                           prodl	equ	0xFF3
  1403                           intcon	equ	0xFF2
  1404                           intcon2	equ	0xFF1
  1405                           postinc0	equ	0xFEE
  1406                           wreg	equ	0xFE8
  1407                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    202
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      6      14
    BANK0           160      0       0
    BANK1           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_MIPI
    _MIPI->_shiftRegister

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     712
                      _DAC_SetOutput
                               _MIPI
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _DAC_Initialize
     _INTERRUPT_ON_CHANGE_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_ON_CHANGE_Initialize                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DAC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MIPI                                                 2     1      1     697
                                              4 COMRAM     2     1      1
                      _shiftRegister
 ---------------------------------------------------------------------------------
 (2) _shiftRegister                                        4     2      2     566
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _DAC_SetOutput                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DAC_SetOutput
   _MIPI
     _shiftRegister
   _SYSTEM_Initialize
     _DAC_Initialize
     _INTERRUPT_ON_CHANGE_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      6       E       1       14.7%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       E       6        0.0%
DATA                 0      0       E       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed Apr 06 12:40:55 2016

                            __CFG_CP0$ON 000000                              __CFG_CP1$ON 000000  
                            __CFG_CPB$ON 000000                              __CFG_CPD$ON 000000  
                            __CFG_LVP$ON 000000                                      l123 04C0  
                                    l212 0400                                      l133 0410  
                                    l205 03B8                                      l135 0414  
                                    l216 03DC                                      l137 0418  
                                    l228 03FC                                      l182 036A  
                                    l166 032C                                      l175 0362  
                                    l176 035E                                      l193 0398  
                                    l169 0338                                      l920 04DA  
                                    l922 04DE                                      l916 04C4  
                                    l924 04EE                                      l940 02D4  
                                    l926 041C                                      l950 02EC  
                                    l952 02F0                                      l944 02E0  
                                    l962 031A                                      l954 02F4  
                                    l946 02E4                                      l980 038C  
                                    l948 02E8                                      l956 02F8  
                                    l990 03D0                                      l982 039C  
                                    l974 036E                                      l958 0308  
                                    l992 03E0                                      l984 03AC  
                                    l994 03F0                                      l986 03BC  
                                    u205 04CC                                      u206 04CE  
                                    u215 04D6                                      u216 04D8  
                                    wreg 000FE8                                     _DATA 0201  
                                   _LATA 000F89                                     _LATB 000F8A  
                                   _LATC 000F8B                                     _MIPI 040A  
                                   _WPUB 000F61                                     _main 02CC  
                          __CFG_BORV$190 000000                                     prodh 000FF4  
                                   prodl 000FF3                                     start 0000  
                          __CFG_IESO$OFF 000000                             ___param_bank 000010  
                                  ?_MIPI 000D                                    MIPI@a 000E  
                                  MIPI@b 000D           __size_of_OSCILLATOR_Initialize 000E  
          __end_of_OSCILLATOR_Initialize 0562                                    ?_main 0009  
                                  _LATA0 007C48                                    _LATA1 007C49  
                                  _LATA3 007C4B                                    _LATC0 007C58  
                                  _LATA4 007C4C                                    _LATC1 007C59  
                                  _LATA5 007C4D                                    _LATA6 007C4E  
                                  _LATA7 007C4F                           __CFG_DEBUG$OFF 000000  
                                  _PORTC 000F82                                    _TRISA 000F92  
                                  _TRISB 000F93                                    _TRISC 000F94  
                       __end_of_SLAVEADD 02CB                            __CFG_WRT0$OFF 000000  
                          __CFG_WRT1$OFF 000000                                    _Byte1 0001  
                                  _Byte2 0002                                    _Byte3 0003  
                                  _Byte4 0004                                    _Byte5 0005  
                                  _Byte6 0006                                    _Dummy 0008  
                         __CFG_EBTR0$OFF 000000                           __CFG_FCMEN$OFF 000000  
                         __CFG_EBTR1$OFF 000000                            __CFG_WRTB$OFF 000000  
                          __CFG_WRTC$OFF 000000                            __CFG_WRTD$OFF 000000  
                         __CFG_EBTRB$OFF 000000                       __CFG_MCLRE$EXTMCLR 000000  
                         __CFG_BOREN$OFF 000000                                    tablat 000FF5  
                                  status 000FD8                           __CFG_HFOFST$ON 000000  
                           __end_of_DATA 0242                             __end_of_MIPI 04B8  
                       ??_DAC_Initialize 0009                          __initialization 0528  
                           __end_of_main 040A                                   ??_MIPI 000E  
                                 ??_main 000F                            __activetblptr 000001  
                         __CFG_PLLCFG$ON 000000                                   _ANSELA 000F38  
                                 _ANSELB 000F39                                   _ANSELC 000F3A  
                         __CFG_WDTEN$OFF 000000                                   _REGADD 02C7  
                                 _PARITY 0242                                   _OSCCON 000FD3  
                         __CFG_XINST$OFF 000000                                   clear_0 052E  
                     __end_of_ACTIVEBAND 02C3                        __end_of_DacOutput 02C7  
                  __end_of_shiftRegister 04F8                             __mediumconst 0000  
                                 tblptrh 000FF7                                   tblptrl 000FF6  
                                 tblptru 000FF8                        _SYSTEM_Initialize 0542  
                             __accesstop 0060                  __end_of__initialization 0534  
                        __CFG_PBADEN$OFF 000000                       ?_SYSTEM_Initialize 0009  
                          ___rparam_used 000001                   DAC_SetOutput@inputData 0009  
                         __pcstackCOMRAM 0009                      ??_SYSTEM_Initialize 0009  
                 __size_of_DAC_SetOutput 0008                __end_of_SYSTEM_Initialize 0554  
                         shiftRegister@m 000B                           shiftRegister@y 000A  
                     __CFG_CCP2MX$PORTC1 000000                       __CFG_CCP3MX$PORTB5 000000  
                                _DACCON1 000F40                                  _OSCCON2 000FD2  
                                _OSCTUNE 000F9B                          __CFG_PWRTEN$OFF 000000  
                    shiftRegister@Dummy1 000C                      shiftRegister@Dummy2 0009  
                                __Hparam 0000                                  __Lparam 0000  
                          _DAC_SetOutput 057E                             __psmallconst 0200  
 __end_of_INTERRUPT_ON_CHANGE_Initialize 0570  __size_of_INTERRUPT_ON_CHANGE_Initialize 000E  
         _INTERRUPT_ON_CHANGE_Initialize 0562                          __CFG_STVREN$OFF 000000  
                                __pcinit 0528                                  __ramtop 0200  
                                __ptext0 02CC                                  __ptext1 0542  
                                __ptext2 04F8                                  __ptext3 0554  
                                __ptext4 0562                                  __ptext5 0570  
                                __ptext6 040A                                  __ptext7 04B8  
                                __ptext8 057E                    _OSCILLATOR_Initialize 0554  
               ??_PIN_MANAGER_Initialize 0009               __size_of_SYSTEM_Initialize 0012  
                   end_of_initialization 0534                           ?_DAC_SetOutput 0009  
                                postinc0 000FEE                                _DacOutput 02C3  
                         __end_of_REGADD 02C9                           __end_of_PARITY 0283  
                 ?_OSCILLATOR_Initialize 0009                  __size_of_DAC_Initialize 000E  
                    start_initialization 0528          __size_of_PIN_MANAGER_Initialize 0030  
                        ??_DAC_SetOutput 0009                   __size_of_shiftRegister 0040  
                            __pbssCOMRAM 0001                   _PIN_MANAGER_Initialize 04F8  
                       __CFG_PRICLKEN$ON 000000                              __smallconst 0200  
                          _shiftRegister 04B8                                 _DAC_Step 0007  
       ??_INTERRUPT_ON_CHANGE_Initialize 0009          ?_INTERRUPT_ON_CHANGE_Initialize 0009  
                               _IOCBbits 000F62                                 _SLAVEADD 02C9  
                       __CFG_WDTPS$32768 000000                                 _VREFCON1 000F41  
                         _DAC_Initialize 0570                           ?_shiftRegister 0009  
                            _INTCON2bits 000FF1                               _ACTIVEBAND 0283  
                               __Hrparam 0000                                 __Lrparam 0000  
                           __Lsmallconst 0200                        __CFG_P2BMX$PORTB5 000000  
                ??_OSCILLATOR_Initialize 0009                   __end_of_DAC_Initialize 057E  
                          __size_of_MIPI 00AE                            __size_of_main 013E  
                        ?_DAC_Initialize 0009                          ??_shiftRegister 000B  
                             _INTCONbits 000FF2                  ?_PIN_MANAGER_Initialize 0009  
                  __end_of_DAC_SetOutput 0586                        __CFG_T3CMX$PORTC0 000000  
         __end_of_PIN_MANAGER_Initialize 0528                        __CFG_FOSC$INTIO67 000000  
